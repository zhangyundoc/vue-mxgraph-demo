{"version":3,"sources":["webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-object.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-names.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_object-create.js","webpack:///./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es6.object.set-prototype-of.js","webpack:///./node_modules/kpc/node_modules/core-js/library/fn/object/create.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_defined.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_fails.js","webpack:///./src/views/mxGraph/index.vue?48d6","webpack:///./node_modules/kpc/@vue/@stylus/components/utils.js","webpack:///./node_modules/kpc/@vue/@stylus/components/breadcrumb/item.vdt.js","webpack:///./node_modules/kpc/@vue/@stylus/components/breadcrumb/item.js","webpack:///./node_modules/kpc/@vue/@stylus/components/breadcrumb/index.js","webpack:///./node_modules/kpc/@vue/@stylus/components/breadcrumb/index.vdt.js","webpack:///./src/views/mxGraph/index.js","webpack:///src/views/mxGraph/index.vue","webpack:///./src/views/mxGraph/index.vue?2a91","webpack:///./src/views/mxGraph/index.vue","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es6.parse-int.js","webpack:///./node_modules/intact-vue/dist/index.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es6.array.is-array.js","webpack:///./node_modules/intact/dist/index.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/internals/html.js","webpack:///./node_modules/core-js/internals/a-function.js","webpack:///./node_modules/core-js/internals/require-object-coercible.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/core-js/internals/to-absolute-index.js","webpack:///./node_modules/core-js/internals/export.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names.js","webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_html.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/object/get-own-property-descriptor.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_fix-re-wks.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_object-gops.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_library.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_html.js","webpack:///./node_modules/core-js/internals/object-define-properties.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/es6.object.create.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/core-js/modules/es.reflect.define-property.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_hide.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/es.array.for-each.js","webpack:///./node_modules/core-js/internals/path.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/core-js/internals/indexed-object.js","webpack:///./node_modules/core-js/internals/add-to-unscopables.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_classof.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/es6.regexp.exec.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js","webpack:///./node_modules/core-js/internals/array-includes.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_function-to-string.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/es6.date.to-string.js","webpack:///./node_modules/core-js/internals/to-length.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/parse-int.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_object-gopn-ext.js","webpack:///./node_modules/core-js/internals/own-keys.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/applyDecoratedDescriptor.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_wks.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/core-js/internals/v8-version.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_object-gopd.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_string-trim.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_set-proto.js","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_global.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_advance-string-index.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_string-ws.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_object-keys.js","webpack:///./src/views/mxGraph/index.vue?fe64","webpack:///./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_object-keys.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_parse-int.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/core-js/internals/enum-bug-keys.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/core-js/internals/to-object.js","webpack:///./node_modules/core-js/internals/object-create.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/object/assign.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_regexp-exec-abstract.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_object-keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_export.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/defaults.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/internals/is-forced.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es6.object.assign.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_object-assign.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es6.object.get-own-property-names.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_core.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/object/set-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_regexp-exec.js","webpack:///./node_modules/core-js/internals/to-integer.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/es6.regexp.split.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/internals/sloppy-array-method.js","webpack:///./node_modules/core-js/internals/user-agent.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_object-dps.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_is-array.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/es6.regexp.replace.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_flags.js","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_has.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_object-sap.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_cof.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_string-at.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/defineProperty.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/kpc/@vue/@stylus/inheritsLoose.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/core-js/internals/object-keys-internal.js","webpack:///./node_modules/core-js/modules/es.array.includes.js","webpack:///./node_modules/core-js/internals/get-built-in.js","webpack:///./node_modules/mxgraph/javascript/mxClient.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/core-js/internals/object-property-is-enumerable.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/array/is-array.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_object-pie.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_object-gopn.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/object/get-own-property-names.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/internals/object-keys.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_species-constructor.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./node_modules/core-js/internals/copy-constructor-properties.js","webpack:///./node_modules/core-js/internals/is-array.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/object/define-property.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es6.object.keys.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/core-js/internals/bind-context.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/kpc/node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/kpc/node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/internals/to-indexed-object.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/object/keys.js","webpack:///./node_modules/core-js/internals/dom-iterables.js"],"names":["module","exports","split","defined","it","Object","dP","anObject","getKeys","defineProperties","O","Properties","P","keys","length","i","f","has","toIObject","arrayIndexOf","IE_PROTO","object","names","key","result","push","dPs","enumBugKeys","Empty","PROTOTYPE","createDict","iframeDocument","iframe","lt","gt","style","display","appendChild","src","contentWindow","document","open","write","close","F","create","undefined","DESCRIPTORS","propertyIsEnumerableModule","createPropertyDescriptor","toIndexedObject","toPrimitive","IE8_DOM_DEFINE","nativeGetOwnPropertyDescriptor","getOwnPropertyDescriptor","error","call","$export","S","setPrototypeOf","set","$Object","D","isObject","cof","MATCH","isRegExp","TypeError","hasOwnProperty","is","createElement","exec","e","render","_vm","this","_h","$createElement","_c","_self","staticClass","_e","_l","item","ref","refInFor","_v","_s","staticRenderFns","utils","Types","get","isNullOrUndefined","isFunction","noop","extend","Vdt","miss","findRouter","instance","Component","constructor","$$cid","parentVNode","vNode","type","ComponentClass","children","context","router","history","__providers","iter","entries","next","value","_context","displayName","cid","data","$router","hasWindow","window","requestAnimationFrame","bind","setTimeout","browser","navigator","ua","userAgent","toLowerCase","indexOf","isIE","version","substring","isIE8","rv","isEdge","isChrome","isSafari","externalLinkReg","isExternalLink","to","test","getRestProps","props","selfProps","defaults","events","ret","_dec","_class","_init","_class2","_temp","_Vdt","obj","blocks","h","_blocks","hc","hu","widgets","__blocks","__u","_className","className","__slice","slice","__noop","__o","map","Options","self","getModel","setModel","setCheckboxModel","detectCheckboxChecked","setSelectModel","$this","_self$get","Animate","$callee","_super","separator","onClick","parent","args","arguments","apply","concat","_ref","template","_Intact","BreadcrumbItem","_proto","prototype","_mount","location","href","String","VNode","Array","enumerable","configurable","writable","initializer","_classNameObj","lastItem","classNameObj","_children","_separator","vNodes","index","tag","clone","Breadcrumb","name","components","graph","toolbarItems","title","defaultStatus","OptionalStatus","statusMap","mounted","createGraph","initGraph","makeItemDraggable","methods","MxGraph","$refs","container","setEdgeColor","edge","color","R","prop","view","getState","styleStr","forEachObjIndexed","setStyle","refresh","isNil","rubberBand","MxRubberBand","setConnectable","setCellsEditable","setAllowDanglingEdges","setConnectableEdges","convertValueToString","cell","addListener","MxEvent","DOUBLE_CLICK","evt","pathOr","equals","dialog","openDialog","connectionHandler","validateConnection","source","target","sourceName","targetName","CONNECT","sender","getProperty","status","targetStatus","edges","filter","propEq","propOr","nodeStatus","path","includes","$nextTick","domArray","dragItem","forEach","dom","domIndex","toolItem","dragHandler","x","y","instanceGraph","createDragPreview","elt","border","width","getComputedStyle","height","lineHeight","textAlign","innerHTML","MxUtils","makeDraggable","changeStatusHandler","nextCell","nextCellType","lastCell","lastCellType","getDefaultParent","beginUpdate","vertex","insertVertex","customerOptionalStatus","customerName","customerTitle","customer","Reflect","defineProperty","endUpdate","provide","component","global","DOMIterables","createNonEnumerableProperty","COLLECTION_NAME","Collection","CollectionPrototype","$parseInt","G","parseInt","_interopDefault","ex","Vue","Intact","_typeof","Symbol","iterator","classCallCheck","Constructor","_extends","assign","inherits","subClass","superClass","__proto__","objectWithoutProperties","possibleConstructorReturn","ReferenceError","_Intact$Vdt$miss","hooks","_Intact$utils","_get","_set","extend$1","isArray","_textVNode","VueVNode","normalizeChildren","loop","_ret","normalize","l","isIntactComponent","options","componentOptions","Ctor","normalizeProps","text","Wrapper","vueVNode","handleClassName","attrs","propTypes","tmp","Boolean","handleStyle","scopedSlots","_loop","_key","_len","_key2","model","expression","directives","_model","handleRef","listeners","_loop2","_key4","_cb","cb","c","v","substr","_key3","slots","resolveSlots","_getChildrenAndBlocks","getChildrenAndBlocks","normalizeContext","$data","d","default","rest","_loop3","toVueVNode","__props","vNodeProps","staticStyle","functionalWrapper","functional","_props","beforeInsert","j","$options","_scopeId","setAttribute","$parent","mixin","beforeCreate","$vnode","ignorePropRegExp","patch","__patch__","init","lastVNode","nextVNode","destroyed","_addProps","parentDom","update","destroy","vdt","elm","cloneVNode","class","on","refs","isRemove","splice","stringifyClass","stringifyArray","stringifyObject","res","stringified","getStyleBinding","toObject","parseStyleText","arr","cache","cssText","hit","listDelimiter","propertyDelimiter","trim","hook","child","slot","_name","_name2","every","isWhitespace","node","isComment","asyncFactory","vnode","cloned","ns","isStatic","fnContext","fnOptions","fnScopeId","asyncMeta","isCloned","_Vue$prototype","_updateFromParent","activeInstance","mountedQueue","IntactVue","_parentVnode","_this","mount","_renderChildren","_isVue","$scopedSlots","$stable","$root","$children","_data","_uid","uniqueId","_this2","__pushActiveInstance","element","__popActiveInstance","fromPending","_this3","oldTriggerFlag","_shouldTrigger","__initMountedQueue","__triggerMountedQueue","$mount","el","hydrating","inited","$el","_vnode","refElm","_refElm","parentElm","_parentElm","insertBefore","__vue__","$forceUpdate","lastRef","nextRef","$destroy","done","_initMountedQueue","_this4","_triggerMountedQueue","_prevActiveInstance","$on","$off","$forEach","sloppyArrayMethod","callbackfn","toString$1","toString","doc","isObject$1","o","isStringOrNumber","isComponentInstance","isEventProp","propName","SimpleMap","Map","_keys","_values","size","delete","skipProps","checked","multiple","defaultValue","isSkipProp","booleanProps","muted","scoped","capture","disabled","readOnly","required","autoplay","controls","seamless","reversed","allowfullscreen","noValidate","hidden","autofocus","selected","indeterminate","strictProps","volume","defaultChecked","htmlFor","scrollLeft","scrollTop","selfClosingTags","MountedQueue","queue","fn","unshift","trigger","callback","shift","setTextContent","innerText","textContent","svgNS","xlinkNS","xmlNS","namespaces","Type","JS","JSImport","JSXText","JSXUnescapeText","JSXElement","JSXExpressionContainer","JSXAttribute","JSXEmptyExpression","JSXWidget","JSXVdt","JSXBlock","JSXComment","JSXDirective","JSXTemplate","JSXString","TypeName","TextTags","script","textarea","Directives","autoReturn","onlySource","delimiters","noWith","server","skipWhitespace","disableSplitText","sourceMap","indent","hasOwn","isArrayLike","each","thisArg","isObject$$1","thisArgs","join","isWhiteSpace","charCode","isWhiteSpaceExpectLinebreak","trimRight","str","charCodeAt","trimLeft","setDelimiters","Error","getDelimiters","configure","isSelfClosingTag","isTextTag","isDirective","isVModel","dest","trueValue","falseValue","opt","_value","hasConsole","console","log","error$2","stack","utils$1","freeze","SelfClosingTags","Type$1","TypeName$1","elementNameRegexp","isJSIdentifierPart","ch","isJSXIdentifierPart","Parser","parse","line","column","_parseTemplate","isRoot","elements","braces","count","_advance","_char","_isJSImport","_scanJSImport","_scanJS","_scanJSX","start","Delimiters","_type","_skipJSComment","_getLastCharCode","_scanStringLiteral","_isElementStart","_isExpect","_updateLine","_updateIndex","_start2","_skipWhitespaceAndJSComment","quote","StringLiteral","_error","_parseJSXElement","_scanJSXText","stopChars","_charCode","_scanJSXStringLiteral","token","prev","_expect","flag","_parseJSXComment","fromCharCode","_parseAttributeAndChildren","_parseJSXAttribute","attr","_parseJSXChildren","hasVRaw","attributes","_skipWhitespace","_parseJSXExpressionContainer","_parseJSXAttributeName","_parseJSXAttributeValue","_parseJSXAttributeVIf","emptyTextNodes","skipNodes","skip","prevDirectives","_parseJSXEmptyExpression","_parseJSXUnescapeText","_parseExpression","endTag","current","_skipWhitespaceBetweenElements","_parseJSXChild","_parseJSXClosingElement","charAt","skipBeforeDelimiter","code","msg","typeName","lines","error$$1","_start","Type$2","attrMap","map$$1","Stringifier","stringify","ast","buffer","body","_visitJSXExpressionContainer","enterStringExpression","head","mappings","_append","_indent","params","filename","replace","_dedent","addWrapper","_visit","_visitJS","_visitJSImport","_visitJSXElement","_visitJSXText","_visitJSXUnescapeText","_visitJSXWidget","_visitJSXBlock","_visitJSXVdt","_visitJSXComment","_visitJSXTemplate","_visitJSXString","_visitJSXDirective","_visitJSXChildren","__visitJSXElement","_appendQueue","_visitJSXAttribute","_visitJSXAttributeClassName","_visitJSXAttributeValue","_visitJSXAttributeRef","_clearQueue","appendQueue","directiveFor","directiveIf","directive","_visitJSXDirectiveFor","_visitJSXDirectiveIf","hasElse","nextDirectives","velseif","individualClassName","individualKeyAndRef","isFirst","addEvent","models","addition","addAttribute","_name$split","last","_visitJSXBlocks","_visitJSXAttributeModel","_i","event","hasProps","_this5","valueName","eventName","append","inputValue","noQuotes","_this6","__visitJSXWidget","_getJSXBlocks","isAncestor","_this7","__visitJSXBlock","_getJSXBlockAttribute","_this8","__visitJSXVdt","_getJSXBlocks2","_visitJSXAttribute2","_addMapping","generated","original","_options","_flushQueue","Text","HtmlElement","ComponentFunction","ComponentInstance","HtmlComment","InputElement","SelectElement","TextareaElement","SvgElement","UnescapeText","FormElement","Element","ComponentClassOrInstance","TextElement","EMPTY_OBJ","createVNode","createComponentInstanceVNode","createCommentVNode","createUnescapeTextVNode","createTextVNode","isAddKey","childNodes","addChild","$","directClone","applyKey","reference","newVNodes","n","extraProps","changeType","newVNode","preventDefault","returnValue","stopPropagation","cancelBubble","stopImmediatePropagation","addEventListener","removeEventListener","fixEvent","_rawEvent","_$cb","attachEvent","detachEvent","delegatedEvents","unDelegatesEvents","handleEvent","lastEvent","nextEvent","delegatedRoots","items","docEvent","attachEventToDocument","dispatchEvent","isClick","eventData","eventToTrigger","_currentTarget","_eventToTrigger","parentNode","nodeType","processSelect","nextProps","isRender","hasSelected","updateChildOptionGroup","updateChildOption","processInput","hasValue","isCheckedType","processTextarea","domValue","processForm","isSVG","isTrigger","createHtmlElement","createTextElement","createComponentClassOrInstance","createCommentElement","documentCreateElement","createElements","patchProps","createRef","createTextNode","createOrHydrateComponentClassOrInstance","createDom","tagName","createComment","removeElements","removeElement","removeHtmlElement","removeText","removeComponentClassOrInstance","removeComponentFunction","removeChild","_isRemoveDirectly","replaceChild","lastDom","nextDom","_unmount","lastChild","nextSibling","JSON","createElementNS","patchVNode","nextType","lastType","patchElement","replaceElement","patchText","patchComponentClass","patchComponentInstance","lastProps","lastChildren","nextChildren","lastClassName","nextClassName","patchChildren","removeAttribute","lastTag","nextTag","newDom","nodeName","lastInstance","nextInstance","patchChildrenByKey","a","b","aLength","bLength","aEnd","bEnd","aStart","bStart","aNode","bNode","aStartNode","bStartNode","aEndNode","bEndNode","outer","insertOrAppend","sources","moved","pos","patched","keyIndex","seq","lisAlgorithm","p","u","len","arrI","nodes","detectParent","nextPos","nextText","nodeValue","isInputOrTextArea","isFormElement","patchProp","removeProp","lastValue","nextValue","patchPropByObject","setAttributeNS","ignoreInputEvent","addFocusEvent","removeFocusEvent","__ignoreInputEvent","__addFocusEvent","ignore","inputCb","focusCb","cbs","removeDataset","domProp","change","kebabCase","dataset","patchAttributes","patchStyle","patchDataset","patchObject","hasRemoved","dataKey","_cache","uppercasePattern","word","domProps","domStyle","toString$2","firstChild","html","escapeText","renderStylesToString","isString$1","renderAttributesToString","renderDatasetToString","renderAttributeToString","isNumber","escapeString","styles","renderedString","styleName","hydrateRoot","hydrate","hydrateElement","hydrateHtmlElement","hydrateText","hydrateComment","hydrateComponentClassOrInstance","comment","warning","hydrateChildren","normalizeChildren$1","_nextSibling","previousSibling","message","warn","remove","renderString","parser","stringifier","Vdt$1","compile","templateFn","hscript","Function","renderVNode","oldVNode","virtualDom","inBrowser","UA","isIOS","getPrototypeOf","nativeGetPrototypeOf","isSupportGetDescriptor","setPrototype","Parent","Child","inherit","proto","isString","templateDecorator","_len2","_superApply","__super","__superApply","_len3","descriptor","nativeCreate","s","property","fallback","executeBound","sourceFunc","boundFunc","callingContext","nativeBind","func","_len4","bound","_len5","args1","_key5","reEvent","eq","aStack","bStack","className$$1","areArrays","aCtor","bCtor","aKeys","pop","isEqual","idCounter","prefix","id","values","charCodeOfDot","reEscapeChar","rePropName","RegExp","pathMap","reIsUint","castPath","match","subString","isIndex","get$$1","set$$1","lastIndex","nested","newValue","objValue","error$1","isNative","nextTick","Promise","resolve","then","catch","err","MutationObserver","callbacks","nextTickHandler","_callbacks","observe","characterData","NextTick","eachCallback","fire","wontBind","getOwnPropertyNames","autobind","toBind","method","Intact$2","widget","_widget","_events","_keptEvents","rendered","_startRender","_updateCount","_pendingUpdate","_pendingChangedEvents","_constructor","triggerChange","changes","triggerChangedEvent","changeKeys","_changes$i2","values$$1","keys$$1","val","silent","async","_fromPatchProps","setProps","_changes$i","_prop","_$nextTick","reWithDot","newProps","propsPathTree","changesWithoutNextValue","tree","paths","_i2","_path2","getChanges","_path","initSyncComponent","_beforeCreate","_create","initAsyncComponnet","placeholder","one","updateComponent","_beforeUpdate","_update","patchProps$1","lastPropsWithoutEvents","nextPropsWithoutEvents","handlePropOnlyInLastProps","removeEvents","patchEventProps","_prop2","_prop3","nextLength","lastLength","Math","min","_nextValue","_lastValue","off","_lastValue2","_nextValue2","_nextValue3","_nextValue4","found","_i3","_lastValue3","addClass","classList","add","hasClass","contains","removeClass","keep","_destroy","_lastVNode","EVENT_NAME_MAP","transitionend","animationend","endEvents","transitionProp","animationProp","detectEvents","testEl","baseEventName","animation","transition","baseEvents","whenTransitionEnds","info","timeout","propCount","ended","end","TransitionEvents","onEnd","isCalled","clearTimeout","timer","getAnimateInfo","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","max","delays","durations","toMs","addEventListener$1","eventListener","removeEventListener$1","endEvent","listener","raf","nextFrame","_fn","cancelled","CSSMatrix","WebKitCSSMatrix","transform","m42","m41","parts","parseFloat","_Vdt$utils","e$1","_staticClass","oClassName","_isRenderString","show","oStyle","mountChildren","unmountChildren","updateChildren","_enteringAmount","_leavingAmount","_addClass","_removeClass","checkMode","_delayEnter","_delayLeave","_leaving","position","isRemoveDirectly","leave","leaveEndCallback","isCss","continuity","endDirectly","_entering","_triggeredEnter","_cancelEnterNextFrame","_enterEnd","_parentDom","_reserve","initLeaveEndCallback","leaveActiveClass","_leaveEnd","_cancelLeaveNextFrame","_cancelLeaveEnd","triggerLeave","_triggeredLeave","leaveClass","isCancel","top","left","WebkitTransform","parentInstance","initAShow","originDisplay","isAppear","initClassName","startEnterAnimate","unmountCallback","animateList","enter","enterStart","isTransition","enterActiveClass","initEnterEndCallback","enterEventName","enterClass","_cancelEnterEnd","triggerEnter","detectIsAppear","oldValue","moveClass","initUnmountCallback","nouse","isLeaveEnd","isNotAnimate","hasJsTransition","_needLeave","getParentAnimate","initMove","isUnmount","oldPosition","newPosition","dx","dy","oDx","oDy","_needMove","move","_moving","_moveEnd","propertyName","triggerMove","getPosition","offsetTop","offsetLeft","matrix","_directly","reservedChildren","isMove","isFromCheckMode","_needUpdatePosition","offsetWidth","toInteger","getBuiltIn","fails","wellKnownSymbol","V8_VERSION","SPECIES","METHOD_NAME","array","foo","integer","redefine","setGlobal","copyConstructorProperties","isForced","FORCED","targetProperty","sourceProperty","TARGET","GLOBAL","STATIC","stat","noTargetGet","forced","sham","toLength","toAbsoluteIndex","IS_INCLUDES","fromIndex","internalObjectKeys","hiddenKeys","notARegExp","requireObjectCoercible","correctIsRegExpLogic","searchString","documentElement","_interopRequireDefault","__esModule","hide","wks","regexpExec","REPLACE_SUPPORTS_NAMED_GROUPS","re","groups","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","KEY","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","fns","nativeMethod","regexp","arg2","forceStringMethod","strfn","rxfn","string","arg","shared","uid","valueOf","getOwnPropertySymbols","bitmap","definePropertyModule","objectKeys","Attributes","ERROR_INSTEAD_OF_FALSE","propertyKey","createDesc","classof","propertyIsEnumerable","UNSCOPABLES","ArrayPrototype","TAG","ARG","tryGet","T","B","callee","$getOwnPropertyDescriptor","ceil","floor","isNaN","createMethod","$filter","arrayMethodHasSpeciesSupport","DateProto","Date","INVALID_DATE","TO_STRING","$toString","getTime","NaN","argument","gOPN","windowNames","getWindowNames","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","_Object$defineProperty","_Object$keys","_applyDecoratedDescriptor","decorators","desc","reverse","reduce","decorator","store","USE_SYMBOL","$exports","setToStringTag","IteratorPrototype","NAME","process","versions","v8","pIE","gOPD","spaces","space","non","ltrim","rtrim","exporter","ALIAS","exp","FORCE","TYPE","addToUnscopables","step","Iterators","iterated","kind","_t","_k","Arguments","check","buggy","originalArray","C","__g","IObject","at","unicode","$keys","px","random","aFunction","that","$trim","ws","hex","radix","core","SHARED","mode","copyright","sharedKey","js","builtinExec","ObjectProto","ctx","own","out","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","W","expProto","virtual","U","SRC","TPL","inspectSource","safe","_Object$getOwnPropertyDescriptor","_Object$getOwnPropertyNames","_defaults","$iterators","ITERATOR","TO_STRING_TAG","ArrayValues","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","LIBRARY","$iterCreate","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Base","DEFAULT","IS_SET","getMethod","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","replacement","feature","detection","POLYFILL","NATIVE","createProperty","arraySpeciesCreate","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","isConcatSpreadable","spreadable","k","E","A","gOPS","$assign","K","aLen","getSymbols","isEnum","__e","regexpFlags","nativeExec","nativeReplace","patchedExec","LAST_INDEX","UPDATES_LAST_INDEX_WRONG","re1","re2","NPCG_INCLUDED","PATCH","reCopy","speciesConstructor","advanceStringIndex","callRegExpExec","$min","$push","$SPLIT","LENGTH","MAX_UINT32","SUPPORTS_Y","SPLIT","$split","maybeCallNative","internalSplit","limit","output","flags","ignoreCase","multiline","sticky","lastLastIndex","splitLimit","separatorCopy","splitter","rx","unicodeMatching","lim","q","z","FunctionPrototype","FunctionPrototypeToString","nameRE","regExpExec","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","REPLACE","$replace","searchValue","replaceValue","functionalReplace","fullUnicode","results","matchStr","accumulatedResult","nextSourcePosition","matched","captures","namedCaptures","replacerArgs","getSubstitution","tailPos","m","symbols","IndexedObject","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","specificCreate","boundFunction","some","find","findIndex","_defineProperty","_setPrototypeOf","_defaults2","isSupportProto","_inheritsLoose","_default","$includes","variable","namespace","mxClient","VERSION","IS_IE","IS_IE6","IS_IE11","IS_EDGE","IS_QUIRKS","documentMode","IS_EM","VML_PREFIX","OFFICE_PREFIX","IS_NS","IS_OP","IS_OT","IS_SF","IS_IOS","IS_GC","IS_CHROMEAPP","chrome","app","runtime","IS_FF","IS_MT","IS_VML","appName","toUpperCase","IS_SVG","NO_FO","IS_WIN","appVersion","IS_MAC","IS_CHROMEOS","IS_TOUCH","IS_POINTER","PointerEvent","IS_LOCAL","defaultBundles","isBrowserSupported","link","rel","getElementsByTagName","loadResources","lan","pending","mxResources","include","mxLoadResources","mxForceIncludes","mxResourceExtension","mxLoadStylesheets","mxBasePath","basePath","mxImageBasePath","imageBasePath","mxLanguage","language","userLanguage","mxDefaultLanguage","defaultLanguage","mxLanguages","languages","styleSheets","styleSheet","createStyleSheet","mxLog","consoleName","TRACE","DEBUG","WARN","table","tbody","tr","td","verticalAlign","resize","compatMode","addButton","content","mxUtils","getInnerHtml","debug","copy","alert","popup","w","innerHeight","innerWidth","clientHeight","clientWidth","mxWindow","setMaximizable","setScrollable","setResizable","setClosable","destroyOnClose","getElement","resizeHandler","offsetHeight","mxEvent","RESIZE_END","MAXIMIZE","NORMALIZE","writeln","lab","funct","button","isVisible","setVisible","visible","t0","dt","visibility","scrollHeight","mxObjectIdentity","FIELD_NAME","counter","ctor","getFunctionName","clear","mxDictionary","put","previous","getValues","visit","visitor","resources","extension","resourcesEncoded","loadDefaultBundle","loadSpecialBundle","isLanguageSupported","getDefaultBundle","basename","getSpecialBundle","dash","mxConstants","NONE","defaultBundle","specialBundle","req","getText","load","isReady","idx","unescape","replacePlaceholders","mxPoint","mxRectangle","setRect","getCenterX","getCenterY","rect","minX","minY","maxX","maxY","intersect","r1","r2","b1","b2","grow","amount","getPoint","rotate90","t","fromRectangle","mxEffects","animateChanges","maxStep","animate","isRequired","mxGeometryChange","mxTerminalChange","mxValueChange","mxChildChange","mxStyleChange","state","getView","setOpacity","shape","scale","geometry","sx","sy","cellRenderer","redraw","cascadeOpacity","delay","opacity","childCount","getChildCount","getChildAt","childState","getEdges","edgeState","fadeOut","from","isEnabled","errorResource","closeResource","errorImage","removeCursors","cursor","getCurrentStyle","currentStyle","parseCssNumber","setPrefixedStyle","hasScrollbars","overflow","scope","eval","expr","_mxJavaScriptExpression","findNode","NODETYPE_ELEMENT","getAttribute","idx2","isNode","attributeName","attributeValue","isAncestorNode","ancestor","getChildNodes","importNode","allChildren","newNode","createXmlDocument","implementation","createDocument","ActiveXObject","parseXml","DOMParser","xml","parseFromString","validateOnParse","resolveExternals","loadXML","clearSelection","selection","empty","getSelection","removeAllRanges","getPrettyXml","tab","NODETYPE_TEXT","getTextContent","htmlEntities","removeWhitespace","before","newline","isVml","tagUrn","getXml","linefeed","XMLSerializer","xmlSerializer","serializeToString","extractTextWithWhitespace","elems","doExtract","elts","elem","replaceTrailingNewlines","pattern","postfix","serializer","getOuterHtml","outerHTML","ownerDocument","br","label","para","addTransparentBackgroundFilter","linkAction","editor","action","pad","execute","linkInvoke","functName","textDecoration","paddingLeft","getDocumentSize","fit","ds","offset","getDocumentScrollOrigin","sl","st","right","bottom","url","mxXmlRequest","send","onload","onerror","binary","ontimeout","setBinary","getAll","urls","remain","errors","getStatus","post","submit","simulate","loadInto","onreadystatechange","readyState","getValue","getNumber","Number","getColor","transients","shallow","equalPoints","equalEntries","removeDuplicates","dict","superCtor","toRadians","deg","PI","toDegree","rad","arcToCurves","x0","y0","angle","largeArcFlag","sweepFlag","fS","psai","abs","sds","cty","cpsi","cos","spsi","sin","rxd","ryd","rxdd","rydd","r1x","r2y","lamda","sqrt","seif","txd","tyd","tx","ty","atan2","s1","dr","sse","seg","segr","cpsir1","cpsir2","spsir1","spsir2","mc","ms","x2","y2","x3","y3","getBoundingBox","rotation","cx","p1","p2","p3","p4","getRotatedPoint","pt","x1","y1","getPortConstraints","terminal","STYLE_PORT_CONSTRAINT","STYLE_SOURCE_PORT_CONSTRAINT","STYLE_TARGET_PORT_CONSTRAINT","directions","DIRECTION_MASK_NONE","constraintRotationEnabled","STYLE_PORT_CONSTRAINT_ROTATION","STYLE_ROTATION","quad","DIRECTION_NORTH","DIRECTION_MASK_NORTH","DIRECTION_MASK_EAST","DIRECTION_MASK_SOUTH","DIRECTION_MASK_WEST","DIRECTION_WEST","DIRECTION_SOUTH","DIRECTION_EAST","reversePortConstraints","constraint","findNearestSegment","absolutePoints","dist","ptSegDistSq","getDirectedBounds","flipH","flipV","STYLE_DIRECTION","STYLE_FLIPH","STYLE_FLIPV","round","m2","getPerimeterPoint","pts","center","point","intersection","ip","distSq","rectangleIntersectsSegment","bounds","intersects","tw","th","rw","rh","ry","intersectsHotspot","hotspot","cy","STYLE_STARTSIZE","STYLE_HORIZONTAL","alpha","getOffset","scrollOffset","fixed","r","getBoundingClientRect","wnd","defaultView","parentWindow","pageXOffset","pageYOffset","getScrollOrigin","includeAncestors","includeDocument","origin","convertPoint","chars","isNumeric","isFinite","isInteger","mod","denom","nume_a","nume_b","ub","py","projlenSq","dotprod","lenSq","ptLineDist","relativeCcw","ccw","createImage","imageNode","borderStyle","sortCells","cells","ascending","lookup","sort","o1","o2","mxCellPath","PATH_SEPARATOR","comp","compare","getStylename","pairs","stylename","getStylenames","indexOfStylename","tokens","addStylename","removeStylename","removeAllStylenames","setCellStyles","getStyle","isValue","sep","setCellStyleFlags","setStyleFlag","cont","getAlignmentAsPoint","align","valign","ALIGN_CENTER","ALIGN_RIGHT","ALIGN_MIDDLE","ALIGN_BOTTOM","getSizeForString","fontSize","fontFamily","textWidth","DEFAULT_FONTSIZE","DEFAULT_FONTFAMILY","div","LINE_HEIGHT","zoom","whiteSpace","getViewXml","getRoot","eventsEnabled","isEventsEnabled","setEventsEnabled","drawPane","overlayPane","dialect","DIALECT_SVG","NS_SVG","canvas","cloneNode","translate","getTranslate","temp","mxTemporaryCellStates","enc","mxCodec","encode","getScaleForPageCount","pageCount","pageFormat","PAGE_FORMAT_A4_PORTRAIT","availablePageWidth","availablePageHeight","graphBounds","getGraphBounds","sc","getScale","graphWidth","graphHeight","pageFormatAspectRatio","graphAspectRatio","pagesAspectRatio","pageRoot","pagesAspectRatioSqrt","numRowPages","numColumnPages","scaleChange","currentTotalPages","numLoops","roundRowDownProportion","roundColumnDownProportion","posterWidth","base","links","svg","ownerSVGElement","minWidth","minHeight","printScreen","print","focus","isInternalWindow","pre","prompt","confirm","icon","padding","img","graphF","dragElement","autoscroll","scalePreview","highlightDropTargets","getDropTarget","dragSource","mxDragSource","dragOffset","TOOLTIP_VERTICAL_OFFSET","setGuidesEnabled","getGraphForEvent","createDragElement","createPreviewElement","DEFAULT_HOTSPOT","MIN_HOTSPOT_SIZE","MAX_HOTSPOT_SIZE","RENDERING_HINT_EXACT","RENDERING_HINT_FASTER","RENDERING_HINT_FASTEST","DIALECT_VML","DIALECT_MIXEDHTML","DIALECT_PREFERHTML","DIALECT_STRICTHTML","NS_XHTML","NS_XLINK","SHADOWCOLOR","VML_SHADOWCOLOR","SHADOW_OFFSET_X","SHADOW_OFFSET_Y","SHADOW_OPACITY","NODETYPE_ATTRIBUTE","NODETYPE_CDATA","NODETYPE_ENTITY_REFERENCE","NODETYPE_ENTITY","NODETYPE_PROCESSING_INSTRUCTION","NODETYPE_COMMENT","NODETYPE_DOCUMENT","NODETYPE_DOCUMENTTYPE","NODETYPE_DOCUMENT_FRAGMENT","NODETYPE_NOTATION","DEFAULT_VALID_COLOR","DEFAULT_INVALID_COLOR","OUTLINE_HIGHLIGHT_COLOR","OUTLINE_HIGHLIGHT_STROKEWIDTH","HIGHLIGHT_STROKEWIDTH","HIGHLIGHT_SIZE","HIGHLIGHT_OPACITY","CURSOR_MOVABLE_VERTEX","CURSOR_MOVABLE_EDGE","CURSOR_LABEL_HANDLE","CURSOR_TERMINAL_HANDLE","CURSOR_BEND_HANDLE","CURSOR_VIRTUAL_BEND_HANDLE","CURSOR_CONNECT","HIGHLIGHT_COLOR","CONNECT_TARGET_COLOR","INVALID_CONNECT_TARGET_COLOR","DROP_TARGET_COLOR","VALID_COLOR","INVALID_COLOR","EDGE_SELECTION_COLOR","VERTEX_SELECTION_COLOR","VERTEX_SELECTION_STROKEWIDTH","EDGE_SELECTION_STROKEWIDTH","VERTEX_SELECTION_DASHED","EDGE_SELECTION_DASHED","GUIDE_COLOR","GUIDE_STROKEWIDTH","OUTLINE_COLOR","OUTLINE_STROKEWIDTH","HANDLE_SIZE","LABEL_HANDLE_SIZE","HANDLE_FILLCOLOR","HANDLE_STROKECOLOR","LABEL_HANDLE_FILLCOLOR","CONNECT_HANDLE_FILLCOLOR","LOCKED_HANDLE_FILLCOLOR","OUTLINE_HANDLE_FILLCOLOR","OUTLINE_HANDLE_STROKECOLOR","DEFAULT_TEXT_DIRECTION","WORD_WRAP","ABSOLUTE_LINE_HEIGHT","DEFAULT_FONTSTYLE","DEFAULT_STARTSIZE","DEFAULT_MARKERSIZE","DEFAULT_IMAGESIZE","ENTITY_SEGMENT","RECTANGLE_ROUNDING_FACTOR","LINE_ARCSIZE","ARROW_SPACING","ARROW_WIDTH","ARROW_SIZE","PAGE_FORMAT_A4_LANDSCAPE","PAGE_FORMAT_LETTER_PORTRAIT","PAGE_FORMAT_LETTER_LANDSCAPE","STYLE_PERIMETER","STYLE_SOURCE_PORT","STYLE_TARGET_PORT","STYLE_OPACITY","STYLE_FILL_OPACITY","STYLE_STROKE_OPACITY","STYLE_TEXT_OPACITY","STYLE_TEXT_DIRECTION","STYLE_OVERFLOW","STYLE_ORTHOGONAL","STYLE_EXIT_X","STYLE_EXIT_Y","STYLE_EXIT_DX","STYLE_EXIT_DY","STYLE_EXIT_PERIMETER","STYLE_ENTRY_X","STYLE_ENTRY_Y","STYLE_ENTRY_DX","STYLE_ENTRY_DY","STYLE_ENTRY_PERIMETER","STYLE_WHITE_SPACE","STYLE_FILLCOLOR","STYLE_POINTER_EVENTS","STYLE_SWIMLANE_FILLCOLOR","STYLE_MARGIN","STYLE_GRADIENTCOLOR","STYLE_GRADIENT_DIRECTION","STYLE_STROKECOLOR","STYLE_SEPARATORCOLOR","STYLE_STROKEWIDTH","STYLE_ALIGN","STYLE_VERTICAL_ALIGN","STYLE_LABEL_WIDTH","STYLE_LABEL_POSITION","STYLE_VERTICAL_LABEL_POSITION","STYLE_IMAGE_ASPECT","STYLE_IMAGE_ALIGN","STYLE_IMAGE_VERTICAL_ALIGN","STYLE_GLASS","STYLE_IMAGE","STYLE_IMAGE_WIDTH","STYLE_IMAGE_HEIGHT","STYLE_IMAGE_BACKGROUND","STYLE_IMAGE_BORDER","STYLE_NOLABEL","STYLE_NOEDGESTYLE","STYLE_LABEL_BACKGROUNDCOLOR","STYLE_LABEL_BORDERCOLOR","STYLE_LABEL_PADDING","STYLE_INDICATOR_SHAPE","STYLE_INDICATOR_IMAGE","STYLE_INDICATOR_COLOR","STYLE_INDICATOR_STROKECOLOR","STYLE_INDICATOR_GRADIENTCOLOR","STYLE_INDICATOR_SPACING","STYLE_INDICATOR_WIDTH","STYLE_INDICATOR_HEIGHT","STYLE_INDICATOR_DIRECTION","STYLE_SHADOW","STYLE_SEGMENT","STYLE_ENDARROW","STYLE_STARTARROW","STYLE_ENDSIZE","STYLE_SWIMLANE_LINE","STYLE_ENDFILL","STYLE_STARTFILL","STYLE_DASHED","STYLE_DASH_PATTERN","STYLE_FIX_DASH","STYLE_ROUNDED","STYLE_CURVED","STYLE_ARCSIZE","STYLE_ABSOLUTE_ARCSIZE","STYLE_SOURCE_PERIMETER_SPACING","STYLE_TARGET_PERIMETER_SPACING","STYLE_PERIMETER_SPACING","STYLE_SPACING","STYLE_SPACING_TOP","STYLE_SPACING_LEFT","STYLE_SPACING_BOTTOM","STYLE_SPACING_RIGHT","STYLE_ANCHOR_POINT_DIRECTION","STYLE_ELBOW","STYLE_FONTCOLOR","STYLE_FONTFAMILY","STYLE_FONTSIZE","STYLE_FONTSTYLE","STYLE_ASPECT","STYLE_AUTOSIZE","STYLE_FOLDABLE","STYLE_EDITABLE","STYLE_BACKGROUND_OUTLINE","STYLE_BENDABLE","STYLE_MOVABLE","STYLE_RESIZABLE","STYLE_RESIZE_WIDTH","STYLE_RESIZE_HEIGHT","STYLE_ROTATABLE","STYLE_CLONEABLE","STYLE_DELETABLE","STYLE_SHAPE","STYLE_EDGE","STYLE_JETTY_SIZE","STYLE_SOURCE_JETTY_SIZE","STYLE_TARGET_JETTY_SIZE","STYLE_LOOP","STYLE_ORTHOGONAL_LOOP","STYLE_ROUTING_CENTER_X","STYLE_ROUTING_CENTER_Y","FONT_BOLD","FONT_ITALIC","FONT_UNDERLINE","SHAPE_RECTANGLE","SHAPE_ELLIPSE","SHAPE_DOUBLE_ELLIPSE","SHAPE_RHOMBUS","SHAPE_LINE","SHAPE_IMAGE","SHAPE_ARROW","SHAPE_ARROW_CONNECTOR","SHAPE_LABEL","SHAPE_CYLINDER","SHAPE_SWIMLANE","SHAPE_CONNECTOR","SHAPE_ACTOR","SHAPE_CLOUD","SHAPE_TRIANGLE","SHAPE_HEXAGON","ARROW_CLASSIC","ARROW_CLASSIC_THIN","ARROW_BLOCK","ARROW_BLOCK_THIN","ARROW_OPEN","ARROW_OPEN_THIN","ARROW_OVAL","ARROW_DIAMOND","ARROW_DIAMOND_THIN","ALIGN_LEFT","ALIGN_TOP","TEXT_DIRECTION_DEFAULT","TEXT_DIRECTION_AUTO","TEXT_DIRECTION_LTR","TEXT_DIRECTION_RTL","DIRECTION_MASK_ALL","ELBOW_VERTICAL","ELBOW_HORIZONTAL","EDGESTYLE_ELBOW","EDGESTYLE_ENTITY_RELATION","EDGESTYLE_LOOP","EDGESTYLE_SIDETOSIDE","EDGESTYLE_TOPTOBOTTOM","EDGESTYLE_ORTHOGONAL","EDGESTYLE_SEGMENT","PERIMETER_ELLIPSE","PERIMETER_RECTANGLE","PERIMETER_RHOMBUS","PERIMETER_HEXAGON","PERIMETER_TRIANGLE","mxEventObject","properties","mxMouseEvent","sourceState","mxEventSource","eventSource","setEventSource","consumed","getName","getProperties","isConsumed","consume","graphX","graphY","getEvent","getSource","isSource","getX","getClientX","getY","getClientY","getGraphX","getGraphY","getCell","isPopupTrigger","touches","isMouseEvent","eventListeners","getEventSource","removeListener","fireEvent","listen","updateListenerList","mxListenerList","entry","updateListener","listenerCount","removeAllListeners","list","addGestureListeners","startListener","moveListener","endListener","removeGestureListeners","redirectMouseEvents","down","up","dblClick","fireMouseEvent","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","release","addMouseWheelListener","wheelHandler","delta","detail","wheelDelta","disableContextMenu","srcElement","isTouchEvent","pointerType","MSPOINTER_TYPE_TOUCH","mozInputSource","isPenEvent","MSPOINTER_TYPE_PEN","isMultiTouchEvent","MSPOINTER_TYPE_MOUSE","isLeftMouseButton","buttons","which","isMiddleMouseButton","isRightMouseButton","isControlDown","isShiftDown","isMetaDown","isAltDown","shiftKey","altKey","ctrlKey","metaKey","getMainEvent","changedTouches","clientX","clientY","LABEL_HANDLE","ROTATION_HANDLE","CUSTOM_HANDLE","VIRTUAL_HANDLE","ACTIVATE","RESIZE_START","RESIZE","MOVE_START","MOVE","MOVE_END","PAN_START","PAN","PAN_END","MINIMIZE","HIDE","SHOW","CLOSE","DESTROY","REFRESH","SIZE","SELECT","FIRED","FIRE_MOUSE_EVENT","GESTURE","TAP_AND_HOLD","GET","RECEIVE","DISCONNECT","SUSPEND","RESUME","MARK","ROOT","POST","OPEN","SAVE","BEFORE_ADD_VERTEX","ADD_VERTEX","AFTER_ADD_VERTEX","DONE","EXECUTE","EXECUTED","BEGIN_UPDATE","START_EDIT","END_UPDATE","END_EDIT","BEFORE_UNDO","UNDO","REDO","CHANGE","NOTIFY","LAYOUT_CELLS","CLICK","SCALE","TRANSLATE","SCALE_AND_TRANSLATE","UP","DOWN","ADD","REMOVE","CLEAR","ADD_CELLS","CELLS_ADDED","MOVE_CELLS","CELLS_MOVED","RESIZE_CELLS","CELLS_RESIZED","TOGGLE_CELLS","CELLS_TOGGLED","ORDER_CELLS","CELLS_ORDERED","REMOVE_CELLS","CELLS_REMOVED","GROUP_CELLS","UNGROUP_CELLS","REMOVE_CELLS_FROM_PARENT","FOLD_CELLS","CELLS_FOLDED","ALIGN_CELLS","LABEL_CHANGED","CONNECT_CELL","CELL_CONNECTED","SPLIT_EDGE","FLIP_EDGE","START_EDITING","EDITING_STARTED","EDITING_STOPPED","ADD_OVERLAY","REMOVE_OVERLAY","UPDATE_CELL_SIZE","ESCAPE","START","RESET","username","password","withCredentials","request","decodeSimulateValues","isBinary","responseText","getDocumentElement","responseXML","XMLHttpRequest","overrideMimeType","onreadystatechaange","setRequestHeaders","setRequestHeader","old","onbeforeunload","form","pars","decodeURIComponent","mxClipboard","STEPSIZE","insertCount","setCells","getCells","isEmpty","cut","removeCells","getSelectionCells","getExportableCells","getTopmostCells","cloneCells","paste","getImportableCells","importCells","setSelectionCells","minimizable","movable","replaceNode","installMaximizeHandler","installMinimizeHandler","installCloseHandler","setMinimizable","setTitle","installMoveHandler","mxForm","mxImage","mxDivResizer","resizeWidth","resizeHeight","handlingResize","dropHandler","mouseDown","eventConsumer","evtName","me","mxToolbar","mxUndoableEdit","significant","mxUndoManager","closeImage","minimizeImage","normalizeImage","maximizeImage","resizeImage","minimumSize","contentHeightCorrection","touchAction","contentWrapper","activator","activate","scrollable","activeWindow","zIndex","previousWindow","isResizable","resizable","startX","startY","setSize","minimize","getMinimumSize","marginLeft","minimized","maxDisplay","maximize","minSize","maximizable","maximized","minDisplay","docHeight","setLocation","closeImg","setImage","image","marginRight","marginTop","closable","getTable","addButtons","okFunct","cancelFunct","addText","input","addField","addCheckbox","addTextarea","rows","addCombo","isMultiSelect","select","addOption","combo","isSelected","option","getDocumentWidth","getDocumentHeight","previewElement","enabled","currentGraph","currentDropTarget","currentPoint","currentGuide","currentHighlight","guidesEnabled","gridEnabled","dragElementZIndex","dragElementOpacity","checkEventSource","setEnabled","isGuidesEnabled","isGridEnabled","setGridEnabled","getCellAt","isActive","mouseMoveHandler","reset","dragExit","removeDragElement","removeListeners","stopDrag","startDrag","mouseMove","mouseUpHandler","mouseUp","pointerEvents","getElementForEvent","elementFromPoint","graphContainsEvent","dragEnter","dragOver","drop","isMouseDown","isMouseTrigger","mxGuide","graphHandler","getGuideStates","mxCellHighlight","panDx","panDy","autoScroll","scrollPointToVisible","autoExtend","isDropEnabled","highlight","isGridEnabledEvent","hideGuide","isEnabledForEvent","gridSize","snap","previewOffset","dropTarget","noReset","updateDefaultMode","addItem","pressedIcon","factoryMethod","initialClassName","mouseHandler","backgroundColor","menu","mxPopupMenu","currentImg","isMenuShowing","hideMenu","addActionCombo","selectedIndex","addSwitchMode","altIcon","selectedMode","defaultMode","selectMode","addMode","toggle","defaultFunction","domNode","resetMode","addSeparator","addBreak","addLine","hr","undone","redone","isSignificant","notify","die","undo","redo","indexOfNextAdd","canUndo","edit","canRedo","undoableEditHappened","undoableEdit","edits","mxUrlConverter","mxPanningManager","thread","active","tdx","tdy","t0x","t0y","scrollbars","mouseListener","stop","addMouseListener","mouseUpListener","createThread","setInterval","panGraph","getDx","getDy","panTo","handleMouseOut","damper","clearInterval","setTranslate","removeMouseListener","mxAutoSaveManager","changeHandler","graphModelChanged","setGraph","mxAnimation","mxMorphing","steps","ease","mxImageBundle","alt","images","mxImageExport","mxAbstractCanvas2D","converter","createUrlConverter","mxXmlCanvas2D","root","writeDefaults","mxSvgCanvas2D","styleEnabled","gradients","defs","createStyle","baseUrl","baseDomain","updateBaseUrl","protocol","host","pathname","lastIndexOf","getBaseUrl","setBaseUrl","getBaseDomain","setBaseDomain","isRelativeUrl","convert","submenuImage","useLeftButtonForPopup","itemCount","autoExpand","smartSeparators","labels","iconCls","willAddSeparator","containsItems","col1","col2","col3","paddingRight","createSubmenu","currentSelection","eventReceiver","activeRow","hideSubmenu","showSubmenu","createRange","addCheckmark","backgroundImage","backgroundRepeat","backgroundPosition","row","force","showMenu","autoSaveDelay","autoSaveThrottle","autoSaveThreshold","ignoredChanges","lastSnapshot","save","now","isRunning","startAnimation","updateAnimation","stopAnimation","mxCellStatePreview","animateCell","recurse","getDelta","isVertex","moveState","stopRecursion","getOriginForCell","getParent","geo","getCellGeometry","relative","pgeo","putImage","getImage","includeOverlays","drawState","visitStatesRecursive","drawCellState","drawOverlays","getLinkForCellState","setLink","drawShape","drawText","mxShape","checkBounds","paint","restore","overlays","states","rotateHtml","lastX","lastY","moveOp","lineOp","quadOp","curveOp","closeOp","createState","fillAlpha","strokeAlpha","fillColor","gradientFillAlpha","gradientColor","gradientAlpha","gradientDirection","strokeColor","strokeWidth","dashed","dashPattern","fixDash","lineCap","lineJoin","miterLimit","fontColor","fontBackgroundColor","fontBorderColor","fontStyle","shadow","shadowColor","shadowAlpha","shadowDx","shadowDy","rotationCx","rotationCy","format","addOp","rotatePoint","theta","rotate","setAlpha","setFillAlpha","setStrokeAlpha","setFillColor","setGradient","color1","color2","direction","alpha1","alpha2","setStrokeColor","setStrokeWidth","setDashed","setDashPattern","setLineCap","setLineJoin","setMiterLimit","setFontColor","setFontBackgroundColor","setFontBorderColor","setFontSize","setFontFamily","setFontStyle","setShadow","setShadowColor","setShadowAlpha","setShadowOffset","begin","moveTo","lineTo","quadTo","curveTo","arcTo","curves","textEnabled","compressed","toFixed","roundrect","ellipse","aspect","wrap","clip","dir","stroke","fill","fillAndStroke","useDomParser","matchHtmlAlignment","foEnabled","foAltText","foOffset","textOffset","imageOffset","strokeTolerance","minStrokeWidth","refCount","blockImagePointerEvents","lineHeightCorrection","pointerEventsValue","fontMetricsPadding","cacheOffsetSize","hash","createAlternateContent","fo","createGradientId","getSvgGradient","gradient","tmpId","getElementById","createSvgGradient","op","addNode","filled","stroked","updateFill","updateStroke","createShadow","createTolerance","originalRoot","getCurrentStrokeWidth","sw","updateStrokeAttributes","createDashPattern","pat","tol","convertHtml","xd","xb","adoptNode","ta","createDiv","lh","css","invalidateCachedOffsetSize","mxCachedOffsetWidth","mxCachedFinalOffsetWidth","mxCachedFinalOffsetHeight","updateText","group","maxHeight","maxWidth","ow","oh","padX","sizeDiv","padY","wordWrap","div2","padDx","plainText","createClip","updateFont","anchor","textHeight","addTextBackground","bbox","getBBox","ie","fontWeight","mxVmlCanvas2D","setStates","stencil","initStyles","mxStencil","parseDescription","parseConstraints","rotatedHtmlBackground","vmlScale","createVmlElement","coordsize","strokeweight","strokecolor","createStroke","createFill","createTransparentFill","flip","endcap","joinstyle","miterlimit","dashstyle","getVmlDashStyle","tok","createShadowStroke","createShadowFill","cpx0","cpy0","qpx1","qpy1","cpx3","cpy3","cpx1","cpy1","cpx2","cpy2","createRect","box","margin","inner","rot","real_cos","real_sin","top_fix","left_fix","divParent","textpathok","tp","horizontal","vertical","guideX","guideY","rounded","getGuideTolerance","createGuideShape","guide","mxPolyline","isDashed","isStateIgnored","trx","overrideX","stateX","valueX","overrideY","stateY","valueY","tt","ttX","ttY","middle","snapX","override","getOverlayPane","snapY","points","getGuideColor","scrollWidth","antiAlias","minSvgStrokeWidth","boundingBox","svgStrokeTolerance","svgPointerEvents","shapePointerEvents","stencilPointerEvents","outline","useSvgBoundingBox","strokewidth","fillOpacity","strokeOpacity","isParseVml","isHtmlAllowed","getSvgScreenOffset","createSvg","createHtml","createVml","reconfigure","updateBoundsFromPoints","redrawShape","redrawHtmlShape","updateBoundingBox","getLabelBounds","isPaintBoundsInverted","getLabelMargins","createVmlGroup","createCanvas","insertAdjacentHTML","destroyCanvas","createSvgCanvas","updateVmlContainer","createVmlCanvas","updateHtmlBounds","updateHtmlFilters","updateHtmlColors","isShadow","east","south","west","north","borderColor","borderWidth","setTransparentBackgroundImage","mxRefCount","releaseSvgGradients","oldGradients","strokeDrawn","updateTransform","configureCanvas","bg","bb","createBoundingBox","createTransparentSvgRectangle","paintEdgeShape","paintVertexShape","getGradientBounds","getShapeRotation","paintBackground","paintForeground","getArcSize","paintGlassEffect","arc","isRounded","addPoints","arcSize","exclude","initialMove","pe","p0","wp","nx1","ny1","nx2","ny2","resetStyles","spacing","startSize","endSize","startArrow","endArrow","glass","setCursor","getCursor","isRoundable","augmentBoundingBox","getRotation","getTextRotation","mxText","verticalTextRotation","grads","defaultLocalized","allowEval","constraints","w0","h0","bgNode","fgNode","conns","parseConstraint","perimeter","mxConnectionConstraint","evaluateTextAttribute","attribute","evaluateAttribute","loc","computeAspect","minScale","drawChildren","disableShadow","drawNode","inverse","parseRegularly","pointCount","segs","childNode","childName","ps","arcsize","factor","mxStencilRegistry","getStencil","stencils","addStencil","mxMarker","markers","addMarker","createMarker","unitX","unitY","mxActor","mxCloud","mxRectangleShape","mxEllipse","mxDoubleEllipse","mxRhombus","mxArrow","arrowWidth","mxArrowConnector","arrowSpacing","family","spacingTop","spacingRight","spacingBottom","spacingLeft","background","clipped","labelPadding","textDirection","updateMargin","mxTriangle","mxHexagon","mxLine","mxImageShape","mxLabel","mxCylinder","mxConnector","mxSwimlane","mxGraphLayout","WeightedCellSorter","weightedValue","mxStackLayout","mxPartitionLayout","mxCompactTreeLayout","invert","mxRadialTreeLayout","mxFastOrganicLayout","mxCircleLayout","radius","mxParallelEdgeLayout","mxCompositeLayout","layouts","master","mxEdgeLabelLayout","mxGraphAbstractHierarchyCell","mxGraphHierarchyNode","connectsAsTarget","connectsAsSource","mxGraphHierarchyEdge","ids","mxGraphHierarchyModel","layout","vertices","roots","tightenToSource","getGraph","vertexMapper","edgeMapper","maxRank","internalVertices","getChildVertices","SOURCESCANSTARTRANK","createInternalCells","internalEdge","realEdges","realEdge","targetCell","getVisibleTerminal","internalTargetCell","mxSwimlaneModel","mxHierarchicalLayoutStage","mxMedianHybridCrossingReduction","MedianCellSorter","mxMinimumCycleRemover","mxCoordinateAssignment","intraCellSpacing","interRankCellSpacing","orientation","initialX","parallelEdgeSpacing","mxSwimlaneOrdering","mxHierarchicalLayout","deterministic","createArrow","widthFactor","endOffsetX","endOffsetY","createOpenArrow","diamond","swFactor","tk","redrawPath","hw","hh","paintLine","paintCurvedLine","ix","iy","arrow","nx","ny","basex","basey","floorx","floory","p0x","p0y","p1x","p1y","p2x","p2y","p3x","p3y","p5x","p5y","getEdgeWidth","isMarkerStart","getStartArrowWidth","isMarkerEnd","getEndArrowWidth","startWidth","endWidth","edgeWidth","openEnded","isOpenEnded","markerStart","markerEnd","isArrowRounded","i0","orthx","orthy","startNx","startNy","paintMarker","outStartX","outStartY","inEndX","inEndY","dx1","dy1","dist1","tmp1","dist2","strokeWidthFactor","angleFactor","outX","outY","inX","inY","c1x","c1y","c2x","c2y","inStartX","inStartY","ptX","ptY","widthArrowRatio","spaceX","spaceY","baseSpacingTop","baseSpacingBottom","baseSpacingLeft","baseSpacingRight","replaceLinefeeds","ignoreClippedStringSize","ignoreStringSize","textWidthPadding","cacheEnabled","unscaledWidth","lastUnscaledWidth","realHtml","fmt","getAutoDirection","updateSize","textDiv","updateHtmlFilter","updateHtmlTransform","updateInnerHtml","divs","unrotatedBoundingBox","updateValue","bd","enableWrap","getSpacing","mid","preserveImageAspect","useVml","imageSize","indicatorSize","indicatorSpacing","indicatorShape","indicator","indicatorColor","indicatorStrokeColor","indicatorGradientColor","indicatorDirection","paintImage","paintIndicator","getImageBounds","getIndicatorBounds","indicatorImage","hasChildNodes","getCylinderSize","isForeground","sourceMarker","targetMarker","getTitleSize","isHorizontal","shapeVertical","realHorizontal","realFlipH","realFlipV","swimlaneLine","paintRoundedSwimlane","paintSwimlane","paintSeparator","paintDivider","useBoundingBox","moveCell","getConstraint","getCellStyle","traverse","directed","visited","edgeCount","getEdgeCount","getEdgeAt","getTerminal","traverseAncestors","isVertexMovable","isCellMovable","isVertexIgnored","isCellVisible","isEdgeIgnored","setEdgeStyleEnabled","setOrthogonalEdge","getParentOffset","parentGeo","getGeometry","setEdgePoints","mxGeometry","setRelative","parentOffset","setGeometry","setVertexLocation","getVertexBounds","dx0","dy0","arrangeGroups","topBorder","rightBorder","bottomBorder","leftBorder","updateGroupBounds","nudge","rankIndex","marginBottom","keepFirstLocation","resizeParent","resizeParentMax","resizeLast","borderCollapse","allowGaps","pstate","getIndex","getParentSize","isLayer","currentRoot","getLayoutCells","c1","c2","geo1","geo2","fillValue","isSwimlane","horz","childStyle","setChildGeometry","isCellCollapsed","updateParentGeometry","pgeo2","resizeVertices","other","getStartSize","maintainParentLocation","groupPadding","groupPaddingTop","groupPaddingRight","groupPaddingBottom","groupPaddingLeft","parentsChanged","moveTree","levelDistance","nodeDistance","resetEdges","prefHozEdgeSep","prefVertEdgeOff","minEdgeJetty","channelBuffer","edgeRouting","sortEdges","alignRanks","maxRankHeight","getConnections","findTreeRoots","parentX","parentY","dfs","findRankHeights","setCellHeights","g","horizontalLayout","verticalLayout","moveNode","adjustParents","localEdgeProcessing","sortOutgoingEdges","e1","e2","end1","end2","rank","createNode","attachParent","layoutLeaf","offsetX","offsetY","siblingOffset","contour","upperHead","createLine","lowerHead","upperTail","lowerTail","sum","merge","total","upper","lower","bridge","a1","a2","line1","line2","processNodeOutgoing","parentCell","sortedCells","sortingCriterion","availableWidth","requiredWidth","edgeSpacing","currentXOffset","currentYOffset","maxYOffset","parentBounds","childCell","childBounds","getEdgesBetween","newPoints","angleOffset","rootx","rooty","autoRadius","rowMinX","rowMaxX","rowMinCenX","rowMaxCenX","rowRadi","rootBounds","centerX","centerY","vertexBounds","calcRowDims","maxLeftGrad","maxRightGrad","leftGrad","rightGrad","xLeftLimit","xRightLimit","fullWidth","xProportion","totalTheta","averTheta","nextTheta","lastTheta","rowNum","rowHasChildren","useInputOrigin","disableEdgeStyle","forceConstant","forceConstantSquared","minDistanceLimit","maxDistanceLimit","minDistanceLimitSquared","initialTemp","temperature","maxIterations","iteration","vertexArray","dispX","dispY","cellLocation","radiusSquared","isMoveable","neighbours","indices","allowedToRun","initialBounds","getBoundingBoxFromGeometry","getOpposites","resetEdge","calcRepulsion","calcAttraction","calcPositions","reduceTemperature","minx","miny","moveCells","deltaLength","newXDisp","newYDisp","xDelta","yDelta","deltaLengthSquared","displacementX","displacementY","vertexCount","deltaLengthWithRadius","moveCircle","getRadius","circle","phi","findParallels","parallels","getEdgeId","trg","route","scx","scy","tcx","tcy","placeLabels","avoid","labRect","dy2","dx2","minRank","nextLayerConnectedCells","previousLayerConnectedCells","getNextLayerConnectedCells","layer","getPreviousLayerConnectedCells","getGeneralPurposeVariable","setGeneralPurposeVariable","setX","setY","hashCode","getRankValue","otherNode","getCoreCell","isReversed","ranks","dfsCount","undirectedEdges","directedEdges","initialRank","startNodes","internalNode","internalNodes","startNodesCopy","edgesToBeMarked","layerDeterminingEdges","allEdgesScanned","minimumLayer","removedCell","currentMaxLayer","fixRanks","rankList","rootsArray","oldRootsArray","seen","parentToCellRankDifference","dfsRoots","trackAncestors","seenNodes","extendedDfs","connectingEdge","rootId","outgoingEdges","targetNode","ancestors","childHash","hashCodeLength","ranksPerGroup","swimlanes","swimlaneIndex","ii","maxChainDfs","lowerRank","upperRank","chainCount","slIndex","incomingEdges","nestedBestRanks","currentBestCrossings","iterationsWithoutImprovement","maxNoImprovementIterations","calculateCrossings","weightedMedian","transpose","candidateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","connectedCells","nodeIndices","connectedNode","otherCellRankPosition","firstIndex","treeSize","treeIndex","mainLoopIteration","improved","maxCount","orderedCells","tempRank","leftCellAboveConnections","leftCellBelowConnections","rightCellAboveConnections","rightCellBelowConnections","leftAbovePositions","leftBelowPositions","rightAbovePositions","rightBelowPositions","leftCell","rightCell","totalCurrentCrossings","totalSwitchedCrossings","ik","downwardSweep","medianRank","rankValue","numCellsForRank","medianValues","reservedPositions","nextLevelConnectedCells","nextRankValue","sorterEntry","medianValue","arrayCount","medianPoint","leftMedian","rightMedian","unseenNodesArray","unseenNodes","modelRoots","seenNodesCopy","jettyPositions","limitX","currentXDelta","widestRank","rankTopY","rankBottomY","widestRankValue","rankWidths","rankY","fineTuning","nextLayerConnectedCache","previousLayerConnectedCache","printStatus","initialCoords","minNode","bestXDelta","medianPos","minPath","setCellLocations","nodeList","nodeWrapper","maxTries","tolerance","cellWrapper","numNextLayerConnected","numPreviousLayerConnected","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","currentPosition","cellMedian","positionChanged","leftLimit","rankSize","rightLimit","connectedCell","connectedCellWrapper","rankMedianPosition","weightedValues","cellMap","currentCell","calculatedWeightedValue","numConnectionsNextLevel","leftBuffer","rightBuffer","collection","totalWeight","facade","calculateWidestRank","rankCoordinates","localX","boundsWarning","numEdges","lastRankMaxCellHeight","maxCellHeight","distanceToNextRank","referenceX","edgeStraight","refSegCount","upSegCount","downSegCount","upXPositions","downXPositions","currentX","nextX","repositionValid","rankArray","MAX_VALUE","edgeStyle","mxHierarchicalEdgeStyle","ORTHOGONAL","POLYLINE","CURVE","setEdgePosition","cellIndex","currentCells","currentRank","sorter","connectedEdgeCount","connectedEdges","connections","innerCell","connIndex","numActualEdges","parallelEdgeCount","jettys","layoutReversed","realSource","arrayOffset","jetty","modelSource","isPort","loopStart","loopLimit","loopDelta","positionX","topChannelY","bottomChannelY","modelTarget","realTarget","processReversedEdge","realCell","positionY","reversedOverSwimlane","cellId","STRAIGHT","mxSwimlaneLayout","mxGraphModel","currentEdit","createUndoableEdit","setRoot","mxRootChange","previousIndex","mxCollapseChange","collapsed","mxVisibleChange","mxCellAttributeChange","mxCell","onInit","moveParent","parentBorder","interHierarchySpacing","edgesCache","edgeSourceTermCache","edgesTargetTermCache","rootsCopy","run","findRoots","best","maxDiff","fanOut","fanIn","diff","cachedEdges","isCollapsed","terminalCache","term","hierarchyVertices","allVertexSet","filledVertexSet","filterDescendants","filledVertexSetEmpty","candidateRoots","vertexSet","cycleStage","layeringStage","crossingStage","placementStage","allVertices","currentComp","vertexID","edgeIsSource","netCount","isSource2","otherTerm","dummyVertexWidth","dummyVertices","getChildCells","layoutBounds","lane","childrenY","maxChildrenY","newGeo","leftGroupBorder","isValidAncestor","laneCounter","otherVertex","otherIndex","maintainEdgeParent","ignoreRelativeEdgeParent","createIds","nextId","updateLevel","endingUpdate","createRoot","isCreateIds","setCreateIds","insert","filterCells","getDescendants","rootChanged","oldRoot","cellAdded","parentChanged","updateEdgeParents","getId","setId","createId","collision","updateEdgeParent","getNearestCommonAncestor","origin1","getOrigin","origin2","cell1","cell2","getParentPath","cellRemoved","parentForCellChanged","oldIndex","par","getChildren","getChildEdges","setTerminal","terminalChanged","setTerminals","terminalForCellChanged","insertEdge","removeEdge","getDirectedEdgeCount","outgoing","ignoredEdge","getIncomingEdges","getOutgoingEdges","incoming","includeLoops","tmp2","directedMatch","oppositeMatch","targets","terminals","topmost","isConnectable","setValue","valueForCellChanged","valueChanged","geometryForCellChanged","styleForCellChanged","setCollapsed","collapsedStateForCellChanged","visibleStateForCellChanged","mergeChildren","cloneAllEdges","mapping","mergeChildrenImpl","getParents","parents","cloneCell","includeChildren","clones","cloneCellImpl","restoreClone","ident","cellCloned","cloneChild","connect","isConnect","connectable","mxTransient","setVertex","setEdge","setParent","removeFromParent","getEdgeIndex","isOutgoing","removeFromTerminal","hasAttribute","userObject","cloneValue","TRANSLATE_CONTROL_POINTS","alternateBounds","sourcePoint","targetPoint","swap","getTerminalPoint","setTerminalPoint","ct","fixedAspect","t1","t2","mxPerimeter","RectanglePerimeter","orthogonal","pi","pi2","beta","tan","EllipsePerimeter","det","xout1","xout2","yout1","yout2","pow","xout","yout","RhombusPerimeter","TrianglePerimeter","corner","HexagonPerimeter","mxPrintPreview","pageSelector","pageScale","mxStylesheet","putDefaultVertexStyle","createDefaultVertexStyle","putDefaultEdgeStyle","createDefaultEdgeStyle","mxCellState","absoluteOffset","mxGraphSelectionModel","mxSelectionChange","selectionModel","added","removed","mxCellEditor","zoomHandler","isEditing","editingCell","stopEditing","mxCellRenderer","autoOrigin","printOverlays","printControls","printBackgroundImage","targetWindow","clipping","getWindow","getDoctype","appendGraph","forcePageBreaks","keepOpen","previousInitializeOverlay","initializeOverlay","overlay","getDrawPane","initControl","control","handleEvents","clickHandler","isNewWindow","writeHead","currentScale","availableHeight","hpages","vpages","writePageSelector","createPageSelector","addPage","pageBreakAfter","addPageBreak","cov","getCoverPages","apx","getAppendices","pageNum","renderPage","addGraphFragment","insertBackgroundImage","closeDocument","writePostfix","pageNumber","pageBreakInside","innerDiv","viewport","previousContainer","getCanvas","backgroundPane","getBackgroundPane","realScale","graphEnabled","tempClip","rendering","orig","svgs","getLinkForCell","putCellStyle","getDefaultVertexStyle","getDefaultEdgeStyle","defaultStyle","tmpStyle","invalidStyle","invalid","visibleSourceState","visibleTargetState","terminalDistance","segments","getPerimeterBounds","setAbsoluteTerminalPoint","getVisibleTerminalState","setVisibleTerminalState","terminalState","getCellBounds","cellBounds","getPaintBounds","paintBounds","updateCachedBounds","setState","doneResource","updatingSelectionResource","singleSelection","isSingleSelection","setSingleSelection","changeSelection","setCell","getFirstSelectableCell","isCellSelectable","addCell","addCells","removeCell","modified","autoSize","selectText","emptyLabelText","escapeCancelsEditing","textNode","minResize","wordWrapPadding","blurEnabled","initialValue","contentEditable","isLegacyEditor","installListeners","applyValue","labelChanged","setAlign","getInitialValue","getEditingValue","getCurrentValue","isCancelEditingKeyEvent","focusLost","isStopEditingEvent","keyCode","keypressHandler","clearOnChange","getEmptyLabelText","keyupHandler","resizeThread","isEnterStopsCellEditing","isEventSource","lw","bds","hpos","vpos","legacySpacing","isWrapping","getEditorBounds","isInvokesStopCellEditing","getBackgroundColor","absoluteRoot","startEditing","tooltipHandler","hideTooltip","bold","italic","uline","isHideLabel","isSelectText","execCommand","cancel","initial","blur","prepareTextarea","getEditingCell","defaultShapes","defaultEdgeShape","defaultVertexShape","defaultTextShape","legacyControlPosition","forceControlClickHandler","registerShape","initializeShape","configureShape","createShape","getShapeConstructor","createIndicatorShape","getShape","getIndicatorShape","getIndicatorColor","getIndicatorGradientColor","getIndicatorImage","postConfigureShape","resolveColor","checkPlaceholderStyles","field","referenced","getSwimlane","swimlaneIndicatorColorAttribute","rstate","getLabelValue","getLabel","createLabel","isForceHtml","isHtmlLabel","getVerticalAlign","isLabelClipped","initializeLabel","forceGetCell","isLabelEvent","nativeDblClickEnabled","createCellOverlays","getCellOverlays","installCellOverlayListeners","createControl","getFoldingImage","foldingEnabled","createControlClickHandler","collapse","foldCells","innerNode","first","isShapeEvent","redrawLabel","wrapping","isTextShapeInvalid","nextScale","getTextScale","isClipping","vis","redrawLabelShape","dh","rotateLabelBounds","redrawCellOverlays","getBounds","redrawControl","getControlBounds","insertStateAfter","htmlNode","shapes","getShapesForState","shapeChanged","selectionCellsHandler","updateHandler","isShapeInvalid","doRedrawShape","mxEdgeStyle","EntityRelation","segment","isSourceLeft","sourceGeometry","isTargetLeft","targetGeometry","getRoutingCenterY","xe","ye","dep","midY","Loop","transformControlPoint","getRoutingCenterX","ElbowConnector","SideToSide","TopToBottom","SegmentConnector","hints","lastPushed","hint","pushPoint","lastInx","newHints","currentTerm","currentPt","hozChan","vertChan","currentHint","fixedVertAlign","fixedHozAlign","inHozChan","inVertChan","orthBuffer","orthPointsFallback","dirVectors","wayPoints1","routePatterns","inlineRoutePatterns","vertexSeperations","limits","LEFT_MASK","TOP_MASK","RIGHT_MASK","BOTTOM_MASK","LEFT","TOP","RIGHT","BOTTOM","SIDE_MASK","CENTER_MASK","SOURCE_MASK","TARGET_MASK","VERTEX_MASK","getJettySize","OrthConnector","sourceEdge","targetEdge","sourceX","sourceY","sourceWidth","sourceHeight","targetX","targetY","targetWidth","targetHeight","scaledSourceBuffer","scaledTargetBuffer","totalBuffer","tooShort","portConstraint","newRect","sourceCenX","sourceCenY","targetCenX","targetCenY","sourceTopDist","sourceLeftDist","sourceBottomDist","sourceRightDist","dirPref","horPref","vertPref","preferredHorizDist","preferredVertDist","prefOrdering","preferredOrderSet","sourceIndex","targetIndex","routePattern","currentIndex","lastOrientation","initialOrientation","currentOrientation","nextDirection","directionIndex","tar","sou","side","souTar","deltaX","deltaY","targetOrientation","sameOrient","getRoutePattern","mxStyleRegistry","putValue","mxGraphView","mxCurrentRootChange","isUp","mxGraph","renderHint","stylesheet","mouseListeners","multiplicities","imageBundles","createCellRenderer","setSelectionModel","createSelectionModel","setStylesheet","createStylesheet","createGraphView","graphModelChangeListener","createHandlers","revalidate","mxCellOverlay","tooltip","mxOutline","mxMultiplicity","validNeighbors","countError","typeError","validNeighborsAllowed","mxLayoutManager","undoHandler","beforeUndo","moveHandler","cellsMoved","mxSwimlaneManager","addEnabled","resizeEnabled","addHandler","isAddEnabled","cellsAdded","isResizeEnabled","cellsResized","isCellVisibleFn","oldValidateCellState","validateCellState","oldBounds","oldStates","getStates","oldScale","oldDoRedrawShape","oldPaint","resurse","setScale","resetValidationState","validateCell","setGraphBounds","deltas","mxGraphHandler","panHandler","updatePreview","updateHint","escapeHandler","refreshHandler","pBounds","getPreviewBounds","livePreviewUsed","setHandlesVisibleForCells","mxPanningHandler","forcePanningHandler","isForcePanningEvent","gestureHandler","eo","isPinchEnabled","initialScale","mouseDownEvent","maxScale","zoomTo","mxPopupMenuHandler","inTolerance","mxCellMarker","validColor","invalidColor","mxSelectionCellsHandler","handlers","getSelectionModel","mxConnectionHandler","mxConstraintHandler","resetHandler","currentFocus","mxRubberband","forceRubberbandHandler","isForceRubberbandEvent","repaint","mxHandle","mxVertexHandler","livePreview","invalidate","validate","mxEdgeHandler","dirty","isRendering","mxElbowEdgeHandler","mxEdgeSegmentHandler","mxKeyHandler","normalKeys","shiftKeys","controlKeys","controlShiftKeys","keydownHandler","keyDown","mxTooltipHandler","mxCellTracker","highlightColor","repaintHandler","mxDefaultKeyHandler","handler","escape","hideProperties","mxDefaultPopupMenu","config","mxDefaultToolbar","mxEditor","actions","addActions","cycleAttributeValues","popupHandler","undoManager","toolbar","createToolbar","keyHandler","cycleAttributeName","EMPTY_POINT","updatingDocumentResource","captureDocumentGesture","optimizeVmlReflows","updateStyle","lastNode","lastHtmlNode","lastForegroundNode","lastForegroundHtmlNode","setCurrentRoot","sizeDidChange","scaleAndTranslate","previousScale","previousTranslate","viewStateChanged","removeState","includeEdges","invalidating","prevDisplay","getEmptyBounds","validateBackground","createBackgroundPageShape","validateBackgroundImage","validateBackgroundPage","getBackgroundImage","redrawBackgroundImage","pageVisible","getBackgroundPageBounds","backgroundPageShape","isHideOnHover","updateCellState","stateValidated","pState","getChildOffsetForCell","updateVertexState","updateEdgeState","updateVertexLabelOffset","updateFixedTerminalPoints","updatePoints","updateFloatingTerminalPoints","updateEdgeBounds","updateEdgeLabelOffset","fg","keepEdgesInForeground","keepEdgesInBackground","updateFixedTerminalPoint","getConnectionConstraint","getFixedTerminalPoint","getConnectionPoint","isOrthogonal","updateBoundsFromStencil","asp","getEdgeStyle","getTerminalPort","srcBounds","trgBounds","isLoopStyleEnabled","tc","defaultLoopStyle","isAllowEval","updateFloatingTerminalPoint","getFloatingTerminalPoint","getNextPoint","orth","getPerimeterFunction","opposite","markerSize","gx","gy","getRelativePoint","totalLength","minDist","xSegment","ySegment","projlen","yDistance","setRendering","setAllowEval","getCellStates","getDecoratorPane","decoratorPane","isContainerEvent","isScrollEvent","outWidth","inWidth","outHeight","inHeight","fireGestureEvent","popupMenuHandler","endHandler","createHtmlPane","updateContainerStyle","onResize","updateHtmlCanvasSize","pane","createVmlPane","getTranslateForRoot","cellEditor","portsEnabled","doubleTapEnabled","doubleTapTimeout","doubleTapTolerance","lastTouchY","lastTouchTime","tapAndHoldEnabled","tapAndHoldDelay","tapAndHoldInProgress","tapAndHoldValid","initialTouchX","initialTouchY","defaultOverlap","defaultParent","alternateEdgeStyle","pageBreaksVisible","pageBreakColor","pageBreakDashed","minPageBreakDist","preferPageSize","escapeEnabled","invokesStopCellEditing","enterStopsCellEditing","useScrollbarsForPanning","exportEnabled","importEnabled","cellsLocked","cellsCloneable","cellsEditable","cellsDeletable","cellsMovable","edgeLabelsMovable","vertexLabelsMovable","dropEnabled","splitEnabled","cellsResizable","cellsBendable","cellsSelectable","cellsDisconnectable","autoSizeCells","autoSizeCellsOnAdd","ignoreScrollbars","translateToScrollPosition","timerAutoScroll","allowAutoPanning","maximumGraphBounds","minimumGraphSize","minimumContainerSize","maximumContainerSize","resizeContainer","allowNegativeCoordinates","constrainChildren","constrainRelativeChildren","extendParents","extendParentsOnAdd","extendParentsOnMove","recursiveResize","collapseToPreferredSize","zoomFactor","keepSelectionVisibleOnZoom","centerZoom","resetViewOnRootChange","resetEdgesOnResize","resetEdgesOnMove","resetEdgesOnConnect","allowLoops","multigraph","connectableEdges","allowDanglingEdges","cloneInvalidEdges","disconnectOnMove","labelsVisible","htmlLabels","swimlaneSelectionEnabled","swimlaneNesting","minFitScale","maxFitScale","collapsedImage","expandedImage","warningImage","alreadyConnectedResource","containsValidationErrorsResource","collapseExpandResource","createCellEditor","createTooltipHandler","createSelectionCellsHandler","createConnectionHandler","createGraphHandler","panningHandler","createPanningHandler","panningEnabled","createPopupMenuHandler","getStylesheet","getSelectionCellsForChanges","processChange","updateSelection","removeSelectionCells","setDefaultParent","removeStateForCell","newParent","home","addCellOverlay","removeCellOverlay","removeCellOverlays","clearCellOverlays","setCellWarning","isSelect","setSelectionCell","startEditingAtCell","getSelectionCell","isCellEditable","cellLabelChanged","isAutoSizeCell","cellSizeUpdated","click","mxe","isTransparentClickEvent","isCellSelected","selectCellForEvent","swimlane","isSwimlaneSelectionEnabled","getSwimlaneAt","isToggleEvent","tapAndHold","panningTrigger","marker","currentColor","markedState","mark","createEdgeState","panningManager","createPanningManager","getBorderSizes","borderLeftStyle","borderLeftWidth","paddingTop","borderTopStyle","borderTopWidth","borderRightStyle","borderRightWidth","paddingBottom","borderBottomStyle","borderBottomWidth","getPreferredPageSize","page","hCount","vCount","keepOrigin","ignoreWidth","ignoreHeight","getBorder","cssBorder","w1","h1","w2","h2","s2","doResizeContainer","updatePageBreaks","gb","horizontalCount","verticalCount","horizontalPageBreaks","verticalPageBreaks","drawPageBreaks","breaks","pageBreak","postProcessCellStyle","getImageFromBundles","encodeURIComponent","comma","setCellStyle","toggleCellStyle","toggleCellStyles","toggleCellStyleFlags","alignCells","param","resizeCell","flipEdge","addImageBundle","bundle","removeImageBundle","orderCells","back","cellsOrdered","groupCells","getCellsForGroup","createGroupCell","getBoundsForGroup","ungroupCells","removeCellsAfterUngroup","cellsRemoved","addAllEdges","removeCellsFromParent","moveGroup","allowInvalidEdges","keepPosition","trans","getEdgeValidationError","createVertex","createEdge","addEdge","absolute","constrain","parentState","zero","oldState","isAllowNegativeCoordinates","autoSizeCell","isExtendParentsOnAdd","isExtendParent","extendParent","constrainChild","cellConnected","updateCellSize","getDeletableCells","getAllEdges","disconnectTerminal","connected","tstate","splitEdge","newEdge","toggleCells","cellsToggled","checkFoldable","getFoldableCells","cellsFolded","isCellFoldable","swapBounds","willCollapse","updateAlternateBounds","getPreferredSizeForCell","allCells","ignoreChildren","cellStyle","gs2","resizeCells","isRecursiveResize","cellResized","ignoreRelative","resizeChildCells","constrainChildCells","scaleCell","isCellResizable","isCloneInvalidEdges","setAllowNegativeCoordinates","isDisconnectOnMove","isAllowDanglingEdges","isExtendParentsOnMove","disconnect","disconnectGraph","translateCell","getCellContainmentArea","getMaximumGraphBounds","sizeFirst","isConstrainRelativeChildren","isConstrainChild","overlap","getOverlap","getOutlineConstraint","getAllConnectionConstraints","setConnectionConstraint","connectCell","isPortsEnabled","getTerminalForPort","isCellDisconnectable","getCurrentRoot","enterGroup","isValidRoot","exitGroup","includeDescendants","addPoint","shiftPreview1","shiftPreview2","zoomIn","zoomOut","zoomActual","cw","sh","scrollRectToVisible","zoomToRect","scaleX","scaleY","aspectFactor","rectRight","rectBottom","newHeight","deltaHeightBuffer","upperBuffer","newWidth","deltaWidthBuffer","newScale","scrollCellToVisible","tr2","isChanged","widthLimit","heightLimit","ddx","ddy","isCellConnectable","isLoop","isCloneEvent","isConstrainedEvent","isIgnoreTerminalEvent","validationAlert","isEdgeValid","isValidConnection","sourceOut","targetIn","validateEdge","validateGraph","isValid","getCellValidationError","outCount","inCount","rule","setBackgroundImage","isHtmlLabels","setHtmlLabels","getTooltip","tip","getHandler","getTooltipForNode","getTooltipForCell","getCursorForMouseEvent","getCursorForCell","setBorder","isResizeContainer","setResizeContainer","isEscapeEnabled","setEscapeEnabled","setInvokesStopCellEditing","setEnterStopsCellEditing","isCellLocked","isCellsLocked","setCellsLocked","getCloneableCells","isCellCloneable","isCellsCloneable","setCellsCloneable","canExportCell","canImportCell","isCellsSelectable","setCellsSelectable","isCellDeletable","isCellsDeletable","setCellsDeletable","isLabelMovable","isCellRotatable","getMovableCells","isCellsMovable","setCellsMovable","setPortsEnabled","getGridSize","setGridSize","getTolerance","setTolerance","isVertexLabelsMovable","setVertexLabelsMovable","isEdgeLabelsMovable","setEdgeLabelsMovable","isSwimlaneNesting","setSwimlaneNesting","setSwimlaneSelectionEnabled","isMultigraph","setMultigraph","isAllowLoops","isConnectableEdges","setCloneInvalidEdges","setAllowLoops","setDisconnectOnMove","setDropEnabled","isSplitEnabled","setSplitEnabled","isCellsResizable","setCellsResizable","isTerminalPointMovable","isCellBendable","isCellsBendable","setCellsBendable","isCellsEditable","isCellsDisconnectable","setCellsDisconnectable","isValidSource","isValidTarget","setTooltips","setPanning","isAutoSizeCells","setAutoSizeCells","isExtendParents","setExtendParents","setExtendParentsOnAdd","setExtendParentsOnMove","setRecursiveResize","isConstrainChildren","setConstrainChildren","setConstrainRelativeChildren","isAllowOverlapParent","isValidDropTarget","isSplitTarget","ignoreFn","hitsSwimlaneContent","getPointForEvent","addOffset","getCellsBeyond","rightHalfpane","bottomHalfpane","isolate","isSelectionEmpty","getSelectionCount","addSelectionCell","addSelectionCells","removeSelectionCell","selectRegion","selectCellsForEvent","selectNextCell","selectCell","selectPreviousCell","selectParentCell","selectChildCell","isNext","isParent","isChild","sel","selectAll","descendants","selectVertices","selectCells","selectEdges","createHandler","createEdgeHandler","createVertexHandler","createElbowEdgeHandler","createEdgeSegmentHandler","updateMouseEvent","getStateForTouchEvent","isEventIgnored","mouseEvent","mouseMoveRedirect","mouseUpRedirect","isSyntheticEventIgnored","lastMouseX","lastMouseY","ignoreMouseEvents","isEventSourceIgnored","candidate","getEventState","currentTime","fireDoubleClick","lastTouchEvent","lastTouchX","doubleClickCounter","doubleClickFired","lastTouchCell","valid","tapAndHoldThread","consumeMouseEvent","graphRenderHint","showViewport","sizerSize","updateOnPan","sizerImage","suspended","forceVmlHandles","outlineGraphModelChanged","selectionBorder","redirect","redirect2","sizer","createSizer","setZoomEnabled","getSourceContainerSize","getOutlineOffset","getSourceGraphBounds","sourceScale","scaledGraphBounds","unscaledGraphBounds","unscaledFinderBounds","union","completeWidth","completeHeight","outlineScale","navView","scale2","scale3","allowHandleBoundsCheck","getTranslateForEvent","viewRatio","checkTerminal","checkNeighbors","sourceValue","targetValue","checkType","attrValue","bubbling","isBubbling","setBubbling","getLayout","getCellsForChanges","executeLayoutForCells","sorted","layoutCells","getCellsForChange","executeLayout","setHorizontal","setAddEnabled","setResizeEnabled","isSwimlaneIgnored","isCellHorizontal","swimlaneAdded","parentHorizontal","resizeSwimlane","addEdges","translateState","revalidateState","maxCells","highlightEnabled","cloneEnabled","moveEnabled","currentDx","currentDy","updateCursor","selectEnabled","removeEmptyParents","connectOnDrop","scrollOnMove","previewColor","htmlPreview","scaleGrid","rotationEnabled","maxLivePreview","allowLivePreview","isCloneEnabled","setCloneEnabled","isMoveEnabled","setMoveEnabled","isSelectEnabled","setSelectEnabled","isRemoveCellsFromParent","setRemoveCellsFromParent","getInitialCellForEvent","isDelayedSelection","delayedSelection","cellWasClicked","initialCell","createPreviewShape","cloning","cellCount","addStates","isCellMoving","useGuidesForEvent","vector","roundLength","removeHint","livePreviewActive","setHighlightColor","resetLivePreview","remote","updateLivePreview","updatePreviewShape","tempState","originalPointerEvents","pt0","ptn","redrawHandles","resetPreviewStates","setHandlesVisible","selectDelayed","destroyShapes","guides","shouldRemoveCellsFromParent","shouldRemoveParent","useLeftButtonForPanning","usePopupTrigger","ignoreCell","previewEnabled","useGrid","pinchEnabled","isPanningEnabled","setPanningEnabled","setPinchEnabled","isPanningTrigger","consumePanningTrigger","selectOnPopup","clearSelectionOnBackground","triggerX","triggerY","screenX","screenY","isSelectOnPopup","popupTrigger","getCellForPopupEvent","hotspotEnabled","validState","setHotspot","getHotspot","setHotspotEnabled","isHotspotEnabled","hasValidState","getValidState","getMarkedState","unmark","setCurrentState","isValidState","getMarkerColor","markCell","getStateToMark","maxHandlers","oldHandlers","isHandlerActive","moveIconFront","moveIconBack","connectImage","targetConnectImage","createTarget","constraintHandler","waypointsEnabled","ignoreMouseDown","connectIconOffset","drillHandler","mouseDownCounter","movePreviewAway","outlineConnect","insertBeforeSource","isInsertBefore","isCreateTarget","setCreateTarget","iconState","redrawIcons","icons","isConnectableCell","isConnecting","getConnectImage","isMoveIconToFrontForState","createIcons","currentState","getIconPosition","destroyIcons","selectedIcon","isStartEvent","currentConstraint","sourceConstraint","waypoints","isImmediateConnectSource","isOutlineConnectEvent","clientLeft","clientTop","gridX","gridY","isHighlightAt","updateCurrentState","isCellEnabled","setFocus","convertWaypoint","snapToPreview","pt2","getTargetPerimeterPoint","getSourcePerimeterPoint","originalPoint","drawPreview","hitsIcon","updateIcons","realPoints","targetPerimeter","sourcePerimeter","isStopEvent","addWaypointForEvent","checkConstraints","getEdgeColor","terminalInserted","createTargetVertex","getAlignmentTolerance","pointImage","focusIcons","focusHighlight","currentFocusArea","focusPoints","getImageForConstraint","destroyFocusHighlight","isKeepFocusEvent","getCellForEvent","existingEdge","mouseleaveHandler","grid","mouse","minDistSq","hl","createHighlightShape","cp","defaultOpacity","sharedDiv","currentY","createMouseEvent","ignoreGrid","setPosition","copyStyle","processEvent","getTotalRotation","flipPoint","snapPoint","isHtmlRequired","initShape","singleSizer","handleImage","parentHighlightEnabled","rotationRaster","rotationCursor","manageSizers","constrainGroupByChildren","rotationHandleVSpacing","horizontalOffset","verticalOffset","selectionBounds","getSelectionBounds","createSelectionShape","sizers","labelShape","isRotationHandleVisible","rotationShape","customHandles","createCustomHandles","updateMinBounds","isCenteredEvent","minBounds","createParentHighlightShape","getSelectionColor","getSelectionStrokeWidth","isSelectionDashed","createSizerShape","isSizerVisible","moveSizerTo","getHandleForEvent","checkShape","isCustomHandleEvent","handle","isLivePreviewBorder","childOffsetX","childOffsetY","preview","hideSizers","edgeHandlers","checkTolerance","roundAngle","moveLabel","rotateVertex","resizeVertex","currentAlpha","atan","raster","unscaledBounds","dx3","dy3","dx4","dy4","dx5","dy5","rotateCell","rotateClick","constrained","moveChildren","centered","cdx","cdy","ignoreHandles","getHandlePadding","crs","da","getRotationHandlePosition","updateParentHighlight","parentHighlight","bends","removeEnabled","dblClickRemoveEnabled","mergeRemoveEnabled","straightRemoveEnabled","virtualBendsEnabled","virtualBendOpacity","preferHtml","snapToTerminals","manageLabelHandle","abspoints","getSelectionPoints","targetState","createBends","isVirtualBendsEnabled","virtualBends","createVirtualBends","createLabelHandleShape","initBend","isAddPointEvent","isRemovePointEvent","otherCell","isHandleVisible","bend","createHandleShape","removePoint","isHandleEnabled","labelHandleImage","isAddVirtualBendEvent","isTarget","isLabel","clonePreviewState","getSnapToTerminalTolerance","isSnapToTerminalsEvent","snapToPoint","snapToTerminal","getPreviewTerminalState","getPreviewPoints","checkRemove","updatePreviewState","targetConstraint","setPreviewColor","changeTerminalPoint","changePoints","isClone","addPointAt","getHandleFillColor","checkLabelHandle","xn","yn","bn","redrawInnerBends","destroyBends","flipEnabled","doubleClickOrientationResource","createVirtualBend","dblClickHandler","getCursorForBend","getCurrentPoints","pt1","rpts","straight","bindKey","bindShiftKey","bindControlKey","bindControlShiftKey","getFunction","isGraphEvent","ignoreTouchEvents","hideOnHover","setHideOnHover","getStateForEvent","stateSource","resetTimer","restart","keepOnTop","drawHighlight","getStrokeWidth","bindAction","createMenu","conditions","createConditions","addItems","condition","as","enabledCond","addAction","isCell","condNodes","insertFunction","pressed","addActionOption","setMode","addPrototype","ptype","factory","installDropHandler","addVertex","horizontalFlow","edgeGeometry","sprite","loader","askZoomResource","lastSavedResource","currentFileResource","propertiesResource","tasksResource","helpResource","outlineResource","dblClickAction","swimlaneRequired","forcedInserting","templates","defaultEdge","defaultEdgeStyle","defaultGroup","groupBorderSize","postParameterName","escapePostData","urlPost","urlImage","layoutDiagram","swimlaneSpacing","maintainSwimlanes","layoutSwimlanes","cycleAttributeIndex","tasks","tasksWindowImage","tasksTop","help","helpWindowImage","urlHelp","helpWidth","helpHeight","propertiesWidth","propertiesHeight","movePropertiesDialog","validating","isModified","setModified","getUrlImage","showProperties","showTasks","showHelp","showOutline","dec","decode","resetHistory","resetFirstTime","cookie","actionname","addTemplate","getTemplate","installDblClickHandler","installUndoHandler","installDrillHandler","installChangeHandler","installInsertHandler","createPopupMenu","createSwimlaneManager","createLayoutManager","swimlaneMgr","layoutMgr","swimlaneLayout","createSwimlaneLayout","diagramLayout","createDiagramLayout","setGraphContainer","rubberband","insertHandler","gs","setToolbarContainer","setStatusContainer","tstamp","toLocaleString","setStatus","setTitleContainer","getTitle","treeLayout","getRootTitle","createGroup","readGraphModel","getUrlPost","writeGraphModel","postDiagram","swapStyles","second","createProperties","isPropertiesVisible","yField","xField","widthField","heightField","texts","okFunction","cancelFunction","createTasks","refreshTasks","frame","modename","consumeCycleAttribute","cycleAttribute","isConstrainedMoving","mxCodecRegistry","codecs","aliases","register","codec","classname","addAlias","codecname","getCodec","mxObjectCodec","objects","idrefs","encodeDefaults","putObject","getObject","updateElements","addElement","into","encodeCell","isCellCodec","decodeCell","restoreStructures","decoder","insertIntoGraph","cloneTemplate","getFieldName","attributename","mapped","getAttributeName","fieldname","isExcluded","isReference","beforeEncode","encodeObject","afterEncode","encodeValue","writeAttribute","writePrimitiveAttribute","writeComplexAttribute","convertAttributeToXml","isBooleanAttribute","convertAttributeFromXml","isNumericAttribute","beforeDecode","decodeNode","afterDecode","decodeAttributes","decodeChildren","decodeAttribute","isIgnoredAttribute","processInclude","decodeChild","getFieldTemplate","addObjectValue","isWrite","rootNode","decodeRoot","rootCell","childRef","mxGenericChangeCodec","mxStylesheetCodec","styleNode","getStringValue","mxDefaultToolbarCodec","act","inc","role","decodeTemplates","decodeUi","setMapContainer","nativePropertyIsEnumerable","NASHORN_BUG","1","V","def","$map","$flags","define","ownKeys","getOwnPropertyDescriptorModule","ArrayProto"],"mappings":"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","file":"js/chunk-2e25441c.39e1e6dc.js","sourcesContent":["// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","module.exports = require(\"core-js/library/fn/object/get-own-property-names\");","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });\n","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flow-main\"},[(false)?_c('Breadcrumb',[_c('BreadcrumbItem',[_vm._v(\"工作流\")]),_c('BreadcrumbItem',[_vm._v(\"名称\")])],1):_vm._e(),_c('div',{staticClass:\"flow-content-main\"},[_c('div',{staticClass:\"siderbar-container\"},[_c('ul',_vm._l((_vm.toolbarItems),function(item){return _c('li',{key:item['name'],ref:\"dragItem\",refInFor:true},[_vm._v(_vm._s(item['title']))])}),0)]),_c('div',{ref:\"container\",staticClass:\"graph-container\"})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport Intact from 'intact-vue';\nvar utils = Intact.utils;\nvar get = utils.get,\n    isNullOrUndefined = utils.isNullOrUndefined,\n    isObject = utils.isObject,\n    isFunction = utils.isFunction,\n    noop = utils.noop,\n    extend = utils.extend;\nvar Types = Intact.Vdt.miss.Types;\nexport { get, isNullOrUndefined, isObject, isFunction, noop };\nexport function addStyle(style, extra) {\n  if (!style) return extra;\n  if (!extra) return style;\n\n  if (typeof style === 'string') {\n    extra = _Object$keys(extra).map(function (key) {\n      return kebabCase(key) + \": \" + extra[key];\n    }).join(';');\n    style = \"\" + style + (!style || /;\\s*$/.test(style) ? '' : ';') + extra;\n  } else {\n    style = _Object$assign({}, style, extra);\n  }\n\n  return style;\n}\nvar _cache = {};\nvar uppercasePattern = /[A-Z]/g;\nexport function kebabCase(word) {\n  if (!_cache[word]) {\n    _cache[word] = word.replace(uppercasePattern, function (item) {\n      return \"-\" + item.toLowerCase();\n    });\n  }\n\n  return _cache[word];\n}\nexport function proxyEvent(component, name) {\n  return function (e) {\n    return component.trigger(name, e);\n  };\n}\nexport function isStringOrNumber(o) {\n  var type = typeof o;\n  return type === 'string' || type === 'number';\n}\nexport function isTextChildren(o) {\n  if (isStringOrNumber(o)) return true;\n\n  if (_Array$isArray(o)) {\n    return o.every(function (item) {\n      return isTextChildren(item);\n    });\n  }\n\n  return isTextVNode(o);\n}\nexport function isTextVNode(o) {\n  return o && o.type === Types.Text;\n} // for detect if it is a text node in Angular\n\nexport function isTextBlock(o) {\n  return isTextChildren(o) || o && o.tag && o.tag.$id === 'AngularBlockWrapper' && o.props.isText;\n}\nexport function isStringOrNumberNotEmpty(o) {\n  var type = typeof o;\n  return type === 'string' && !/^\\s+$/.test(o) || type === 'number';\n}\nexport function getTextByChildren(children) {\n  var ret = '';\n\n  if (_Array$isArray(children)) {\n    children.forEach(function (vNode) {\n      ret += getTextByChildren(vNode);\n    });\n  } else if (isStringOrNumber(children)) {\n    ret += children;\n  } else if (isTextVNode(children)) {\n    ret += children.children;\n  }\n\n  return ret.trim();\n}\nexport function findParentComponent(Component, instance, isUntil) {\n  var ret;\n  var parent = instance.parentVNode;\n\n  while (parent) {\n    var tag = parent.tag;\n\n    if (tag && (tag === Component || tag.prototype instanceof Component)) {\n      ret = parent.children;\n      if (isUntil) break;\n    }\n\n    parent = parent.parentVNode;\n  }\n\n  return ret;\n}\n/**\n * @brief find the router instance\n * \n * in React, find the history of router \n * for react-router@5, we need get the history from providers\n * as it use the new context api of React\n *\n * in Vue, find the $router\n *\n * @param instance\n *\n * @return \n */\n\nexport function findRouter(instance) {\n  var Component = instance.constructor;\n\n  if (Component.$$cid === 'IntactReact') {\n    // in React\n    var parentVNode = instance.vNode;\n\n    while (parentVNode) {\n      var i = void 0;\n\n      if (parentVNode.type === Types.ComponentClass && (i = parentVNode.children.context)) {\n        if (i = i.router) {\n          return i.history;\n        } else if (i = parentVNode.children.__providers) {\n          // for react-router@5 \n          var iter = i.entries();\n\n          while (i = iter.next().value) {\n            if (i[0]._context.displayName === 'Router' && (i = i[1]).history) {\n              return i.history;\n            }\n          }\n        }\n\n        break;\n      }\n\n      parentVNode = parentVNode.parentVNode;\n    }\n  } else if (Component.cid === 'IntactVue') {\n    return instance.get('_context').data.$router;\n  }\n}\nexport function strPad(str, length, pad) {\n  str = str.toString();\n  pad = pad === undefined ? '0' : pad;\n  var l = str.length;\n\n  if (l < length) {\n    str = new Array(length - l + 1).join(pad) + str;\n  }\n\n  return str;\n}\nexport function range(start, end) {\n  return Array.apply(null, {\n    length: end - start + 1\n  }).map(function (v, i) {\n    return i + start;\n  });\n}\nexport function selectInput(input) {\n  if (input.select) {\n    input.select();\n  } else if (input.setSelectionRange) {\n    // mobile safari\n    input.focus();\n    input.setSelectionRange(0, input.value.length);\n  }\n}\nvar i18n = {};\nvar valueRegexp = /\\{([^\\}\\s]+)\\}/g;\nexport function _$(key, data) {\n  var value = get(i18n, key);\n\n  if (isNullOrUndefined(value)) {\n    value = key;\n  }\n\n  if (data) {\n    value = value.replace(valueRegexp, function (nouse, variable) {\n      var suffix;\n      var index = variable.indexOf(':');\n\n      if (index > 0) {\n        suffix = variable.substr(0, index);\n        suffix = suffix.split('|');\n        variable = variable.substr(index + 1);\n        variable = get(data, variable);\n\n        if (variable > 1) {\n          return suffix.length > 1 ? suffix[1] : suffix[0];\n        } else {\n          return suffix.length > 1 ? suffix[0] : '';\n        }\n      } else {\n        variable = get(data, variable);\n        return isNullOrUndefined(variable) ? nouse : variable;\n      }\n    });\n  }\n\n  return value;\n}\nexport function localize(data) {\n  if (!isObject(data)) {\n    throw new Error(\"expect a object but got \" + data);\n  }\n\n  i18n = data;\n}\nexport function getTransition(feedback) {\n  var horizontal = feedback.horizontal;\n  var vertical = feedback.vertical;\n\n  if (feedback.important === 'horizontal') {\n    if (horizontal === 'left') {\n      return 'c-slideright';\n    } else if (horizontal === 'right') {\n      return 'c-slideleft';\n    } else if (vertical === 'bottom') {\n      return 'c-slideup';\n    } else if (vertical === 'top') {\n      return 'c-slidedown';\n    }\n  } else {\n    if (vertical === 'bottom') {\n      return 'c-slideup';\n    } else if (vertical === 'top') {\n      return 'c-slidedown';\n    } else if (horizontal === 'left') {\n      return 'c-slideright';\n    } else if (horizontal === 'right') {\n      return 'c-slideleft';\n    }\n  }\n\n  return 'c-slidedown';\n}\nexport function mapChildren(children, callback) {\n  var vNodes = [];\n\n  function map(children) {\n    if (!children) return;\n\n    if (!_Array$isArray(children)) {\n      return vNodes.push(callback(children));\n    }\n\n    children.forEach(function (vNode) {\n      if (_Array$isArray(vNode)) {\n        map(vNode);\n      } else if (vNode) {\n        vNodes.push(callback(vNode));\n      }\n    });\n  }\n\n  map(children);\n  return vNodes;\n}\nexport var expandAnimationCallbacks = {\n  'a:transition': 'c-expand',\n  'ev-a:leaveStart': function evALeaveStart(el) {\n    el._height || (el._height = el.clientHeight + 'px');\n    el.style.height = el._height;\n  },\n  'ev-a:leave': function evALeave(el) {\n    return el.style.height = 0;\n  },\n  'ev-a:leaveEnd': function evALeaveEnd(el, isCancel) {\n    // 保持动画的连贯性，可能在leave动画被enter动画cancel\n    // 此时el._height存在，不要在start中去获取，否则会重绘\n    // 导致多个动画时，动画时长不一致\n    if (!isCancel) {\n      el.style.height = '';\n      el._height = null;\n    }\n  },\n  'ev-a:enterStart': function evAEnterStart(el) {\n    el._height || (el._height = el.clientHeight + 'px');\n    el.style.height = 0;\n  },\n  'ev-a:enter': function evAEnter(el) {\n    return el.style.height = el._height;\n  },\n  'ev-a:enterEnd': function evAEnterEnd(el, isCancel) {\n    if (!isCancel) {\n      el.style.height = '';\n      el._height = null;\n    }\n  }\n};\nexport function toggleArray(arr, value) {\n  if (!_Array$isArray(arr)) {\n    return [value];\n  } else {\n    arr = arr.slice(0);\n    var index = arr.indexOf(value);\n\n    if (~index) {\n      arr.splice(index, 1);\n    } else {\n      arr.push(value);\n    }\n\n    return arr;\n  }\n}\nexport function isNumber(n) {\n  return typeof n === 'number';\n}\nexport var hasWindow = typeof window !== 'undefined';\nvar raf;\n\nif (hasWindow) {\n  raf = window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout;\n}\n\nexport function nextFrame(fn) {\n  raf(function () {\n    return raf(fn);\n  });\n}\nexport function debounce(fn, delay) {\n  var timer;\n  return function () {\n    var args = arguments;\n    var context = this;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(context, args);\n    }, delay);\n  };\n}\nexport function throttle(fn, delay) {\n  var lock = false;\n  return function () {\n    if (lock) return;\n    lock = true;\n    var args = arguments;\n    var context = this;\n    var timer = setTimeout(function () {\n      fn.apply(context, args);\n      lock = false;\n    }, delay);\n  };\n}\nexport var browser = {};\n\nif (typeof navigator !== 'undefined') {\n  var ua = navigator.userAgent.toLowerCase();\n  var index = ua.indexOf('msie ');\n\n  if (~index) {\n    browser.isIE = true;\n\n    var version = _parseInt(ua.substring(index + 5, ua.indexOf('.', index)), 10);\n\n    browser.version = version;\n    browser.isIE8 = version === 8;\n  } else if (~ua.indexOf('trident/')) {\n    browser.isIE = true;\n    var rv = ua.indexOf('rv:');\n    browser.version = _parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n  } else if (~ua.indexOf('edge')) {\n    browser.isEdge = true;\n  } else if (~ua.indexOf('safari')) {\n    if (~ua.indexOf('chrome')) {\n      browser.isChrome = true;\n    } else {\n      browser.isSafari = true;\n    }\n  }\n}\n\nvar externalLinkReg = /^(https?:)?\\/\\//;\nexport function isExternalLink(to) {\n  if (typeof to !== 'string') return false;\n  return externalLinkReg.test(to);\n}\nexport function getRestProps(instance, props) {\n  if (props === void 0) {\n    props = instance.get();\n  }\n\n  var selfProps = instance.defaults() || {};\n  var events = instance.constructor.events || {};\n  var ret = {};\n\n  for (var key in props) {\n    if (key === 'key' || key === 'ref' || key === 'className' || key === 'children' || key === 'v-model' || key[0] === '_' || key in selfProps || key.substring(3) in events || // ev-$change / $destroy\n    key.substring(0, 4) === 'ev-$') continue;\n    ret[key] = props[key];\n  }\n\n  return ret;\n}\nexport var config = {\n  useWrapper: false\n};\nexport function configure(options) {\n  extend(config, options);\n}","import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { getRestProps } from '../utils';\nexport default function (obj, _Vdt, blocks, $callee) {\n  _Vdt || (_Vdt = Vdt);\n  obj || (obj = {});\n  blocks || (blocks = {});\n  var h = _Vdt.miss.h,\n      hc = _Vdt.miss.hc,\n      hu = _Vdt.miss.hu,\n      widgets = this && this.widgets || {},\n      _blocks = {},\n      __blocks = {},\n      __u = _Vdt.utils,\n      extend = __u.extend,\n      _e = __u.error,\n      _className = __u.className,\n      __slice = __u.slice,\n      __noop = __u.noop,\n      __m = __u.map,\n      __o = __u.Options,\n      _getModel = __o.getModel,\n      _setModel = __o.setModel,\n      _setCheckboxModel = __u.setCheckboxModel,\n      _detectCheckboxChecked = __u.detectCheckboxChecked,\n      _setSelectModel = __u.setSelectModel,\n      self = this.data,\n      $this = this,\n      scope = obj,\n      Animate = self && self.Animate,\n      parent = ($callee || {})._super;\n\n  var _self$get = self.get(),\n      to = _self$get.to,\n      separator = _self$get.separator,\n      children = _self$get.children,\n      className = _self$get.className;\n\n  return h('div', _Object$assign({}, function () {\n    try {\n      return getRestProps(self);\n    } catch (e) {\n      _e(e);\n    }\n  }.call($this)), [function () {\n    try {\n      return to;\n    } catch (e) {\n      _e(e);\n    }\n  }.call($this) ? h('a', {\n    'ev-click': function () {\n      try {\n        return self.onClick;\n      } catch (e) {\n        _e(e);\n      }\n    }.call($this)\n  }, function () {\n    try {\n      return children;\n    } catch (e) {\n      _e(e);\n    }\n  }.call($this), 'k-item-link') : h('span', null, function () {\n    try {\n      return children;\n    } catch (e) {\n      _e(e);\n    }\n  }.call($this), 'k-item-link'), function () {\n    try {\n      return separator != null;\n    } catch (e) {\n      _e(e);\n    }\n  }.call($this) ? h('span', null, (_blocks['separator'] = function (parent) {\n    return function () {\n      try {\n        return separator;\n      } catch (e) {\n        _e(e);\n      }\n    }.call($this);\n  }) && (__blocks['separator'] = function (parent) {\n    var args = arguments;\n    return blocks['separator'] ? blocks['separator'].apply($this, [function () {\n      return _blocks['separator'].apply($this, args);\n    }].concat(__slice.call(args, 1))) : _blocks['separator'].apply($this, args);\n  }) && __blocks['separator'].apply($this, [__noop]), 'k-separator') : undefined], _className(function () {\n    try {\n      var _ref;\n\n      return _ref = {\n        \"k-item\": true\n      }, _ref[className] = className, _ref;\n    } catch (e) {\n      _e(e);\n    }\n  }.call($this)));\n}","import _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _inheritsLoose from \"../../inheritsLoose\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/applyDecoratedDescriptor\";\n\nvar _dec, _class, _init, _class2, _temp;\n\nimport Intact from 'intact-vue';\nimport template from './item.vdt';\nimport { findRouter, isExternalLink } from '../utils';\nvar BreadcrumbItem = (_dec = Intact.template(), (_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction (_Intact) {\n  _inheritsLoose(BreadcrumbItem, _Intact);\n\n  function BreadcrumbItem() {\n    return _Intact.apply(this, arguments) || this;\n  }\n\n  var _proto = BreadcrumbItem.prototype;\n\n  _proto.defaults = function defaults() {\n    return {\n      to: undefined,\n      separator: '>'\n    };\n  };\n\n  _proto._mount = function _mount() {\n    this.$router = findRouter(this);\n  };\n\n  _proto.onClick = function onClick() {\n    var to = this.get('to');\n\n    if (to) {\n      var $router = this.$router;\n\n      if ($router && !isExternalLink(to)) {\n        $router.push(to);\n      } else {\n        window.location.href = to;\n      }\n    }\n  };\n\n  return BreadcrumbItem;\n}(Intact), _defineProperty(_class2, \"template\", template), _defineProperty(_class2, \"propTypes\", {\n  to: String,\n  separator: [String, Intact.VNode, Array]\n}), _defineProperty(_class2, \"blocks\", ['separator']), _temp), (_applyDecoratedDescriptor(_class, \"template\", [_dec], (_init = _Object$getOwnPropertyDescriptor(_class, \"template\"), _init = _init ? _init.value : undefined, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  initializer: function initializer() {\n    return _init;\n  }\n}), _class)), _class));\nexport { BreadcrumbItem as default };","import _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _inheritsLoose from \"../../inheritsLoose\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/applyDecoratedDescriptor\";\n\nvar _dec, _class, _init, _class2, _temp;\n\nimport Intact from 'intact-vue';\nimport template from './index.vdt';\nimport '../../styles/kpc.styl';\nimport './index.styl';\nimport BreadcrumbItem from './item';\nvar Breadcrumb = (_dec = Intact.template(), (_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction (_Intact) {\n  _inheritsLoose(Breadcrumb, _Intact);\n\n  function Breadcrumb() {\n    return _Intact.apply(this, arguments) || this;\n  }\n\n  var _proto = Breadcrumb.prototype;\n\n  _proto.defaults = function defaults() {\n    return {\n      separator: undefined\n    };\n  };\n\n  return Breadcrumb;\n}(Intact), _defineProperty(_class2, \"template\", template), _defineProperty(_class2, \"propTypes\", {\n  separator: String\n}), _defineProperty(_class2, \"blocks\", ['separator']), _temp), (_applyDecoratedDescriptor(_class, \"template\", [_dec], (_init = _Object$getOwnPropertyDescriptor(_class, \"template\"), _init = _init ? _init.value : undefined, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  initializer: function initializer() {\n    return _init;\n  }\n}), _class)), _class));\nexport { Breadcrumb as default };\nexport { Breadcrumb, BreadcrumbItem };","import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport { getRestProps } from '../utils';\nimport BreadcrumbItem from './item';\nexport default function (obj, _Vdt, blocks, $callee) {\n  var _classNameObj;\n\n  _Vdt || (_Vdt = Vdt);\n  obj || (obj = {});\n  blocks || (blocks = {});\n  var h = _Vdt.miss.h,\n      hc = _Vdt.miss.hc,\n      hu = _Vdt.miss.hu,\n      widgets = this && this.widgets || {},\n      _blocks = {},\n      __blocks = {},\n      __u = _Vdt.utils,\n      extend = __u.extend,\n      _e = __u.error,\n      _className = __u.className,\n      __slice = __u.slice,\n      __noop = __u.noop,\n      __m = __u.map,\n      __o = __u.Options,\n      _getModel = __o.getModel,\n      _setModel = __o.setModel,\n      _setCheckboxModel = __u.setCheckboxModel,\n      _detectCheckboxChecked = __u.detectCheckboxChecked,\n      _setSelectModel = __u.setSelectModel,\n      self = this.data,\n      $this = this,\n      scope = obj,\n      Animate = self && self.Animate,\n      parent = ($callee || {})._super;\n\n  var _self$get = self.get(),\n      children = _self$get.children,\n      separator = _self$get.separator,\n      className = _self$get.className;\n\n  var classNameObj = (_classNameObj = {\n    'k-breadcrumb': true\n  }, _classNameObj[className] = className, _classNameObj);\n\n  var _children = children ? _Array$isArray(children) ? children : [children] : children;\n\n  var _separator = (_blocks['separator'] = function (parent) {\n    return function () {\n      try {\n        return separator;\n      } catch (e) {\n        _e(e);\n      }\n    }.call($this);\n  }) && (__blocks['separator'] = function (parent) {\n    var args = arguments;\n    return blocks['separator'] ? blocks['separator'].apply($this, [function () {\n      return _blocks['separator'].apply($this, args);\n    }].concat(__slice.call(args, 1))) : _blocks['separator'].apply($this, args);\n  }) && __blocks['separator'].apply($this, [__noop]); // maybe the last BreadcrumbItem is not the last vNode\n\n\n  var lastItem;\n\n  var vNodes = __u.map(_children, function (vNode, index) {\n    if (vNode.tag === BreadcrumbItem) {\n      var props;\n\n      if (_separator != null && vNode.props.separator == null) {\n        props = {\n          separator: _separator\n        };\n      }\n\n      lastItem = _Vdt.miss.clone(vNode, props);\n      return lastItem;\n    }\n\n    return vNode;\n  });\n\n  if (lastItem) {\n    lastItem.props = _Object$assign({}, lastItem.props, {\n      separator: null\n    });\n  }\n\n  return h('div', _Object$assign({}, function () {\n    try {\n      return getRestProps(self);\n    } catch (e) {\n      _e(e);\n    }\n  }.call($this)), function () {\n    try {\n      return vNodes;\n    } catch (e) {\n      _e(e);\n    }\n  }.call($this), _className(function () {\n    try {\n      return classNameObj;\n    } catch (e) {\n      _e(e);\n    }\n  }.call($this)));\n}","import { Breadcrumb, BreadcrumbItem } from 'kpc';\nimport {\n    mxGraph as MxGraph,\n    mxUtils as MxUtils,\n    mxEvent as MxEvent,\n    mxRubberband as MxRubberBand\n} from 'mxgraph/javascript/mxClient.js'\n\nexport default {\n    name: 'flow',\n\n    components: {\n        Breadcrumb,\n        BreadcrumbItem,\n    },\n\n    data() {\n        return {\n            graph: undefined,\n            toolbarItems: [\n                { name: 'start', title: '开始节点', defaultStatus: 'success' },\n                { name: 'end', title: '结束节点', defaultStatus: 'success' },\n                {\n                    name: 'node',\n                    title: '普通节点',\n                    defaultStatus: 'success',\n                    OptionalStatus: ['success', 'waiting', 'running', 'failed']\n                },\n                { name: 'parallel', title: '并行节点', defaultStatus: 'success' },\n                { name: 'branch', title: '分支节点', defaultStatus: 'waiting' },\n                { name: 'Aggregation', title: '聚合节点', defaultStatus: 'success' }\n            ],\n            statusMap: {},\n        }\n    },\n\n    mounted() {\n        this.createGraph();\n        this.initGraph();\n        this.makeItemDraggable();\n    },\n\n\n    methods: {\n        createGraph() {\n            this.graph = new MxGraph(this.$refs.container);\n        },\n        setEdgeColor(edge, color) {\n            const style = this.R.prop('style', this.graph.view.getState(edge, true))\n\n            style['strokeColor'] = color\n            let styleStr = ''\n\n            this.R.forEachObjIndexed((value, key) => {\n                styleStr += `${key}=${value};`\n            }, style)\n            edge.setStyle(styleStr)\n            this.graph.refresh(edge)\n        },\n        initGraph() {\n            if (this.R.isNil(this.graph)) {\n                return\n            }\n            this.rubberBand = new MxRubberBand(this.graph)\n\n            this.graph.setConnectable(true)\n            this.graph.setCellsEditable(false)\n            this.graph.setAllowDanglingEdges(false)\n            this.graph.setConnectableEdges(false)\n            this.graph.convertValueToString = (cell) => {\n                return this.R.prop('customerTitle', cell)\n            }\n            this.graph.addListener(MxEvent.DOUBLE_CLICK, (graph, evt) => { // 监听双击事件\n                let cell = this.R.pathOr([], ['properties', 'cell'], evt)\n\n                if (this.R.equals('node', cell['customerName'])) {\n                    this.$refs.dialog.openDialog(cell)\n                }\n            })\n            this.graph.connectionHandler.validateConnection = (source, target) => {\n                const sourceName = source['customerName']\n                const targetName = target['customerName']\n\n                if (source === target) {\n                    return false\n                }\n                if (this.R.equals('end', sourceName)) {\n                    return false\n                }\n                if (this.R.equals('start', targetName)) {\n                    return false\n                }\n                if (this.R.equals('parallel', targetName) && ((target['edges'] instanceof Array && target['edges'].length >= 1) || this.R.equals('start', sourceName))) {\n                    return false\n                }\n                if (this.R.equals('branch', targetName) && this.R.equals('start', sourceName)) {\n                    return false\n                }\n                if (this.R.equals('Aggregation', targetName) && this.R.equals('start', sourceName)) {\n                    return false\n                }\n                return null\n            }\n            this.graph.connectionHandler.addListener(MxEvent.CONNECT, (sender, evt) => {\n                const edge = evt.getProperty('cell')\n                const source = edge['source']\n                const target = edge['target']\n                const status = source['customerStatus'] || 'default'\n                const sourceName = source['customerName']\n                const targetName = target['customerName']\n\n                this.setEdgeColor(edge, this.status[status])\n\n                if (sourceName === 'branch') {\n                    const targetStatus = ('success' === target['customerStatus'] || 'running' === target['customerStatus']) ? 'success' : 'waiting'\n\n                    this.setEdgeColor(edge, this.status[targetStatus])\n                }\n                if (targetName === 'Aggregation') {\n                    const edges = this.R.filter(this.R.propEq('target', target), this.R.propOr([], 'edges', target))\n                    const nodeStatus = this.R.map(this.R.path(['source', 'customerStatus']), edges)\n\n                    if (this.R.includes('waiting', nodeStatus) || this.R.includes('failed', nodeStatus)) {\n                        target['customerStatus'] = 'waiting'\n                    } else {\n                        target['customerStatus'] = 'success'\n                    }\n                }\n            })\n        },\n        makeItemDraggable() {\n            this.$nextTick(() => {\n                const domArray = this.$refs.dragItem\n\n                if (!(domArray instanceof Array) || domArray.length <= 0 || this.R.isNil(this.graph)) {\n                    return\n                }\n                domArray.forEach((dom, domIndex) => {\n                    const toolItem = this.toolbarItems[domIndex]\n                    const dragHandler = (graph, evt, cell, x, y) => {\n                        this.instanceGraph(toolItem, x, y)\n                    }\n                    const createDragPreview = (dom) => {\n                        const elt = document.createElement('div')\n\n                        elt.style.border = '1px solid #0091ea';\n                        elt.style.width = getComputedStyle(dom).width;\n                        elt.style.height = getComputedStyle(dom).height;\n                        elt.style.lineHeight = getComputedStyle(dom).lineHeight;\n                        elt.style.textAlign = 'center';\n                        elt.innerHTML = dom.innerHTML;\n                        return elt;\n                    };\n\n                    MxUtils.makeDraggable(dom, this.graph, dragHandler, createDragPreview(dom), 0, 0, false, true);\n                })\n            })\n        },\n        changeStatusHandler(cell) {\n            const status = cell['customerStatus']\n\n            this.R.propOr([], 'edges', cell).forEach((edge) => {\n                if (edge['source'] === cell) {\n                    this.setEdgeColor(edge, this.status[status])\n\n                    const nextCell = edge['target']\n                    const nextCellType = nextCell['customerName']\n\n                    // 下一个节点为普通节点\n                    if (this.R.equals('node', nextCellType)) {\n                        if ('failed' === status) {\n                            nextCell['customerStatus'] = 'failed'\n                        }\n                        if ('waiting' === status || 'running' === status) {\n                            nextCell['customerStatus'] = 'waiting'\n                        }\n                    }\n                    // 下一个节点为聚合节点\n                    if (this.R.equals('Aggregation', nextCellType)) {\n                        const edges = this.R.filter(this.R.propEq('target', nextCell), this.R.propOr([], 'edges', nextCell))\n                        const nodeStatus = this.R.map(this.R.path(['source', 'customerStatus']), edges)\n\n                        if (this.R.includes('waiting', nodeStatus) || this.R.includes('failed', nodeStatus)) {\n                            nextCell['customerStatus'] = 'waiting'\n                        } else {\n                            nextCell['customerStatus'] = 'success'\n                        }\n                    }\n                    // 下一个节点为并行节点\n                    if (this.R.equals('parallel', nextCellType)) {\n                        if ('running' === status) {\n                            nextCell['customerStatus'] = 'waiting'\n                        } else {\n                            nextCell['customerStatus'] = status\n                        }\n                    }\n                } else {\n                    const lastCell = edge['source']\n                    const lastCellType = lastCell['customerName']\n\n                    // 上一个节点为分支节点\n                    if (this.R.equals('branch', lastCellType)) {\n                        this.setEdgeColor(edge, this.status[('success' === status || 'running' === status) ? 'success' : 'waiting'])\n                    }\n                }\n            })\n        },\n        instanceGraph(toolItem, x, y) {\n            const parent = this.graph.getDefaultParent()\n\n            this.graph.getModel().beginUpdate()\n            try {\n                const statusMap = this.statusMap\n                const vertex = this.graph.insertVertex(parent, null, null, x, y, 200, 32, '')\n                const changeStatusHandler = this.changeStatusHandler\n\n                vertex.customerOptionalStatus = toolItem['OptionalStatus']\n                vertex.customerName = toolItem['name']\n                vertex.customerTitle = toolItem['title']\n                statusMap[vertex['id']] = toolItem['defaultStatus']\n                vertex.customer = true\n\n                Reflect.defineProperty(vertex, 'customerStatus', {\n                    set(value) {\n                        statusMap[vertex['id']] = value\n                        changeStatusHandler(vertex)\n                    },\n                    get() {\n                        return statusMap[vertex['id']]\n                    }\n                })\n            } finally {\n                this.graph.getModel().endUpdate()\n            }\n        }\n    },\n\n    provide() {\n        return {\n            graph: this.graph\n        }\n    }\n\n}\n","<template>\n    <div class=\"flow-main\">\n        <Breadcrumb v-if=\"false\">\n            <BreadcrumbItem>工作流</BreadcrumbItem>\n            <BreadcrumbItem>名称</BreadcrumbItem>\n        </Breadcrumb>\n        <div class=\"flow-content-main\">\n            <div class=\"siderbar-container\">\n                <ul>\n                    <li\n                        v-for=\"item in toolbarItems\"\n                        :key=\"item['name']\"\n                        ref=\"dragItem\"\n                    >{{item['title']}}</li>\n                </ul>\n            </div>\n            <div class=\"graph-container\" ref=\"container\"></div>\n        </div>\n    </div>\n</template>\n<style lang=\"stylus\" scoped>\n    @import './index.styl'\n</style>\n<script>\n    import JS from \"./index.js\";\n    export default JS;\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=13c90b1e&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=13c90b1e&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"13c90b1e\",\n  null\n  \n)\n\nexport default component.exports","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Vue = _interopDefault(require('vue'));\nvar Intact = _interopDefault(require('intact/dist'));\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar _Intact$Vdt$miss = Intact.Vdt.miss;\nvar h = _Intact$Vdt$miss.h;\nvar hooks = _Intact$Vdt$miss.hooks;\nvar _Intact$utils = Intact.utils;\nvar _get = _Intact$utils.get;\nvar _set = _Intact$utils.set;\nvar extend$1 = _Intact$utils.extend;\nvar isArray = _Intact$utils.isArray;\nvar create = _Intact$utils.create;\n\nvar _textVNode = Vue.prototype._v('');\nvar VueVNode = _textVNode.constructor;\n\n// for scoped style\nif (hooks) {\n    hooks.beforeInsert = function (vNode) {\n        var dom = vNode.dom;\n        var parent = vNode.parentVNode;\n        var i = void 0;\n        var j = void 0;\n        while (parent) {\n            if ((i = parent.tag) && i.cid === 'IntactVue' && (i = parent.children.$options)) {\n                if ((i = j = i.parent) && (i = i.$options) && (i = i._scopeId)) {\n                    dom.setAttribute(i, '');\n                }\n                if (j) {\n                    // find vue component parent while we has found the intact component\n                    parent = j.$parent;\n                    while (parent) {\n                        if ((i = parent.$options) && (i = i._scopeId)) {\n                            dom.setAttribute(i, '');\n                        }\n                        parent = parent.$parent;\n                    }\n                }\n                break;\n            } else {\n                parent = parent.parentVNode;\n            }\n        }\n    };\n}\n\n// for get $parent\nVue.mixin({\n    beforeCreate: function beforeCreate() {\n        if (!this.$parent && this.$vnode) {\n            this.$parent = this.$vnode.context;\n        }\n    }\n});\n\nfunction normalizeChildren(vNodes) {\n    var loop = function loop(vNodes) {\n        if (isArray(vNodes)) {\n            var _ret = [];\n            vNodes.forEach(function (vNode) {\n                if (isArray(vNode)) {\n                    _ret.push.apply(_ret, loop(vNode));\n                } else {\n                    _ret.push(normalize(vNode));\n                }\n            });\n            return _ret;\n        }\n        return normalize(vNodes);\n    };\n    var ret = loop(vNodes);\n    if (Array.isArray(ret)) {\n        var l = ret.length;\n        return l === 0 ? undefined : l === 1 ? ret[0] : ret;\n    }\n    return ret;\n}\n\nfunction normalize(vNode) {\n    if (vNode == null) return vNode;\n    var type = typeof vNode === 'undefined' ? 'undefined' : _typeof(vNode);\n    if (type === 'string' || type === 'number') return vNode;\n    // is a intact vnode\n    if (vNode.type) return vNode;\n    if (isIntactComponent(vNode)) {\n        var options = vNode.componentOptions;\n        return h(options.Ctor, normalizeProps(vNode), null, null, vNode.key, vNode.ref);\n    }\n    if (vNode.text !== undefined) {\n        return vNode.text;\n    }\n\n    return h(Wrapper, { vueVNode: vNode }, null, handleClassName(vNode));\n}\n\nfunction normalizeProps(vNode) {\n    var componentOptions = vNode.componentOptions;\n    var data = vNode.data;\n    var attrs = data.attrs;\n    var propTypes = componentOptions.Ctor.propTypes;\n    var props = {};\n\n    if (attrs) {\n        for (var key in attrs) {\n            if (~['staticClass', 'class', 'style', 'staticStyle'].indexOf(key)) continue;\n            var value = attrs[key];\n            var tmp = void 0;\n            if (propTypes && (\n            // value is Boolean\n            (tmp = propTypes[key]) === Boolean || tmp && (\n            // value contains Boolean\n            isArray(tmp) && tmp.indexOf(Boolean) > -1 ||\n            // value.type is Boolean\n            tmp.type === Boolean ||\n            // value.type contains Boolean\n            isArray(tmp.type) && tmp.type.indexOf(Boolean) > -1)) && (value === '' || value === key)) {\n                value = true;\n            }\n            props[key] = value;\n        }\n    }\n\n    // add className\n    var className = handleClassName(vNode);\n    if (className !== undefined) {\n        props.className = className;\n    }\n    // add style\n    var style = handleStyle(vNode);\n    if (style !== undefined) {\n        props.style = style;\n    }\n\n    // add key\n    if (vNode.key) {\n        props.key = vNode.key;\n    } else if (data.key) {\n        props.key = data.key;\n    }\n\n    // if exists scoped slots\n    var scopedSlots = data.scopedSlots;\n    if (scopedSlots) {\n        var blocks = props._blocks ? props._blocks : props._blocks = {};\n\n        var _loop = function _loop(_key) {\n            blocks[_key] = function (parent) {\n                for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {\n                    args[_key2 - 1] = arguments[_key2];\n                }\n\n                return normalizeChildren(scopedSlots[_key].apply(this, args));\n            };\n        };\n\n        for (var _key in scopedSlots) {\n            _loop(_key);\n        }\n    }\n\n    // if exists v-model\n    var model = data.model;\n    if (model) {\n        props.value = model.value;\n        props['v-model'] = model.expression;\n    }\n    if (data.directives) {\n        var directives = data.directives;\n        for (var i = 0; i < directives.length; i++) {\n            var _model = directives[i];\n            if (_model.name === 'model') {\n                // for vue@2.1.8\n                props.value = _model.value;\n                props['v-model'] = _model.expression;\n                break;\n            } else if (_model.name === 'show' && !_model.value) {\n                if (props.style) {\n                    props.style.display = 'none';\n                } else {\n                    props.style = { display: 'none' };\n                }\n            }\n        }\n    }\n\n    // convert ref string to function\n    handleRef(vNode, props);\n\n    var listeners = componentOptions.listeners;\n    if (listeners) {\n        var _loop2 = function _loop2(_key4) {\n            var _cb = listeners[_key4];\n            var cb = _cb;\n\n            if (_key4 === 'input') {\n                // is a v-model directive of vue\n                _key4 = '$change:value';\n                cb = function cb(c, v) {\n                    return _cb(v);\n                };\n            } else if (_key4.substr(0, 7) === 'update:') {\n                // delegate update:prop(sync modifier) to $change:prop\n                _key4 = '$change:' + _key4.substr(7);\n                cb = function cb(c, v) {\n                    return _cb(v);\n                };\n            }\n\n            // if there is a $change:prop originally, set it as array\n            var name = 'ev-' + _key4;\n            if (props[name]) {\n                props[name] = [props[name], cb];\n            } else {\n                props[name] = cb;\n            }\n            _key3 = _key4;\n        };\n\n        for (var _key3 in listeners) {\n            _loop2(_key3);\n        }\n    }\n\n    // handle children and blocks\n    var slots = vNode.slots || resolveSlots(componentOptions.children);\n\n    var _getChildrenAndBlocks = getChildrenAndBlocks(slots),\n        children = _getChildrenAndBlocks.children,\n        _blocks = _getChildrenAndBlocks._blocks;\n    // for Intact Functional component, the blocks has been handled\n    // In this case, we should merge them \n\n\n    props.children = children;\n    if (props._blocks) {\n        extend$1(props._blocks, _blocks);\n    } else {\n        props._blocks = _blocks;\n    }\n\n    normalizeContext(vNode, props);\n\n    return props;\n}\n\nfunction normalizeContext(vNode, props) {\n    var context = vNode.context;\n    props._context = {\n        data: {\n            get: function get$$1(name) {\n                if (name != null) {\n                    // for get both props and data\n                    return _get(context, name);\n                } else {\n                    return context.$data;\n                }\n            },\n            set: function set$$1(name, value) {\n                _set(context, name, value);\n            },\n\n            $router: _get(context, '_routerRoot._router')\n        }\n    };\n}\n\nfunction getChildrenAndBlocks(slots) {\n    var d = slots.default,\n        rest = objectWithoutProperties(slots, ['default']);\n\n    var blocks = void 0;\n    if (rest) {\n        blocks = {};\n\n        var _loop3 = function _loop3(key) {\n            blocks[key] = function () {\n                return normalizeChildren(rest[key]);\n            };\n        };\n\n        for (var key in rest) {\n            _loop3(key);\n        }\n    }\n\n    return {\n        children: normalizeChildren(d),\n        _blocks: blocks\n    };\n}\n\nfunction toVueVNode(h, vNode, props) {\n    var attrs = {};\n    var __props = { attrs: attrs };\n    var vNodeProps = vNode.props;\n    for (var key in vNodeProps) {\n        if (~['children', '_context', 'className', 'style', 'ref', 'key'].indexOf(key)) continue;\n        attrs[key] = vNodeProps[key];\n    }\n    if (vNode.ref) {\n        __props.ref = props.data.ref;\n    }\n    if (vNodeProps.className) {\n        __props.staticClass = vNodeProps.className;\n    }\n    if (vNode.props.style) {\n        __props.staticStyle = vNodeProps.style;\n    }\n    if (vNode.key != null) {\n        __props.key = vNodeProps.key;\n    }\n    var children = vNodeProps.children;\n    if (children && !Array.isArray(children)) {\n        children = [children];\n    }\n\n    return h(vNode.tag, __props, children);\n}\n\nfunction functionalWrapper(Component) {\n    function Ctor(props) {\n        return Component(props);\n    }\n\n    Ctor.options = {\n        functional: true,\n        render: function render(h, props) {\n            var _props = normalizeProps({\n                // fake\n                componentOptions: {\n                    Ctor: Component,\n                    listeners: props.listeners\n                },\n                data: props.data,\n                slots: props.slots(),\n                context: props.parent\n            });\n            var vNode = Component(_props, true /* is in vue */);\n            if (isArray(vNode)) {\n                return vNode.map(function (vNode) {\n                    return toVueVNode(h, vNode, props);\n                });\n            }\n            return toVueVNode(h, vNode, props);\n        }\n    };\n\n    Ctor.cid = 'IntactFunctionalComponent';\n\n    return Ctor;\n}\n\nvar ignorePropRegExp = /_ev[A-Z]/;\nvar patch = Vue.prototype.__patch__;\n// const update = Vue.prototype._update;\n\nvar Wrapper = function () {\n    function Wrapper() {\n        classCallCheck(this, Wrapper);\n    }\n\n    Wrapper.prototype.init = function init(lastVNode, nextVNode) {\n        // let the component destroy by itself\n        this.destroyed = true;\n        this._addProps(nextVNode);\n        return patch(null, nextVNode.props.vueVNode, false, false, this.parentDom);\n    };\n\n    Wrapper.prototype.update = function update(lastVNode, nextVNode) {\n        this._addProps(nextVNode);\n        return patch(lastVNode.props.vueVNode, nextVNode.props.vueVNode, false, false, this.parentDom);\n    };\n\n    Wrapper.prototype.destroy = function destroy(vNode) {\n        patch(vNode.props.vueVNode, null);\n    };\n\n    // maybe the props has been changed, so we change the vueVNode's data\n\n\n    Wrapper.prototype._addProps = function _addProps(vNode) {\n        // for Intact reusing the dom\n        this.vdt = { vNode: vNode };\n        var props = vNode.props;\n        var vueVNode = props.vueVNode;\n        // if we reuse the vNode, clone it\n        if (vueVNode.elm) {\n            vueVNode = cloneVNode(vueVNode);\n        }\n        for (var key in props) {\n            if (key === 'vueVNode') continue;\n            if (ignorePropRegExp.test(key)) continue;\n            if (!vueVNode.data) vueVNode.data = {};\n            var data = vueVNode.data;\n            var prop = props[key];\n            // is event\n            if (key === 'className') {\n                data.staticClass = prop;\n                delete data.class;\n            } else if (key === 'style') {\n                if (data.staticStyle) {\n                    data.staticStyle = _extends({}, data.staticStyle, prop);\n                } else {\n                    data.staticStyle = prop;\n                }\n            } else if (key.substr(0, 3) === 'ev-') {\n                if (!data.on) data.on = {};\n                data.on[key.substr(3)] = prop;\n            } else {\n                if (!data.attrs) data.attrs = {};\n                data.attrs[key] = prop;\n            }\n        }\n\n        vNode.props = _extends({}, props, { vueVNode: vueVNode });\n    };\n\n    return Wrapper;\n}();\n\nfunction handleRef(vNode, props) {\n    var key = vNode.data.ref;\n    if (key) {\n        var refs = vNode.context.$refs;\n        props.ref = function (i, isRemove) {\n            // if we pass the ref to intact component, ignore it directlty\n            if (!refs) return;\n            if (!isRemove) {\n                if (vNode.data.refInFor) {\n                    if (!isArray(refs[key])) {\n                        refs[key] = [i];\n                    } else if (refs[key].indexOf(i) < 0) {\n                        refs[key].push(i);\n                    }\n                } else {\n                    refs[key] = i;\n                }\n            } else {\n                if (isArray(refs[key])) {\n                    var index = refs[key].indexOf(i);\n                    if (~index) {\n                        refs[key].splice(index, 1);\n                    }\n                } else {\n                    refs[key] = undefined;\n                }\n            }\n        };\n        props.ref.key = key;\n    }\n}\n\nfunction handleClassName(vNode) {\n    var className = void 0;\n    var data = vNode.data;\n    if (data) {\n        if (data.staticClass) {\n            className = data.staticClass;\n        }\n        if (data.class) {\n            if (!className) {\n                className = stringifyClass(data.class);\n            } else {\n                className += ' ' + stringifyClass(data.class);\n            }\n        }\n    }\n\n    return className;\n}\n\nfunction stringifyClass(className) {\n    if (className == null) return '';\n    if (isArray(className)) {\n        return stringifyArray(className);\n    }\n    if ((typeof className === 'undefined' ? 'undefined' : _typeof(className)) === 'object') {\n        return stringifyObject(className);\n    }\n    if (typeof className === 'string') {\n        return className;\n    }\n\n    return '';\n}\n\nfunction stringifyArray(value) {\n    var res = '';\n    var stringified = void 0;\n    for (var i = 0; i < value.length; i++) {\n        if ((stringified = stringifyClass(value[i])) != null && stringified !== '') {\n            if (res) res += ' ';\n            res += stringified;\n        }\n    }\n\n    return res;\n}\n\nfunction stringifyObject(value) {\n    var res = '';\n    for (var key in value) {\n        if (value[key]) {\n            if (res) res += ' ';\n            res += key;\n        }\n    }\n\n    return res;\n}\n\nfunction handleStyle(vNode) {\n    var style = void 0;\n    var data = vNode.data;\n    if (data) {\n        style = getStyleBinding(data.style);\n        if (data.staticStyle) {\n            return extend$1(data.staticStyle, style);\n        }\n    }\n\n    return style;\n}\n\nfunction getStyleBinding(style) {\n    if (!style) return style;\n\n    if (isArray(style)) {\n        return toObject(style);\n    }\n    if (typeof style === 'string') {\n        return parseStyleText(style);\n    }\n\n    return style;\n}\n\nfunction toObject(arr) {\n    var res = {};\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i]) {\n            extend$1(res, arr[i]);\n        }\n    }\n\n    return res;\n}\n\nvar cache = create(null);\nfunction parseStyleText(cssText) {\n    var hit = cache[cssText];\n    if (hit) return hit;\n\n    var res = {};\n    var listDelimiter = /;(?![^(]*\\))/g;\n    var propertyDelimiter = /:(.+)/;\n    cssText.split(listDelimiter).forEach(function (item) {\n        if (item) {\n            var tmp = item.split(propertyDelimiter);\n            tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n        }\n    });\n    cache[cssText] = res;\n\n    return res;\n}\n\nfunction isIntactComponent(vNode) {\n    var i = vNode.data;\n    return i && (i = i.hook) && (i = i.init) && vNode.componentOptions.Ctor.cid === 'IntactVue';\n}\n\n// copy from vue/src/core/instance/render-helpers/resolve-slots.js\nfunction resolveSlots(children) {\n    var slots = {};\n    if (!children) {\n        return slots;\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n        var data = child.data;\n        // remove slot attribute if the node is resolved as a Vue slot node\n        if (data && data.attrs && data.attrs.slot) {\n            delete data.attrs.slot;\n        }\n        if (data && data.slot != null) {\n            var _name = data.slot;\n            var slot = slots[_name] || (slots[_name] = []);\n            if (child.tag === 'template') {\n                slot.push.apply(slot, child.children || []);\n            } else {\n                slot.push(child);\n            }\n        } else {\n            (slots.default || (slots.default = [])).push(child);\n        }\n    }\n    // ignore slots that contains only whitespace\n    for (var _name2 in slots) {\n        if (slots[_name2].every(isWhitespace)) {\n            delete slots[_name2];\n        }\n    }\n    return slots;\n}\n\nfunction isWhitespace(node) {\n    return node.isComment && !node.asyncFactory || node.text === ' ';\n}\n\n// copy from vue/src/core/vdom/vnode.js\nfunction cloneVNode(vnode) {\n    var cloned = new VueVNode(vnode.tag,\n    // clone data\n    vnode.data ? _extends({}, vnode.data) : vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(), vnode.text, vnode.elm, vnode.context, vnode.componentOptions, vnode.asyncFactory);\n    cloned.ns = vnode.ns;\n    cloned.isStatic = vnode.isStatic;\n    cloned.key = vnode.key;\n    cloned.isComment = vnode.isComment;\n    cloned.fnContext = vnode.fnContext;\n    cloned.fnOptions = vnode.fnOptions;\n    cloned.fnScopeId = vnode.fnScopeId;\n    cloned.asyncMeta = vnode.asyncMeta;\n    cloned.isCloned = true;\n    return cloned;\n}\n\n// for webpack alias Intact to IntactVue\nvar _Vue$prototype = Vue.prototype;\nvar init = _Vue$prototype.init;\nvar $nextTick = _Vue$prototype.$nextTick;\nvar _updateFromParent = _Vue$prototype._updateFromParent;\n\nvar extend = Intact.utils.extend;\n\nvar activeInstance = void 0;\nvar mountedQueue = void 0;\n\nvar IntactVue = function (_Intact) {\n    inherits(IntactVue, _Intact);\n\n    function IntactVue(options) {\n        classCallCheck(this, IntactVue);\n\n        var parentVNode = options && options._parentVnode;\n        if (parentVNode) {\n            var vNode = normalize(parentVNode);\n\n            // inject hook\n            // if exist mountedQueue, it indicate that the component is nested into vue element\n            // we call __patch__ to render it, and it will lead to call mounted hooks\n            // but this component has not been appended\n            // so we do it nextTick\n            var _this = possibleConstructorReturn(this, _Intact.call(this, vNode.props));\n\n            options.mounted = [activeInstance ? function () {\n                _this.$nextTick(_this.mount);\n            } : _this.mount];\n\n            // force vue update intact component\n            options._renderChildren = true;\n\n            _this.$options = options;\n            _this.$vnode = parentVNode;\n            _this._isVue = true;\n\n            // for compitibility of vue@2.6\n            _this.$scopedSlots = { $stable: true };\n\n            _this.vNode = vNode;\n            vNode.children = _this;\n\n            // for devtools\n            var parent = options.parent;\n            if (parent) {\n                _this.$parent = parent;\n                _this.$root = parent.$root;\n                parent.$children.push(_this);\n            }\n            _this.$children = [];\n            _this._data = _this.props;\n            _this.$refs = {};\n            _this._uid = _this.uniqueId;\n            options.name = _this.displayName || _this.constructor.name;\n        } else {\n            var _this = possibleConstructorReturn(this, _Intact.call(this, options));\n        }\n        return possibleConstructorReturn(_this);\n    }\n\n    IntactVue.prototype.init = function init(lastVNode, nextVNode) {\n        var _this2 = this;\n\n        var init = function init() {\n            _this2.__pushActiveInstance();\n            var element = _Intact.prototype.init.call(_this2, lastVNode, nextVNode);\n            _this2.__popActiveInstance();\n\n            return element;\n        };\n\n        if (!this._isVue) return init();\n\n        mountedQueue = this.mountedQueue;\n\n        var element = init();\n\n        return element;\n    };\n\n    IntactVue.prototype.update = function update(lastVNode, nextVNode, fromPending) {\n        var _this3 = this;\n\n        var update = function update() {\n            _this3.__pushActiveInstance();\n            var element = _Intact.prototype.update.call(_this3, lastVNode, nextVNode, fromPending);\n            _this3.__popActiveInstance();\n\n            return element;\n        };\n\n        if (!this._isVue) return update();\n\n        // maybe update in updating\n        var oldTriggerFlag = this._shouldTrigger;\n        this.__initMountedQueue();\n\n        var element = update();\n\n        this.__triggerMountedQueue();\n        this._shouldTrigger = oldTriggerFlag;\n\n        return element;\n    };\n\n    IntactVue.prototype.$mount = function $mount(el, hydrating) {\n        var oldTriggerFlag = this._shouldTrigger;\n        this.__initMountedQueue();\n\n        this.parentVNode = this.vNode.parentVNode = activeInstance && activeInstance.vNode;\n        // disable intact async component\n        this.inited = true;\n        this.$el = this.init(null, this.vNode);\n        this.vNode.dom = this.$el;\n        this._vnode = {};\n        var options = this.$options;\n        var refElm = options._refElm;\n        var parentElm = options._parentElm;\n        // vue@2.5.18 and above does not need append the dom\n        // vue will do this by itself\n        if (parentElm) {\n            if (refElm) {\n                parentElm.insertBefore(this.$el, refElm);\n            } else {\n                parentElm.appendChild(this.$el);\n            }\n        }\n\n        this.$el.__vue__ = this;\n\n        this.__triggerMountedQueue();\n        this._shouldTrigger = oldTriggerFlag;\n    };\n\n    IntactVue.prototype.$forceUpdate = function $forceUpdate() {\n        var oldTriggerFlag = this._shouldTrigger;\n        this.__initMountedQueue();\n\n        var vNode = normalize(this.$vnode);\n        var lastVNode = this.vNode;\n        vNode.children = this;\n\n        this.vNode = vNode;\n        this.parentVNode = this.vNode.parentVNode = activeInstance && activeInstance.vNode;\n        // Intact can change element when update, so we should re-assign it to elm, #4\n        this.$vnode.elm = this.update(lastVNode, vNode);\n\n        // force vue update intact component\n        // reset it, because vue may set it to undefined\n        this.$options._renderChildren = true;\n\n        // let the vNode patchable for vue to register ref\n        // this._vnode = this.vdt.vNode;\n        // don't let vue to register ref, it will change className and so on\n        // handle it there\n        var lastRef = lastVNode.ref;\n        var nextRef = vNode.ref;\n        if (lastRef !== nextRef &&\n        // if the string of the key is the same, do nothing\n        !(lastRef && nextRef && lastRef.key === nextRef.key)) {\n            if (lastRef) {\n                lastRef(this, true);\n            }\n            if (nextRef) {\n                nextRef(this);\n            }\n        }\n\n        this.__triggerMountedQueue();\n        this._shouldTrigger = oldTriggerFlag;\n    };\n\n    IntactVue.prototype.$destroy = function $destroy() {\n        delete this.$el.__vue__;\n        var parent = this.$parent;\n        if (parent) {\n            var children = parent.$children;\n            if (children.length) {\n                var index = children.indexOf(this);\n                if (~index) {\n                    children.splice(index, 1);\n                }\n            }\n        }\n        this.destroy();\n    };\n\n    // we should promise that all intact components have been mounted\n\n\n    IntactVue.prototype.__initMountedQueue = function __initMountedQueue() {\n        this._shouldTrigger = false;\n        if (!mountedQueue || mountedQueue.done) {\n            this._shouldTrigger = true;\n            if (!this.mountedQueue || this.mountedQueue.done) {\n                this._initMountedQueue();\n            }\n            mountedQueue = this.mountedQueue;\n        } else {\n            this.mountedQueue = mountedQueue;\n        }\n    };\n\n    IntactVue.prototype.__triggerMountedQueue = function __triggerMountedQueue() {\n        var _this4 = this;\n\n        if (this._shouldTrigger) {\n            if (this.mounted) {\n                this._triggerMountedQueue();\n            } else {\n                // vue will call mouted hook after append the element\n                // so we push to the queue to make it to be called immediately\n                this.$options.mounted.push(function () {\n                    _this4._triggerMountedQueue();\n                });\n                // this.$nextTick(() => {\n                // if (this.destroyed) return;\n                // this._triggerMountedQueue();\n                // });\n            }\n            mountedQueue = null;\n            this._shouldTrigger = false;\n        }\n    };\n\n    IntactVue.prototype.__pushActiveInstance = function __pushActiveInstance() {\n        this._prevActiveInstance = activeInstance;\n        activeInstance = this;\n    };\n\n    IntactVue.prototype.__popActiveInstance = function __popActiveInstance() {\n        activeInstance = this._prevActiveInstance;\n        this._prevActiveInstance = null;\n    };\n\n    // mock api\n\n\n    IntactVue.prototype.$on = function $on() {};\n\n    IntactVue.prototype.$off = function $off() {};\n\n    return IntactVue;\n}(Intact);\n\nIntactVue.cid = 'IntactVue';\nIntactVue.options = extend({}, Vue.options);\nIntactVue.functionalWrapper = functionalWrapper;\nIntactVue.normalize = normalizeChildren;\nIntactVue.prototype.$nextTick = $nextTick;\n// for vue@2.1.8\nIntactVue.prototype._updateFromParent = _updateFromParent;\n\n// for compatibilty of IE <= 10\nif (!Object.setPrototypeOf) {\n    extend(IntactVue, Intact);\n    // for Intact <= 2.4.4\n    if (!IntactVue.template) {\n        IntactVue.template = Intact.template;\n    }\n}\n\nmodule.exports = IntactVue;\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\nmodule.exports = sloppyArrayMethod('forEach') ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar toString$1 = Object.prototype.toString;\n\nvar doc = typeof document === 'undefined' ? {} : document;\n\nvar isArray = Array.isArray || function (arr) {\n    return toString$1.call(arr) === '[object Array]';\n};\n\nfunction isObject$1(o) {\n    return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && o !== null;\n}\n\nfunction isStringOrNumber(o) {\n    var type = typeof o === 'undefined' ? 'undefined' : _typeof(o);\n    return type === 'string' || type === 'number';\n}\n\nfunction isNullOrUndefined(o) {\n    return o === null || o === undefined;\n}\n\nfunction isComponentInstance(o) {\n    return o && typeof o.init === 'function';\n}\n\nfunction isEventProp(propName) {\n    return propName.substr(0, 3) === 'ev-';\n}\n\n\n\nvar indexOf = function () {\n    if (Array.prototype.indexOf) {\n        return function (arr, value) {\n            return arr.indexOf(value);\n        };\n    } else {\n        return function (arr, value) {\n            for (var i = 0; i < arr.length; i++) {\n                if (arr[i] === value) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n}();\n\n\n\nvar SimpleMap = typeof Map === 'function' ? Map : function () {\n    function SimpleMap() {\n        this._keys = [];\n        this._values = [];\n        this.size = 0;\n    }\n\n    SimpleMap.prototype.set = function (key, value) {\n        var index = indexOf(this._keys, key);\n        if (!~index) {\n            index = this._keys.push(key) - 1;\n            this.size++;\n        }\n        this._values[index] = value;\n        return this;\n    };\n    SimpleMap.prototype.get = function (key) {\n        var index = indexOf(this._keys, key);\n        if (!~index) return;\n        return this._values[index];\n    };\n    SimpleMap.prototype.delete = function (key) {\n        var index = indexOf(this._keys, key);\n        if (!~index) return false;\n        this._keys.splice(index, 1);\n        this._values.splice(index, 1);\n        this.size--;\n        return true;\n    };\n\n    return SimpleMap;\n}();\n\nvar skipProps = {\n    key: true,\n    ref: true,\n    children: true,\n    className: true,\n    checked: true,\n    multiple: true,\n    defaultValue: true,\n    'v-model': true\n};\n\nfunction isSkipProp(prop) {\n    // treat prop which start with '_' as private prop, so skip it\n    return skipProps[prop] || prop[0] === '_';\n}\n\nvar booleanProps = {\n    muted: true,\n    scoped: true,\n    loop: true,\n    open: true,\n    checked: true,\n    default: true,\n    capture: true,\n    disabled: true,\n    readOnly: true,\n    required: true,\n    autoplay: true,\n    controls: true,\n    seamless: true,\n    reversed: true,\n    allowfullscreen: true,\n    noValidate: true,\n    hidden: true,\n    autofocus: true,\n    selected: true,\n    indeterminate: true,\n    multiple: true\n};\n\nvar strictProps = {\n    volume: true,\n    defaultChecked: true,\n    value: true,\n    htmlFor: true,\n    scrollLeft: true,\n    scrollTop: true\n};\n\nvar selfClosingTags = {\n    'area': true,\n    'base': true,\n    'br': true,\n    'col': true,\n    'command': true,\n    'embed': true,\n    'hr': true,\n    'img': true,\n    'input': true,\n    'keygen': true,\n    'link': true,\n    'menuitem': true,\n    'meta': true,\n    'param': true,\n    'source': true,\n    'track': true,\n    'wbr': true\n};\n\nfunction MountedQueue() {\n    this.queue = [];\n    // if done is true, it indicate that this queue should be discarded\n    this.done = false;\n}\nMountedQueue.prototype.push = function (fn) {\n    this.queue.push(fn);\n};\nMountedQueue.prototype.unshift = function (fn) {\n    this.queue.unshift(fn);\n};\nMountedQueue.prototype.trigger = function () {\n    var queue = this.queue;\n    var callback = void 0;\n    while (callback = queue.shift()) {\n        callback();\n    }\n    this.done = true;\n};\n\nvar browser = {};\nif (typeof navigator !== 'undefined') {\n    var ua = navigator.userAgent.toLowerCase();\n    var index = ua.indexOf('msie ');\n    if (~index) {\n        browser.isIE = true;\n        var version = parseInt(ua.substring(index + 5, ua.indexOf('.', index)), 10);\n        browser.version = version;\n        browser.isIE8 = version === 8;\n    } else if (~ua.indexOf('trident/')) {\n        browser.isIE = true;\n        var rv = ua.indexOf('rv:');\n        browser.version = parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    } else if (~ua.indexOf('edge')) {\n        browser.isEdge = true;\n    } else if (~ua.indexOf('safari')) {\n        if (~ua.indexOf('chrome')) {\n            browser.isChrome = true;\n        } else {\n            browser.isSafari = true;\n        }\n    }\n}\n\nvar setTextContent = browser.isIE8 ? function (dom, text) {\n    dom.innerText = text;\n} : function (dom, text) {\n    dom.textContent = text;\n};\n\nvar svgNS = \"http://www.w3.org/2000/svg\";\nvar xlinkNS = \"http://www.w3.org/1999/xlink\";\nvar xmlNS = \"http://www.w3.org/XML/1998/namespace\";\n\nvar namespaces = {\n    'xlink:href': xlinkNS,\n    'xlink:arcrole': xlinkNS,\n    'xlink:actuate': xlinkNS,\n    'xlink:show': xlinkNS,\n    'xlink:role': xlinkNS,\n    'xlink:title': xlinkNS,\n    'xlink:type': xlinkNS,\n    'xml:base': xmlNS,\n    'xml:lang': xmlNS,\n    'xml:space': xmlNS\n};\n\nvar hooks = {\n    beforeInsert: null\n};\n\n/** \n * @fileoverview utility methods\n * @author javey\n * @date 15-4-22\n */\n\nvar i = 0;\nvar Type = {\n    JS: i++,\n    JSImport: i++,\n\n    JSXText: i++,\n    JSXUnescapeText: i++,\n    JSXElement: i++,\n    JSXExpressionContainer: i++,\n    JSXAttribute: i++,\n    JSXEmptyExpression: i++,\n\n    JSXWidget: i++,\n    JSXVdt: i++,\n    JSXBlock: i++,\n    JSXComment: i++,\n\n    JSXDirective: i++,\n    JSXTemplate: i++,\n\n    JSXString: i++\n};\nvar TypeName = [];\nfor (var type in Type) {\n    TypeName[Type[type]] = type;\n}\n\n// which children must be text\nvar TextTags = {\n    style: true,\n    script: true,\n    textarea: true\n};\n\nvar Directives = {\n    'v-if': true,\n    'v-else-if': true,\n    'v-else': true,\n    'v-for': true,\n    'v-for-value': true,\n    'v-for-key': true,\n    'v-raw': true\n};\n\nvar Options = {\n    autoReturn: true,\n    onlySource: false,\n    delimiters: ['{', '}'],\n    // remove `with` statement\n    noWith: false,\n    // whether rendering on server or not\n    server: false,\n    // skip all whitespaces in template\n    skipWhitespace: true,\n    setModel: function setModel(data, key, value, self) {\n        data[key] = value;\n        self.update();\n    },\n    getModel: function getModel(data, key) {\n        return data[key];\n    },\n    disableSplitText: false, // split text with <!---->\n    sourceMap: false,\n    indent: '    ' // code indent style\n};\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar noop = function noop() {};\n\nfunction isArrayLike(value) {\n    if (isNullOrUndefined(value)) return false;\n    var length = value.length;\n    return typeof length === 'number' && length > -1 && length % 1 === 0 && length <= 9007199254740991 && typeof value !== 'function';\n}\n\nfunction each(obj, iter, thisArg) {\n    if (isArrayLike(obj)) {\n        for (var i = 0, l = obj.length; i < l; i++) {\n            iter.call(thisArg, obj[i], i, obj);\n        }\n    } else if (isObject$$1(obj)) {\n        for (var key in obj) {\n            if (hasOwn.call(obj, key)) {\n                iter.call(thisArg, obj[key], key, obj);\n            }\n        }\n    }\n}\n\nfunction isObject$$1(obj) {\n    var type = typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n    return type === 'function' || type === 'object' && !!obj;\n}\n\nfunction map(obj, iter, thisArgs) {\n    var ret = [];\n    each(obj, function (value, key, obj) {\n        ret.push(iter.call(thisArgs, value, key, obj));\n    });\n    return ret;\n}\n\nfunction className(obj) {\n    if (isNullOrUndefined(obj)) return;\n    if (typeof obj === 'string') return obj;\n    var ret = [];\n    for (var key in obj) {\n        if (hasOwn.call(obj, key) && obj[key]) {\n            ret.push(key);\n        }\n    }\n    return ret.join(' ');\n}\n\nfunction isWhiteSpace(charCode) {\n    return charCode <= 160 && charCode >= 9 && charCode <= 13 || charCode == 32 || charCode == 160 || charCode == 5760 || charCode == 6158 || charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279);\n}\n\nfunction isWhiteSpaceExpectLinebreak(charCode) {\n    return charCode !== 10 && // \\n\n    charCode !== 13 && // \\r\n    isWhiteSpace(charCode);\n}\n\nfunction trimRight(str) {\n    var index = str.length;\n\n    while (index-- && isWhiteSpace(str.charCodeAt(index))) {}\n\n    return str.slice(0, index + 1);\n}\n\nfunction trimLeft(str) {\n    var length = str.length,\n        index = -1;\n\n    while (index++ < length && isWhiteSpace(str.charCodeAt(index))) {}\n\n    return str.slice(index);\n}\n\nfunction setDelimiters(delimiters) {\n    if (!isArray(delimiters)) {\n        throw new Error('The parameter must be an array like [\"{{\", \"}}\"]');\n    }\n    Options.delimiters = delimiters;\n}\n\nfunction getDelimiters() {\n    return Options.delimiters;\n}\n\nfunction configure(key, value) {\n    if (typeof key === 'string') {\n        if (value === undefined) {\n            return Options[key];\n        } else {\n            Options[key] = value;\n        }\n    } else if (isObject$$1(key)) {\n        extend(Options, key);\n    }\n    return Options;\n}\n\nfunction isSelfClosingTag(tag) {\n    return selfClosingTags[tag];\n}\n\nfunction isTextTag(tag) {\n    return TextTags[tag];\n}\n\nfunction isDirective(name) {\n    return hasOwn.call(Directives, name);\n}\n\nfunction isVModel(name) {\n    return name === 'v-model' || name.substr(0, 8) === 'v-model:';\n}\n\nfunction extend() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n    }\n\n    var dest = args[0];\n    var length = args.length;\n    if (length > 1) {\n        for (var i = 1; i < length; i++) {\n            var source = args[i];\n            if (source) {\n                for (var key in source) {\n                    if (hasOwn.call(source, key)) {\n                        dest[key] = source[key];\n                    }\n                }\n            }\n        }\n    }\n    return dest;\n}\n\nfunction setCheckboxModel(data, key, trueValue, falseValue, e, self) {\n    var value = Options.getModel(data, key),\n        checked = e.target.checked;\n    if (isArray(value)) {\n        value = value.slice(0);\n        var index = indexOf(value, trueValue);\n        if (checked) {\n            if (!~index) {\n                value.push(trueValue);\n            }\n        } else {\n            if (~index) {\n                value.splice(index, 1);\n            }\n        }\n    } else {\n        value = checked ? trueValue : falseValue;\n    }\n    Options.setModel(data, key, value, self);\n}\n\nfunction detectCheckboxChecked(data, key, trueValue) {\n    var value = Options.getModel(data, key);\n    if (isArray(value)) {\n        return indexOf(value, trueValue) > -1;\n    } else {\n        return value === trueValue;\n    }\n}\n\nfunction setSelectModel(data, key, e, self) {\n    var target = e.target,\n        multiple = target.multiple,\n        value,\n        i,\n        opt,\n        options = target.options;\n\n    if (multiple) {\n        value = [];\n        for (i = 0; i < options.length; i++) {\n            opt = options[i];\n            if (opt.selected) {\n                value.push(isNullOrUndefined(opt._value) ? opt.value : opt._value);\n            }\n        }\n    } else {\n        for (i = 0; i < options.length; i++) {\n            opt = options[i];\n            if (opt.selected) {\n                value = isNullOrUndefined(opt._value) ? opt.value : opt._value;\n                break;\n            }\n        }\n    }\n    Options.setModel(data, key, value, self);\n}\n\nvar slice = Array.prototype.slice;\n\n// in ie8 console.log is an object\nvar hasConsole = typeof console !== 'undefined' && typeof console.log === 'function';\nvar error$2 = hasConsole ? function (e) {\n    console.error(e.stack);\n} : noop;\n\n\n\nvar utils$1 = (Object.freeze || Object)({\n\tisNullOrUndefined: isNullOrUndefined,\n\tisArray: isArray,\n\tindexOf: indexOf,\n\tSelfClosingTags: selfClosingTags,\n\tisEventProp: isEventProp,\n\tType: Type,\n\tTypeName: TypeName,\n\tTextTags: TextTags,\n\tDirectives: Directives,\n\tOptions: Options,\n\thasOwn: hasOwn,\n\tnoop: noop,\n\teach: each,\n\tisObject: isObject$$1,\n\tmap: map,\n\tclassName: className,\n\tisWhiteSpace: isWhiteSpace,\n\tisWhiteSpaceExpectLinebreak: isWhiteSpaceExpectLinebreak,\n\ttrimRight: trimRight,\n\ttrimLeft: trimLeft,\n\tsetDelimiters: setDelimiters,\n\tgetDelimiters: getDelimiters,\n\tconfigure: configure,\n\tisSelfClosingTag: isSelfClosingTag,\n\tisTextTag: isTextTag,\n\tisDirective: isDirective,\n\tisVModel: isVModel,\n\textend: extend,\n\tsetCheckboxModel: setCheckboxModel,\n\tdetectCheckboxChecked: detectCheckboxChecked,\n\tsetSelectModel: setSelectModel,\n\tslice: slice,\n\thasConsole: hasConsole,\n\terror: error$2\n});\n\n/**\n * @fileoverview parse jsx to ast\n * @author javey\n * @date 15-4-22\n */\n\nvar Type$1 = Type;\nvar TypeName$1 = TypeName;\n\nvar elementNameRegexp = /^<\\w+:?\\s*[\\{\\w\\/>]/;\n// const importRegexp = /^\\s*\\bimport\\b/;\n\nfunction isJSIdentifierPart(ch) {\n    return ch === 95 || ch === 36 || // _ (underscore) $\n    ch >= 65 && ch <= 90 || // A..Z\n    ch >= 97 && ch <= 122 || // a..z\n    ch >= 48 && ch <= 57; // 0..9\n}\n\nfunction isJSXIdentifierPart(ch) {\n    return ch === 58 || ch === 45 || ch === 46 || isJSIdentifierPart(ch); // : - .\n}\n\nfunction Parser() {\n    this.source = '';\n    this.index = 0;\n    this.length = 0;\n}\n\nParser.prototype = {\n    constructor: Parser,\n\n    parse: function parse(source, options) {\n        this.source = trimRight(source);\n        this.index = 0;\n        this.line = 1;\n        this.column = 0;\n        this.length = this.source.length;\n\n        this.options = extend({}, configure(), options);\n\n        return this._parseTemplate(true);\n    },\n\n    _parseTemplate: function _parseTemplate(isRoot) {\n        var elements = [],\n            braces = { count: 0 };\n        while (this.index < this.length && braces.count >= 0) {\n            elements.push(this._advance(braces, isRoot));\n        }\n\n        return elements;\n    },\n\n    _advance: function _advance(braces, isRoot) {\n        var ch = this._char();\n        if (isRoot && this._isJSImport()) {\n            return this._scanJSImport();\n        } else if (ch !== '<') {\n            return this._scanJS(braces, isRoot);\n        } else {\n            return this._scanJSX();\n        }\n    },\n\n    _scanJS: function _scanJS(braces, isRoot) {\n        var start = this.index,\n            tmp,\n            Delimiters = this.options.delimiters,\n            element = this._type(Type$1.JS);\n\n        while (this.index < this.length) {\n            this._skipJSComment();\n            var ch = this._char();\n            var tmp;\n            if (ch === '\\'' || ch === '\"' || ch === '`' ||\n            // is a RegExp, treat it as literal sting\n            ch === '/' && (\n            // is not /* and //, this is comment\n            tmp = this._char(this.index + 1)) && tmp !== '*' && tmp !== '/' && (\n            // is the first char\n            this.index === 0 ||\n            // is not </, this is a end tag\n            (tmp = this._char(this.index - 1)) && tmp !== '<' && (\n            // is not a sign of division\n            // FIXME: expect `if (a > 1) /test/`\n            tmp = this._getLastCharCode()) && !isJSIdentifierPart(tmp) && tmp !== 41 // )\n            )) {\n                // skip element(<div>) in quotes\n                this._scanStringLiteral();\n            } else if (this._isElementStart()) {\n                break;\n            } else if (isRoot && this._isJSImport()) {\n                break;\n            } else {\n                if (ch === '{') {\n                    braces.count++;\n                } else if (braces.count > 0 && ch === '}') {\n                    braces.count--;\n                } else if (this._isExpect(Delimiters[1])) {\n                    // for parseTemplate break\n                    braces.count--;\n                    break;\n                } else if (ch === '\\n') {\n                    this._updateLine();\n                }\n                this._updateIndex();\n            }\n        }\n\n        element.value = this.source.slice(start, this.index);\n\n        return element;\n    },\n\n    _scanJSImport: function _scanJSImport() {\n        var start = this.index,\n            element = this._type(Type$1.JSImport);\n\n        this._updateIndex(7); // 'import '.length\n        while (this.index < this.length) {\n            var ch = this._char();\n            if (ch === '\\'' || ch === '\"') {\n                this._scanStringLiteral();\n                var _start2 = void 0;\n                do {\n                    _start2 = this.index;\n                    this._skipWhitespaceAndJSComment();\n                    if (this._char() === ';') {\n                        this._updateIndex();\n                    }\n                } while (_start2 !== this.index);\n                break;\n            } else {\n                this._updateIndex();\n            }\n        }\n\n        element.value = this.source.slice(start, this.index);\n\n        return element;\n    },\n\n\n    _scanStringLiteral: function _scanStringLiteral() {\n        var quote = this._char(),\n            start = this.index,\n            str = '',\n            element = this._type(Type$1.StringLiteral);\n\n        this._updateIndex();\n        while (this.index < this.length) {\n            var ch = this._char();\n            if (ch.charCodeAt(0) === 10) {\n                this._updateLine();\n            }\n            this._updateIndex();\n\n            if (ch === quote) {\n                quote = '';\n                break;\n            } else if (ch === '\\\\') {\n                str += this._char(this._updateIndex());\n            } else {\n                str += ch;\n            }\n        }\n        if (quote !== '') {\n            this._error('Unclosed quote');\n        }\n\n        element.value = this.source.slice(start, this.index);\n\n        return element;\n    },\n\n    _scanJSX: function _scanJSX() {\n        return this._parseJSXElement();\n    },\n\n    _scanJSXText: function _scanJSXText(stopChars) {\n        var start = this.index,\n            l = stopChars.length,\n            i,\n            charCode,\n            element = this._type(Type$1.JSXText);\n\n        loop: while (this.index < this.length) {\n            charCode = this._charCode();\n            if (isWhiteSpace(charCode)) {\n                if (charCode === 10) {\n                    this._updateLine();\n                }\n            } else {\n                for (i = 0; i < l; i++) {\n                    if (typeof stopChars[i] === 'function' && stopChars[i].call(this) || this._isExpect(stopChars[i])) {\n                        break loop;\n                    }\n                }\n            }\n            this._updateIndex();\n        }\n\n        element.value = this.source.slice(start, this.index);\n\n        return element;\n    },\n\n    _scanJSXStringLiteral: function _scanJSXStringLiteral() {\n        var quote = this._char();\n        if (quote !== '\\'' && quote !== '\"' && quote !== '`') {\n            this._error('String literal must starts with a qoute');\n        }\n        this._updateIndex();\n        var token = this._scanJSXText([quote]);\n        this._updateIndex();\n        return token;\n    },\n\n    _parseJSXElement: function _parseJSXElement(prev) {\n        this._expect('<');\n        var start = this.index,\n            ret = {},\n            flag = this._charCode();\n\n        if (flag >= 65 && flag <= 90 /* upper case */) {\n                // is a widget\n                this._type(Type$1.JSXWidget, ret);\n            } else if (this._isExpect('!--')) {\n            // is html comment\n            return this._parseJSXComment();\n        } else if (this._charCode(this.index + 1) === 58 /* : */) {\n                // is a directive\n                start += 2;\n                switch (flag) {\n                    case 116:\n                        // t\n                        this._type(Type$1.JSXVdt, ret);\n                        break;\n                    case 98:\n                        // b\n                        this._type(Type$1.JSXBlock, ret);\n                        break;\n                    default:\n                        this._error('Unknown directive ' + String.fromCharCode(flag) + ':');\n                }\n                this._updateIndex(2);\n            } else {\n            // is an element\n            this._type(Type$1.JSXElement, ret);\n        }\n\n        while (this.index < this.length) {\n            if (!isJSXIdentifierPart(this._charCode())) {\n                break;\n            }\n            this._updateIndex();\n        }\n\n        ret.value = this.source.slice(start, this.index);\n\n        return this._parseAttributeAndChildren(ret, prev);\n    },\n\n    _parseAttributeAndChildren: function _parseAttributeAndChildren(ret, prev) {\n        ret.children = [];\n        this._parseJSXAttribute(ret, prev);\n\n        if (ret.type === Type$1.JSXElement && isSelfClosingTag(ret.value)) {\n            // self closing tag\n            if (this._char() === '/') {\n                this._updateIndex();\n            }\n            this._expect('>');\n        } else if (this._char() === '/') {\n            // unknown self closing tag\n            this._updateIndex();\n            this._expect('>');\n        } else {\n            this._expect('>');\n            if (isTextTag(ret.value)) {\n                // if it is a text element, treat children as innerHTML attribute\n                var attr = this._type(Type$1.JSXAttribute, {\n                    name: 'innerHTML',\n                    value: this._type(Type$1.JSXString)\n                });\n                var children = this._parseJSXChildren(ret, ret.hasVRaw);\n                if (children.length) {\n                    attr.value.value = children;\n                    ret.attributes.push(attr);\n                }\n            } else {\n                ret.children = this._parseJSXChildren(ret, ret.hasVRaw);\n            }\n        }\n\n        return ret;\n    },\n\n    _parseJSXAttribute: function _parseJSXAttribute(ret, prev) {\n        ret = extend(ret, {\n            attributes: [],\n            directives: {},\n            hasVRaw: false\n        });\n        while (this.index < this.length) {\n            this._skipWhitespace();\n            if (this._char() === '/' || this._char() === '>') {\n                break;\n            } else {\n                var Delimiters = this.options.delimiters;\n                if (this._isExpect(Delimiters[0])) {\n                    // support dynamic attributes\n                    ret.attributes.push(this._parseJSXExpressionContainer());\n                    continue;\n                }\n\n                var attr = this._parseJSXAttributeName(ret, prev);\n\n                if (attr.name === 'v-raw') {\n                    ret.hasVRaw = true;\n                    continue;\n                }\n                if (this._char() === '=') {\n                    this._updateIndex();\n                    attr.value = this._parseJSXAttributeValue();\n                } else {\n                    // treat no-value attribute as true\n                    attr.value = this._type(Type$1.JSXExpressionContainer, { value: [this._type(Type$1.JS, { value: 'true' })] });\n                }\n\n                if (attr.type === Type$1.JSXAttribute) {\n                    ret.attributes.push(attr);\n                } else {\n                    ret.directives[attr.name] = attr;\n                }\n            }\n        }\n\n        return ret;\n    },\n\n    _parseJSXAttributeName: function _parseJSXAttributeName(ret, prev) {\n        var start = this.index;\n        var line = this.line;\n        var column = this.column;\n        var element = void 0;\n\n        if (!isJSXIdentifierPart(this._charCode())) {\n            this._error('Unexpected identifier ' + this._char());\n        }\n\n        while (this.index < this.length) {\n            var ch = this._charCode();\n            if (!isJSXIdentifierPart(ch)) {\n                break;\n            }\n            this._updateIndex();\n        }\n\n        var name = this.source.slice(start, this.index);\n        if (isDirective(name)) {\n            element = this._type(Type$1.JSXDirective, { name: name });\n            this._parseJSXAttributeVIf(ret, element, prev);\n        } else {\n            element = this._type(Type$1.JSXAttribute, { name: name });\n        }\n        element.line = line;\n        element.column = column;\n\n        return element;\n    },\n\n    _parseJSXAttributeVIf: function _parseJSXAttributeVIf(ret, attr, prev) {\n        var name = attr.name;\n        if (name === 'v-else-if' || name === 'v-else') {\n            var emptyTextNodes = []; // persist empty text node, skip them if find v-else-if or v-else\n            var skipNodes = function skipNodes() {\n                each(emptyTextNodes, function (item) {\n                    item.skip = true;\n                });\n                emptyTextNodes = [];\n            };\n\n            prev = { prev: prev };\n            while (prev = prev.prev) {\n                if (prev.type === Type$1.JSXText && /^\\s*$/.test(prev.value)) {\n                    emptyTextNodes.push(prev);\n                    continue;\n                }\n                var type = prev.type;\n                if (type === Type$1.JSXComment) continue;\n                if (type === Type$1.JSXElement || type === Type$1.JSXWidget || type === Type$1.JSXVdt || type === Type$1.JSXBlock) {\n                    var prevDirectives = prev.directives;\n                    if (prevDirectives['v-if'] || prevDirectives['v-else-if']) {\n                        prev.next = ret;\n                        ret.skip = true;\n                        skipNodes();\n                    }\n                }\n                break;\n            }\n\n            if (!ret.skip) {\n                this._error(name + ' must be led with v-if or v-else-if');\n            }\n        }\n    },\n\n    _parseJSXAttributeValue: function _parseJSXAttributeValue() {\n        var value,\n            Delimiters = this.options.delimiters;\n        if (this._isExpect(Delimiters[0])) {\n            value = this._parseJSXExpressionContainer();\n        } else {\n            value = this._scanJSXStringLiteral();\n        }\n        return value;\n    },\n\n    _parseJSXExpressionContainer: function _parseJSXExpressionContainer() {\n        var expression,\n            Delimiters = this.options.delimiters,\n            element = this._type(Type$1.JSXExpressionContainer);\n\n        this._expect(Delimiters[0]);\n        this._skipWhitespaceAndJSComment();\n        if (this._isExpect(Delimiters[1])) {\n            expression = [this._parseJSXEmptyExpression()];\n        } else if (this._isExpect('=')) {\n            // if the lead char is '=', then treat it as unescape string\n            this._skipWhitespace();\n            expression = this._parseJSXUnescapeText();\n            this._expect(Delimiters[1], 'Unclosed delimiter', expression);\n            return expression;\n        } else {\n            expression = this._parseExpression();\n        }\n        this._expect(Delimiters[1], 'Unclosed delimiter', element);\n\n        element.value = expression;\n\n        return element;\n    },\n\n    _parseJSXEmptyExpression: function _parseJSXEmptyExpression() {\n        return this._type(Type$1.JSXEmptyExpression, { value: null });\n    },\n\n    _parseExpression: function _parseExpression() {\n        return this._parseTemplate();\n    },\n\n    _parseJSXUnescapeText: function _parseJSXUnescapeText() {\n        this._expect('=');\n        return this._type(Type$1.JSXUnescapeText, {\n            value: this._parseTemplate()\n        });\n    },\n\n    _parseJSXChildren: function _parseJSXChildren(element, hasVRaw) {\n        var children = [],\n            endTag = element.value + '>',\n            current = null;\n\n        switch (element.type) {\n            case Type$1.JSXBlock:\n                endTag = '</b:' + endTag;\n                break;\n            case Type$1.JSXVdt:\n                endTag = '</t:' + endTag;\n                break;\n            case Type$1.JSXElement:\n            default:\n                endTag = '</' + endTag;\n                break;\n        }\n\n        if (hasVRaw) {\n            while (this.index < this.length) {\n                if (this._isExpect(endTag)) {\n                    break;\n                }\n                children.push(this._scanJSXText([endTag]));\n            }\n        } else {\n            this._skipWhitespaceBetweenElements(endTag);\n            while (this.index < this.length) {\n                if (this._isExpect(endTag)) {\n                    break;\n                }\n                current = this._parseJSXChild(element, endTag, current);\n                children.push(current);\n            }\n        }\n        this._parseJSXClosingElement(endTag, element);\n\n        // ignore skipped child\n        var ret = [];\n        for (var i = 0; i < children.length; i++) {\n            var child = children[i];\n            if (!child.skip) {\n                ret.push(child);\n            }\n        }\n\n        return ret;\n    },\n\n    _parseJSXChild: function _parseJSXChild(element, endTag, prev) {\n        var ret,\n            Delimiters = this.options.delimiters;\n\n        if (this._isExpect(Delimiters[0])) {\n            ret = this._parseJSXExpressionContainer();\n            this._skipWhitespaceBetweenElements(endTag, false);\n        } else if (isTextTag(element.value)) {\n            ret = this._scanJSXText([endTag, Delimiters[0]]);\n        } else if (this._isElementStart()) {\n            ret = this._parseJSXElement(prev);\n            this._skipWhitespaceBetweenElements(endTag);\n        } else {\n            ret = this._scanJSXText([function () {\n                return this._isExpect(endTag) || this._isElementStart();\n            }, Delimiters[0]]);\n        }\n\n        ret.prev = undefined;\n        ret.next = undefined;\n        if (prev) {\n            prev.next = ret;\n            ret.prev = prev;\n        }\n\n        return ret;\n    },\n\n    _parseJSXClosingElement: function _parseJSXClosingElement(endTag, element) {\n        this._expect('</', 'Unclosed tag: ' + endTag, element);\n\n        while (this.index < this.length) {\n            if (!isJSXIdentifierPart(this._charCode())) {\n                break;\n            }\n            this._updateIndex();\n        }\n\n        this._skipWhitespace();\n        this._expect('>');\n    },\n\n    _parseJSXComment: function _parseJSXComment() {\n        this._expect('!--');\n        var start = this.index,\n            element = this._type(Type$1.JSXComment);\n\n        while (this.index < this.length) {\n            if (this._isExpect('-->')) {\n                break;\n            } else if (this._charCode() === 10) {\n                this._updateLine();\n            }\n            this._updateIndex();\n        }\n        element.value = this.source.slice(start, this.index);\n        this._expect('-->');\n\n        return element;\n    },\n\n    _char: function _char() {\n        var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.index;\n\n        return this.source.charAt(index);\n    },\n\n    _charCode: function _charCode() {\n        var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.index;\n\n        return this.source.charCodeAt(index);\n    },\n\n    _skipWhitespaceBetweenElements: function _skipWhitespaceBetweenElements(endTag) {\n        var skipBeforeDelimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        if (!this.options.skipWhitespace) return;\n\n        var Delimiters = this.options.delimiters;\n        var start = this.index;\n        while (start < this.length) {\n            var code = this._charCode(start);\n            if (isWhiteSpace(code)) {\n                start++;\n            } else if (this._isExpect(endTag, start) || this._isElementStart(start) ||\n            // skip whitespaces between after element starting and expression\n            // but not skip before element ending \n            skipBeforeDelimiter && this._isExpect(Delimiters[0], start)) {\n                this._skipWhitespace();\n                break;\n            } else {\n                break;\n            }\n        }\n    },\n\n    _skipWhitespace: function _skipWhitespace() {\n        while (this.index < this.length) {\n            var code = this._charCode();\n            if (!isWhiteSpace(code)) {\n                break;\n            } else if (code === 10) {\n                // is \\n\n                this._updateLine();\n            }\n            this._updateIndex();\n        }\n    },\n\n    _skipJSComment: function _skipJSComment() {\n        var start = void 0;\n        do {\n            start = this.index;\n            if (this._char() === '/') {\n                var ch = this._char(this.index + 1);\n                if (ch === '/') {\n                    this._updateIndex(2);\n                    while (this.index < this.length) {\n                        var code = this._charCode();\n                        this._updateIndex();\n                        if (code === 10) {\n                            // is \\n\n                            this._updateLine();\n                            break;\n                        }\n                    }\n                } else if (ch === '*') {\n                    this._updateIndex(2);\n                    while (this.index < this.length) {\n                        if (this._isExpect('*/')) {\n                            this._updateIndex(2);\n                            break;\n                        } else if (this._charCode() === 10) {\n                            this._updateLine();\n                        }\n                        this._updateIndex();\n                    }\n                }\n            }\n        } while (start !== this.index);\n    },\n\n    _skipWhitespaceAndJSComment: function _skipWhitespaceAndJSComment() {\n        var start = void 0;\n        do {\n            start = this.index;\n            this._skipWhitespace();\n            this._skipJSComment();\n        } while (start !== this.index);\n    },\n\n    _expect: function _expect(str, msg, element) {\n        if (!this._isExpect(str)) {\n            this._error(msg || 'Expect string ' + str, element);\n        }\n        this._updateIndex(str.length);\n    },\n\n    _isExpect: function _isExpect(str) {\n        var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.index;\n\n        return this.source.slice(index, index + str.length) === str;\n    },\n\n    _isElementStart: function _isElementStart() {\n        var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.index;\n\n        return this._char(index) === '<' && (this._isExpect('<!--', index) || elementNameRegexp.test(this.source.slice(index)));\n    },\n\n    _isJSImport: function _isJSImport() {\n        return this._isExpect('import ');\n    },\n\n    _type: function _type(type, ret) {\n        ret || (ret = {});\n        ret.type = type;\n        ret.typeName = TypeName$1[type];\n        ret.line = this.line;\n        ret.column = this.column;\n        return ret;\n    },\n\n    _updateLine: function _updateLine() {\n        this.line++;\n        // because we call _updateLine firstly then call _updateIndex\n        // it will add column in _updateIndex\n        // set it to -1 here\n        this.column = -1;\n    },\n\n    _updateIndex: function _updateIndex(value) {\n        value === undefined && (value = 1);\n        var index = this.index;\n        this.index = this.index + value;\n        this.column = this.column + value;\n        return index;\n    },\n\n    _error: function _error(msg, element) {\n        var lines = this.source.split('\\n');\n\n        var _ref = element || this,\n            line = _ref.line,\n            column = _ref.column;\n\n        column++;\n        var error$$1 = new Error(msg + ' (' + line + ':' + column + ')\\n' + ('> ' + line + ' | ' + lines[line - 1] + '\\n') + ('  ' + new Array(String(line).length + 1).join(' ') + ' | ' + new Array(column).join(' ') + '^'));\n        error$$1.line = line;\n        error$$1.column = column;\n        error$$1.source = this.source;\n\n        throw error$$1;\n    },\n\n    _getLastCharCode: function _getLastCharCode() {\n        var start = this.index - 1;\n        var _start = void 0;\n        do {\n            _start = start;\n            while (start >= 0) {\n                var code = this._charCode(start);\n                if (!isWhiteSpaceExpectLinebreak(code)) {\n                    break;\n                }\n                start--;\n            }\n\n            // only check multi-line comments '/* comment */'\n            while (start >= 0) {\n                if (this._char(start) === '/' && this._char(start - 1) === '*') {\n                    start -= 2;\n                    while (start >= 0) {\n                        if (this._char(start) === '*' && this._char(start - 1) === '/') {\n                            start -= 2;\n                            break;\n                        }\n                        start--;\n                    }\n                }\n                break;\n            }\n        } while (start !== _start);\n\n        return this._charCode(start);\n    }\n};\n\n/**\n * @fileoverview stringify ast of jsx to js\n * @author javey\n * @date 15-4-22\n */\n\nvar Type$2 = Type;\n\n\nvar attrMap = function () {\n    var map$$1 = {\n        'class': 'className',\n        'for': 'htmlFor'\n    };\n    return function (name) {\n        return map$$1[name] || name;\n    };\n}();\n\nfunction Stringifier() {}\n\nStringifier.prototype = {\n    constructor: Stringifier,\n\n    stringify: function stringify(ast, options) {\n        this._init(options);\n\n        this._start(ast);\n\n        return this.buffer.join('');\n    },\n\n    /**\n     * @brief for unit test to get body\n     *\n     * @param ast\n     * @param options\n     */\n    body: function body(ast, options) {\n        this._init(options);\n\n        this._visitJSXExpressionContainer(ast, true);\n\n        return this.buffer.join('');\n    },\n    _init: function _init(options) {\n        this.options = extend({}, configure(), options);\n\n        this.enterStringExpression = false;\n        this.head = ''; // save import syntax\n\n        this.indent = 0;\n\n        this.buffer = [];\n        this.queue = [];\n        this.mappings = [];\n\n        this.line = 1;\n        this.column = 0;\n    },\n    _start: function _start(ast) {\n        var _this = this;\n\n        this._append('function(obj, _Vdt, blocks, $callee) {\\n');\n        this._indent();\n        var params = ['_Vdt || (_Vdt = Vdt);', 'obj || (obj = {});', 'blocks || (blocks = {});', 'var h = _Vdt.miss.h, hc = _Vdt.miss.hc, hu = _Vdt.miss.hu, widgets = this && this.widgets || {}, _blocks = {}, __blocks = {},', '    __u = _Vdt.utils, extend = __u.extend, _e = __u.error, _className = __u.className, __slice = __u.slice, __noop = __u.noop,', '    __m = __u.map, __o = __u.Options, _getModel = __o.getModel, _setModel = __o.setModel,', '    _setCheckboxModel = __u.setCheckboxModel, _detectCheckboxChecked = __u.detectCheckboxChecked,', '    _setSelectModel = __u.setSelectModel,', this.options.server ? '    require = function(file) { return _Vdt.require(file, \"' + this.options.filename.replace(/\\\\/g, '\\\\\\\\') + '    \") }, ' : undefined, '    self = this.data, $this = this, scope = obj, Animate = self && self.Animate, parent = ($callee || {})._super;'];\n\n        each(params, function (code) {\n            if (code) {\n                _this._append(code);\n                _this._append('\\n');\n            }\n        });\n\n        this._append('\\n');\n\n        if (!this.options.noWith) {\n            this._append('with (obj) {\\n');\n            this._indent();\n            this._visitJSXExpressionContainer(ast, true);\n            this._append('\\n');\n            this._dedent();\n            this._append('}\\n');\n        } else {\n            this._visitJSXExpressionContainer(ast, true);\n            this._append('\\n');\n        }\n        this._dedent();\n        this._append('}');\n    },\n\n\n    _visitJSXExpressionContainer: function _visitJSXExpressionContainer(ast, isRoot) {\n        var length = ast.length;\n        var addWrapper = false;\n        var hasDestructuring = false;\n\n        if (!isRoot && !this.enterStringExpression) {\n            var element = ast[0];\n            if (element && element.type === Type$2.JS) {\n                // special for ... syntaxt\n                var value = element.value;\n                if (value[0] === '.' && value[1] === '.' && value[2] === '.') {\n                    hasDestructuring = true;\n                    element.value = value.substr(3);\n                    this._append('...');\n                }\n            }\n\n            this._append('function() {try {return (');\n            addWrapper = true;\n        }\n\n        each(ast, function (element, i) {\n            // if is root, add `return` keyword\n            if (this.options.autoReturn && isRoot && i === length - 1) {\n                this._append('return ');\n            }\n\n            this._visit(element, isRoot);\n        }, this);\n\n        if (addWrapper) {\n            this._append(')} catch(e) {_e(e)}}.call($this)');\n        }\n    },\n\n    _visit: function _visit(element, isRoot) {\n        element = element || {};\n        switch (element.type) {\n            case Type$2.JS:\n                return this._visitJS(element);\n            case Type$2.JSImport:\n                return this._visitJSImport(element);\n            case Type$2.JSXElement:\n                return this._visitJSXElement(element);\n            case Type$2.JSXText:\n                return this._visitJSXText(element);\n            case Type$2.JSXUnescapeText:\n                return this._visitJSXUnescapeText(element);\n            case Type$2.JSXExpressionContainer:\n                return this._visitJSXExpressionContainer(element.value);\n            case Type$2.JSXWidget:\n                return this._visitJSXWidget(element);\n            case Type$2.JSXBlock:\n                return this._visitJSXBlock(element, true);\n            case Type$2.JSXVdt:\n                return this._visitJSXVdt(element, isRoot);\n            case Type$2.JSXComment:\n                return this._visitJSXComment(element);\n            case Type$2.JSXTemplate:\n                return this._visitJSXTemplate(element);\n            case Type$2.JSXString:\n                return this._visitJSXString(element);\n            default:\n                return this._append('null');\n        }\n    },\n\n    _visitJS: function _visitJS(element) {\n        var ret = this.enterStringExpression ? '(' + element.value + ')' : element.value;\n\n        this._append(ret, element);\n    },\n\n    _visitJSImport: function _visitJSImport(element) {\n        this.head += element.value;\n    },\n\n\n    _visitJSXElement: function _visitJSXElement(element) {\n        var _this2 = this;\n\n        if (element.value === 'template') {\n            // <template> is a fake tag, we only need handle its children and itself directives\n            this._visitJSXDirective(element, function () {\n                _this2._visitJSXChildren(element.children);\n            });\n        } else {\n            this._visitJSXDirective(element, function () {\n                _this2.__visitJSXElement(element);\n            });\n        }\n    },\n\n    __visitJSXElement: function __visitJSXElement(element) {\n        this._append('h(\\'' + element.value + '\\'', element);\n\n        this._appendQueue(', ');\n\n        var _visitJSXAttribute = this._visitJSXAttribute(element, true, true, true /* appendQueue */),\n            attributes = _visitJSXAttribute.attributes;\n\n        this._appendQueue(', ');\n        this._visitJSXChildren(element.children, true /* appendQueue */);\n\n        this._appendQueue(', ');\n        if (attributes.className) {\n            this._visitJSXAttributeClassName(attributes.className);\n        } else {\n            this._appendQueue('null');\n        }\n\n        this._appendQueue(', ');\n        if (attributes.key) {\n            this._visitJSXAttributeValue(attributes.key);\n        } else {\n            this._appendQueue('null');\n        }\n\n        this._appendQueue(', ');\n        if (attributes.ref) {\n            this._visitJSXAttributeRef(attributes.ref);\n        }\n\n        this._clearQueue();\n        this._append(')');\n    },\n\n\n    _visitJSXChildren: function _visitJSXChildren(children, appendQueue) {\n        var length = children.length;\n        if (!length) {\n            if (appendQueue) {\n                this._appendQueue('null');\n            } else {\n                this._append('null');\n            }\n        }\n        if (length > 1) {\n            this._append('[\\n');\n            this._indent();\n        }\n        each(children, function (child, index) {\n            this._visit(child);\n            if (index !== length - 1) {\n                this._append(',\\n');\n            }\n        }, this);\n        if (length > 1) {\n            this._append('\\n');\n            this._dedent();\n            this._append(']');\n        }\n    },\n\n    _visitJSXDirective: function _visitJSXDirective(element, body) {\n        var _this3 = this;\n\n        var directiveFor = {};\n        var directiveIf = void 0;\n\n        each(element.directives, function (directive) {\n            switch (directive.name) {\n                case 'v-if':\n                    directiveIf = directive;\n                    break;\n                case 'v-for':\n                    directiveFor.data = directive.value;\n                    break;\n                case 'v-for-value':\n                    directiveFor.value = directive.value;\n                    break;\n                case 'v-for-key':\n                    directiveFor.key = directive.value;\n                    break;\n                default:\n                    break;\n            }\n        }, this);\n\n        // handle v-for firstly\n        if (directiveFor.data) {\n            if (directiveIf) {\n                this._visitJSXDirectiveFor(directiveFor, element, function () {\n                    _this3._visitJSXDirectiveIf(directiveIf, element, body);\n                });\n            } else {\n                this._visitJSXDirectiveFor(directiveFor, element, body);\n            }\n        } else if (directiveIf) {\n            this._visitJSXDirectiveIf(directiveIf, element, body);\n        } else {\n            body();\n        }\n    },\n\n    _visitJSXDirectiveIf: function _visitJSXDirectiveIf(directive, element, body) {\n        var hasElse = false,\n            next = element,\n            indent = this.indent;\n\n        this._visitJSXAttributeValue(directive.value);\n        this._append(' ?\\n');\n        this._indent();\n        body();\n        this._append(' :\\n');\n\n        while (next = next.next) {\n            var nextDirectives = next.directives;\n\n            if (!nextDirectives) break;\n\n            var velseif = nextDirectives['v-else-if'];\n            if (velseif) {\n                this._visitJSXAttributeValue(velseif.value);\n                this._append(' ?\\n');\n                this._indent();\n                this._visit(next);\n                this._append(' :\\n');\n                continue;\n            }\n            if (nextDirectives['v-else']) {\n                this._visit(next);\n                hasElse = true;\n            }\n\n            break;\n        }\n\n        if (!hasElse) this._append('undefined');\n\n        this.indent = indent;\n    },\n\n    _visitJSXDirectiveFor: function _visitJSXDirectiveFor(directive, element, body) {\n        this._append('__m(');\n        this._visitJSXAttributeValue(directive.data);\n        this._append(', function(');\n        if (directive.value) {\n            this._visitJSXText(directive.value, true);\n        } else {\n            this._append('value');\n        }\n        this._append(', ');\n        if (directive.key) {\n            this._visitJSXText(directive.key, true);\n        } else {\n            this._append('key');\n        }\n        this._append(') {\\n');\n        this._indent();\n        this._append('return ');\n        body();\n        this._append(';\\n');\n        this._dedent();\n        this._append('}, $this)');\n    },\n\n    _visitJSXString: function _visitJSXString(element) {\n        this.enterStringExpression = true;\n        var length = element.value.length;\n        each(element.value, function (child, i) {\n            this._visit(child);\n            if (i !== length - 1) {\n                this._append(' + ');\n            }\n        }, this);\n        this.enterStringExpression = false;\n    },\n\n    _visitJSXAttribute: function _visitJSXAttribute(element, individualClassName, individualKeyAndRef, appendQueue) {\n        var _this4 = this;\n\n        var set = {},\n            events = {},\n\n        // support bind multiple callbacks for the same event\n        addEvent = function addEvent(name, attr) {\n            var v = events[name];\n            if (!v) {\n                events[name] = [];\n            }\n            events[name].push(attr);\n        },\n            attributes = element.attributes,\n            models = [],\n            addition = {},\n            isFirst;\n\n        var addAttribute = function addAttribute(name, attr) {\n            if (isFirst === undefined) {\n                _this4._append('{\\n');\n                _this4._indent();\n                isFirst = true;\n            }\n            if (!isFirst) {\n                _this4._append(',\\n');\n            }\n            if (name) {\n                _this4._append('\\'' + name + '\\': ', attr);\n            }\n            isFirst = false;\n        };\n\n        each(attributes, function (attr) {\n            if (attr.type === Type$2.JSXExpressionContainer) {\n                addAttribute();\n                this._visitJSXAttributeValue(attr);\n                return;\n            }\n\n            var name = attrMap(attr.name);\n\n            if (name === 'className') {\n                if (!individualClassName) {\n                    addAttribute(name, attr);\n                    this._visitJSXAttributeClassName(attr.value);\n                }\n            } else if (name === 'key') {\n                if (!individualKeyAndRef) {\n                    addAttribute(name, attr);\n                    this._visitJSXAttributeValue(attr.value);\n                }\n            } else if (name === 'widget' || name === 'ref') {\n                if (!individualClassName) {\n                    addAttribute('ref', attr);\n                    this._visitJSXAttributeRef(attr.value);\n                }\n            } else if (isVModel(name)) {\n                var _name$split = name.split(':'),\n                    model = _name$split[1];\n\n                if (model === 'value') name = 'v-model';\n                if (!model) model = 'value';\n\n                models.push({ name: model, value: attr.value, attr: attr });\n            } else if (name === 'v-model-true') {\n                addition.trueValue = attr.value;\n            } else if (name === 'v-model-false') {\n                addition.falseValue = attr.value;\n            } else if (name === 'type') {\n                // save the type for v-model of input element\n                addAttribute('type', attr);\n                this._visitJSXAttributeValue(attr.value);\n                addition.type = this.last;\n            } else if (name === 'value') {\n                addAttribute('value', attr);\n                this._visitJSXAttributeValue(attr.value);\n                addition.value = attr.value;\n            } else if (isEventProp(name)) {\n                addEvent(name, attr);\n            } else if (name === '_blocks') {\n                addAttribute('_blocks');\n                this._visitJSXBlocks(attr.value, false);\n            } else {\n                addAttribute(name, attr);\n                this._visitJSXAttributeValue(attr.value);\n            }\n\n            // for get property directly \n            set[name] = attr.value;\n        }, this);\n\n        for (var i = 0; i < models.length; i++) {\n            this._visitJSXAttributeModel(element, models[i], addition, addEvent, addAttribute);\n        }\n\n        each(events, function (events, name) {\n            addAttribute(name, events[0]);\n\n            var length = events.length;\n            if (length > 1) {\n                _this4._append('[\\n');\n                _this4._indent();\n            }\n            for (var _i = 0; _i < length; _i++) {\n                var event = events[_i];\n                if (typeof event === 'function') {\n                    event();\n                } else {\n                    _this4._visitJSXAttributeValue(event.value);\n                }\n                if (_i !== length - 1) {\n                    _this4._append(',\\n');\n                }\n            }\n            if (length > 1) {\n                _this4._append('\\n');\n                _this4._dedent();\n                _this4._append(']');\n            }\n        });\n\n        if (isFirst !== undefined) {\n            this._append('\\n');\n            this._dedent();\n            this._append('}');\n        } else {\n            if (appendQueue) {\n                this._appendQueue('null');\n            } else {\n                this._append('null');\n            }\n        }\n\n        return { attributes: set, hasProps: isFirst !== undefined };\n    },\n\n    _visitJSXAttributeClassName: function _visitJSXAttributeClassName(value) {\n        if (value.type === Type$2.JSXExpressionContainer) {\n            // for class={ {active: true} }\n            this._append('_className(');\n            this._visitJSXAttributeValue(value);\n            this._append(')');\n        } else {\n            this._visitJSXAttributeValue(value);\n        }\n    },\n    _visitJSXAttributeRef: function _visitJSXAttributeRef(value) {\n        if (value.type === Type$2.JSXText) {\n            // for compatility v1.0\n            // convert widget=\"a\" to ref=(i) => widgets.a = i\n            // convert ref=\"a\" to ref=(i) => widgets.a = i. For Intact\n            this._append('function(i) {widgets[');\n            this._visitJSXAttributeValue(value);\n            this._append('] = i}');\n        } else {\n            this._visitJSXAttributeValue(value);\n        }\n    },\n\n\n    _visitJSXAttributeModel: function _visitJSXAttributeModel(element, model, addition, addEvent, addAttribute) {\n        var _this5 = this;\n\n        var valueName = model.name,\n            value = model.value,\n            eventName = 'change';\n\n        var append = function append() {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            for (var i = 0; i < args.length; i++) {\n                if (i % 2) {\n                    _this5._visitJSXAttributeValue(args[i]);\n                } else {\n                    _this5._append(args[i]);\n                }\n            }\n        };\n\n        if (element.type === Type$2.JSXElement) {\n            switch (element.value) {\n                case 'input':\n                    switch (addition.type) {\n                        case \"'file'\":\n                            eventName = 'change';\n                            break;\n                        case \"'radio'\":\n                        case \"'checkbox'\":\n                            addAttribute('checked', model.attr);\n                            var trueValue = addition.trueValue || { type: Type$2.JS, value: 'true' },\n                                falseValue = addition.falseValue || { type: Type$2.JS, value: 'false' },\n                                inputValue = addition.value;\n                            if (isNullOrUndefined(inputValue)) {\n                                append('_getModel(self, ', value, ') === ', trueValue);\n                                addEvent('ev-change', function () {\n                                    append('function(__e) {_setModel(self, ', value, ', __e.target.checked ? ', trueValue, ' : ', falseValue, ', $this);}');\n                                });\n                            } else {\n                                if (addition.type === \"'radio'\") {\n                                    append('_getModel(self, ', value, ') === ', inputValue);\n                                    addEvent('ev-change', function () {\n                                        append('function(__e) {_setModel(self, ', value, ', __e.target.checked ? ', inputValue, ' : ', falseValue, ', $this);}');\n                                    });\n                                } else {\n                                    append('_detectCheckboxChecked(self, ', value, ', ', inputValue, ')');\n                                    addEvent('ev-change', function () {\n                                        append('function(__e) {_setCheckboxModel(self, ', value, ', ', inputValue, ', ', falseValue, ', __e, $this);}');\n                                    });\n                                }\n                            }\n                            return;\n                        default:\n                            eventName = 'input';\n                            break;\n                    }\n                    break;\n                case 'select':\n                    addAttribute('value', model.attr);\n                    append('_getModel(self, ', value, ')');\n                    addEvent('ev-change', function () {\n                        append('function(__e) {_setSelectModel(self, ', value, ', __e, $this);}');\n                    });\n                    return;\n                case 'textarea':\n                    eventName = 'input';\n                    break;\n                default:\n                    break;\n            }\n            addEvent('ev-' + eventName, function () {\n                append('function(__e) { _setModel(self, ', value, ', __e.target.value, $this) }');\n            });\n        } else if (element.type === Type$2.JSXWidget) {\n            addEvent('ev-$change:' + valueName, function () {\n                append('function(__c, __n) { _setModel(self, ', value, ', __n, $this) }');\n            });\n        }\n        addAttribute(valueName, model.attr);\n        append('_getModel(self, ', value, ')');\n    },\n\n    _visitJSXAttributeValue: function _visitJSXAttributeValue(value) {\n        isArray(value) ? this._visitJSXChildren(value) : this._visit(value, false);\n    },\n\n    _visitJSXText: function _visitJSXText(element, noQuotes) {\n        var ret = element.value.replace(/([\\'\\\"\\\\])/g, '\\\\$1').replace(/[\\r\\n]/g, '\\\\n');\n        if (!noQuotes) {\n            ret = \"'\" + ret + \"'\";\n        }\n\n        this._append(ret, element);\n    },\n\n    _visitJSXUnescapeText: function _visitJSXUnescapeText(element) {\n        this._append('hu(', element);\n        this._visitJSXExpressionContainer(element.value);\n        this._append(')');\n    },\n\n    _visitJSXWidget: function _visitJSXWidget(element) {\n        var _this6 = this;\n\n        this._visitJSXDirective(element, function () {\n            _this6.__visitJSXWidget(element);\n        });\n    },\n\n\n    __visitJSXWidget: function __visitJSXWidget(element) {\n        var _getJSXBlocks = this._getJSXBlocks(element),\n            blocks = _getJSXBlocks.blocks,\n            children = _getJSXBlocks.children;\n\n        if (children.length) {\n            element.attributes.push({ name: 'children', value: children });\n        }\n        element.attributes.push({ name: '_context', value: {\n                type: Type$2.JS,\n                value: '$this'\n            } });\n        if (blocks.length) {\n            element.attributes.push({ name: '_blocks', value: blocks });\n        }\n\n        this._append('h(' + element.value + ', ', element);\n        this._visitJSXAttribute(element, false, false);\n        this._append(')');\n    },\n\n    _visitJSXBlock: function _visitJSXBlock(element, isAncestor) {\n        var _this7 = this;\n\n        this._visitJSXDirective(element, function () {\n            _this7.__visitJSXBlock(element, isAncestor);\n        });\n    },\n\n    __visitJSXBlock: function __visitJSXBlock(element, isAncestor) {\n        var _getJSXBlockAttribute = this._getJSXBlockAttribute(element),\n            params = _getJSXBlockAttribute.params,\n            args = _getJSXBlockAttribute.args;\n\n        var name = element.value;\n\n        this._append('(_blocks[\\'' + name + '\\'] = function(parent', element);\n        if (params) {\n            this._append(', ');\n            this._visitJSXText(params, true);\n        }\n        this._append(') {\\n');\n        this._indent();\n        this._append('return ');\n        this._visitJSXChildren(element.children);\n        this._append(';\\n');\n        this._dedent();\n        this._append('}) && (__blocks[\\'' + name + '\\'] = function(parent) {\\n');\n        this._indent();\n        this._append('var args = arguments;\\n');\n        this._append('return blocks[\\'' + name + '\\'] ? blocks[\\'' + name + '\\'].apply($this, [function() {\\n');\n        this._indent();\n        this._append('return _blocks[\\'' + name + '\\'].apply($this, args);\\n');\n        this._dedent();\n        this._append('}].concat(__slice.call(args, 1))) : _blocks[\\'' + name + '\\'].apply($this, args);\\n');\n        this._dedent();\n        this._append('})');\n        if (isAncestor) {\n            this._append(' && __blocks[\\'' + name + '\\'].apply($this, ');\n            if (args) {\n                this._append('[__noop].concat(');\n                this._visitJSXAttributeValue(args);\n                this._append(')');\n            } else {\n                this._append('[__noop]');\n            }\n            this._append(')');\n        }\n    },\n\n\n    _getJSXBlockAttribute: function _getJSXBlockAttribute(element) {\n        var ret = {};\n\n        each(element.attributes, function (attr) {\n            var name = attr.name;\n            var value = void 0;\n            switch (name) {\n                case 'args':\n                    ret.args = attr.value;\n                    break;\n                case 'params':\n                    ret.params = attr.value;\n                    break;\n                default:\n                    return;\n            }\n        }, this);\n\n        return ret;\n    },\n\n    _getJSXBlocks: function _getJSXBlocks(element) {\n        var blocks = [];\n        var children = [];\n\n        each(element.children, function (child) {\n            if (child.type === Type$2.JSXBlock) {\n                blocks.push(child);\n            } else {\n                children.push(child);\n            }\n        }, this);\n\n        return { blocks: blocks, children: children };\n    },\n\n    _visitJSXBlocks: function _visitJSXBlocks(blocks, isRoot) {\n        var length = blocks.length;\n        if (!length) return this._append(isRoot ? 'blocks' : 'null');\n\n        this._append('function(blocks) {\\n');\n        this._indent();\n        this._append('var _blocks = {}, __blocks = extend({}, blocks);\\n');\n        this._append('return (');\n\n        for (var i = 0; i < length; i++) {\n            this._visitJSXBlock(blocks[i], false);\n            if (i !== length - 1) {\n                this._append(' && ');\n            }\n        }\n        this._append(', __blocks);\\n');\n        this._dedent();\n        this._append('}.call($this, ' + (isRoot ? 'blocks' : '{}') + ')');\n    },\n\n\n    _visitJSXVdt: function _visitJSXVdt(element, isRoot) {\n        var _this8 = this;\n\n        this._visitJSXDirective(element, function () {\n            _this8.__visitJSXVdt(element, isRoot);\n        });\n    },\n\n    __visitJSXVdt: function __visitJSXVdt(element, isRoot) {\n        var name = element.value;\n\n        var _getJSXBlocks2 = this._getJSXBlocks(element),\n            blocks = _getJSXBlocks2.blocks,\n            children = _getJSXBlocks2.children;\n\n        if (children.length) {\n            element.attributes.push({ name: 'children', value: children });\n        }\n\n        this._append('(function() {\\n', element);\n        this._indent();\n        this._append('var _obj = ');\n\n        var _visitJSXAttribute2 = this._visitJSXAttribute(element, false, false),\n            attributes = _visitJSXAttribute2.attributes;\n\n        this._append(';\\n');\n        if (attributes.hasOwnProperty('arguments')) {\n            this._append('extend(_obj, _obj.arguments === true ? obj : _obj.arguments);\\n');\n            this._append('delete _obj.arguments;\\n');\n        }\n        this._append('return ' + name + '.call($this, _obj, _Vdt, ');\n        this._visitJSXBlocks(blocks, isRoot);\n        this._append(', ' + name + ')\\n');\n        this._dedent();\n        this._append('}).call($this)');\n    },\n\n\n    _visitJSXComment: function _visitJSXComment(element) {\n        this._append('hc(');\n        this._visitJSXText(element);\n        this._append(')');\n    },\n\n    _addMapping: function _addMapping(element) {\n        this.mappings.push({\n            generated: {\n                line: this.line,\n                column: this.column\n            },\n            original: element && element.line !== undefined ? {\n                line: element.line,\n                column: element.column\n            } : undefined\n        });\n    },\n    _append: function _append(code, element) {\n        var buffer = this.buffer;\n        var _options = this.options,\n            sourceMap = _options.sourceMap,\n            indent = _options.indent;\n\n\n        this._flushQueue();\n        if (sourceMap) {\n            this._addMapping(element);\n        }\n\n        // add indent if the last line ends with \\n\n        if (indent && this.indent && this.last && this.last[this.last.length - 1] === '\\n' && code[0] !== '\\n') {\n            buffer.push(new Array(this.indent + 1).join(indent));\n            this.column += indent.length * this.indent;\n        }\n\n        this.last = code;\n\n        buffer.push(code);\n\n        if (sourceMap) {\n            for (var i = 0; i < code.length; i++) {\n                if (code[i] === '\\n') {\n                    this.line++;\n                    this.column = 0;\n                } else {\n                    this.column++;\n                }\n            }\n        }\n    },\n    _appendQueue: function _appendQueue(code, element) {\n        this.queue.push([code, element]);\n    },\n    _flushQueue: function _flushQueue() {\n        var queue = this.queue;\n        var item = void 0;\n        while (item = queue.shift()) {\n            this._append(item[0], item[1]);\n        }\n    },\n    _clearQueue: function _clearQueue() {\n        this.queue = [];\n    },\n    _indent: function _indent() {\n        this.indent++;\n    },\n    _dedent: function _dedent() {\n        this.indent--;\n    }\n};\n\nvar Types = {\n    Text: 1,\n    HtmlElement: 1 << 1,\n\n    ComponentClass: 1 << 2,\n    ComponentFunction: 1 << 3,\n    ComponentInstance: 1 << 4,\n\n    HtmlComment: 1 << 5,\n\n    InputElement: 1 << 6,\n    SelectElement: 1 << 7,\n    TextareaElement: 1 << 8,\n    SvgElement: 1 << 9,\n\n    UnescapeText: 1 << 10 // for server side render unescape text\n};\nTypes.FormElement = Types.InputElement | Types.SelectElement | Types.TextareaElement;\nTypes.Element = Types.HtmlElement | Types.FormElement | Types.SvgElement;\nTypes.ComponentClassOrInstance = Types.ComponentClass | Types.ComponentInstance;\nTypes.TextElement = Types.Text | Types.HtmlComment;\n\nvar EMPTY_OBJ = {};\nif (process.env.NODE_ENV !== 'production' && !browser.isIE) {\n    Object.freeze(EMPTY_OBJ);\n}\n\nfunction VNode(type, tag, props, children, className, key, ref) {\n    this.type = type;\n    this.tag = tag;\n    this.props = props;\n    this.children = children;\n    this.key = key;\n    this.ref = ref;\n    this.className = className;\n}\n\nfunction createVNode(tag, props, children, className, key, ref) {\n    var type = void 0;\n    props || (props = EMPTY_OBJ);\n    switch (typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) {\n        case 'string':\n            if (tag === 'input') {\n                type = Types.InputElement;\n            } else if (tag === 'select') {\n                type = Types.SelectElement;\n            } else if (tag === 'textarea') {\n                type = Types.TextareaElement;\n            } else if (tag === 'svg') {\n                type = Types.SvgElement;\n            } else {\n                type = Types.HtmlElement;\n            }\n            break;\n        case 'function':\n            if (tag.prototype.init) {\n                type = Types.ComponentClass;\n            } else {\n                // return tag(props);\n                type = Types.ComponentFunction;\n            }\n            break;\n        case 'object':\n            if (tag.init) {\n                return createComponentInstanceVNode(tag);\n            }\n        default:\n            throw new Error('unknown vNode type: ' + tag);\n    }\n\n    if (type & (Types.ComponentClass | Types.ComponentFunction)) {\n        if (!isNullOrUndefined(children)) {\n            if (props === EMPTY_OBJ) props = {};\n            props.children = normalizeChildren(children, false);\n        } else if (!isNullOrUndefined(props.children)) {\n            props.children = normalizeChildren(props.children, false);\n        }\n        if (type & Types.ComponentFunction) {\n            if (key || ref) {\n                if (props === EMPTY_OBJ) props = {};\n                if (key) props.key = key;\n                if (ref) props.ref = ref;\n            }\n            return tag(props);\n        }\n    } else if (!isNullOrUndefined(children)) {\n        children = normalizeChildren(children, true);\n    }\n\n    return new VNode(type, tag, props, children, className || props.className, key || props.key, ref || props.ref);\n}\n\nfunction createCommentVNode(children, key) {\n    return new VNode(Types.HtmlComment, null, EMPTY_OBJ, children, null, key);\n}\n\nfunction createUnescapeTextVNode(children) {\n    return new VNode(Types.UnescapeText, null, EMPTY_OBJ, children);\n}\n\nfunction createTextVNode(text, key) {\n    return new VNode(Types.Text, null, EMPTY_OBJ, text, null, key);\n}\n\n\n\nfunction createComponentInstanceVNode(instance) {\n    var props = instance.props || EMPTY_OBJ;\n    return new VNode(Types.ComponentInstance, instance.constructor, props, instance, null, props.key, props.ref);\n}\n\nfunction normalizeChildren(vNodes, isAddKey) {\n    if (isArray(vNodes)) {\n        var childNodes = addChild(vNodes, { index: 0 }, isAddKey);\n        return childNodes.length ? childNodes : null;\n    } else if (isComponentInstance(vNodes)) {\n        return createComponentInstanceVNode(vNodes);\n    } else if (vNodes.type && isAddKey) {\n        if (!isNullOrUndefined(vNodes.dom) || vNodes.$) {\n            return directClone(vNodes);\n        }\n\n        // add a flag to indicate that we have handle the vNode\n        // when it came back we should clone it\n        vNodes.$ = true;\n    }\n    return vNodes;\n}\n\nfunction applyKey(vNode, reference, isAddKey) {\n    if (!isAddKey) return vNode;\n    // start with '.' means the vNode has been set key by index\n    // we will reset the key when it comes back again\n    if (isNullOrUndefined(vNode.key) || vNode.key[0] === '.') {\n        vNode.key = '.$' + reference.index++;\n    }\n    // add a flag to indicate that we have handle the vNode\n    // when it came back we should clone it\n    vNode.$ = true;\n    return vNode;\n}\n\nfunction addChild(vNodes, reference, isAddKey) {\n    var newVNodes = void 0;\n    for (var i = 0; i < vNodes.length; i++) {\n        var n = vNodes[i];\n        if (isNullOrUndefined(n)) {\n            if (!newVNodes) {\n                newVNodes = vNodes.slice(0, i);\n            }\n        } else if (isArray(n)) {\n            if (!newVNodes) {\n                newVNodes = vNodes.slice(0, i);\n            }\n            newVNodes = newVNodes.concat(addChild(n, reference, isAddKey));\n        } else if (isStringOrNumber(n)) {\n            if (!newVNodes) {\n                newVNodes = vNodes.slice(0, i);\n            }\n            newVNodes.push(applyKey(createTextVNode(n), reference, isAddKey));\n        } else if (isComponentInstance(n)) {\n            if (!newVNodes) {\n                newVNodes = vNodes.slice(0, i);\n            }\n            newVNodes.push(applyKey(createComponentInstanceVNode(n), reference, isAddKey));\n        } else if (n.type) {\n            if (!newVNodes) {\n                newVNodes = vNodes.slice(0, i);\n            }\n            if (isAddKey && (n.dom || n.$)) {\n                newVNodes.push(applyKey(directClone(n), reference, isAddKey));\n            } else {\n                newVNodes.push(applyKey(n, reference, isAddKey));\n            }\n        }\n    }\n    return newVNodes || vNodes;\n}\n\nfunction directClone(vNode, extraProps, changeType) {\n    var newVNode = void 0;\n    var type = vNode.type;\n\n    if (type & (Types.ComponentClassOrInstance | Types.Element)) {\n        // maybe we does not shadow copy props\n        var props = vNode.props || EMPTY_OBJ;\n        /**\n         * if this is a instance vNode, then we must change its type to new instance again\n         * \n         * but if we change the type, it will lead to replace element because of different type.\n         * only change the type, when we really clone it\n         */\n        var _type = type & Types.ComponentInstance && changeType ? Types.ComponentClass : type;\n        if (extraProps) {\n            // if exist extraProps, shadow copy\n            var _props = {};\n            for (var key in props) {\n                _props[key] = props[key];\n            }\n            for (var _key in extraProps) {\n                _props[_key] = extraProps[_key];\n            }\n            var children = extraProps.children;\n            if (children) {\n                _props.children = normalizeChildren(children, false);\n            }\n\n            newVNode = new VNode(_type, vNode.tag, _props, vNode.children, _props.className || vNode.className, _props.key || vNode.key, _props.ref || vNode.ref);\n        } else {\n            newVNode = new VNode(_type, vNode.tag, props, vNode.children, vNode.className, vNode.key, vNode.ref);\n        }\n    } else if (type & Types.Text) {\n        newVNode = createTextVNode(vNode.children, vNode.key);\n    } else if (type & Types.HtmlComment) {\n        newVNode = createCommentVNode(vNode.children, vNode.key);\n    }\n\n    return newVNode;\n}\n\nfunction preventDefault() {\n    this.returnValue = false;\n}\n\nfunction stopPropagation() {\n    this.cancelBubble = true;\n    this.stopImmediatePropagation && this.stopImmediatePropagation();\n}\n\nvar addEventListener = void 0;\nvar removeEventListener = void 0;\nfunction fixEvent(fn) {\n    return function (event) {\n        // for compatibility\n        event._rawEvent = event;\n\n        event.stopPropagation = stopPropagation;\n        if (!event.preventDefault) {\n            event.preventDefault = preventDefault;\n        }\n        fn(event);\n    };\n}\nif ('addEventListener' in doc) {\n    addEventListener = function addEventListener(dom, name, fn) {\n        fn._$cb = fixEvent(fn);\n        dom.addEventListener(name, fn._$cb, false);\n    };\n\n    removeEventListener = function removeEventListener(dom, name, fn) {\n        dom.removeEventListener(name, fn._$cb || fn);\n    };\n} else {\n    addEventListener = function addEventListener(dom, name, fn) {\n        fn._$cb = fixEvent(fn);\n        dom.attachEvent('on' + name, fn._$cb);\n    };\n\n    removeEventListener = function removeEventListener(dom, name, fn) {\n        dom.detachEvent('on' + name, fn._$cb || fn);\n    };\n}\n\nvar delegatedEvents = {};\nvar unDelegatesEvents = {\n    'mouseenter': true,\n    'mouseleave': true,\n    'propertychange': true,\n    'scroll': true,\n    'wheel': true\n};\n\n// change event can not be deletegated in IE8 \nif (browser.isIE8) {\n    unDelegatesEvents.change = true;\n}\n\nfunction handleEvent(name, lastEvent, nextEvent, dom) {\n    // debugger;\n    if (name === 'blur') {\n        name = 'focusout';\n    } else if (name === 'focus') {\n        name = 'focusin';\n    } else if (browser.isIE8 && name === 'input') {\n        name = 'propertychange';\n    }\n\n    if (!unDelegatesEvents[name]) {\n        var delegatedRoots = delegatedEvents[name];\n\n        if (nextEvent) {\n            if (!delegatedRoots) {\n                delegatedRoots = { items: new SimpleMap(), docEvent: null };\n                delegatedRoots.docEvent = attachEventToDocument(name, delegatedRoots);\n                delegatedEvents[name] = delegatedRoots;\n            }\n            delegatedRoots.items.set(dom, nextEvent);\n        } else if (delegatedRoots) {\n            var items = delegatedRoots.items;\n            if (items.delete(dom)) {\n                if (items.size === 0) {\n                    removeEventListener(doc, name, delegatedRoots.docEvent);\n                    delete delegatedEvents[name];\n                }\n            }\n        }\n    } else {\n        if (lastEvent) {\n            if (isArray(lastEvent)) {\n                for (var i = 0; i < lastEvent.length; i++) {\n                    if (lastEvent[i]) {\n                        removeEventListener(dom, name, lastEvent[i]);\n                    }\n                }\n            } else {\n                removeEventListener(dom, name, lastEvent);\n            }\n        }\n        if (nextEvent) {\n            if (isArray(nextEvent)) {\n                for (var _i = 0; _i < nextEvent.length; _i++) {\n                    if (nextEvent[_i]) {\n                        addEventListener(dom, name, nextEvent[_i]);\n                    }\n                }\n            } else {\n                addEventListener(dom, name, nextEvent);\n            }\n        }\n    }\n}\n\nfunction dispatchEvent(event, target, items, count, isClick, eventData) {\n    // if event has cancelled bubble, return directly  \n    // otherwise it is also triggered sometimes, e.g in React\n    if (event.cancelBubble) {\n        return;\n    }\n\n    var eventToTrigger = items.get(target);\n    if (eventToTrigger) {\n        count--;\n        eventData.dom = target;\n        // for fallback when Object.defineProperty is undefined\n        event._currentTarget = target;\n        if (isArray(eventToTrigger)) {\n            for (var i = 0; i < eventToTrigger.length; i++) {\n                var _eventToTrigger = eventToTrigger[i];\n                if (_eventToTrigger) {\n                    _eventToTrigger(event);\n                }\n            }\n        } else {\n            eventToTrigger(event);\n        }\n    }\n    if (count > 0) {\n        var parentDom = target.parentNode;\n        if (isNullOrUndefined(parentDom) || isClick && parentDom.nodeType === 1 && parentDom.disabled) {\n            return;\n        }\n        dispatchEvent(event, parentDom, items, count, isClick, eventData);\n    }\n}\n\nfunction attachEventToDocument(name, delegatedRoots) {\n    var docEvent = function docEvent(event) {\n        var count = delegatedRoots.items.size;\n        if (count > 0) {\n            var eventData = {\n                dom: doc\n            };\n            try {\n                Object.defineProperty(event, 'currentTarget', {\n                    configurable: true,\n                    get: function get() {\n                        return eventData.dom;\n                    }\n                });\n            } catch (e) {}\n            // ie8\n\n            // nt._rawEvent = event\n            dispatchEvent(event, event.target, delegatedRoots.items, count, event.type === 'click', eventData);\n        }\n    };\n    addEventListener(doc, name, docEvent);\n    return docEvent;\n}\n\nfunction processSelect(vNode, dom, nextProps, isRender) {\n    var multiple = nextProps.multiple;\n    if (multiple !== dom.multiple) {\n        dom.multiple = multiple;\n    }\n    var children = vNode.children;\n\n    if (!isNullOrUndefined(children)) {\n        var value = nextProps.value;\n        if (isRender && isNullOrUndefined(value)) {\n            value = nextProps.defaultValue;\n        }\n\n        var flag = { hasSelected: false };\n        if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n                updateChildOptionGroup(children[i], value, flag);\n            }\n        } else {\n            updateChildOptionGroup(children, value, flag);\n        }\n        if (!flag.hasSelected) {\n            dom.value = '';\n        }\n    }\n}\n\nfunction updateChildOptionGroup(vNode, value, flag) {\n    var tag = vNode.tag;\n\n    if (tag === 'optgroup') {\n        var children = vNode.children;\n\n        if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n                updateChildOption(children[i], value, flag);\n            }\n        } else {\n            updateChildOption(children, value, flag);\n        }\n    } else {\n        updateChildOption(vNode, value, flag);\n    }\n}\n\nfunction updateChildOption(vNode, value, flag) {\n    // skip text and comment node\n    if (vNode.type & Types.HtmlElement) {\n        var props = vNode.props;\n        var dom = vNode.dom;\n\n        if (isArray(value) && indexOf(value, props.value) !== -1 || props.value === value) {\n            dom.selected = true;\n            if (!flag.hasSelected) flag.hasSelected = true;\n        } else if (!isNullOrUndefined(value) || !isNullOrUndefined(props.selected)) {\n            var selected = !!props.selected;\n            if (!flag.hasSelected && selected) flag.hasSelected = true;\n            dom.selected = selected;\n        }\n    }\n}\n\nfunction processInput(vNode, dom, nextProps) {\n    var type = nextProps.type;\n    var value = nextProps.value;\n    var checked = nextProps.checked;\n    var defaultValue = nextProps.defaultValue;\n    var multiple = nextProps.multiple;\n    var hasValue = !isNullOrUndefined(value);\n\n    if (multiple && multiple !== dom.multiple) {\n        dom.multiple = multiple;\n    }\n    if (!isNullOrUndefined(defaultValue) && !hasValue) {\n        dom.defaultValue = defaultValue + '';\n    }\n    if (isCheckedType(type)) {\n        if (hasValue) {\n            dom.value = value;\n        }\n        if (!isNullOrUndefined(checked)) {\n            dom.checked = checked;\n        }\n    } else {\n        if (hasValue && dom.value !== value) {\n            dom.value = value;\n        } else if (!isNullOrUndefined(checked)) {\n            dom.checked = checked;\n        }\n    }\n}\n\nfunction isCheckedType(type) {\n    return type === 'checkbox' || type === 'radio';\n}\n\nfunction processTextarea(vNode, dom, nextProps, isRender) {\n    var value = nextProps.value;\n    var domValue = dom.value;\n\n    if (isNullOrUndefined(value)) {\n        if (isRender) {\n            var defaultValue = nextProps.defaultValue;\n            if (!isNullOrUndefined(defaultValue)) {\n                if (defaultValue !== domValue) {\n                    dom.value = defaultValue;\n                }\n            } else if (domValue !== '') {\n                dom.value = '';\n            }\n        }\n    } else {\n        if (domValue !== value) {\n            dom.value = value;\n        }\n    }\n}\n\nfunction processForm(vNode, dom, nextProps, isRender) {\n    var type = vNode.type;\n    if (type & Types.InputElement) {\n        processInput(vNode, dom, nextProps, isRender);\n    } else if (type & Types.TextareaElement) {\n        processTextarea(vNode, dom, nextProps, isRender);\n    } else if (type & Types.SelectElement) {\n        processSelect(vNode, dom, nextProps, isRender);\n    }\n}\n\nfunction render(vNode, parentDom, mountedQueue, parentVNode, isSVG) {\n    if (isNullOrUndefined(vNode)) return;\n    var isTrigger = true;\n    if (mountedQueue) {\n        isTrigger = false;\n    } else {\n        mountedQueue = new MountedQueue();\n    }\n    var dom = createElement(vNode, parentDom, mountedQueue, true /* isRender */, parentVNode, isSVG);\n    if (isTrigger) {\n        mountedQueue.trigger();\n    }\n    return dom;\n}\n\nfunction createElement(vNode, parentDom, mountedQueue, isRender, parentVNode, isSVG) {\n    var type = vNode.type;\n    if (type & Types.Element) {\n        return createHtmlElement(vNode, parentDom, mountedQueue, isRender, parentVNode, isSVG);\n    } else if (type & Types.Text) {\n        return createTextElement(vNode, parentDom);\n    } else if (type & Types.ComponentClassOrInstance) {\n        return createComponentClassOrInstance(vNode, parentDom, mountedQueue, null, isRender, parentVNode, isSVG);\n        // } else if (type & Types.ComponentFunction) {\n        // return createComponentFunction(vNode, parentDom, mountedQueue, isNotAppendChild, isRender);\n        // } else if (type & Types.ComponentInstance) {\n        // return createComponentInstance(vNode, parentDom, mountedQueue);\n    } else if (type & Types.HtmlComment) {\n        return createCommentElement(vNode, parentDom);\n    } else {\n        throw new Error('expect a vNode but got ' + vNode);\n    }\n}\n\nfunction createHtmlElement(vNode, parentDom, mountedQueue, isRender, parentVNode, isSVG) {\n    var type = vNode.type;\n\n    isSVG = isSVG || (type & Types.SvgElement) > 0;\n\n    var dom = documentCreateElement(vNode.tag, isSVG);\n    var children = vNode.children;\n    var props = vNode.props;\n    var className = vNode.className;\n\n    vNode.dom = dom;\n    vNode.parentVNode = parentVNode;\n\n    if (!isNullOrUndefined(children)) {\n        createElements(children, dom, mountedQueue, isRender, vNode, isSVG === true && vNode.tag !== 'foreignObject');\n    }\n\n    if (!isNullOrUndefined(className)) {\n        if (isSVG) {\n            dom.setAttribute('class', className);\n        } else {\n            dom.className = className;\n        }\n    }\n\n    if (hooks.beforeInsert) {\n        hooks.beforeInsert(vNode);\n    }\n\n    // in IE8, the select value will be set to the first option's value forcely\n    // when it is appended to parent dom. We change its value in processForm does not\n    // work. So processForm after it has be appended to parent dom.\n    if (parentDom) {\n        parentDom.appendChild(dom);\n    }\n    if (props !== EMPTY_OBJ) {\n        patchProps(null, vNode, isSVG, true);\n    }\n\n    var ref = vNode.ref;\n    if (!isNullOrUndefined(ref)) {\n        createRef(dom, ref, mountedQueue);\n    }\n\n    return dom;\n}\n\nfunction createTextElement(vNode, parentDom) {\n    var dom = doc.createTextNode(vNode.children);\n    vNode.dom = dom;\n\n    if (parentDom) {\n        parentDom.appendChild(dom);\n    }\n\n    return dom;\n}\n\nfunction createOrHydrateComponentClassOrInstance(vNode, parentDom, mountedQueue, lastVNode, isRender, parentVNode, isSVG, createDom) {\n    var props = vNode.props;\n    var instance = vNode.type & Types.ComponentClass ? new vNode.tag(props) : vNode.children;\n    instance.parentDom = parentDom;\n    instance.mountedQueue = mountedQueue;\n    instance.isRender = isRender;\n    instance.parentVNode = parentVNode;\n    instance.isSVG = isSVG;\n    instance.vNode = vNode;\n    vNode.children = instance;\n    vNode.parentVNode = parentVNode;\n\n    var dom = createDom(instance);\n    var ref = vNode.ref;\n\n    vNode.dom = dom;\n\n    if (typeof instance.mount === 'function') {\n        mountedQueue.push(function () {\n            return instance.mount(lastVNode, vNode);\n        });\n    }\n\n    if (typeof ref === 'function') {\n        ref(instance);\n    }\n\n    return dom;\n}\n\nfunction createComponentClassOrInstance(vNode, parentDom, mountedQueue, lastVNode, isRender, parentVNode, isSVG) {\n    return createOrHydrateComponentClassOrInstance(vNode, parentDom, mountedQueue, lastVNode, isRender, parentVNode, isSVG, function (instance) {\n        var dom = instance.init(lastVNode, vNode);\n        if (parentDom && (!lastVNode ||\n        // maybe we have reused the component and replaced the dom\n        lastVNode.dom !== dom && !dom.parentNode || !dom.parentNode.tagName)) {\n            parentDom.appendChild(dom);\n        }\n\n        return dom;\n    });\n}\n\n// export function createComponentFunction(vNode, parentDom, mountedQueue) {\n// const props = vNode.props;\n// const ref = vNode.ref;\n\n// createComponentFunctionVNode(vNode);\n\n// let children = vNode.children;\n// let dom;\n// // support ComponentFunction return an array for macro usage\n// if (isArray(children)) {\n// dom = [];\n// for (let i = 0; i < children.length; i++) {\n// dom.push(createElement(children[i], parentDom, mountedQueue));\n// }\n// } else {\n// dom = createElement(vNode.children, parentDom, mountedQueue);\n// }\n// vNode.dom = dom;\n\n// // if (parentDom) {\n// // parentDom.appendChild(dom);\n// // }\n\n// if (ref) {\n// createRef(dom, ref, mountedQueue);\n// }\n\n// return dom;\n// }\n\nfunction createCommentElement(vNode, parentDom) {\n    var dom = doc.createComment(vNode.children);\n    vNode.dom = dom;\n\n    if (parentDom) {\n        parentDom.appendChild(dom);\n    }\n\n    return dom;\n}\n\n// export function createComponentFunctionVNode(vNode) {\n// let result = vNode.tag(vNode.props);\n// if (isStringOrNumber(result)) {\n// result = createTextVNode(result);\n// } else if (process.env.NODE_ENV !== 'production') {\n// if (isArray(result)) {\n// throw new Error(`ComponentFunction ${vNode.tag.name} returned a invalid vNode`);\n// }\n// }\n\n// vNode.children = result;\n\n// return vNode;\n// }\n\nfunction createElements(vNodes, parentDom, mountedQueue, isRender, parentVNode, isSVG) {\n    if (isStringOrNumber(vNodes)) {\n        setTextContent(parentDom, vNodes);\n    } else if (isArray(vNodes)) {\n        var cloned = false;\n        for (var i = 0; i < vNodes.length; i++) {\n            var child = vNodes[i];\n            if (child.dom) {\n                if (!cloned) {\n                    parentVNode.children = vNodes = vNodes.slice(0);\n                    cloned = true;\n                }\n                vNodes[i] = child = directClone(child);\n            }\n            createElement(child, parentDom, mountedQueue, isRender, parentVNode, isSVG);\n        }\n    } else {\n        if (vNodes.dom) {\n            parentVNode.children = vNodes = directClone(vNodes);\n        }\n        createElement(vNodes, parentDom, mountedQueue, isRender, parentVNode, isSVG);\n    }\n}\n\nfunction removeElements(vNodes, parentDom) {\n    if (isNullOrUndefined(vNodes)) {\n        return;\n    } else if (isArray(vNodes)) {\n        for (var i = 0; i < vNodes.length; i++) {\n            removeElement(vNodes[i], parentDom);\n        }\n    } else {\n        removeElement(vNodes, parentDom);\n    }\n}\n\nfunction removeElement(vNode, parentDom, nextVNode) {\n    var type = vNode.type;\n    if (type & Types.Element) {\n        return removeHtmlElement(vNode, parentDom);\n    } else if (type & Types.TextElement) {\n        return removeText(vNode, parentDom);\n    } else if (type & Types.ComponentClassOrInstance) {\n        return removeComponentClassOrInstance(vNode, parentDom, nextVNode);\n    } else if (type & Types.ComponentFunction) {\n        return removeComponentFunction(vNode, parentDom);\n    }\n}\n\nfunction removeHtmlElement(vNode, parentDom) {\n    var ref = vNode.ref;\n    var props = vNode.props;\n    var dom = vNode.dom;\n\n    if (ref) {\n        ref(null);\n    }\n\n    removeElements(vNode.children, null);\n\n    // remove event\n    for (var name in props) {\n        var prop = props[name];\n        if (!isNullOrUndefined(prop) && isEventProp(name)) {\n            handleEvent(name.substr(3), prop, null, dom);\n        }\n    }\n\n    if (parentDom) {\n        parentDom.removeChild(dom);\n    }\n}\n\nfunction removeText(vNode, parentDom) {\n    if (parentDom) {\n        parentDom.removeChild(vNode.dom);\n    }\n}\n\nfunction removeComponentFunction(vNode, parentDom) {\n    var ref = vNode.ref;\n    if (ref) {\n        ref(null);\n    }\n    removeElement(vNode.children, parentDom);\n}\n\nfunction removeComponentClassOrInstance(vNode, parentDom, nextVNode) {\n    var instance = vNode.children;\n    var ref = vNode.ref;\n\n    if (typeof instance.destroy === 'function') {\n        instance._isRemoveDirectly = !!parentDom;\n        instance.destroy(vNode, nextVNode, parentDom);\n    }\n\n    if (ref) {\n        ref(null);\n    }\n\n    // instance destroy method will remove everything\n    // removeElements(vNode.props.children, null);\n\n    if (parentDom) {\n        removeChild(parentDom, vNode);\n    }\n}\n\n\n\nfunction replaceChild(parentDom, lastVNode, nextVNode) {\n    var lastDom = lastVNode.dom;\n    var nextDom = nextVNode.dom;\n    var parentNode = lastDom.parentNode;\n    // maybe the lastDom has be moved\n    if (!parentDom || parentNode !== parentDom) parentDom = parentNode;\n    if (lastDom._unmount) {\n        lastDom._unmount(lastVNode, parentDom);\n        if (!nextDom.parentNode) {\n            if (parentDom.lastChild === lastDom) {\n                parentDom.appendChild(nextDom);\n            } else {\n                parentDom.insertBefore(nextDom, lastDom.nextSibling);\n            }\n        }\n    } else {\n        parentDom.replaceChild(nextDom, lastDom);\n    }\n}\n\nfunction removeChild(parentDom, vNode) {\n    var dom = vNode.dom;\n    if (dom._unmount) {\n        dom._unmount(vNode, parentDom);\n    } else {\n        parentDom.removeChild(dom);\n    }\n}\n\nfunction createRef(dom, ref, mountedQueue) {\n    if (typeof ref === 'function') {\n        // mountedQueue.push(() => ref(dom));\n        // set ref immediately, because we have unset it before\n        ref(dom);\n    } else {\n        throw new Error('ref must be a function, but got \"' + JSON.stringify(ref) + '\"');\n    }\n}\n\nfunction documentCreateElement(tag, isSVG) {\n    if (isSVG === true) {\n        return doc.createElementNS(svgNS, tag);\n    } else {\n        return doc.createElement(tag);\n    }\n}\n\nfunction patch(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG) {\n    var isTrigger = true;\n    if (mountedQueue) {\n        isTrigger = false;\n    } else {\n        mountedQueue = new MountedQueue();\n    }\n    var dom = patchVNode(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG);\n    if (isTrigger) {\n        mountedQueue.trigger();\n    }\n    return dom;\n}\n\nfunction patchVNode(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG) {\n    var nextType = nextVNode.type;\n    var lastType = lastVNode.type;\n\n    if (nextType & Types.Element) {\n        if (lastType & Types.Element) {\n            patchElement(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG);\n        } else {\n            replaceElement(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG);\n        }\n    } else if (nextType & Types.TextElement) {\n        if (lastType === nextType) {\n            patchText(lastVNode, nextVNode);\n        } else {\n            replaceElement(lastVNode, nextVNode, parentDom, mountedQueue, isSVG);\n        }\n    } else if (nextType & Types.ComponentClass) {\n        if (lastType & Types.ComponentClass) {\n            patchComponentClass(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG);\n        } else {\n            replaceElement(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG);\n        }\n        // } else if (nextType & Types.ComponentFunction) {\n        // if (lastType & Types.ComponentFunction) {\n        // patchComponentFunction(lastVNode, nextVNode, parentDom, mountedQueue);\n        // } else {\n        // replaceElement(lastVNode, nextVNode, parentDom, mountedQueue);\n        // }\n    } else if (nextType & Types.ComponentInstance) {\n        if (lastType & Types.ComponentInstance) {\n            patchComponentInstance(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG);\n        } else {\n            replaceElement(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG);\n        }\n    }\n\n    return nextVNode.dom;\n}\n\nfunction patchElement(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG) {\n    var dom = lastVNode.dom;\n    var lastProps = lastVNode.props;\n    var nextProps = nextVNode.props;\n    var lastChildren = lastVNode.children;\n    var nextChildren = nextVNode.children;\n    var lastClassName = lastVNode.className;\n    var nextClassName = nextVNode.className;\n    var nextType = nextVNode.type;\n\n    nextVNode.dom = dom;\n    nextVNode.parentVNode = parentVNode;\n\n    isSVG = isSVG || (nextType & Types.SvgElement) > 0;\n\n    if (lastVNode.tag !== nextVNode.tag || lastVNode.key !== nextVNode.key) {\n        replaceElement(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG);\n    } else {\n        if (lastChildren !== nextChildren) {\n            patchChildren(lastChildren, nextChildren, dom, mountedQueue, nextVNode, isSVG === true && nextVNode.tag !== 'foreignObject');\n        }\n\n        if (lastProps !== nextProps) {\n            patchProps(lastVNode, nextVNode, isSVG, false);\n        }\n\n        if (lastClassName !== nextClassName) {\n            if (isNullOrUndefined(nextClassName)) {\n                dom.removeAttribute('class');\n            } else {\n                if (isSVG) {\n                    dom.setAttribute('class', nextClassName);\n                } else {\n                    dom.className = nextClassName;\n                }\n            }\n        }\n\n        var lastRef = lastVNode.ref;\n        var nextRef = nextVNode.ref;\n        if (lastRef !== nextRef) {\n            if (!isNullOrUndefined(lastRef)) {\n                lastRef(null);\n            }\n            if (!isNullOrUndefined(nextRef)) {\n                createRef(dom, nextRef, mountedQueue);\n            }\n        }\n    }\n}\n\nfunction patchComponentClass(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG) {\n    var lastTag = lastVNode.tag;\n    var nextTag = nextVNode.tag;\n    var dom = lastVNode.dom;\n\n    var instance = void 0;\n    var newDom = void 0;\n\n    if (lastTag !== nextTag || lastVNode.key !== nextVNode.key) {\n        // we should call this remove function in component's init method\n        // because it should be destroyed until async component has rendered\n        // removeComponentClassOrInstance(lastVNode, null, nextVNode);\n        newDom = createComponentClassOrInstance(nextVNode, parentDom, mountedQueue, lastVNode, false, parentVNode, isSVG);\n    } else {\n        instance = lastVNode.children;\n        instance.mountedQueue = mountedQueue;\n        if (instance.mounted) {\n            instance.isRender = false;\n        }\n        instance.parentVNode = parentVNode;\n        instance.vNode = nextVNode;\n        instance.isSVG = isSVG;\n        nextVNode.children = instance;\n        nextVNode.parentVNode = parentVNode;\n        newDom = instance.update(lastVNode, nextVNode);\n        nextVNode.dom = newDom;\n\n        // for intact.js, the dom will not be removed and\n        // the component will not be destoryed, so the ref\n        // function need be called in update method.\n        var lastRef = lastVNode.ref;\n        var nextRef = nextVNode.ref;\n        if (lastRef !== nextRef) {\n            if (!isNullOrUndefined(lastRef)) {\n                lastRef(null);\n            }\n            if (!isNullOrUndefined(nextRef)) {\n                nextRef(instance);\n            }\n        }\n    }\n\n    // perhaps the dom has be replaced\n    if (dom !== newDom && dom.parentNode &&\n    // when dom has be replaced, its parentNode maybe be fragment in IE8\n    dom.parentNode.nodeName !== '#document-fragment') {\n        replaceChild(parentDom, lastVNode, nextVNode);\n    }\n}\n\nfunction patchComponentInstance(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG) {\n    var lastInstance = lastVNode.children;\n    var nextInstance = nextVNode.children;\n    var dom = lastVNode.dom;\n\n    var newDom = void 0;\n\n    if (lastInstance !== nextInstance) {\n        // removeComponentClassOrInstance(lastVNode, null, nextVNode);\n        newDom = createComponentClassOrInstance(nextVNode, parentDom, mountedQueue, lastVNode, false, parentVNode, isSVG);\n    } else {\n        lastInstance.mountedQueue = mountedQueue;\n        if (lastInstance.mounted) {\n            lastInstance.isRender = false;\n        }\n        lastInstance.vNode = nextVNode;\n        lastInstance.parentVNode = parentVNode;\n        nextVNode.parentVNode = parentVNode;\n        newDom = lastInstance.update(lastVNode, nextVNode);\n        nextVNode.dom = newDom;\n\n        var ref = nextVNode.ref;\n        if (typeof ref === 'function') {\n            ref(instance);\n        }\n    }\n\n    if (dom !== newDom && dom.parentNode &&\n    // when dom has be replaced, its parentNode maybe be fragment in IE8\n    dom.parentNode.nodeName !== '#document-fragment') {\n        replaceChild(parentDom, lastVNode, nextVNode);\n    }\n}\n\n// function patchComponentFunction(lastVNode, nextVNode, parentDom, mountedQueue) {\n// const lastTag = lastVNode.tag;\n// const nextTag = nextVNode.tag;\n\n// if (lastVNode.key !== nextVNode.key) {\n// removeElements(lastVNode.children, parentDom);\n// createComponentFunction(nextVNode, parentDom, mountedQueue);\n// } else {\n// nextVNode.dom = lastVNode.dom;\n// createComponentFunctionVNode(nextVNode);\n// patchChildren(lastVNode.children, nextVNode.children, parentDom, mountedQueue);\n// }\n// }\n\nfunction patchChildren(lastChildren, nextChildren, parentDom, mountedQueue, parentVNode, isSVG) {\n    if (isNullOrUndefined(lastChildren)) {\n        if (!isNullOrUndefined(nextChildren)) {\n            createElements(nextChildren, parentDom, mountedQueue, false, parentVNode, isSVG);\n        }\n    } else if (isNullOrUndefined(nextChildren)) {\n        if (isStringOrNumber(lastChildren)) {\n            setTextContent(parentDom, '');\n        } else {\n            removeElements(lastChildren, parentDom);\n        }\n    } else if (isStringOrNumber(nextChildren)) {\n        if (isStringOrNumber(lastChildren)) {\n            setTextContent(parentDom, nextChildren);\n        } else {\n            removeElements(lastChildren, parentDom);\n            setTextContent(parentDom, nextChildren);\n        }\n    } else if (isArray(lastChildren)) {\n        if (isArray(nextChildren)) {\n            patchChildrenByKey(lastChildren, nextChildren, parentDom, mountedQueue, parentVNode, isSVG);\n        } else {\n            removeElements(lastChildren, parentDom);\n            createElement(nextChildren, parentDom, mountedQueue, false, parentVNode, isSVG);\n        }\n    } else if (isArray(nextChildren)) {\n        if (isStringOrNumber(lastChildren)) {\n            setTextContent(parentDom, '');\n        } else {\n            removeElement(lastChildren, parentDom);\n        }\n        createElements(nextChildren, parentDom, mountedQueue, false, parentVNode, isSVG);\n    } else if (isStringOrNumber(lastChildren)) {\n        setTextContent(parentDom, '');\n        createElement(nextChildren, parentDom, mountedQueue, false, parentVNode, isSVG);\n    } else {\n        patchVNode(lastChildren, nextChildren, parentDom, mountedQueue, parentVNode, isSVG);\n    }\n}\n\nfunction patchChildrenByKey(a, b, dom, mountedQueue, parentVNode, isSVG) {\n    var aLength = a.length;\n    var bLength = b.length;\n    var aEnd = aLength - 1;\n    var bEnd = bLength - 1;\n    var aStart = 0;\n    var bStart = 0;\n    var i = void 0;\n    var j = void 0;\n    var aNode = void 0;\n    var bNode = void 0;\n    var nextNode = void 0;\n    var nextPos = void 0;\n    var node = void 0;\n    var aStartNode = a[aStart];\n    var bStartNode = b[bStart];\n    var aEndNode = a[aEnd];\n    var bEndNode = b[bEnd];\n\n    outer: while (true) {\n        while (aStartNode.key === bStartNode.key) {\n            patchVNode(aStartNode, bStartNode, dom, mountedQueue, parentVNode, isSVG);\n            ++aStart;\n            ++bStart;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aStartNode = a[aStart];\n            bStartNode = b[bStart];\n        }\n        while (aEndNode.key === bEndNode.key) {\n            patchVNode(aEndNode, bEndNode, dom, mountedQueue, parentVNode, isSVG);\n            --aEnd;\n            --bEnd;\n            if (aEnd < aStart || bEnd < bStart) {\n                break outer;\n            }\n            aEndNode = a[aEnd];\n            bEndNode = b[bEnd];\n        }\n\n        if (aEndNode.key === bStartNode.key) {\n            patchVNode(aEndNode, bStartNode, dom, mountedQueue, parentVNode, isSVG);\n            dom.insertBefore(bStartNode.dom, aStartNode.dom);\n            --aEnd;\n            ++bStart;\n            aEndNode = a[aEnd];\n            bStartNode = b[bStart];\n            continue;\n        }\n\n        if (aStartNode.key === bEndNode.key) {\n            patchVNode(aStartNode, bEndNode, dom, mountedQueue, parentVNode, isSVG);\n            insertOrAppend(bEnd, bLength, bEndNode.dom, b, dom);\n            ++aStart;\n            --bEnd;\n            aStartNode = a[aStart];\n            bEndNode = b[bEnd];\n            continue;\n        }\n        break;\n    }\n\n    if (aStart > aEnd) {\n        while (bStart <= bEnd) {\n            insertOrAppend(bEnd, bLength, createElement(b[bStart], null, mountedQueue, false, parentVNode, isSVG), b, dom, true /* detectParent: for animate, if the parentNode exists, then do nothing*/\n            );\n            ++bStart;\n        }\n    } else if (bStart > bEnd) {\n        while (aStart <= aEnd) {\n            removeElement(a[aStart], dom);\n            ++aStart;\n        }\n    } else {\n        aLength = aEnd - aStart + 1;\n        bLength = bEnd - bStart + 1;\n        var sources = new Array(bLength);\n        for (i = 0; i < bLength; i++) {\n            sources[i] = -1;\n        }\n        var moved = false;\n        var pos = 0;\n        var patched = 0;\n\n        if (bLength <= 4 || aLength * bLength <= 16) {\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n                if (patched < bLength) {\n                    for (j = bStart; j <= bEnd; j++) {\n                        bNode = b[j];\n                        if (aNode.key === bNode.key) {\n                            sources[j - bStart] = i;\n                            if (pos > j) {\n                                moved = true;\n                            } else {\n                                pos = j;\n                            }\n                            patchVNode(aNode, bNode, dom, mountedQueue, parentVNode, isSVG);\n                            ++patched;\n                            a[i] = null;\n                            break;\n                        }\n                    }\n                }\n            }\n        } else {\n            var keyIndex = new SimpleMap();\n            for (i = bStart; i <= bEnd; i++) {\n                keyIndex.set(b[i].key, i);\n            }\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n                if (patched < bLength) {\n                    j = keyIndex.get(aNode.key);\n                    if (j !== undefined) {\n                        bNode = b[j];\n                        sources[j - bStart] = i;\n                        if (pos > j) {\n                            moved = true;\n                        } else {\n                            pos = j;\n                        }\n                        patchVNode(aNode, bNode, dom, mountedQueue, parentVNode, isSVG);\n                        ++patched;\n                        a[i] = null;\n                    }\n                }\n            }\n        }\n        if (aLength === a.length && patched === 0) {\n            // removeAllChildren(dom, a);\n            // children maybe have animation\n            removeElements(a, dom);\n            while (bStart < bLength) {\n                createElement(b[bStart], dom, mountedQueue, false, parentVNode, isSVG);\n                ++bStart;\n            }\n        } else {\n            // some browsers, e.g. ie, must insert before remove for some element,\n            // e.g. select/option, otherwise the selected property will be weird\n            if (moved) {\n                var seq = lisAlgorithm(sources);\n                j = seq.length - 1;\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        insertOrAppend(pos, b.length, createElement(b[pos], null, mountedQueue, false, parentVNode, isSVG), b, dom);\n                    } else {\n                        if (j < 0 || i !== seq[j]) {\n                            pos = i + bStart;\n                            insertOrAppend(pos, b.length, b[pos].dom, b, dom);\n                        } else {\n                            --j;\n                        }\n                    }\n                }\n            } else if (patched !== bLength) {\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        insertOrAppend(pos, b.length, createElement(b[pos], null, mountedQueue, false, parentVNode, isSVG), b, dom, true);\n                    }\n                }\n            }\n            i = aLength - patched;\n            while (i > 0) {\n                aNode = a[aStart++];\n                if (aNode !== null) {\n                    removeElement(aNode, dom);\n                    --i;\n                }\n            }\n        }\n    }\n}\n\nfunction lisAlgorithm(arr) {\n    var p = arr.slice(0);\n    var result = [0];\n    var i = void 0;\n    var j = void 0;\n    var u = void 0;\n    var v = void 0;\n    var c = void 0;\n    var len = arr.length;\n    for (i = 0; i < len; i++) {\n        var arrI = arr[i];\n        if (arrI === -1) {\n            continue;\n        }\n        j = result[result.length - 1];\n        if (arr[j] < arrI) {\n            p[i] = j;\n            result.push(i);\n            continue;\n        }\n        u = 0;\n        v = result.length - 1;\n        while (u < v) {\n            c = (u + v) / 2 | 0;\n            if (arr[result[c]] < arrI) {\n                u = c + 1;\n            } else {\n                v = c;\n            }\n        }\n        if (arrI < arr[result[u]]) {\n            if (u > 0) {\n                p[i] = result[u - 1];\n            }\n            result[u] = i;\n        }\n    }\n    u = result.length;\n    v = result[u - 1];\n    while (u-- > 0) {\n        result[u] = v;\n        v = p[v];\n    }\n    return result;\n}\n\nfunction insertOrAppend(pos, length, newDom, nodes, dom, detectParent) {\n    var nextPos = pos + 1;\n    // if (detectParent && newDom.parentNode) {\n    // return;\n    // } else\n    if (nextPos < length) {\n        dom.insertBefore(newDom, nodes[nextPos].dom);\n    } else {\n        dom.appendChild(newDom);\n    }\n}\n\nfunction replaceElement(lastVNode, nextVNode, parentDom, mountedQueue, parentVNode, isSVG) {\n    removeElement(lastVNode, null, nextVNode);\n    createElement(nextVNode, null, mountedQueue, false, parentVNode, isSVG);\n    replaceChild(parentDom, lastVNode, nextVNode);\n}\n\nfunction patchText(lastVNode, nextVNode, parentDom) {\n    var nextText = nextVNode.children;\n    var dom = lastVNode.dom;\n    nextVNode.dom = dom;\n    if (lastVNode.children !== nextText) {\n        dom.nodeValue = nextText;\n    }\n}\n\nfunction patchProps(lastVNode, nextVNode, isSVG, isRender) {\n    var lastProps = lastVNode && lastVNode.props || EMPTY_OBJ;\n    var nextProps = nextVNode.props;\n    var dom = nextVNode.dom;\n    var prop = void 0;\n\n    var isInputOrTextArea = (nextVNode.type & (Types.InputElement | Types.TextareaElement)) > 0;\n    if (nextProps !== EMPTY_OBJ) {\n        var isFormElement = (nextVNode.type & Types.FormElement) > 0;\n        for (prop in nextProps) {\n            patchProp(prop, lastProps[prop], nextProps[prop], dom, isFormElement, isSVG, isInputOrTextArea);\n        }\n        if (isFormElement) {\n            processForm(nextVNode, dom, nextProps, isRender);\n        }\n    }\n    if (lastProps !== EMPTY_OBJ) {\n        for (prop in lastProps) {\n            if (!isSkipProp(prop) && isNullOrUndefined(nextProps[prop]) && !isNullOrUndefined(lastProps[prop])) {\n                removeProp(prop, lastProps[prop], dom, isInputOrTextArea);\n            }\n        }\n    }\n}\n\nfunction patchProp(prop, lastValue, nextValue, dom, isFormElement, isSVG, isInputOrTextArea) {\n    if (lastValue !== nextValue) {\n        if (isSkipProp(prop) || isFormElement && prop === 'value') {\n            return;\n        } else if (booleanProps[prop]) {\n            dom[prop] = !!nextValue;\n        } else if (strictProps[prop]) {\n            var value = isNullOrUndefined(nextValue) ? '' : nextValue;\n            // IE8 the value of option is equal to its text as default\n            // so set it forcely\n            if (dom[prop] !== value || browser.isIE8) {\n                dom[prop] = value;\n            }\n            // add a private property _value for selecting an non-string value \n            if (prop === 'value') {\n                dom._value = value;\n            }\n        } else if (isNullOrUndefined(nextValue)) {\n            removeProp(prop, lastValue, dom, isInputOrTextArea);\n        } else if (isEventProp(prop)) {\n            handleEvent(prop.substr(3), lastValue, nextValue, dom);\n        } else if (isObject$1(nextValue)) {\n            patchPropByObject(prop, lastValue, nextValue, dom, isInputOrTextArea);\n        } else if (prop === 'innerHTML') {\n            dom.innerHTML = nextValue;\n        } else {\n            if (isSVG && namespaces[prop]) {\n                dom.setAttributeNS(namespaces[prop], prop, nextValue);\n            } else {\n                // https://github.com/Javey/Intact/issues/19\n                // IE 10/11 set placeholder will trigger input event\n                if (isInputOrTextArea && browser.isIE && (browser.version === 10 || browser.version === 11) && prop === 'placeholder') {\n                    ignoreInputEvent(dom);\n                    if (nextValue !== '') {\n                        addFocusEvent(dom);\n                    } else {\n                        removeFocusEvent(dom);\n                    }\n                }\n                dom.setAttribute(prop, nextValue);\n            }\n        }\n    }\n}\n\nfunction ignoreInputEvent(dom) {\n    if (!dom.__ignoreInputEvent) {\n        var cb = function cb(e) {\n            e.stopImmediatePropagation();\n            delete dom.__ignoreInputEvent;\n            dom.removeEventListener('input', cb);\n        };\n        dom.addEventListener('input', cb);\n        dom.__ignoreInputEvent = true;\n    }\n}\n\nfunction addFocusEvent(dom) {\n    if (!dom.__addFocusEvent) {\n        var ignore = false;\n        var inputCb = function inputCb(e) {\n            if (ignore) e.stopImmediatePropagation();\n            ignore = false;\n        };\n        var focusCb = function focusCb() {\n            ignore = true;\n            // if we call input.focus(), the input event will not\n            // be called, so we reset it next tick\n            setTimeout(function () {\n                ignore = false;\n            });\n        };\n        dom.addEventListener('input', inputCb);\n        dom.addEventListener('focusin', focusCb);\n        dom.addEventListener('focusout', focusCb);\n        dom.__addFocusEvent = {\n            focusCb: focusCb, inputCb: inputCb\n        };\n    }\n}\n\nfunction removeFocusEvent(dom) {\n    var cbs = dom.__addFocusEvent;\n    if (cbs) {\n        dom.addEventListener('input', cbs.inputCb);\n        dom.addEventListener('focusin', cbs.focusCb);\n        dom.addEventListener('focusout', cbs.focusCb);\n        delete dom.__addFocusEvent;\n    }\n}\n\nfunction removeProp(prop, lastValue, dom, isInputOrTextArea) {\n    if (!isNullOrUndefined(lastValue)) {\n        switch (prop) {\n            case 'value':\n                dom.value = '';\n                return;\n            case 'style':\n                dom.removeAttribute('style');\n                return;\n            case 'attributes':\n                for (var key in lastValue) {\n                    dom.removeAttribute(key);\n                }\n                return;\n            case 'dataset':\n                removeDataset(lastValue, dom);\n                return;\n            case 'innerHTML':\n                dom.innerHTML = '';\n                return;\n            default:\n                break;\n        }\n\n        if (booleanProps[prop]) {\n            dom[prop] = false;\n        } else if (isEventProp(prop)) {\n            handleEvent(prop.substr(3), lastValue, null, dom);\n        } else if (isObject$1(lastValue)) {\n            var domProp = dom[prop];\n            try {\n                dom[prop] = undefined;\n                delete dom[prop];\n            } catch (e) {\n                for (var _key in lastValue) {\n                    delete domProp[_key];\n                }\n            }\n        } else {\n            if (isInputOrTextArea && browser.isIE && (browser.version === 10 || browser.version === 11) && prop === 'placeholder') {\n                removeFocusEvent(dom);\n            }\n            dom.removeAttribute(prop);\n        }\n    }\n}\n\nvar removeDataset = browser.isIE || browser.isSafari ? function (lastValue, dom) {\n    for (var key in lastValue) {\n        dom.removeAttribute('data-' + kebabCase(key));\n    }\n} : function (lastValue, dom) {\n    var domProp = dom.dataset;\n    for (var key in lastValue) {\n        delete domProp[key];\n    }\n};\n\nfunction patchPropByObject(prop, lastValue, nextValue, dom, isInputOrTextArea) {\n    if (lastValue && !isObject$1(lastValue) && !isNullOrUndefined(lastValue)) {\n        removeProp(prop, lastValue, dom, isInputOrTextArea);\n        lastValue = null;\n    }\n    switch (prop) {\n        case 'attributes':\n            return patchAttributes(lastValue, nextValue, dom);\n        case 'style':\n            return patchStyle(lastValue, nextValue, dom);\n        case 'dataset':\n            return patchDataset(prop, lastValue, nextValue, dom);\n        default:\n            return patchObject(prop, lastValue, nextValue, dom);\n    }\n}\n\nvar patchDataset = browser.isIE ? function patchDataset(prop, lastValue, nextValue, dom) {\n    var hasRemoved = {};\n    var key = void 0;\n    var value = void 0;\n\n    for (key in nextValue) {\n        var dataKey = 'data-' + kebabCase(key);\n        value = nextValue[key];\n        if (isNullOrUndefined(value)) {\n            dom.removeAttribute(dataKey);\n            hasRemoved[key] = true;\n        } else {\n            dom.setAttribute(dataKey, value);\n        }\n    }\n\n    if (!isNullOrUndefined(lastValue)) {\n        for (key in lastValue) {\n            if (isNullOrUndefined(nextValue[key]) && !hasRemoved[key]) {\n                dom.removeAttribute('data-' + kebabCase(key));\n            }\n        }\n    }\n} : patchObject;\n\nvar _cache = {};\nvar uppercasePattern = /[A-Z]/g;\nfunction kebabCase(word) {\n    if (!_cache[word]) {\n        _cache[word] = word.replace(uppercasePattern, function (item) {\n            return '-' + item.toLowerCase();\n        });\n    }\n    return _cache[word];\n}\n\nfunction patchObject(prop, lastValue, nextValue, dom) {\n    var domProps = dom[prop];\n    if (isNullOrUndefined(domProps)) {\n        domProps = dom[prop] = {};\n    }\n    var key = void 0;\n    var value = void 0;\n    for (key in nextValue) {\n        domProps[key] = nextValue[key];\n    }\n    if (!isNullOrUndefined(lastValue)) {\n        for (key in lastValue) {\n            if (isNullOrUndefined(nextValue[key])) {\n                delete domProps[key];\n            }\n        }\n    }\n}\n\nfunction patchAttributes(lastValue, nextValue, dom) {\n    var hasRemoved = {};\n    var key = void 0;\n    var value = void 0;\n    for (key in nextValue) {\n        value = nextValue[key];\n        if (isNullOrUndefined(value)) {\n            dom.removeAttribute(key);\n            hasRemoved[key] = true;\n        } else {\n            dom.setAttribute(key, value);\n        }\n    }\n    if (!isNullOrUndefined(lastValue)) {\n        for (key in lastValue) {\n            if (isNullOrUndefined(nextValue[key]) && !hasRemoved[key]) {\n                dom.removeAttribute(key);\n            }\n        }\n    }\n}\n\nfunction patchStyle(lastValue, nextValue, dom) {\n    var domStyle = dom.style;\n    var hasRemoved = {};\n    var key = void 0;\n    var value = void 0;\n    for (key in nextValue) {\n        value = nextValue[key];\n        if (isNullOrUndefined(value)) {\n            domStyle[key] = '';\n            hasRemoved[key] = true;\n        } else {\n            domStyle[key] = value;\n        }\n    }\n    if (!isNullOrUndefined(lastValue)) {\n        for (key in lastValue) {\n            if (isNullOrUndefined(nextValue[key]) && !hasRemoved[key]) {\n                domStyle[key] = '';\n            }\n        }\n    }\n}\n\nfunction toString$2(vNode, parent, disableSplitText, firstChild) {\n    var type = vNode.type;\n    var tag = vNode.tag;\n    var props = vNode.props;\n    var children = vNode.children;\n    vNode.parentVNode = parent;\n\n    var html = void 0;\n    if (type & Types.ComponentClass) {\n        var instance = new tag(props);\n        instance.parentVNode = parent;\n        instance.vNode = vNode;\n        vNode.children = instance;\n        html = instance.toString();\n    } else if (type & Types.ComponentInstance) {\n        children.parentVNode = parent;\n        children.vNode = vNode;\n        html = children.toString();\n    } else if (type & Types.Element) {\n        var innerHTML = void 0;\n        html = '<' + tag;\n\n        if (!isNullOrUndefined(vNode.className)) {\n            html += ' class=\"' + escapeText(vNode.className) + '\"';\n        }\n\n        if (props !== EMPTY_OBJ) {\n            for (var prop in props) {\n                var value = props[prop];\n\n                if (prop === 'innerHTML') {\n                    innerHTML = value;\n                } else if (prop === 'style') {\n                    html += ' style=\"' + renderStylesToString(value) + '\"';\n                } else if (prop === 'children' || prop === 'className' || prop === 'key' || prop === 'ref') {\n                    // ignore\n                } else if (prop === 'defaultValue') {\n                    if (isNullOrUndefined(props.value) && !isNullOrUndefined(value)) {\n                        html += ' value=\"' + (isString$1(value) ? escapeText(value) : value) + '\"';\n                    }\n                } else if (prop === 'defaultChecked') {\n                    if (isNullOrUndefined(props.checked) && value === true) {\n                        html += ' checked';\n                    }\n                } else if (prop === 'attributes') {\n                    html += renderAttributesToString(value);\n                } else if (prop === 'dataset') {\n                    html += renderDatasetToString(value);\n                } else if (tag === 'option' && prop === 'value') {\n                    html += renderAttributeToString(prop, value);\n                    if (parent && value === parent.props.value) {\n                        html += ' selected';\n                    }\n                } else {\n                    html += renderAttributeToString(prop, value);\n                }\n            }\n        }\n\n        if (selfClosingTags[tag]) {\n            html += ' />';\n        } else {\n            html += '>';\n            if (innerHTML) {\n                html += innerHTML;\n            } else if (!isNullOrUndefined(children)) {\n                if (isString$1(children)) {\n                    html += children === '' ? ' ' : escapeText(children);\n                } else if (isNumber(children)) {\n                    html += children;\n                } else if (isArray(children)) {\n                    var index = -1;\n                    for (var i = 0; i < children.length; i++) {\n                        var child = children[i];\n                        if (isString$1(child)) {\n                            html += child === '' ? ' ' : escapeText(child);\n                        } else if (isNumber(child)) {\n                            html += child;\n                        } else if (!isNullOrUndefined(child)) {\n                            if (!(child.type & Types.Text)) {\n                                index = -1;\n                            } else {\n                                index++;\n                            }\n                            html += toString$2(child, vNode, disableSplitText, index === 0);\n                        }\n                    }\n                } else {\n                    html += toString$2(children, vNode, disableSplitText, true);\n                }\n            }\n\n            html += '</' + tag + '>';\n        }\n    } else if (type & Types.Text) {\n        html = (firstChild || disableSplitText ? '' : '<!---->') + (children === '' ? ' ' : escapeText(children));\n    } else if (type & Types.HtmlComment) {\n        html = '<!--' + children + '-->';\n    } else if (type & Types.UnescapeText) {\n        html = isNullOrUndefined(children) ? '' : children;\n    } else {\n        throw new Error('Unknown vNode: ' + vNode);\n    }\n\n    return html;\n}\n\nfunction escapeText(text) {\n    var result = text;\n    var escapeString = \"\";\n    var start = 0;\n    var i = void 0;\n    for (i = 0; i < text.length; i++) {\n        switch (text.charCodeAt(i)) {\n            case 34:\n                // \"\n                escapeString = \"&quot;\";\n                break;\n            case 39:\n                // \\\n                escapeString = \"&#039;\";\n                break;\n            case 38:\n                // &\n                escapeString = \"&amp;\";\n                break;\n            case 60:\n                // <\n                escapeString = \"&lt;\";\n                break;\n            case 62:\n                // >\n                escapeString = \"&gt;\";\n                break;\n            default:\n                continue;\n        }\n        if (start) {\n            result += text.slice(start, i);\n        } else {\n            result = text.slice(start, i);\n        }\n        result += escapeString;\n        start = i + 1;\n    }\n    if (start && i !== start) {\n        return result + text.slice(start, i);\n    }\n    return result;\n}\n\nfunction isString$1(o) {\n    return typeof o === 'string';\n}\n\nfunction isNumber(o) {\n    return typeof o === 'number';\n}\n\nfunction renderStylesToString(styles) {\n    if (isStringOrNumber(styles)) {\n        return styles;\n    } else {\n        var renderedString = \"\";\n        for (var styleName in styles) {\n            var value = styles[styleName];\n\n            if (isStringOrNumber(value)) {\n                renderedString += kebabCase(styleName) + ':' + value + ';';\n            }\n        }\n        return renderedString;\n    }\n}\n\nfunction renderDatasetToString(dataset) {\n    var renderedString = '';\n    for (var key in dataset) {\n        var dataKey = 'data-' + kebabCase(key);\n        var value = dataset[key];\n        if (isString$1(value)) {\n            renderedString += ' ' + dataKey + '=\"' + escapeText(value) + '\"';\n        } else if (isNumber(value)) {\n            renderedString += ' ' + dataKey + '=\"' + value + '\"';\n        } else if (value === true) {\n            renderedString += ' ' + dataKey + '=\"true\"';\n        }\n    }\n    return renderedString;\n}\n\nfunction renderAttributesToString(attributes) {\n    var renderedString = '';\n    for (var key in attributes) {\n        renderedString += renderAttributeToString(key, attributes[key]);\n    }\n    return renderedString;\n}\n\nfunction renderAttributeToString(key, value) {\n    if (isString$1(value)) {\n        return ' ' + key + '=\"' + escapeText(value) + '\"';\n    } else if (isNumber(value)) {\n        return ' ' + key + '=\"' + value + '\"';\n    } else if (value === true) {\n        return ' ' + key;\n    } else {\n        return '';\n    }\n}\n\nfunction hydrateRoot(vNode, parentDom, mountedQueue) {\n    if (!isNullOrUndefined(parentDom)) {\n        var dom = parentDom.firstChild;\n        if (isNullOrUndefined(dom)) {\n            return render(vNode, parentDom, mountedQueue, null, false);\n        }\n        var newDom = hydrate(vNode, dom, mountedQueue, parentDom, null, false);\n        dom = dom.nextSibling;\n        // should only one entry\n        while (dom) {\n            var next = dom.nextSibling;\n            parentDom.removeChild(dom);\n            dom = next;\n        }\n        return newDom;\n    }\n    return null;\n}\n\nfunction hydrate(vNode, dom, mountedQueue, parentDom, parentVNode, isSVG) {\n    if (dom !== null) {\n        var isTrigger = true;\n        if (mountedQueue) {\n            isTrigger = false;\n        } else {\n            mountedQueue = new MountedQueue();\n        }\n        dom = hydrateElement(vNode, dom, mountedQueue, parentDom, parentVNode, isSVG);\n        if (isTrigger) {\n            mountedQueue.trigger();\n        }\n    }\n    return dom;\n}\n\nfunction hydrateElement(vNode, dom, mountedQueue, parentDom, parentVNode, isSVG) {\n    var type = vNode.type;\n\n    if (type & Types.Element) {\n        return hydrateHtmlElement(vNode, dom, mountedQueue, parentDom, parentVNode, isSVG);\n    } else if (type & Types.Text) {\n        return hydrateText(vNode, dom);\n    } else if (type & Types.HtmlComment) {\n        return hydrateComment(vNode, dom);\n    } else if (type & Types.ComponentClassOrInstance) {\n        return hydrateComponentClassOrInstance(vNode, dom, mountedQueue, parentDom, parentVNode, isSVG);\n    }\n}\n\nfunction hydrateComponentClassOrInstance(vNode, dom, mountedQueue, parentDom, parentVNode, isSVG) {\n    return createOrHydrateComponentClassOrInstance(vNode, parentDom, mountedQueue, null, true, parentVNode, isSVG, function (instance) {\n        var newDom = instance.hydrate(vNode, dom);\n        if (dom !== newDom && dom.parentNode) {\n            dom.parentNode.replaceChild(newDom, dom);\n        }\n\n        return newDom;\n    });\n}\n\nfunction hydrateComment(vNode, dom) {\n    if (dom.nodeType !== 8) {\n        var newDom = createCommentElement(vNode, null);\n        dom.parentNode.replaceChild(newDom, dom);\n        return newDom;\n    }\n    var comment = vNode.children;\n    if (dom.data !== comment) {\n        dom.data = comment;\n    }\n    vNode.dom = dom;\n    return dom;\n}\n\nfunction hydrateText(vNode, dom) {\n    if (dom.nodeType !== 3) {\n        var newDom = createTextElement(vNode, null);\n        dom.parentNode.replaceChild(newDom, dom);\n\n        return newDom;\n    }\n\n    var text = vNode.children;\n    if (dom.nodeValue !== text) {\n        dom.nodeValue = text;\n    }\n    vNode.dom = dom;\n\n    return dom;\n}\n\nfunction hydrateHtmlElement(vNode, dom, mountedQueue, parentDom, parentVNode, isSVG) {\n    var children = vNode.children;\n    var props = vNode.props;\n    var className = vNode.className;\n    var type = vNode.type;\n    var ref = vNode.ref;\n\n    vNode.parentVNode = parentVNode;\n    isSVG = isSVG || (type & Types.SvgElement) > 0;\n\n    if (dom.nodeType !== 1 || dom.tagName.toLowerCase() !== vNode.tag) {\n        warning('Server-side markup doesn\\'t match client-side markup');\n        var newDom = createElement(vNode, null, mountedQueue, parentDom, parentVNode, isSVG);\n        dom.parentNode.replaceChild(newDom, dom);\n\n        return newDom;\n    }\n\n    vNode.dom = dom;\n    if (!isNullOrUndefined(children)) {\n        hydrateChildren(children, dom, mountedQueue, vNode, isSVG);\n    } else if (dom.firstChild !== null) {\n        setTextContent(dom, '');\n    }\n\n    if (props !== EMPTY_OBJ) {\n        var isFormElement = (type & Types.FormElement) > 0;\n        for (var prop in props) {\n            patchProp(prop, null, props[prop], dom, isFormElement, isSVG);\n        }\n        if (isFormElement) {\n            processForm(vNode, dom, props, true);\n        }\n    }\n\n    if (!isNullOrUndefined(className)) {\n        if (isSVG) {\n            dom.setAttribute('class', className);\n        } else {\n            dom.className = className;\n        }\n    } else if (dom.className !== '') {\n        dom.removeAttribute('class');\n    }\n\n    if (ref) {\n        createRef(dom, ref, mountedQueue);\n    }\n\n    return dom;\n}\n\nfunction hydrateChildren(children, parentDom, mountedQueue, parentVNode, isSVG) {\n    normalizeChildren$1(parentDom);\n    var dom = parentDom.firstChild;\n\n    if (isStringOrNumber(children)) {\n        if (dom !== null && dom.nodeType === 3) {\n            if (dom.nodeValue !== children) {\n                dom.nodeValue = children;\n            }\n        } else if (children === '') {\n            parentDom.appendChild(document.createTextNode(''));\n        } else {\n            setTextContent(parentDom, children);\n        }\n        if (dom !== null) {\n            dom = dom.nextSibling;\n        }\n    } else if (isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n            var child = children[i];\n\n            if (!isNullOrUndefined(child)) {\n                if (dom !== null) {\n                    var nextSibling = dom.nextSibling;\n                    hydrateElement(child, dom, mountedQueue, parentDom, parentVNode, isSVG);\n                    dom = nextSibling;\n                } else {\n                    createElement(child, parentDom, mountedQueue, true, parentVNode, isSVG);\n                }\n            }\n        }\n    } else {\n        if (dom !== null) {\n            hydrateElement(children, dom, mountedQueue, parentDom, parentVNode, isSVG);\n            dom = dom.nextSibling;\n        } else {\n            createElement(children, parentDom, mountedQueue, true, parentVNode, isSVG);\n        }\n    }\n\n    // clear any other DOM nodes, there should be on a single entry for the root\n    while (dom) {\n        var _nextSibling = dom.nextSibling;\n        parentDom.removeChild(dom);\n        dom = _nextSibling;\n    }\n}\n\nfunction normalizeChildren$1(parentDom) {\n    var dom = parentDom.firstChild;\n\n    while (dom) {\n        if (dom.nodeType === 8 && dom.data === '') {\n            var lastDom = dom.previousSibling;\n            parentDom.removeChild(dom);\n            dom = lastDom || parentDom.firstChild;\n        } else {\n            dom = dom.nextSibling;\n        }\n    }\n}\n\nvar warning = (typeof console === 'undefined' ? 'undefined' : _typeof(console)) === 'object' ? function (message) {\n    console.warn(message);\n} : function () {};\n\n\n\nvar miss = (Object.freeze || Object)({\n\th: createVNode,\n\tpatch: patch,\n\trender: render,\n\thc: createCommentVNode,\n\thu: createUnescapeTextVNode,\n\tremove: removeElement,\n\tMountedQueue: MountedQueue,\n\trenderString: toString$2,\n\thydrateRoot: hydrateRoot,\n\thydrate: hydrate,\n\tTypes: Types,\n\tVNode: VNode,\n\thooks: hooks,\n\tclone: directClone\n});\n\nvar parser = new Parser();\nvar stringifier = new Stringifier();\n\nfunction Vdt$1(source, options) {\n    if (!(this instanceof Vdt$1)) return new Vdt$1(source, options);\n\n    this.template = compile(source, options);\n    this.data = null;\n    this.vNode = null;\n    this.node = null;\n    this.widgets = {};\n    this.blocks = {};\n}\nVdt$1.prototype = {\n    constructor: Vdt$1,\n\n    render: function render$$1(data, parentDom, queue, parentVNode, isSVG, blocks) {\n        this.renderVNode(data, blocks, parentVNode);\n        this.node = render(this.vNode, parentDom, queue, parentVNode, isSVG);\n\n        return this.node;\n    },\n    renderVNode: function renderVNode(data, blocks, parentVNode) {\n        if (data !== undefined) {\n            this.data = data;\n        }\n        this.blocks = blocks;\n        var vNode = this.vNode = this.template(this.data, Vdt$1, this.blocks, this.template) || createCommentVNode('empty');\n        // for Animate we need this key\n        if (vNode.key === undefined && parentVNode) {\n            vNode.key = parentVNode.key;\n        }\n\n        return vNode;\n    },\n    renderString: function renderString$$1(data, blocks, parent) {\n        this.data = data;\n        var vNode = this.template(data, Vdt$1, blocks, this.template) || createCommentVNode('empty');\n\n        return toString$2(vNode, parent, Vdt$1.configure().disableSplitText);\n    },\n    update: function update(data, parentDom, queue, parentVNode, isSVG, blocks) {\n        var oldVNode = this.vNode;\n        this.renderVNode(data, blocks, parentVNode);\n        this.node = patch(oldVNode, this.vNode, parentDom, queue, parentVNode, isSVG);\n\n        return this.node;\n    },\n    hydrate: function hydrate$$1(data, dom, queue, parentDom, parentVNode, isSVG, blocks) {\n        this.renderVNode(data, blocks, parentVNode);\n        hydrate(this.vNode, dom, queue, parentDom, parentVNode, isSVG);\n        this.node = this.vNode.dom;\n\n        return this.node;\n    },\n    destroy: function destroy() {\n        removeElement(this.vNode);\n    }\n};\n\nfunction compile(source, options) {\n    var templateFn;\n\n    // backward compatibility v0.2.2\n    if (options === true || options === false) {\n        options = { autoReturn: options };\n    }\n\n    options = extend({}, configure(), options);\n\n    switch (typeof source === 'undefined' ? 'undefined' : _typeof(source)) {\n        case 'string':\n            var ast = parser.parse(source, options),\n                hscript = stringifier.stringify(ast, options);\n\n            if (options.onlySource) {\n                templateFn = function templateFn() {};\n            } else {\n                var buffer = stringifier.buffer;\n                templateFn = new Function('obj', '_Vdt', 'blocks', '$callee', buffer.slice(1, buffer.length - 1).join(''));\n            }\n            templateFn.source = hscript;\n            templateFn.head = stringifier.head;\n            templateFn.mappings = stringifier.mappings;\n            break;\n        case 'function':\n            templateFn = source;\n            break;\n        default:\n            throw new Error('Expect a string or function');\n    }\n\n    return templateFn;\n}\n\nVdt$1.parser = parser;\nVdt$1.stringifier = stringifier;\nVdt$1.miss = extend({}, miss);\nVdt$1.compile = compile;\nVdt$1.utils = utils$1;\nVdt$1.setDelimiters = setDelimiters;\nVdt$1.getDelimiters = getDelimiters;\nVdt$1.configure = configure;\n\n// for compatibility v1.0\nVdt$1.virtualDom = miss;\n\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\nvar getPrototypeOf = Object.getPrototypeOf;\nif (!(Object.setPrototypeOf || {}.__proto__)) {\n    // ie <= 10 exists getPrototypeOf but not setPrototypeOf\n    var nativeGetPrototypeOf = Object.getPrototypeOf;\n\n    if (typeof nativeGetPrototypeOf !== 'function') {\n        getPrototypeOf = function getPrototypeOf(object) {\n            // May break if the constructor has been tampered with\n            return object.__proto__ || object.constructor.prototype;\n        };\n    } else {\n        getPrototypeOf = function getPrototypeOf(object) {\n            // in ie <= 10 __proto__ is not supported\n            // getPrototypeOf will return a native function\n            // but babel will set __proto__ prototyp to target\n            // so we get __proto__ in this case\n            return object.__proto__ || nativeGetPrototypeOf.call(Object, object);\n        };\n    }\n\n    // fix that if ie <= 10 babel can't inherit class static methods\n    // Object.setPrototypeOf = function(O, proto) {\n    //     extend(O, proto);\n    //     O.__proto__ = proto;\n    // }\n}\n\n/**\n * inherit\n * @param Parent\n * @param prototype\n * @returns {Function}\n */\nvar isSupportGetDescriptor = function () {\n    var a = {};\n    try {\n        Object.getOwnPropertyDescriptor(a, 'a');\n    } catch (e) {\n        return false;\n    }\n    return true;\n}();\nfunction setPrototype(Parent, Child, name, value) {\n    var prototype = Child.prototype;\n    var tmp = void 0;\n    if (isSupportGetDescriptor && (tmp = Object.getOwnPropertyDescriptor(Parent.prototype, name)) && tmp.get) {\n        Object.defineProperty(prototype, name, {\n            get: function get$$1() {\n                return value;\n            },\n\n            enumerable: true,\n            configurable: true\n        });\n    } else {\n        prototype[name] = value;\n    }\n}\nfunction inherit(Parent, prototype) {\n    var Child = function Child() {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return Parent.apply(this, args);\n    };\n\n    Child.prototype = create(Parent.prototype);\n    // for ie 8 which does not support getPrototypeOf\n    Child.prototype.__proto__ = Parent.prototype;\n    each(prototype, function (proto, name) {\n        if (name === 'displayName') {\n            Child.displayName = proto;\n        }\n        if (name === 'template') {\n            if (isString(proto)) {\n                proto = Vdt$1.compile(proto);\n                prototype.template = proto;\n            }\n            var _super = Parent.template;\n            if (!_super || _super === templateDecorator) {\n                _super = Parent.prototype.template;\n            }\n            proto._super = _super;\n            Child.template = undefined;\n            return setPrototype(Parent, Child, 'template', proto);\n        } else if (!isFunction(proto)) {\n            Child.prototype[name] = proto;\n            return;\n        }\n        var fn = function () {\n            var _super = function _super() {\n                for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                    args[_key2] = arguments[_key2];\n                }\n\n                return Parent.prototype[name].apply(this, args);\n            },\n                _superApply = function _superApply(args) {\n                return Parent.prototype[name].apply(this, args);\n            };\n            return function () {\n                var self = this || {},\n                    __super = self._super,\n                    __superApply = self._superApply,\n                    returnValue = void 0;\n\n                self._super = _super;\n                self._superApply = _superApply;\n\n                for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                    args[_key3] = arguments[_key3];\n                }\n\n                returnValue = proto.apply(this, args);\n\n                self._super = __super;\n                self._superApply = __superApply;\n\n                return returnValue;\n            };\n        }();\n        setPrototype(Parent, Child, name, fn);\n    });\n    Child.prototype.constructor = Child;\n\n    for (var key in Parent) {\n        if (!hasOwn.call(Child, key)) {\n            Child[key] = Parent[key];\n        }\n    }\n\n    Child.__super = Parent.prototype;\n\n    return Child;\n}\n\nfunction templateDecorator(options) {\n    return function (target, name, descriptor) {\n        var template = target.template;\n        if (isString(template)) {\n            template = Vdt$1.compile(template, options);\n        }\n        var Parent = getPrototypeOf(target);\n        var _super = void 0;\n        if (typeof Parent === 'function') {\n            // is define by static\n            _super = Parent.template;\n            if (!_super || _super === templateDecorator) {\n                _super = Parent.prototype.template;\n            }\n        } else {\n            // is define by prototype\n            _super = Parent.constructor.template;\n            if (!_super || _super === templateDecorator) {\n                _super = Parent.template;\n            }\n        }\n        template._super = _super;\n\n        if (typeof target === 'function') {\n            // for: static template = ''\n            target.template = template;\n            return template;\n        } else {\n            // for: get template() { }\n            descriptor.get = function () {\n                return template;\n            };\n            // remove static template. Maybe it inherited from parent\n            target.constructor.template = undefined;\n        }\n    };\n}\n\nvar nativeCreate = Object.create;\nvar create = nativeCreate ? nativeCreate : function (object) {\n    var fn = function fn() {};\n    fn.prototype = object;\n    return new fn();\n};\n\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\n\nfunction isString(s) {\n    return typeof s === 'string';\n}\n\nfunction result(obj, property, fallback) {\n    var value = isNullOrUndefined(obj) ? undefined : obj[property];\n    if (value === undefined) {\n        value = fallback;\n    }\n    return isFunction(value) ? value.call(obj) : value;\n}\n\nvar executeBound = function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = create(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (isObject$$1(result)) return result;\n    return self;\n};\nvar nativeBind = Function.prototype.bind;\nfunction bind(func, context) {\n    for (var _len4 = arguments.length, args = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n        args[_key4 - 2] = arguments[_key4];\n    }\n\n    if (nativeBind && func.bind === nativeBind) {\n        return nativeBind.call.apply(nativeBind, [func, context].concat(args));\n    }\n    if (!isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = function bound() {\n        for (var _len5 = arguments.length, args1 = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n            args1[_key5] = arguments[_key5];\n        }\n\n        return executeBound(func, bound, context, this, [].concat(args, args1));\n    };\n    return bound;\n}\n\nvar toString = Object.prototype.toString;\nvar reEvent = /Event/;\n// Internal recursive comparison function for `isEqual`.\nvar eq = function eq(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (isNullOrUndefined(a) || isNullOrUndefined(b)) return a === b;\n    // Compare `[[Class]]` names.\n    var className$$1 = toString.call(a);\n    if (className$$1 !== toString.call(b)) return false;\n    switch (className$$1) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case '[object RegExp]':\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case '[object String]':\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return '' + a === '' + b;\n        case '[object Number]':\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN\n            if (+a !== +a) return +b !== +b;\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n        case '[object Date]':\n        case '[object Boolean]':\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b;\n    }\n\n    var areArrays = className$$1 === '[object Array]';\n    if (!areArrays) {\n        if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) != 'object' || (typeof b === 'undefined' ? 'undefined' : _typeof(b)) != 'object') return false;\n\n        // Event\n        if (reEvent.test(className$$1)) return a === b;\n\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n        // from different frames are.\n        var aCtor = a.constructor,\n            bCtor = b.constructor;\n        if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor && isFunction(bCtor) && bCtor instanceof bCtor) && 'constructor' in a && 'constructor' in b) {\n            return false;\n        }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        length = a.length;\n        if (length !== b.length) return false;\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (length--) {\n            if (!eq(a[length], b[length], aStack, bStack)) return false;\n        }\n    } else {\n        // Deep compare objects.\n        var aKeys = keys(a),\n            key;\n        length = aKeys.length;\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\n        if (keys(b).length !== length) return false;\n        while (length--) {\n            // Deep compare each member\n            key = aKeys[length];\n            if (!(hasOwn.call(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n};\n\nfunction isEqual(a, b) {\n    return eq(a, b);\n}\n\nvar idCounter = 0;\nfunction uniqueId(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n}\n\nvar keys = Object.keys || function (obj) {\n    var ret = [];\n    each(obj, function (value, key) {\n        return ret.push(key);\n    });\n    return ret;\n};\n\nfunction values(obj) {\n    var ret = [];\n    each(obj, function (value) {\n        return ret.push(value);\n    });\n    return ret;\n}\n\n// @reference https://github.com/lodash/lodash/blob/master/.internal/stringToPath.js\nvar charCodeOfDot = '.'.charCodeAt(0);\nvar reEscapeChar = /\\\\(\\\\)?/g;\nvar rePropName = RegExp(\n// Match anything that isn't a dot or bracket.\n'[^.[\\\\]]+' + '|' +\n// Or match property names within brackets.\n'\\\\[(?:' +\n// Match a non-string expression.\n'([^\"\\'].*)' + '|' +\n// Or match strings (supports escaping characters).\n'([\"\\'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2' + ')\\\\]' + '|' +\n// Or match \"\" as the space between consecutive dots or empty brackets.\n'(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))', 'g');\nvar pathMap = {};\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nfunction castPath(path) {\n    if (typeof path !== 'string') return path;\n    if (pathMap[path]) return pathMap[path];\n\n    var result = [];\n    if (path.charCodeAt(0) === charCodeOfDot) {\n        result.push('');\n    }\n    path.replace(rePropName, function (match, expression, quote, subString) {\n        var key = match;\n        if (quote) {\n            key = subString.replace(reEscapeChar, '$1');\n        } else if (expression) {\n            key = expression;\n        }\n        result.push(key);\n    });\n    pathMap[path] = result;\n    return result;\n}\nfunction isIndex(value) {\n    return (typeof value === 'number' || reIsUint.test(value)) && value > -1 && value % 1 === 0;\n}\nfunction get$$1(object, path, defaultValue) {\n    if (hasOwn.call(object, path)) return object[path];\n    path = castPath(path);\n\n    var index = 0,\n        length = path.length;\n\n    while (!isNullOrUndefined(object) && index < length) {\n        object = object[path[index++]];\n    }\n\n    return index && index === length && object !== undefined ? object : defaultValue;\n}\nfunction set$$1(object, path, value) {\n    if (hasOwn.call(object, path)) {\n        object[path] = value;\n        return object;\n    }\n\n    path = castPath(path);\n\n    var index = -1,\n        length = path.length,\n        lastIndex = length - 1,\n        nested = object;\n    while (!isNullOrUndefined(nested) && ++index < length) {\n        var key = path[index],\n            newValue = value;\n        if (index !== lastIndex) {\n            var objValue = nested[key];\n            newValue = isObject$$1(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};\n        }\n        nested[key] = newValue;\n        nested = nested[key];\n    }\n\n    return object;\n}\n\nvar warn = hasConsole ? function () {\n    console.warn.apply(console, arguments);\n} : noop;\nvar error$1 = hasConsole ? function () {\n    console.error.apply(console, arguments);\n} : noop;\n\nfunction isNative(Ctor) {\n    return typeof Ctor === 'function' && /native code/.test(Ctor.toString());\n}\nvar nextTick = function () {\n    if (typeof Promise !== 'undefined' && isNative(Promise)) {\n        var p = Promise.resolve();\n        return function (callback) {\n            p.then(callback).catch(function (err) {\n                return error$1(err);\n            });\n            // description in vue\n            if (isIOS) setTimeout(noop);\n        };\n    } else if (typeof MutationObserver !== 'undefined' && (isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]')) {\n        var callbacks = [];\n        var nextTickHandler = function nextTickHandler() {\n            var _callbacks = callbacks.slice(0);\n            callbacks.length = 0;\n            for (var _i = 0; _i < _callbacks.length; _i++) {\n                _callbacks[_i]();\n            }\n        };\n        var node = document.createTextNode('');\n        new MutationObserver(nextTickHandler).observe(node, {\n            characterData: true\n        });\n        var i = 1;\n        return function (callback) {\n            callbacks.push(callback);\n            i = (i + 1) % 2;\n            node.data = String(i);\n        };\n    } else {\n        return function (callback) {\n            setTimeout(callback, 0);\n        };\n    }\n}();\nfunction NextTick(eachCallback) {\n    var _this = this;\n\n    this.callback = null;\n    this.eachCallback = eachCallback;\n    nextTick(function () {\n        return _this.callback();\n    });\n}\nNextTick.prototype.fire = function (callback, data) {\n    this.callback = callback;\n    if (this.eachCallback) {\n        this.eachCallback(data);\n    }\n};\n\nvar wontBind = ['constructor', 'template', 'defaults'];\n\nvar getOwnPropertyNames = typeof Object.getOwnPropertyNames !== 'function' ? keys : Object.getOwnPropertyNames;\n\nfunction autobind(prototype, context, Intact, bound) {\n    if (!prototype) return;\n    if (prototype === Intact.prototype) return;\n\n    var toBind = getOwnPropertyNames(prototype);\n    each(toBind, function (method) {\n        var fn = prototype[method];\n        if (fn === undefined) {\n            // warn(`Autobind: '${method}' method not found in class.`);\n            return;\n        }\n\n        if (~indexOf(wontBind, method) || bound[method] || typeof fn !== 'function') {\n            return;\n        }\n\n        context[method] = bind(fn, context);\n        bound[method] = true;\n    });\n\n    // bind super method\n    autobind(getPrototypeOf(prototype), context, Intact, bound);\n}\n\n\n\nvar utils = (Object.freeze || Object)({\n\textend: extend,\n\tisArray: isArray,\n\teach: each,\n\tisObject: isObject$$1,\n\thasOwn: hasOwn,\n\tisNullOrUndefined: isNullOrUndefined,\n\tnoop: noop,\n\tisStringOrNumber: isStringOrNumber,\n\tinBrowser: inBrowser,\n\tUA: UA,\n\tisIOS: isIOS,\n\tgetPrototypeOf: getPrototypeOf,\n\tinherit: inherit,\n\ttemplateDecorator: templateDecorator,\n\tcreate: create,\n\tisFunction: isFunction,\n\tisString: isString,\n\tresult: result,\n\tbind: bind,\n\tisEqual: isEqual,\n\tuniqueId: uniqueId,\n\tkeys: keys,\n\tvalues: values,\n\tcastPath: castPath,\n\tget: get$$1,\n\tset: set$$1,\n\twarn: warn,\n\terror: error$1,\n\tnextTick: nextTick,\n\tNextTick: NextTick,\n\tautobind: autobind\n});\n\n/**\n * 验证属性合法性，参考vue实现\n * 这种实现方式，使用起来很简单，无需引入额外的模块\n * 但是也无法验证复杂的数据结构（需要自己实现验证函数）\n */\nfunction validateProps(props, propTypes) {\n    var componentName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '<anonymous>';\n\n    if (!props || !propTypes) return;\n\n    for (var prop in propTypes) {\n        var value = props[prop];\n        var expectedType = propTypes[prop];\n        if (!isPlainObject(expectedType)) {\n            expectedType = { type: expectedType };\n        }\n\n        if (isNullOrUndefined(value)) {\n            var required = expectedType.required;\n            if (isFunction(required)) {\n                required = required(props);\n            }\n            if (required) {\n                error$1('Missing required prop on component \"' + componentName + '\": \"' + prop + '\".');\n                return;\n            } else {\n                continue;\n            }\n        }\n\n        var type = expectedType.type;\n        if (type) {\n            if (!isArray(type)) {\n                type = [type];\n            }\n\n            var _valid = false;\n            var _isStringOrNumber = false;\n            var expectedTypes = [];\n\n            for (var i = 0; i < type.length; i++) {\n                var _assertType = assertType(value, type[i]),\n                    _expectedType = _assertType.expectedType,\n                    valid = _assertType.valid,\n                    isStringOrNumber$$1 = _assertType.isStringOrNumber;\n\n                expectedTypes.push(_expectedType || '');\n                _isStringOrNumber = isStringOrNumber$$1;\n                if (valid) {\n                    _valid = valid;\n                    break;\n                }\n            }\n\n            if (!_valid) {\n                error$1('Invalid type of prop \"' + prop + '\" on component \"' + componentName + '\". ' + ('Expected ' + expectedTypes.join(', ') + ', but got ') + (toRawType(value, _isStringOrNumber) + '.'));\n                return;\n            }\n        }\n\n        var validator = expectedType.validator;\n        if (validator) {\n            var result$$1 = validator(value);\n            if (result$$1 === false) {\n                error$1('Invalid prop \"' + prop + '\" on component \"' + componentName + '\": custom validator check failed.');\n                return;\n            } else if (result$$1 !== true) {\n                error$1('Invalid prop \"' + prop + '\" on component \"' + componentName + '\": ' + result$$1);\n                return;\n            }\n        }\n    }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\nfunction assertType(value, type) {\n    var valid = void 0;\n\n    var _type = typeof type === 'undefined' ? 'undefined' : _typeof(type);\n    if (_type === 'number') {\n        return { valid: type === value, expectedType: type, isStringOrNumber: true };\n    } else if (_type === 'string') {\n        return { valid: type === value, expectedType: '\"' + type + '\"', isStringOrNumber: true };\n    }\n\n    var expectedType = getType(type);\n\n    if (simpleCheckRE.test(expectedType)) {\n        var t = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n        valid = t === expectedType.toLowerCase();\n\n        if (valid && t === 'number' && value !== value) {\n            // for NaN\n            valid = false;\n        } else if (!valid && t === 'object') {\n            // for primitive wrapper objects\n            valid = value instanceof type;\n        }\n    } else if (expectedType === 'Object') {\n        valid = isPlainObject(value);\n    } else if (expectedType === 'Array') {\n        valid = isArray(value);\n    } else {\n        valid = value instanceof type;\n    }\n\n    return { valid: valid, expectedType: expectedType };\n}\n\nfunction getType(fn) {\n    var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n    return match ? match[1] : '';\n}\n\nvar toString$3 = Object.prototype.toString;\nfunction toRawType(value, isStringOrNumber$$1) {\n    if (isStringOrNumber$$1) {\n        var _type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n        if (_type === 'string') {\n            return '\"' + value + '\"';\n        }\n        return value;\n    }\n    if (value !== value) return 'NaN';\n    return toString$3.call(value).slice(8, -1);\n}\n\nfunction isPlainObject(value) {\n    return toString$3.call(value) === '[object Object]';\n}\n\nfunction Intact$2(props) {\n    var template = this.constructor.template;\n    // Intact.template is a decorator\n    if (!template || template === templateDecorator) {\n        template = this.template;\n    }\n    if (!template) {\n        throw new Error('Can not instantiate when template does not exist.');\n    }\n\n    // for debug\n    this.displayName = this.displayName;\n\n    // autobind this for methods\n    // in ie 8 we must get prototype through constructor first time\n    autobind(this.constructor.prototype, this, Intact$2, {});\n\n    this.vdt = Vdt$1(template);\n\n    // for string ref\n    this.refs = this.vdt.widgets || {};\n    // for compatibility v1.0\n    this.widgets = this.refs;\n\n    this.props = extend({}, result(this, 'defaults'));\n\n    this.uniqueId = this.props.widget || uniqueId('widget');\n\n    // for compatibility v1.0\n    this.attributes = this.props;\n    this._widget = this.uniqueId;\n\n    this._events = {};\n    this._keptEvents = {}; // save the events that do not off when destroyed\n\n    // lifecycle states\n    this.inited = false;\n    this.rendered = false;\n    this.mounted = false;\n    this.destroyed = false;\n\n    // if the flag is false, any set operation will not lead to update \n    this._startRender = false;\n\n    this._updateCount = 0;\n    this._pendingUpdate = null;\n    this._pendingChangedEvents = [];\n\n    this.mountedQueue = null;\n\n    this._constructor(props);\n}\n\nIntact$2.prototype._constructor = function (props) {\n    var _this = this;\n\n    if (process.env.NODE_ENV !== 'production') {\n        validateProps(props, this.constructor.propTypes, this.displayName || this.constructor.name);\n    }\n\n    extend(this.props, props);\n\n    // bind events\n    each(props, function (value, key) {\n        if (isEventProp(key)) {\n            if (isArray(value)) {\n                for (var i = 0; i < value.length; i++) {\n                    if (value[i]) {\n                        _this.on(key.substr(3), value[i]);\n                    }\n                }\n            } else if (value) {\n                _this.on(key.substr(3), value);\n            }\n        }\n    });\n\n    var inited = function inited() {\n        _this.inited = true;\n\n        // trigger $receive event when initialize component\n        var keys$$1 = [];\n        each(props, function (value, key) {\n            _this.trigger('$receive:' + key, _this, value);\n            keys$$1.push(key);\n        });\n        if (keys$$1.length) {\n            _this.trigger('$receive', _this, keys$$1);\n        }\n        _this.trigger('$inited', _this);\n    };\n    var ret = this._init();\n\n    if (ret && ret.then) {\n        ret.then(inited, function (err) {\n            error$1('Unhandled promise rejection in _init: ', err);\n            inited();\n        });\n    } else {\n        inited();\n    }\n};\n\n// for intact compatibility layer to inherit it\nIntact$2.template = templateDecorator;\n\nIntact$2.prototype.defaults = noop;\n\n// function name conflict with utils.get\nIntact$2.prototype.get = function _get(key, defaultValue) {\n    if (key === undefined) return this.props;\n\n    return get$$1(this.props, key, defaultValue);\n};\n\nIntact$2.prototype.set = function _set(key, val, options) {\n    var _this = this;\n\n    if (isNullOrUndefined(key)) return this;\n\n    if ((typeof key === 'undefined' ? 'undefined' : _typeof(key)) === 'object') {\n        options = val;\n    } else {\n        var obj = {};\n        obj[key] = val;\n        key = obj;\n    }\n    options = extend({\n        silent: false,\n        update: true,\n        async: false,\n        _fromPatchProps: false\n    }, options);\n    // 兼容老版本\n    if (hasOwn.call(options, 'global')) {\n        options.update = options.global;\n    }\n\n    var props = this.props;\n\n    var changes = [];\n\n    if (!options.silent) {\n        changes = setProps(key, props);\n    } else {\n        // 如果静默更新，则直接赋值\n        for (var prop in key) {\n            set$$1(props, prop, key[prop]);\n        }\n    }\n\n    if (changes.length) {\n        var changeKeys = [];\n        for (var i = 0; i < changes.length; i++) {\n            var _changes$i = changes[i],\n                _prop = _changes$i[0],\n                values$$1 = _changes$i[1];\n\n\n            if (options._fromPatchProps) {\n                // trigger a $receive event to show that we received a different prop\n                this.trigger('$receive:' + _prop, this, values$$1[1], values$$1[0]);\n                // 存在如下情况\n                // 当prop为value通过v-model进行双向绑定时，receive事件有可能会修正该value\n                // 而修正的过程中，触发了change事件，会去修改绑定的属性\n                // 但是下面触发的change事件，又会将绑定的属性置为未修正的值\n                // 这会导致死循坏\n                // 所以这里将values[1]设为修正后的值，避免死循坏发生\n                values$$1[1] = this.get(_prop);\n                // 如果修正后，前后值相等，则不去触发change事件\n                if (values$$1[1] === values$$1[0]) {\n                    changes.splice(i, 1);\n                    i--;\n                    continue;\n                }\n            }\n\n            changeKeys.push(_prop);\n            // trigger `change*` events\n            this.trigger('$change:' + _prop, this, values$$1[1], values$$1[0]);\n        }\n\n        if (!changeKeys.length) return;\n\n        if (options._fromPatchProps) {\n            this.trigger('$receive', this, changeKeys);\n        }\n        this.trigger('$change', this, changeKeys);\n\n        if (options.update && this._startRender) {\n            if (options.async) {\n                if (!this._$nextTick) {\n                    this._$nextTick = new NextTick(function (data) {\n                        // 将每次改变的属性放入数组\n                        this.args.push(data);\n                    });\n                    this._$nextTick.args = [];\n                }\n\n                var self = this;\n                this._$nextTick.fire(function () {\n                    // 合并执行更新后，触发所有$changed事件\n                    var args = this.args;\n                    var changes = [];\n                    for (var _i = 0; _i < args.length; _i++) {\n                        changes = changes.concat(args[_i]);\n                    }\n                    self._$nextTick = null;\n                    triggerChange(self, changes);\n                }, changes);\n            } else {\n                triggerChange(this, changes);\n            }\n        } else if (this.mountedQueue && this._startRender) {\n            // 如果是父组件导致子组件更新，此时存在mountedQueue\n            // 则在组件树更新完毕，触发$changed事件\n            // 现将该事件暂存起来，待子组件更新完毕在加入mountedQueue\n            // 以保证子组件的事件优先于父组件执行\n            this._pendingChangedEvents.push(function () {\n                triggerChangedEvent(_this, changes);\n            });\n        }\n    }\n\n    return this;\n};\n\nfunction triggerChange(o, changes) {\n    o.update();\n    triggerChangedEvent(o, changes);\n}\n\nfunction triggerChangedEvent(o, changes) {\n    var changeKeys = [];\n    for (var i = 0; i < changes.length; i++) {\n        var _changes$i2 = changes[i],\n            prop = _changes$i2[0],\n            values$$1 = _changes$i2[1];\n\n        changeKeys.push(prop);\n\n        o.trigger('$changed:' + prop, o, values$$1[1], values$$1[0]);\n    }\n    o.trigger('$changed', o, changeKeys);\n}\n\nvar reWithDot = /\\./;\nfunction setProps(newProps, props) {\n    var propsPathTree = {};\n    var changes = {};\n    var changesWithoutNextValue = [];\n    for (var prop in newProps) {\n        var nextValue = newProps[prop];\n        var lastValue = get$$1(props, prop);\n\n        if (!isEqual(lastValue, nextValue)) {\n            var tree = propsPathTree;\n\n            if (!hasOwn.call(props, prop)) {\n                // a.b.c => ['a', 'b', 'c']\n                var paths = castPath(prop);\n                var length = paths.length;\n                var path = '';\n                for (var i = 0; i < length; i++) {\n                    var name = paths[i];\n                    if (reWithDot.test(name)) {\n                        name = '[\"' + name + '\"]';\n                    } else {\n                        name = path ? '.' + name : name;\n                    }\n                    path = '' + path + name;\n                    if (!tree[name]) {\n                        if (i < length - 1) {\n                            tree[name] = {};\n                            changes[path] = [get$$1(props, path)];\n                            changesWithoutNextValue.push(path);\n                        } else {\n                            changes[path] = [lastValue, nextValue];\n                            tree[name] = null;\n                        }\n                    }\n                    tree = tree[name];\n                }\n                // tree = {a: {b: {c: {}}}}\n                // changes = {'a.b.c': [v1, v2], 'a': [v1], 'a.b': [v1]}\n            } else {\n                if (reWithDot.test(prop)) {\n                    prop = '[\"' + prop + '\"]';\n                }\n                changes[prop] = [lastValue, nextValue];\n                tree[prop] = null;\n            }\n        }\n\n        // 即使相等，也要重新复制，因为有可能引用地址变更\n        set$$1(props, prop, nextValue);\n    }\n\n    for (var _i2 = 0; _i2 < changesWithoutNextValue.length; _i2++) {\n        var _path2 = changesWithoutNextValue[_i2];\n        changes[_path2].push(get$$1(props, _path2));\n    }\n\n    return getChanges(propsPathTree, changes);\n}\n\n// 深度优先遍历，得到正确的事件触发顺序\nfunction getChanges(tree, data) {\n    var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var changes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    for (var key in tree) {\n        // let _path = reWithDot.test(key) ?\n        // `${path}[\"${key}\"]` :\n        // path ?\n        // `${path}.${key}` :\n        // key;\n        var _path = path + key;\n        if (tree[key]) {\n            getChanges(tree[key], data, _path, changes);\n        }\n        changes.push([_path, data[_path]]);\n    }\n\n    return changes;\n}\n\nIntact$2.prototype.on = function (name, callback) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // the event which write in template must insert before which add in self component\n    (this._events[name] || (this._events[name] = []))[options.unshift ? 'unshift' : 'push'](callback);\n\n    // save the kept event\n    if (options.keep) {\n        (this._keptEvents[name] || (this._keptEvents[name] = [])).push(callback);\n    }\n\n    return this;\n};\n\nIntact$2.prototype.one = function (name, callback) {\n    var _this = this;\n\n    var fn = function fn() {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        callback.apply(_this, args);\n        _this.off(name, fn);\n    };\n    this.on(name, fn);\n\n    return this;\n};\n\nIntact$2.prototype.off = function (name, callback) {\n    if (name === undefined) {\n        this._events = extend({}, this._keptEvents);\n        return this;\n    }\n\n    var callbacks = this._events[name];\n    if (!callbacks) return this;\n\n    if (callback === undefined) {\n        delete this._events[name];\n        return this;\n    }\n\n    for (var cb, i = 0; i < callbacks.length; i++) {\n        cb = callbacks[i];\n        if (cb === callback) {\n            callbacks.splice(i, 1);\n            // i--;\n            break;\n        }\n    }\n\n    return this;\n};\n\nIntact$2.prototype.trigger = function (name) {\n    var callbacks = this._events[name];\n\n    if (callbacks) {\n        callbacks = callbacks.slice();\n\n        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n        }\n\n        for (var i = 0, l = callbacks.length; i < l; i++) {\n            callbacks[i].apply(this, args);\n        }\n    }\n\n    return this;\n};\n\nIntact$2.prototype._init = noop;\nIntact$2.prototype._beforeCreate = noop;\nIntact$2.prototype._create = noop;\nIntact$2.prototype._mount = noop;\nIntact$2.prototype._beforeUpdate = noop;\nIntact$2.prototype._update = noop;\nIntact$2.prototype._destroy = noop;\n\nIntact$2.prototype.init = function (lastVNode, nextVNode) {\n    this._lastVNode = lastVNode;\n    if (!this.inited) {\n        return initAsyncComponnet(this, lastVNode, nextVNode);\n    }\n    return initSyncComponent(this, lastVNode, nextVNode);\n};\n\nIntact$2.prototype.mount = function (lastVNode, nextVNode) {\n    // 异步组件，直接返回\n    if (!this.inited) return;\n    this.mounted = true;\n    this.trigger('$mounted', this);\n    this._mount(lastVNode, nextVNode);\n};\n\nIntact$2.prototype.update = function (lastVNode, nextVNode, fromPending) {\n    // 如果该组件已被销毁，则不更新\n    // 组件的销毁顺序是从自下而上逐步销毁的，对于子组件，即使将要销毁也要更新\n    // 只有父组件被销毁了才不去更新，父组件的更新是没有vNode参数\n    if (!lastVNode && !nextVNode && this.destroyed) {\n        return lastVNode ? lastVNode.dom : undefined;\n    }\n\n    // 如果还没有渲染，则等待结束再去更新\n    if (!this.rendered) {\n        this._pendingUpdate = function (lastVNode, nextVNode) {\n            this.update(lastVNode, nextVNode, true);\n        };\n        return lastVNode ? lastVNode.dom : undefined;\n    }\n\n    // mountedQueue在一次更新周期里，只能使用使用，根据done字段判断\n    // 在同一更新周期里，共用该对象，否则置为null，让misstime自己去重新初始化\n    if (this.mountedQueue && this.mountedQueue.done) {\n        this.mountedQueue = null;\n    }\n\n    // 如果不存在nextVNode，则为直接调用update方法更新自己\n    // 否则则是父组件触发的子组件更新，此时需要更新一些状态\n    // 有一种情况，在父组件初次渲染时，子组件渲染过程中，\n    // 又触发了父组件的数据变更，此时父组件渲染完成执行_pendingUpdate\n    // 是没有lastVNode的\n    if (nextVNode && lastVNode) {\n        patchProps$1(this, lastVNode.props, nextVNode.props);\n    }\n\n    ++this._updateCount;\n    if (this._updateCount > 1) {\n        return this.element;\n    }\n    if (this._updateCount === 1) {\n        return updateComponent(this, lastVNode, nextVNode);\n    }\n};\n\nIntact$2.prototype.destroy = function (lastVNode, nextVNode, parentDom) {\n    if (this.destroyed) {\n        return warn('destroyed multiple times');\n    }\n\n    var vdt = this.vdt;\n\n    // 异步组件，可能还没有渲染\n    if (!this.rendered) {\n        // 异步组件，只有开始渲染时才销毁上一个组件\n        // 如果没有渲染当前异步组件就被销毁了，则要\n        // 在这里销毁上一个组件\n        var _lastVNode = this._lastVNode;\n        if (_lastVNode && !_lastVNode.children.destroyed) {\n            removeComponentClassOrInstance(_lastVNode, null, lastVNode);\n        }\n    } else if (!nextVNode || !(nextVNode.type & Types.ComponentClassOrInstance) || nextVNode.key !== lastVNode.key) {\n        vdt.destroy();\n    }\n\n    // 如果存在nextVNode，并且nextVNode也是一个组件类型，\n    // 并且，它俩的key相等，则不去destroy，而是在下一个组件init时\n    // 复用上一个dom，然后destroy上一个元素\n    this._destroy(lastVNode, nextVNode);\n    this.destroyed = true;\n    this.trigger('$destroyed', this);\n    this.off();\n};\n\nIntact$2.prototype._initMountedQueue = function () {\n    this.mountedQueue = new MountedQueue();\n};\n\nIntact$2.prototype._triggerMountedQueue = function () {\n    this.mountedQueue.trigger();\n};\n\nfunction initSyncComponent(o, lastVNode, nextVNode) {\n    o._beforeCreate(lastVNode, nextVNode);\n\n    var vdt = o.vdt;\n    o._startRender = true;\n    // 如果key不相同，则不复用dom，直接返回新dom来替换\n    if (lastVNode && lastVNode.key === nextVNode.key) {\n        // destroy the last component\n        if (!lastVNode.children.destroyed) {\n            removeComponentClassOrInstance(lastVNode, null, nextVNode);\n        }\n\n        // make the dom not be replaced, but update the last one\n        vdt.vNode = lastVNode.children.vdt.vNode;\n        o.element = vdt.update(o, o.parentDom, o.mountedQueue, nextVNode, o.isSVG, o.get('_blocks'));\n    } else {\n        if (lastVNode) {\n            removeComponentClassOrInstance(lastVNode, null, nextVNode);\n        }\n        o.element = vdt.render(o, o.parentDom, o.mountedQueue, nextVNode, o.isSVG, o.get('_blocks'));\n    }\n    o.rendered = true;\n    if (o._pendingUpdate) {\n        o._pendingUpdate(lastVNode, nextVNode);\n        o._pendingUpdate = null;\n    }\n    o.trigger('$rendered', o);\n    o._create(lastVNode, nextVNode);\n\n    return o.element;\n}\n\nfunction initAsyncComponnet(o, lastVNode, nextVNode) {\n    var vdt = o.vdt;\n    var placeholder = void 0;\n\n    if (lastVNode) {\n        placeholder = lastVNode.dom;\n        var lastInstance = lastVNode.children;\n        vdt.vNode = lastInstance.vdt.vNode;\n        // 如果上一个组件是异步组件，并且也还没渲染完成，则直接destroy掉\n        // 让它不再渲染了\n        if (!lastInstance.inited) {\n            removeComponentClassOrInstance(lastVNode, null, nextVNode);\n        }\n    } else {\n        var vNode = createCommentVNode('!');\n        placeholder = render(vNode);\n        vdt.vNode = vNode;\n    }\n\n    // 组件销毁事件也会解绑，所以这里无需判断组件是否销毁了\n    o.one('$inited', function () {\n        // 异步组件进入了新的更新周期，需要初始化mountedQueue\n        o._initMountedQueue();\n        var element = o.init(lastVNode, nextVNode);\n        var dom = nextVNode.dom;\n        // 存在一种情况，组件的返回的元素是一个组件，他们指向同一个dom\n        // 但是当嵌套组件的dom变更时，父组件的vNode却没有变\n        // 所以这里强制保持一致\n        nextVNode.dom = element;\n        if (!lastVNode || lastVNode.key !== nextVNode.key) {\n            dom.parentNode.replaceChild(element, dom);\n        }\n        o._triggerMountedQueue();\n        o.mount(lastVNode, nextVNode);\n    });\n\n    vdt.node = placeholder;\n\n    return placeholder;\n}\n\nfunction updateComponent(o, lastVNode, nextVNode) {\n    o._beforeUpdate(lastVNode, nextVNode);\n    // 直接调用update方法，保持parentVNode不变\n    o.element = o.vdt.update(o, o.parentDom, o.mountedQueue, nextVNode || o.vNode, o.isSVG, o.get('_blocks'));\n    // 让整个更新完成，才去触发_update生命周期函数\n    if (o.mountedQueue) {\n        // 加入$changed事件队列\n        var events = o._pendingChangedEvents;\n        for (var i = 0; i < events.length; i++) {\n            o.mountedQueue.push(events[i]);\n        }\n        o._pendingChangedEvents = [];\n        o.mountedQueue.push(function () {\n            o._update(lastVNode, nextVNode);\n        });\n    } else {\n        o._update(lastVNode, nextVNode);\n    }\n    if (--o._updateCount > 0) {\n        // 如果更新完成，发现还有更新，则是在更新过程中又触发了更新\n        // 此时直接将_updateCount置为1，因为所有数据都已更新，只做最后一次模板更新即可\n        // --o._updateCount会将该值设为0，所以这里设为1\n        o._updateCount = 1;\n        return updateComponent(o, lastVNode, nextVNode);\n    }\n\n    // 组件模板可能根据情况返回不同的dom，这种情况下，当组件自身更新(即：直接调用update)\n    // 组件的dom可能变更了，但是当前组件的vNode的dom属性却不会变更，此后该dom如果被v-if\n    // 指令删除，会报错\n    // 所以这里要强制更新\n    var vNode = o.vNode;\n    if (vNode) {\n        // 有可能直接new组件，所以这里判断vNode是否存在\n        var lastDom = vNode.dom;\n        var nextDom = o.element;\n        if (lastDom !== nextDom) {\n            vNode.dom = nextDom;\n            var parentVNode = vNode.parentVNode;\n            // 需要递归判断父组件是不是也指向同一个元素\n            while (parentVNode && parentVNode.type & Types.ComponentClassOrInstance && parentVNode.dom === lastDom) {\n                parentVNode.dom = nextDom;\n                parentVNode = parentVNode.parentVNode;\n            }\n        }\n    }\n\n    return o.element;\n}\n\nfunction patchProps$1(o, lastProps, nextProps) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : { update: false, _fromPatchProps: true };\n\n    lastProps = lastProps || EMPTY_OBJ;\n    nextProps = nextProps || EMPTY_OBJ;\n    var lastValue = void 0;\n    var nextValue = void 0;\n\n    if (lastProps !== nextProps) {\n        // 需要先处理事件，因为prop变更可能触发相应的事件\n        var lastPropsWithoutEvents = void 0;\n        var nextPropsWithoutEvents = void 0;\n\n        // 如果该属性只存在lastProps中，则是事件就解绑；\n        // 是属性就加入lastPropsWithoutEvents对象，待会儿再处理\n        var handlePropOnlyInLastProps = function handlePropOnlyInLastProps(prop) {\n            var lastValue = lastProps[prop];\n\n            if (isEventProp(prop)) {\n                // 解绑上一个属性中的事件\n                removeEvents(o, prop, lastValue);\n            } else {\n                if (!lastPropsWithoutEvents) {\n                    lastPropsWithoutEvents = {};\n                }\n                lastPropsWithoutEvents[prop] = lastValue;\n            }\n        };\n\n        if (nextProps !== EMPTY_OBJ) {\n            if (process.env.NODE_ENV !== 'production') {\n                validateProps(nextProps, o.constructor.propTypes, o.displayName || o.constructor.name);\n            }\n\n            for (var prop in nextProps) {\n                nextValue = nextProps[prop];\n\n                if (isEventProp(prop)) {\n                    lastValue = lastProps[prop];\n                    if (lastValue === nextValue) continue;\n\n                    patchEventProps(o, prop, lastValue, nextValue);\n                } else {\n                    if (!nextPropsWithoutEvents) {\n                        nextPropsWithoutEvents = {};\n                    }\n                    nextPropsWithoutEvents[prop] = nextValue;\n                }\n            }\n\n            if (lastProps !== EMPTY_OBJ) {\n                for (var _prop in lastProps) {\n                    if (!hasOwn.call(nextProps, _prop)) {\n                        handlePropOnlyInLastProps(_prop);\n                    }\n                }\n            }\n\n            if (nextPropsWithoutEvents) {\n                o.set(nextPropsWithoutEvents, options);\n            }\n        } else {\n            for (var _prop2 in lastProps) {\n                handlePropOnlyInLastProps(_prop2);\n            }\n        }\n\n        // 将不存在nextProps中，但存在lastProps中的属性，统统置为默认值\n        var defaults = result(o, 'defaults') || EMPTY_OBJ;\n        if (lastPropsWithoutEvents) {\n            for (var _prop3 in lastPropsWithoutEvents) {\n                o.set(_prop3, defaults[_prop3], options);\n            }\n        }\n    }\n}\n\n/**\n * @brief diff事件属性，属性值可以是空、函数、数组，为了保证事件属性执行顺序优先于\n * 组件内部绑定的同名事件，这里采用unshift倒着处理\n *\n * @param o\n * @param prop\n * @param lastValue\n * @param nextValue\n *\n * @return \n */\nfunction patchEventProps(o, prop, lastValue, nextValue) {\n    o.set(prop, nextValue, { silent: true });\n    var eventName = prop.substr(3);\n\n    if (isArray(nextValue)) {\n        if (isArray(lastValue)) {\n            // 由于实际应用中，nextValue和lastValue一般长度相等，\n            // 而且顺序也不会变化，极有可能仅仅只是改变了数组中\n            // 的一项或几项，所以可以一一对比处理\n            var nextLength = nextValue.length;\n            var lastLength = lastValue.length;\n            var i = void 0;\n            var l = Math.min(nextLength, lastLength);\n            if (l < nextLength) {\n                // 如果nextValue > lastValue\n                // 则绑定剩下的事件函数\n                for (i = nextLength - 1; i >= l; i--) {\n                    var _nextValue = nextValue[i];\n                    if (_nextValue) {\n                        o.on(eventName, _nextValue, { unshift: true });\n                    }\n                }\n            } else if (l < lastLength) {\n                // 如果nextValue < lastValue\n                // 则解绑剩下的事件函数\n                for (i = lastLength - 1; i >= l; i--) {\n                    var _lastValue = lastValue[i];\n                    if (_lastValue) {\n                        o.off(eventName, _lastValue);\n                    }\n                }\n            }\n            for (i = l - 1; i >= 0; i--) {\n                var _lastValue2 = lastValue[i];\n                var _nextValue2 = nextValue[i];\n                // 因为要保证顺序不变，所以即使相同，也要重新unshift到前面\n                // if (_lastValue !== _nextValue) {\n                if (_lastValue2) {\n                    o.off(eventName, _lastValue2);\n                }\n                if (_nextValue2) {\n                    o.on(eventName, _nextValue2, { unshift: true });\n                }\n                // }\n            }\n        } else if (lastValue) {\n            o.off(eventName, lastValue);\n            for (var _i = nextValue.length - 1; _i >= 0; _i--) {\n                var _nextValue3 = nextValue[_i];\n                if (_nextValue3) {\n                    o.on(eventName, _nextValue3, { unshift: true });\n                }\n            }\n        } else {\n            for (var _i2 = nextValue.length - 1; _i2 >= 0; _i2--) {\n                var _nextValue4 = nextValue[_i2];\n                if (_nextValue4) {\n                    o.on(eventName, _nextValue4, { unshift: true });\n                }\n            }\n        }\n    } else if (nextValue) {\n        if (isArray(lastValue)) {\n            var found = false;\n            for (var _i3 = 0; _i3 < lastValue.length; _i3++) {\n                var _lastValue3 = lastValue[_i3];\n                if (_lastValue3) {\n                    if (_lastValue3 !== nextValue) {\n                        o.off(eventName, _lastValue3);\n                    } else {\n                        found = true;\n                    }\n                }\n            }\n            // 如果下一个事件函数不在上一个数组中，则绑定\n            if (!found) {\n                o.on(eventName, nextValue, { unshift: true });\n            }\n        } else if (lastValue) {\n            o.off(eventName, lastValue);\n            o.on(eventName, nextValue, { unshift: true });\n        } else {\n            o.on(eventName, nextValue, { unshift: true });\n        }\n    } else {\n        removeEvents(o, prop, lastValue);\n    }\n}\n\nfunction removeEvents(o, prop, value) {\n    var eventName = void 0;\n    if (isArray(value)) {\n        eventName = prop.substr(3);\n        for (var i = 0; i < value.length; i++) {\n            var v = value[i];\n            if (v) {\n                o.off(eventName, v);\n            }\n        }\n    } else if (value) {\n        eventName = prop.substr(3);\n        o.off(eventName, value);\n    }\n    o.set(prop, undefined, { silent: true });\n}\n\nIntact$2.prototype.hydrate = function (vNode, dom) {\n    var _this = this;\n\n    var vdt = this.vdt;\n    if (!this.inited) {\n        this.one('$inited', function () {\n            var element = _this.hydrate(vNode, dom);\n            if (dom !== element) {\n                vNode.dom = element;\n            }\n            _this._triggerMountedQueue();\n            _this.mount(null, vNode);\n        });\n\n        return dom;\n    }\n\n    this._beforeCreate(null, vNode);\n    this._startRender = true;\n    this.element = vdt.hydrate(this, dom, this.mountedQueue, this.parentDom, vNode, this.isSVG, this.get('_blocks'));\n    this.rendered = true;\n    this.trigger('$rendered', this);\n    this._create(null, vNode);\n\n    return this.element;\n};\n\nIntact$2.prototype.toString = function () {\n    this._beforeCreate(null, this.vNode);\n    return this.vdt.renderString(this, this.get('_blocks'), this.vNode);\n};\n\n/**\n * @brief 继承某个组件\n *\n * @param prototype\n */\nIntact$2.extend = function () {\n    var prototype = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (_typeof(this.prototype.defaults) === 'object' && _typeof(prototype.defaults) === 'object') {\n        prototype.defaults = extend({}, this.prototype.defaults, prototype.defaults);\n    }\n    return inherit(this, prototype);\n};\n\n/**\n * 挂载组件到dom中\n * @param Component {Intact} Intact类或子类\n * @param node {Node} html节点\n */\nIntact$2.mount = function (Component, node) {\n    if (!node) throw new Error('expect a parent dom to mount Component, but got ' + node);\n    var vNode = createVNode(Component);\n    var mountedQueue = new MountedQueue();\n    render(vNode, node, mountedQueue);\n    var instance = vNode.children;\n    // 如果不是异步组件，则触发mount事件，否则\n    // 交给组件的init方法，等异步处理完成后触发\n    if (instance.inited) {\n        mountedQueue.trigger();\n    }\n    return instance;\n};\n\nIntact$2.hydrate = function (Component, node) {\n    if (!node) throw new Error('expect a parent dom to hydrate Component, but got ' + node);\n    var vNode = createVNode(Component);\n    hydrateRoot(vNode, node);\n    return vNode.children;\n};\n\n// for type check\nIntact$2.VNode = VNode;\n\nfunction addClass(element, className) {\n    if (className) {\n        if (element.classList) {\n            element.classList.add(className);\n        } else if (!hasClass(element, className)) {\n            element.className += ' ' + className;\n        }\n    }\n    return element;\n}\n\nfunction hasClass(element, className) {\n    if (element.classList) {\n        return !!className && element.className.contains(className);\n    }\n    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;\n}\n\nfunction removeClass(element, className) {\n    if (className) {\n        if (element.classList) {\n            element.classList.remove(className);\n        } else if (hasClass(element, className)) {\n            element.className = element.className.replace(new RegExp('(^|\\\\s)' + className + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ') // multiple spaces to one\n            .replace(/^\\s*|\\s*$/g, ''); // trim the ends\n        }\n    }\n}\n\nvar EVENT_NAME_MAP = {\n    transitionend: {\n        'transition': 'transitionend',\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'mozTransitionEnd',\n        'OTransition': 'oTransitionEnd',\n        'msTransition': 'MSTransitionEnd'\n    },\n\n    animationend: {\n        'animation': 'animationend',\n        'WebkitAnimation': 'webkitAnimationEnd',\n        'MozAnimation': 'mozAnimationEnd',\n        'OAnimation': 'oAnimationEnd',\n        'msAnimation': 'MSAnimationEnd'\n    }\n};\n\nvar endEvents = [];\nvar transitionProp = 'transition';\nvar animationProp = 'animation';\n\nfunction detectEvents() {\n    var testEl = document.createElement('div');\n    var style = testEl.style;\n\n    // On some platforms, in particular some releases of Android 4.x,\n    // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n    // style object but the events that fire will still be prefixed, so we need\n    // to check if the un-prefixed events are useable, and if not remove them\n    // from the map\n    if (!('AnimationEvent' in window)) {\n        delete EVENT_NAME_MAP.animationend.animation;\n    }\n\n    if (!('TransitionEvent' in window)) {\n        delete EVENT_NAME_MAP.transitionend.transition;\n    }\n\n    for (var baseEventName in EVENT_NAME_MAP) {\n        var baseEvents = EVENT_NAME_MAP[baseEventName];\n        for (var styleName in baseEvents) {\n            if (styleName in style) {\n                endEvents.push(baseEvents[styleName]);\n                if (baseEventName === 'transitionend') {\n                    transitionProp = styleName;\n                } else {\n                    animationProp = styleName;\n                }\n                break;\n            }\n        }\n    }\n}\n\nfunction whenTransitionEnds(element, info, cb) {\n    var timeout = info.timeout,\n        propCount = info.propCount;\n\n    var ended = 0;\n    var end = function end() {\n        TransitionEvents.off(element, onEnd);\n        !cb.isCalled && cb();\n        clearTimeout(timer);\n    };\n    var onEnd = function onEnd(e) {\n        if (e.target === element) {\n            e.stopPropagation();\n            if (++ended >= propCount) {\n                end();\n            }\n        }\n    };\n    var timer = setTimeout(function () {\n        if (ended < propCount) {\n            end();\n        }\n    }, timeout + 1);\n    TransitionEvents.on(element, onEnd);\n\n    return end;\n}\n\n// inspired by vue\nfunction getAnimateInfo(element, className) {\n    if (className) addClass(element, className);\n    var style = window.getComputedStyle(element);\n    var transitionDelays = style[transitionProp + 'Delay'].split(', ');\n    var transitionDurations = style[transitionProp + 'Duration'].split(', ');\n    var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n    var animationDelays = style[animationProp + 'Delay'].split(', ');\n    var animationDurations = style[animationProp + 'Duration'].split(', ');\n    var animationTimeout = getTimeout(animationDelays, animationDurations);\n    if (className) removeClass(element, className);\n\n    var type = transitionTimeout > animationTimeout ? 'transition' : 'animation';\n    var timeout = Math.max(transitionTimeout, animationTimeout);\n    var propCount = type === 'transition' ? transitionDurations.length : animationDurations.length;\n\n    return { type: type, timeout: timeout, propCount: propCount };\n}\n\nfunction getTimeout(delays, durations) {\n    var l = delays.length;\n    return Math.max.apply(null, durations.map(function (d, i) {\n        return toMs(d) + toMs(delays[i % l]);\n    }));\n}\n\nfunction toMs(s) {\n    return s.slice(0, -1) * 1000;\n}\n\nfunction addEventListener$1(node, eventName, eventListener) {\n    node.addEventListener(eventName, eventListener, false);\n}\n\nfunction removeEventListener$1(node, eventName, eventListener) {\n    node.removeEventListener(eventName, eventListener, false);\n}\n\nvar TransitionEvents = {\n    on: function on(node, eventListener) {\n        if (endEvents.length === 0) {\n            // If CSS transitions are not supported, trigger an \"end animation\"\n            // event immediately.\n            window.setTimeout(eventListener, 0);\n            return;\n        }\n        endEvents.forEach(function (endEvent) {\n            addEventListener$1(node, endEvent, eventListener);\n        });\n    },\n\n    off: function off(node, eventListener) {\n        if (endEvents.length === 0) {\n            return;\n        }\n        endEvents.forEach(function (endEvent) {\n            removeEventListener$1(node, endEvent, eventListener);\n        });\n    },\n\n    one: function one(node, eventListener) {\n        var listener = function listener() {\n            eventListener.apply(this, arguments);\n            TransitionEvents.off(node, listener);\n        };\n        TransitionEvents.on(node, listener);\n    }\n};\n\nvar raf = void 0;\nfunction nextFrame(fn) {\n    var _fn = function _fn() {\n        if (_fn.cancelled) return;\n        fn();\n    };\n    raf(function () {\n        return raf(_fn);\n    });\n    return function () {\n        _fn.cancelled = true;\n    };\n}\n\nif (inBrowser) {\n    raf = window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout;\n\n    detectEvents();\n}\n\nvar CSSMatrix = typeof WebKitCSSMatrix !== 'undefined' ? WebKitCSSMatrix : function (transform) {\n    this.m42 = 0;\n    this.m41 = 0;\n    var type = transform.slice(0, transform.indexOf('('));\n    var parts = void 0;\n    if (type === 'matrix3d') {\n        parts = transform.slice(9, -1).split(',');\n        this.m41 = parseFloat(parts[12]);\n        this.m42 = parseFloat(parts[13]);\n    } else if (type === 'matrix') {\n        parts = transform.slice(7, -1).split(',');\n        this.m41 = parseFloat(parts[4]);\n        this.m42 = parseFloat(parts[5]);\n    }\n};\n\nvar h = Vdt$1.miss.h;\nvar _Vdt$utils = Vdt$1.utils;\nvar c = _Vdt$utils.className;\nvar e$1 = _Vdt$utils.extend;\n\n\nvar prototype = {\n    defaults: function defaults$$1() {\n        return {\n            'a:continuity': true, // 是否保持连贯性\n            'a:tag': 'div',\n            'a:transition': 'animate',\n            'a:appear': false,\n            'a:mode': 'both', // out-in | in-out | both\n            'a:disabled': false, // 只做动画管理者，自己不进行动画\n            'a:move': true, // 是否执行move动画\n            'a:css': true, // 是否使用css动画，如果自定义动画函数，可以将它置为false\n            'a:delayDestroy': true, // 是否动画完成才destroy子元素\n            'a:show': true // 是否应用展示、隐藏动画\n        };\n    },\n    template: function template() {\n        var _e;\n\n        var self = this.data;\n        var tagName = self.get('a:tag');\n        var props = {};\n        var _props = self.get();\n        var _staticClass = self._staticClass;\n\n        for (var key in _props) {\n            if (key !== 'ref' && key !== 'key' && (key[0] !== 'a' || key[1] !== ':') && key.substr(0, 5) !== 'ev-a:') {\n                props[key] = _props[key];\n            }\n        }\n        var oClassName = props.className;\n        props.className = c(e$1((_e = {}, _e[oClassName] = oClassName, _e), _staticClass)) || undefined;\n\n        if (self._isRenderString) {\n            var show = self.get('a:show');\n            if (!show) {\n                var oStyle = props.style;\n                if (!oStyle) {\n                    props.style = { display: 'none' };\n                } else {\n                    var type = typeof oStyle === 'undefined' ? 'undefined' : _typeof(oStyle);\n                    if (type === 'string') {\n                        props.style = oStyle + 'display: none;';\n                    } else if (type === 'object' && oStyle) {\n                        props.style.display = 'none';\n                    }\n                }\n            }\n        }\n\n        return h(tagName, props, self.get('children'));\n    },\n    _init: function _init() {\n        var _this = this;\n\n        if (!endEvents.length) {\n            // 如果不支持css动画，则关闭css\n            this.set({\n                'a:css': false,\n                'a:move': false\n            }, { silent: true });\n        }\n\n        this.mountChildren = [];\n        this.unmountChildren = [];\n        this.updateChildren = [];\n        this.children = [];\n        this._enteringAmount = 0;\n        this._leavingAmount = 0;\n\n        // convert show to Boolean\n        this.on('$receive:a:show', function (c, v) {\n            _this.set('a:show', !!v, { silent: true });\n        });\n\n        this._staticClass = {};\n    },\n    _addClass: function _addClass(className) {\n        this._staticClass[className] = true;\n        addClass(this.element, className);\n    },\n    _removeClass: function _removeClass(className) {\n        delete this._staticClass[className];\n        removeClass(this.element, className);\n    },\n    toString: function toString() {\n        this._isRenderString = true;\n        var ret = this._super();\n        this._isRenderString = false;\n\n        return ret;\n    }\n};\n\nfunction checkMode(o) {\n    var mountChildren = [];\n    var updateChildren = [];\n    var unmountChildren = [];\n\n    var children = o.children = o.children.filter(function (instance) {\n        if (instance._delayEnter) {\n            instance._delayEnter = false;\n            mountChildren.push(instance);\n\n            return false;\n        } else if (instance._delayLeave) {\n            instance._delayLeave = false;\n            unmountChildren.push(instance);\n\n            return true;\n        } else if (instance._leaving !== false) {\n            updateChildren.push(instance);\n\n            return true;\n        }\n\n        return false;\n    });\n\n    o._beforeUpdate();\n\n    mountChildren.forEach(function (instance) {\n        instance.element.style.display = '';\n        instance.position = null;\n    });\n\n    o.mountChildren = mountChildren;\n    o.updateChildren = updateChildren;\n    o.unmountChildren = unmountChildren;\n    o.children = children.concat(mountChildren);\n\n    o._update(null, null, true);\n}\n\nprototype.init = inBrowser ? function (lastVNode, nextVNode) {\n    var parentDom = this.parentVNode && this.parentVNode.dom || this.parentDom;\n    if (parentDom && parentDom._reserve) {\n        lastVNode = parentDom._reserve[nextVNode.key];\n    }\n\n    return this._super(lastVNode, nextVNode);\n} : function () {\n    return this._superApply(arguments);\n};\n\nprototype.destroy = function (lastVNode, nextVNode, parentDom, _directly) {\n    // 1: 不存在parentDom，有两种情况：\n    //      1): 父元素也要被销毁，此时: !parentDom && lastVNode && !nextVNode\n    //      2): 该元素将被替换，此时：!parentDom && lastVNode && nextVNode\n    //      对于1)，既然父元素要销毁，那本身也要直接销毁\n    //      对于2)，本身必须待动画结束方能销毁\n    // 2: 如果该元素已经动画完成，直接销毁\n    // 3: 如果直接调用destroy方法，则直接销毁，此时：!lastVNode && !nextVNode && !parentDom\n    // 4: 如果不是延迟destroy子元素，则立即销毁\n    // 5: 如果是禁止动画的元素，且该元素是组件直接返回的动画元素，则直接销毁\n    if (!this.get('a:delayDestroy') || !parentDom && !nextVNode && !isRemoveDirectly(this) || this._leaving === false || _directly) {\n        this._super(lastVNode, nextVNode, parentDom);\n    }\n};\n\nfunction isRemoveDirectly(instance) {\n    var parentVNode = instance.parentVNode;\n    while (parentVNode && parentVNode.type & Types.ComponentClassOrInstance) {\n        var i = parentVNode.children;\n        if (i._isRemoveDirectly) {\n            return instance.element === i.element;\n        }\n        parentVNode = parentVNode.parentVNode;\n    }\n    return false;\n}\n\nfunction leave(o) {\n    // maybe a a:show animation is leaving\n    if (o._leaving) return;\n\n    var element = o.element;\n\n    if (element.style.display === 'none') return o.leaveEndCallback(true);\n\n    var isCss = o.get('a:css');\n    var continuity = o.get('a:continuity');\n    var disabled = o.get('a:disabled');\n\n    var endDirectly = false;\n    if (o._entering) {\n        if (continuity && !o._triggeredEnter) {\n            endDirectly = true;\n            o._cancelEnterNextFrame();\n        }\n        o._enterEnd(true);\n    }\n\n    if (disabled) return o.leaveEndCallback();\n\n    var vNode = o.vNode;\n    var parentDom = o._parentDom;\n    // vNode都会被添加key，当只有一个子元素时，vNode.key === undefined\n    // 这种情况，我们也当成有key处理，此时key为undefined\n    if (!parentDom._reserve) {\n        parentDom._reserve = {};\n    }\n    parentDom._reserve[vNode.key] = vNode;\n\n    o._leaving = true;\n\n    initLeaveEndCallback(o);\n\n    // 为了保持动画连贯，我们立即添加leaveActiveClass\n    // 但如果当前元素还没有来得及做enter动画，就被删除\n    // 则leaveActiveClass和leaveClass都放到下一帧添加\n    // 否则leaveClass和enterClass一样就不会有动画效果\n    if (continuity && !endDirectly && isCss) {\n        o._addClass(o.leaveActiveClass);\n    }\n\n    o.trigger('a:leaveStart', element);\n\n    if (!endDirectly) {\n        // TransitionEvents.on(element, o._leaveEnd);\n        // triggerLeave(o);\n        var info = isCss ? getAnimateInfo(element) : null;\n        o._cancelLeaveNextFrame = nextFrame(function () {\n            // 存在一种情况，当一个enter动画在完成的瞬间，\n            // 这个元素被删除了，由于前面保持动画的连贯性\n            // 添加了leaveActiveClass，则会导致绑定的leaveEnd\n            // 立即执行，所以这里放到下一帧来绑定\n            // TransitionEvents.on(element, o._leaveEnd);\n            if (isCss) {\n                o._cancelLeaveEnd = whenTransitionEnds(element, info, o._leaveEnd);\n            }\n            triggerLeave(o);\n        });\n    } else {\n        o._leaveEnd();\n    }\n}\n\nfunction triggerLeave(o) {\n    if (o._leaving === false) return;\n\n    o._triggeredLeave = true;\n\n    var element = o.element;\n    if (o.get('a:css')) {\n        o._addClass(o.leaveActiveClass);\n        o._addClass(o.leaveClass);\n    }\n\n    o.trigger('a:leave', element, o._leaveEnd);\n}\n\nfunction initLeaveEndCallback(o) {\n    var element = o.element,\n        _parentDom = o._parentDom,\n        vNode = o.vNode;\n\n    var isCss = o.get('a:css');\n    var disabled = o.get('a:disabled');\n\n    o._leaveEnd = function (isCancel) {\n        o._leaveEnd.isCalled = true;\n        if (o._cancelLeaveEnd) {\n            o._cancelLeaveEnd();\n            o._cancelLeaveEnd = null;\n        }\n        if (isCss && !disabled) {\n            o._removeClass(o.leaveClass);\n            o._removeClass(o.leaveActiveClass);\n        }\n        if (o._triggeredLeave) {\n            var s = element.style;\n            s.position = s.top = s.left = s.transform = s.WebkitTransform = '';\n        }\n\n        o._leaving = false;\n        o._triggeredLeave = false;\n        delete _parentDom._reserve[vNode.key];\n\n        var parentInstance = o.parentInstance;\n        if (parentInstance) {\n            if (--parentInstance._leavingAmount === 0 && parentInstance.get('a:mode') === 'out-in') {\n                checkMode(parentInstance);\n            }\n        }\n\n        o.trigger('a:leaveEnd', element, isCancel);\n        if (!isCancel) {\n            o.leaveEndCallback(true);\n        }\n    };\n}\n\nprototype._mount = function (lastVNode, vNode) {\n    this.isAppear = detectIsAppear(this);\n    this._parentDom = this.parentVNode && this.parentVNode.dom || this.parentDom;\n\n    this.on('$change:a:transition', initClassName);\n    initClassName(this);\n\n    // for show/hide animation\n    initAShow(this);\n\n    // 一个动画元素被删除后，会被保存\n    // 如果在删除的过程中，又添加了，则要清除上一个动画状态\n    // 将这种情况记录下来\n    if (this._lastVNode && this._lastVNode !== lastVNode) {\n        var lastInstance = this._lastVNode.children;\n        if (lastInstance._leaving) {\n            this.lastInstance = lastInstance;\n        } else {\n            lastInstance._cancelLeaveNextFrame();\n        }\n    }\n\n    this.parentInstance = getParentAnimate(this);\n\n    initUnmountCallback(this, vNode);\n\n    startEnterAnimate(this);\n};\n\nfunction initAShow(o) {\n    var element = o.element;\n    var display = element.style.display;\n    var originDisplay = display === 'none' ? '' : display;\n    if (!o.get('a:show')) {\n        element.style.display = 'none';\n    }\n\n    // o.on('$change:a:disabled', (c, v) => {\n    // if (v) {\n    // const lastInstance = o.lastInstance;\n    // if (lastInstance && lastInstance._leaving === true) {\n    // lastInstance._leaveEnd();\n    // }\n    // }\n    // });\n\n    o.on('$changed:a:show', function (c, v) {\n        // 如果是appear动画，则在show/hide改为enter动画\n        if (o.isAppear) {\n            o.isAppear = false;\n            initClassName(o);\n        }\n        if (v) {\n            // 如果在leaveEnd事件中，又触发了enter\n            // 此时_leaving为false，如果不清空lastInstance\n            // 将会在enter中再次触发leaveEnd\n            var lastInstance = o.lastInstance;\n            if (lastInstance && lastInstance._leaving === false) {\n                o.leaveEndCallback = noop;\n                o.lastInstance = null;\n            }\n            element.style.display = originDisplay;\n            startEnterAnimate(o);\n        } else {\n            o.lastInstance = o;\n            o.leaveEndCallback = function () {\n                element.style.display = 'none';\n                o.lastInstance = null;\n            };\n            unmountCallback(o);\n        }\n    });\n}\n\nfunction startEnterAnimate(o) {\n    if (o.parentInstance) {\n        // 如果存在父动画组件，则使用父级进行管理\n        // 统一做动画\n        animateList(o);\n    } else if (o.isAppear || !o.isRender) {\n        // 否则单个元素自己动画\n        enter(o);\n    }\n}\n\nfunction enter(o) {\n    if (!o.get('a:show') || o._entering) return;\n\n    var element = o.element;\n    var isCss = o.get('a:css');\n    var enterStart = o.get('a:enterStart');\n    var continuity = o.get('a:continuity');\n    var disabled = o.get('a:disabled');\n\n    // getAnimateInfo将添加enter-active className，在firefox下将导致动画提前执行\n    // 我们应该先于添加`enter` className去调用该函数\n    var isTransition = false;\n    var info = void 0;\n    if (isCss) {\n        info = getAnimateInfo(element, o.enterActiveClass);\n        if (info.type !== 'animation') {\n            isTransition = true;\n        }\n    }\n\n    var endDirectly = false;\n    // 如果这个元素是上一个删除的元素，则从当前状态回到原始状态\n    if (o.lastInstance) {\n        endDirectly = continuity && !o.lastInstance._triggeredLeave;\n\n        o.lastInstance._cancelLeaveNextFrame();\n        o.lastInstance._leaveEnd(true);\n\n        // 保持连贯，添加leaveActiveClass\n        if (continuity && !endDirectly && isCss && !disabled) {\n            o._addClass(o.enterActiveClass);\n        }\n    }\n\n    if (disabled) return;\n\n    initEnterEndCallback(o, info);\n\n    function start() {\n        o._entering = true;\n\n        o.trigger(o.enterEventName + 'Start', element);\n\n        if (!endDirectly) {\n            if (isCss) {\n                o._addClass(o.enterClass);\n            }\n\n            var cb = function cb() {\n                if (isCss) {\n                    o._cancelEnterEnd = whenTransitionEnds(element, info, o._enterEnd);\n                }\n                triggerEnter(o);\n            };\n\n            if (isTransition) {\n                o._cancelEnterNextFrame = nextFrame(cb);\n            } else {\n                // 对于animation动画，同步添加enterActiveClass，避免闪动\n                cb();\n            }\n        } else {\n            o._enterEnd();\n        }\n    }\n\n    // 要保持leave的过程中，enter动画的连贯，enterStart中必须不能操作dom导致重绘\n    // 但是往往enterStart中会重绘，一种解决思路是：\n    // 将leaveEnd放在enterStart之后执行，但如果enterStart依赖元素的初始状态，而非\n    // leave的中间状态，此时会导致enterStart中dom操作不符合预期\n    // 另种一种思路是：\n    // 不去保证拥有enterStart函数的动画的连贯性，此时我们会从enter动画初始状态进行动画\n    // 这里采取第二种思路\n    var i = void 0;\n    if (enterStart && (i = enterStart(element)) && i.then) {\n        i.then(function () {\n            if (o.destroyed || !o.get('a:show')) return;\n            start();\n        });\n    } else {\n        start();\n    }\n}\n\nfunction triggerEnter(o) {\n    var element = o.element;\n\n    if (o.get('a:css')) {\n        // if (o._entering === false) {\n        // return o._removeClass(o.enterActiveClass);\n        // }\n        o._addClass(o.enterActiveClass);\n        o._removeClass(o.enterClass);\n    }\n\n    o._triggeredEnter = true;\n\n    o.trigger(o.enterEventName, element, o._enterEnd);\n}\n\nfunction detectIsAppear(o) {\n    var isAppear = false;\n    if (o.isRender) {\n        var parent = void 0;\n        if (o.get('a:appear') && (o.parentDom || (parent = o.parentVNode) && parent.type & Types.ComponentClassOrInstance && !parent.children.isRender)) {\n            isAppear = true;\n        }\n    }\n\n    return isAppear;\n}\n\nfunction initClassName(o, newValue, oldValue) {\n    var transition = o.get('a:transition');\n    var element = o.element,\n        isAppear = o.isAppear;\n\n\n    var enterClass = void 0;\n    var enterActiveClass = void 0;\n\n    if (isAppear) {\n        enterClass = transition + '-appear';\n        enterActiveClass = transition + '-appear-active';\n    } else {\n        enterClass = transition + '-enter';\n        enterActiveClass = transition + '-enter-active';\n    }\n\n    // o.isAppear = isAppear;\n    o.enterClass = enterClass;\n    o.enterActiveClass = enterActiveClass;\n    o.leaveClass = transition + '-leave';\n    o.leaveActiveClass = transition + '-leave-active';\n    o.moveClass = transition + '-move';\n    o.enterEventName = isAppear ? 'a:appear' : 'a:enter';\n\n    if (oldValue) {\n        element.className = element.className.replace(new RegExp('\\\\b(' + oldValue + '(?=\\\\-(appear|enter|leave|move)))', 'g'), newValue);\n        var staticClass = {};\n        var index = oldValue.length;\n        for (var key in this._staticClass) {\n            staticClass[newValue + key.substring(index)] = true;\n        }\n        this._staticClass = staticClass;\n    }\n}\n\nfunction initEnterEndCallback(o) {\n    var element = o.element,\n        parentInstance = o.parentInstance;\n\n    var isCss = o.get('a:css');\n    var disabled = o.get('a:disabled');\n\n    o._enterEnd = function (isCancel) {\n        o._enterEnd.isCalled = true;\n        if (o._cancelEnterEnd) {\n            o._cancelEnterEnd();\n            o._cancelEnterEnd = null;\n        }\n        if (isCss && !disabled) {\n            o._removeClass(o.enterClass);\n            o._removeClass(o.enterActiveClass);\n        }\n\n        o._entering = false;\n        o._triggeredEnter = false;\n\n        if (parentInstance) {\n            if (--parentInstance._enteringAmount === 0 && parentInstance.get('a:mode') === 'in-out') {\n                nextFrame(function () {\n                    checkMode(parentInstance);\n                });\n            }\n        }\n\n        // maybe this animation has ended before next enter frame\n        // so we cancel it\n        if (o._cancelEnterNextFrame) {\n            o._cancelEnterNextFrame();\n            o._cancelEnterNextFrame = null;\n        }\n\n        o.trigger(o.enterEventName + 'End', element, isCancel);\n    };\n}\n\nfunction initUnmountCallback(o, vNode) {\n    var element = o.element;\n\n\n    element._unmount = function (nouse, parentDom) {\n        o.vNode = vNode;\n        o._parentDom = parentDom;\n        o.leaveEndCallback = function (isLeaveEnd) {\n            parentDom.removeChild(element);\n            if (!o.destroyed) {\n                o.destroy(vNode, null, parentDom, true);\n            }\n        };\n        unmountCallback(o);\n\n        // 存在一种情况，相同的dom，同时被子组件和父组件管理的情况\n        // 所以unmount后，将其置为空函数，以免再次unmount\n        element._unmount = noop;\n    };\n}\n\nfunction unmountCallback(o) {\n    var parentInstance = o.parentInstance;\n\n    // 如果该元素是延迟mount的元素，则直接删除\n\n    if (o._delayEnter) {\n        o.leaveEndCallback();\n        parentInstance._enteringAmount--;\n\n        return;\n    }\n\n    var isNotAnimate = !o.get('a:css') && !hasJsTransition(o);\n\n    if (parentInstance && !isNotAnimate) {\n        parentInstance._leavingAmount++;\n        if (parentInstance.get('a:mode') === 'in-out') {\n            parentInstance.updateChildren.push(o);\n            o._delayLeave = true;\n        } else {\n            // add a flag to indicate that this child will leave but we maybe call\n            // _beforeUpdate twice before _update, so let _beforeUpdate reserve it\n            // ksc-fe/kpc#238 \n            o._needLeave = true;\n            parentInstance.unmountChildren.push(o);\n        }\n        parentInstance.children.push(o);\n    } else if (isNotAnimate) {\n        o.leaveEndCallback();\n    } else {\n        leave(o);\n    }\n}\n\nfunction animateList(o) {\n    var element = o.element,\n        isAppear = o.isAppear,\n        parentInstance = o.parentInstance;\n\n\n    if (isAppear || !o.isRender) {\n        if (o.lastInstance && o.lastInstance._delayLeave) {\n            parentInstance.updateChildren.push(o);\n        } else {\n            parentInstance._enteringAmount++;\n            // 如果没有unmount的元素，则直接enter\n            if (parentInstance._leavingAmount > 0 && parentInstance.get('a:mode') === 'out-in') {\n                o._delayEnter = true;\n                element.style.display = 'none';\n            } else {\n                parentInstance.mountChildren.push(o);\n            }\n        }\n    }\n\n    parentInstance.children.push(o);\n}\n\nfunction getParentAnimate(o) {\n    // 根节点为Animate，不存在parentVNode\n    if (!o.parentVNode) return;\n\n    // o.parentVNode是animate的tag，所以要拿o.parentVNode.parentVNode\n    var parentVNode = o.parentVNode.parentVNode;\n    if (parentVNode) {\n        var parentInstance = parentVNode.children;\n        if (parentInstance instanceof o.constructor) {\n            return parentInstance;\n        }\n    }\n}\n\nfunction hasJsTransition(o) {\n    var events = o._events;\n\n    for (var key in events) {\n        if (key[0] === 'a' && key[1] === ':') {\n            if (events[key].length) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nprototype._beforeUpdate = function (lastVNode, vNode) {\n    // 更新之前，这里的children不包含本次更新mount进来的元素\n    var children = this.children;\n    var reservedChildren = [];\n    var isMove = this.get('a:move');\n\n    for (var i = 0; i < children.length; i++) {\n        var instance = children[i];\n        if (!instance._leaving && isMove) {\n            instance.position = getPosition(instance);\n        }\n        if (instance._delayLeave) {\n            reservedChildren.push(instance);\n            this.updateChildren.push(instance);\n        } else if (instance._needLeave) {\n            // when we call _beforeUpdate twice before _update\n            // the unmount children will miss\n            // so we add a flag for the children and reserve it\n            // ksc-fe/kpc#238\n            reservedChildren.push(instance);\n        }\n    }\n\n    this.children = reservedChildren;\n};\n\nprototype._update = function (lastVNode, vNode, isFromCheckMode) {\n    var parentInstance = void 0;\n    if (!this.get('a:disabled')) {\n        parentInstance = this.parentInstance;\n        if (parentInstance) {\n            if (!this._needLeave) {\n                parentInstance.updateChildren.push(this);\n            }\n            // when we call _beforeUpdate twice then call _update twice\n            // this instance may exist in childaren\n            // so we don't push it, but we need update position of it\n            // ksc-fe/kpc#238\n            var _children = parentInstance.children;\n            var index = _children.indexOf(this);\n            if (!~index) {\n                _children.push(this);\n            } else {\n                this._needUpdatePosition = true;\n            }\n        }\n    }\n\n    // 更新之后，这里的children包括当前mount/update/unmount的元素\n    var children = this.children;\n    // 不存在children，则表示没有子动画元素要管理，直接返回\n    if (!children.length) return;\n\n    var mountChildren = this.mountChildren;\n    var unmountChildren = this.unmountChildren;\n    var updateChildren = this.updateChildren;\n    var isMove = this.get('a:move');\n\n    // 如果是in-out模式，但是没有元素enter，则直接leave\n    if (!isFromCheckMode && this._enteringAmount === 0 && parentInstance && parentInstance.get('a:mode') === 'in-out') {\n        for (var i = 0; i < updateChildren.length; i++) {\n            var instance = updateChildren[i];\n            if (instance._delayLeave) {\n                unmountChildren.push(instance);\n                updateChildren.splice(i, 1);\n                instance._delayLeave = false;\n                i--;\n            }\n        }\n    }\n\n    // 进行mount元素的进入动画\n    // 因为存在moving元素被unmount又被mount的情况\n    // 所以最先处理\n    if (isMove) {\n        // if the _needUpdatePosition is true, see bellow for detail, update the position\n        updateChildren.forEach(function (instance) {\n            if (!instance._leaving && instance._needUpdatePosition) {\n                instance.position = getPosition(instance);\n            }\n            instance._needUpdatePosition = false;\n        });\n\n        mountChildren.forEach(function (instance) {\n            // 如果当前元素是从上一个unmount的元素来的，\n            // 则要初始化最新位置，因为beforeUpdate中\n            // 不包括当前mount元素的位置初始化\n            // 这样才能保持位置的连贯性\n            if (instance.lastInstance) {\n                instance.position = getPosition(instance);\n            }\n        });\n    }\n    mountChildren.forEach(function (instance) {\n        return enter(instance);\n    });\n\n    // 先将之前的动画清空\n    // 只有既在move又在enter的unmount元素才清空动画\n    // 这种情况保持不了连贯性\n    if (isMove) {\n        unmountChildren.forEach(function (instance) {\n            if (instance._moving) {\n                instance._moveEnd();\n                if (instance._entering) {\n                    instance._enterEnd();\n                }\n            }\n        });\n\n        // 对于更新的元素，如果正在move，则将位置清空，以便确定最终位置\n        updateChildren.forEach(function (instance) {\n            if (instance._moving) {\n                var s = instance.element.style;\n                s.left = s.top = '';\n            }\n        });\n\n        // 将要删除的元素，设为absolute，以便确定其它元素最终位置\n        unmountChildren.forEach(function (instance) {\n            instance.element.style.position = 'absolute';\n        });\n\n        // 获取所有元素的新位置\n        children.forEach(function (instance) {\n            instance._needLeave = false;\n            instance.newPosition = getPosition(instance);\n        });\n\n        // 分别判断元素是否需要移动，并保持当前位置不变\n        // unmount的元素，从当前位置直接leave，不要move了\n        unmountChildren.forEach(function (instance) {\n            return initMove(instance, true);\n        });\n        updateChildren.forEach(function (instance) {\n            return initMove(instance);\n        });\n        mountChildren.forEach(function (instance) {\n            return initMove(instance);\n        });\n\n        // 对于animation动画，enterEnd了entering元素\n        // 需要re-layout，来触发move动画\n        document.body.offsetWidth;\n\n        // 如果元素需要移动，则进行move动画\n        children.forEach(function (instance) {\n            if (instance._needMove) {\n                if (!instance._moving) {\n                    move(instance);\n                } else {\n                    // 如果已经在移动了，那直接改变translate，保持动画连贯\n                    triggerMove(instance);\n                }\n            }\n        });\n    }\n\n    // unmount元素做leave动画\n    unmountChildren.forEach(function (instance) {\n        // for call _beforeUpdate twice before _update, ksc-fe/kpc#238\n        children.splice(children.indexOf(instance), 1);\n        leave(instance);\n    });\n\n    this.mountChildren = [];\n    this.updateChildren = [];\n    this.unmountChildren = [];\n};\n\nfunction initMove(o, isUnmount) {\n    var element = o.element,\n        oldPosition = o.position,\n        newPosition = o.newPosition;\n\n\n    o.position = newPosition;\n\n    // 对于新mount的元素，不进行move判断\n    if (!oldPosition) return;\n\n    var dx = oldPosition.left - newPosition.left;\n    var dy = oldPosition.top - newPosition.top;\n    var oDx = o.dx;\n    var oDy = o.dy;\n\n    o.dx = dx;\n    o.dy = dy;\n\n    if (dx || dy || oDx || oDy) {\n        // 对于move中的元素，需要将它重新回到0\n        var s = element.style;\n        if (isUnmount) {\n            s.left = oldPosition.left + 'px';\n            s.top = oldPosition.top + 'px';\n            o._needMove = false;\n        } else {\n            // 如果当前元素正在enter，而且是animation动画，则要enterEnd\n            // 否则无法move\n            if (o._entering && getAnimateInfo(element).type !== 'transition') {\n                o._enterEnd();\n            }\n            o._needMove = true;\n            s.position = 'relative';\n            s.left = dx + 'px';\n            s.top = dy + 'px';\n        }\n    } else {\n        o._needMove = false;\n    }\n}\n\nfunction move(o) {\n    if (o.get('a:disabled')) return;\n\n    o._moving = true;\n\n    var element = o.element;\n    var s = element.style;\n\n    o._addClass(o.moveClass);\n\n    o._moveEnd = function (e) {\n        e && e.stopPropagation();\n        if (!e || /transform$/.test(e.propertyName)) {\n            TransitionEvents.off(element, o._moveEnd);\n            o._removeClass(o.moveClass);\n            s.position = s.left = s.top = s.transform = s.WebkitTransform = '';\n            o.dx = o.dy = 0;\n            o._moving = false;\n        }\n    };\n    TransitionEvents.on(element, o._moveEnd);\n\n    triggerMove(o);\n    // nextFrame(() => o._triggerMove());\n}\n\nfunction triggerMove(o) {\n    var s = o.element.style;\n    s.transform = s.WebkitTransform = 'translate(' + (0 - o.dx) + 'px, ' + (0 - o.dy) + 'px)';\n}\n\nfunction getPosition(o) {\n    var element = o.element;\n    var style = getComputedStyle(element);\n    var transform = style.transform || style.WebkitTransform;\n\n    if (transform === 'none') {\n        return {\n            top: element.offsetTop,\n            left: element.offsetLeft\n        };\n    }\n\n    // const transform = element.style.transform;\n    var matrix = new CSSMatrix(transform);\n    return {\n        top: element.offsetTop + matrix.m42,\n        left: element.offsetLeft + matrix.m41\n    };\n}\n\nvar Animate = Intact$2.extend(prototype);\n\nIntact$2.prototype.Animate = Animate;\nIntact$2.Animate = Animate;\nIntact$2.Vdt = Vdt$1;\nIntact$2.utils = utils;\nVdt$1.configure({\n    getModel: function getModel(self, key) {\n        return self.get(key);\n    },\n    setModel: function setModel(self, key, value) {\n        // self.set(key, value, {async: true});\n        self.set(key, value);\n    }\n});\n\nmodule.exports = Intact$2;\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n","'use strict';\nrequire('./es6.regexp.exec');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\nvar regexpExec = require('./_regexp-exec');\n\nvar SPECIES = wks('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {\n  // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n})();\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n    re[SYMBOL]('');\n    return !execCalled;\n  }) : undefined;\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var fns = exec(\n      defined,\n      SYMBOL,\n      ''[KEY],\n      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n          }\n          return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n        }\n        return { done: false };\n      }\n    );\n    var strfn = fns[0];\n    var rxfn = fns[1];\n\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","exports.f = Object.getOwnPropertySymbols;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","module.exports = false;\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar fails = require('../internals/fails');\n\n// MS Edge has broken Reflect.defineProperty - throwing instead of returning false\nvar ERROR_INSTEAD_OF_FALSE = fails(function () {\n  // eslint-disable-next-line no-undef\n  Reflect.defineProperty(definePropertyModule.f({}, 1, { value: 1 }), 1, { value: 2 });\n});\n\n// `Reflect.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-reflect.defineproperty\n$({ target: 'Reflect', stat: true, forced: ERROR_INSTEAD_OF_FALSE, sham: !DESCRIPTORS }, {\n  defineProperty: function defineProperty(target, propertyKey, attributes) {\n    anObject(target);\n    var key = toPrimitive(propertyKey, true);\n    anObject(attributes);\n    try {\n      definePropertyModule.f(target, key, attributes);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n});\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n","module.exports = require('../internals/global');\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  createNonEnumerableProperty(ArrayPrototype, UNSCOPABLES, create(null));\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.github.io/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","'use strict';\nvar regexpExec = require('./_regexp-exec');\nrequire('./_export')({\n  target: 'RegExp',\n  proto: true,\n  forced: regexpExec !== /./.exec\n}, {\n  exec: regexpExec\n});\n","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('filter') }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","module.exports = require(\"core-js/library/fn/object/assign\");","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","require('../modules/es6.parse-int');\nmodule.exports = require('../modules/_core').parseInt;\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nvar _Object$keys = require(\"../core-js/object/keys\");\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n\n  _Object$keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    _Object$defineProperty(target, property, desc);\n\n    desc = null;\n  }\n\n  return desc;\n}\n\nmodule.exports = _applyDecoratedDescriptor;","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","var global = require('../internals/global');\nvar userAgent = require('../internals/user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","'use strict';\nvar at = require('./_string-at')(true);\n\n // `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? at(S, index).length : 1);\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=13c90b1e&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=13c90b1e&lang=stylus&scoped=true&\"","exports.f = Object.getOwnPropertySymbols;\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar PROTOTYPE = 'prototype';\nvar Empty = function () { /* empty */ };\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var length = enumBugKeys.length;\n  var lt = '<';\n  var script = 'script';\n  var gt = '>';\n  var js = 'java' + script + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  iframe.src = String(js);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];\n  return createDict();\n};\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n\nhiddenKeys[IE_PROTO] = true;\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","'use strict';\n\nvar classof = require('./_classof');\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","module.exports = require(\"core-js/library/fn/object/define-property\");","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","var _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"../core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertyNames = require(\"../core-js/object/get-own-property-names\");\n\nfunction _defaults(obj, defaults) {\n  var keys = _Object$getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n\n    var value = _Object$getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      _Object$defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = _defaults;","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function () {\n  return require('./_object-gopn-ext').f;\n});\n","var core = module.exports = { version: '2.6.10' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","require('../../modules/es6.object.set-prototype-of');\nmodule.exports = require('../../modules/_core').Object.setPrototypeOf;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = require(\"core-js/library/fn/object/keys\");","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","'use strict';\n\nvar regexpFlags = require('./_flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar LAST_INDEX = 'lastIndex';\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/,\n      re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar fails = require('./_fails');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\nvar MAX_UINT32 = 0xffffffff;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  } else {\n    internalSplit = $split;\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n","module.exports = require(\"core-js/library/fn/array/is-array\");","var core = module.exports = { version: '2.6.10' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (e) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (f) { /* empty */ }\n  } return false;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !method || !fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","module.exports = true;\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var bind = require('../internals/bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","var _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _setPrototypeOf = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/set-prototype-of\"));\n\nvar _create = _interopRequireDefault(require(\"core-js/library/fn/object/create\"));\n\nvar _defaults2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defaults\"));\n\nvar isSupportProto = _setPrototypeOf.default || {}.__proto__;\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = (0, _create.default)(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  if (!isSupportProto) {\n    (0, _defaults2.default)(subClass, superClass);\n  }\n\n  subClass.__proto__ = superClass;\n}\n\nvar _default = _inheritsLoose;\nexports.default = _default;","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\nvar mxClient =\n{\n\t/**\n\t * Class: mxClient\n\t *\n\t * Bootstrapping mechanism for the mxGraph thin client. The production version\n\t * of this file contains all code required to run the mxGraph thin client, as\n\t * well as global constants to identify the browser and operating system in\n\t * use. You may have to load chrome://global/content/contentAreaUtils.js in\n\t * your page to disable certain security restrictions in Mozilla.\n\t * \n\t * Variable: VERSION\n\t *\n\t * Contains the current version of the mxGraph library. The strings that\n\t * communicate versions of mxGraph use the following format.\n\t * \n\t * versionMajor.versionMinor.buildNumber.revisionNumber\n\t * \n\t * Current version is 4.0.6.\n\t */\n\tVERSION: '4.0.6',\n\n\t/**\n\t * Variable: IS_IE\n\t *\n\t * True if the current browser is Internet Explorer 10 or below. Use <mxClient.IS_IE11>\n\t * to detect IE 11.\n\t */\n\tIS_IE: navigator.userAgent.indexOf('MSIE') >= 0,\n\n\t/**\n\t * Variable: IS_IE6\n\t *\n\t * True if the current browser is Internet Explorer 6.x.\n\t */\n\tIS_IE6: navigator.userAgent.indexOf('MSIE 6') >= 0,\n\n\t/**\n\t * Variable: IS_IE11\n\t *\n\t * True if the current browser is Internet Explorer 11.x.\n\t */\n\tIS_IE11: !!navigator.userAgent.match(/Trident\\/7\\./),\n\n\t/**\n\t * Variable: IS_EDGE\n\t *\n\t * True if the current browser is Microsoft Edge.\n\t */\n\tIS_EDGE: !!navigator.userAgent.match(/Edge\\//),\n\n\t/**\n\t * Variable: IS_QUIRKS\n\t *\n\t * True if the current browser is Internet Explorer and it is in quirks mode.\n\t */\n\tIS_QUIRKS: navigator.userAgent.indexOf('MSIE') >= 0 && (document.documentMode == null || document.documentMode == 5),\n\n\t/**\n\t * Variable: IS_EM\n\t * \n\t * True if the browser is IE11 in enterprise mode (IE8 standards mode).\n\t */\n\tIS_EM: 'spellcheck' in document.createElement('textarea') && document.documentMode == 8,\n\n\t/**\n\t * Variable: VML_PREFIX\n\t * \n\t * Prefix for VML namespace in node names. Default is 'v'.\n\t */\n\tVML_PREFIX: 'v',\n\n\t/**\n\t * Variable: OFFICE_PREFIX\n\t * \n\t * Prefix for VML office namespace in node names. Default is 'o'.\n\t */\n\tOFFICE_PREFIX: 'o',\n\n\t/**\n\t * Variable: IS_NS\n\t *\n\t * True if the current browser is Netscape (including Firefox).\n\t */\n  \tIS_NS: navigator.userAgent.indexOf('Mozilla/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('MSIE') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Edge/') < 0,\n\n\t/**\n\t * Variable: IS_OP\n\t *\n\t * True if the current browser is Opera.\n\t */\n  \tIS_OP: navigator.userAgent.indexOf('Opera/') >= 0 ||\n  \t\tnavigator.userAgent.indexOf('OPR/') >= 0,\n\n\t/**\n\t * Variable: IS_OT\n\t *\n\t * True if -o-transform is available as a CSS style, ie for Opera browsers\n\t * based on a Presto engine with version 2.5 or later.\n\t */\n  \tIS_OT: navigator.userAgent.indexOf('Presto/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.4.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.3.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.2.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.0.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/1.') < 0,\n  \t\n\t/**\n\t * Variable: IS_SF\n\t *\n\t * True if the current browser is Safari.\n\t */\n  \tIS_SF: navigator.userAgent.indexOf('AppleWebKit/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Chrome/') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Edge/') < 0,\n  \t\n\t/**\n\t * Variable: IS_IOS\n\t * \n\t * Returns true if the user agent is an iPad, iPhone or iPod.\n\t */\n  \tIS_IOS: (navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false),\n  \t\t\n\t/**\n\t * Variable: IS_GC\n\t *\n\t * True if the current browser is Google Chrome.\n\t */\n  \tIS_GC: navigator.userAgent.indexOf('Chrome/') >= 0 &&\n\t\tnavigator.userAgent.indexOf('Edge/') < 0,\n\t\n\t/**\n\t * Variable: IS_CHROMEAPP\n\t *\n\t * True if the this is running inside a Chrome App.\n\t */\n  \tIS_CHROMEAPP: window.chrome != null && chrome.app != null && chrome.app.runtime != null,\n\n\t/**\n\t * Variable: IS_FF\n\t *\n\t * True if the current browser is Firefox.\n\t */\n  \tIS_FF: navigator.userAgent.indexOf('Firefox/') >= 0,\n  \t\n\t/**\n\t * Variable: IS_MT\n\t *\n\t * True if -moz-transform is available as a CSS style. This is the case\n\t * for all Firefox-based browsers newer than or equal 3, such as Camino,\n\t * Iceweasel, Seamonkey and Iceape.\n\t */\n  \tIS_MT: (navigator.userAgent.indexOf('Firefox/') >= 0 &&\n\t\tnavigator.userAgent.indexOf('Firefox/1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Firefox/2.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('Iceweasel/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceweasel/1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceweasel/2.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('SeaMonkey/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('SeaMonkey/1.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('Iceape/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceape/1.') < 0),\n\n\t/**\n\t * Variable: IS_VML\n\t *\n\t * True if the browser supports VML.\n\t */\n  \tIS_VML: navigator.appName.toUpperCase() == 'MICROSOFT INTERNET EXPLORER',\n\n\t/**\n\t * Variable: IS_SVG\n\t *\n\t * True if the browser supports SVG.\n\t */\n  \tIS_SVG: navigator.appName.toUpperCase() != 'MICROSOFT INTERNET EXPLORER',\n\n\t/**\n\t * Variable: NO_FO\n\t *\n\t * True if foreignObject support is not available. This is the case for\n\t * Opera, older SVG-based browsers and all versions of IE.\n\t */\n  \tNO_FO: !document.createElementNS || document.createElementNS('http://www.w3.org/2000/svg',\n  \t\t'foreignObject') != '[object SVGForeignObjectElement]' || navigator.userAgent.indexOf('Opera/') >= 0,\n\n\t/**\n\t * Variable: IS_WIN\n\t *\n\t * True if the client is a Windows.\n\t */\n  \tIS_WIN: navigator.appVersion.indexOf('Win') > 0,\n\n\t/**\n\t * Variable: IS_MAC\n\t *\n\t * True if the client is a Mac.\n\t */\n  \tIS_MAC: navigator.appVersion.indexOf('Mac') > 0,\n\t\n\t/**\n\t * Variable: IS_CHROMEOS\n\t *\n\t * True if the client is a Chrome OS.\n\t */\n  \tIS_CHROMEOS: /\\bCrOS\\b/.test(navigator.userAgent),\n\n\t/**\n\t * Variable: IS_TOUCH\n\t * \n\t * True if this device supports touchstart/-move/-end events (Apple iOS,\n\t * Android, Chromebook and Chrome Browser on touch-enabled devices).\n\t */\n  \tIS_TOUCH: 'ontouchstart' in document.documentElement,\n\n\t/**\n\t * Variable: IS_POINTER\n\t * \n\t * True if this device supports Microsoft pointer events (always false on Macs).\n\t */\n  \tIS_POINTER: window.PointerEvent != null && !(navigator.appVersion.indexOf('Mac') > 0),\n\n\t/**\n\t * Variable: IS_LOCAL\n\t *\n\t * True if the documents location does not start with http:// or https://.\n\t */\n  \tIS_LOCAL: document.location.href.indexOf('http://') < 0 &&\n  \t\t\t  document.location.href.indexOf('https://') < 0,\n\n\t/**\n\t * Variable: defaultBundles\n\t * \n\t * Contains the base names of the default bundles if mxLoadResources is false.\n\t */\n  \tdefaultBundles: [],\n\n\t/**\n\t * Function: isBrowserSupported\n\t *\n\t * Returns true if the current browser is supported, that is, if\n\t * <mxClient.IS_VML> or <mxClient.IS_SVG> is true.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * if (!mxClient.isBrowserSupported())\n\t * {\n\t *   mxUtils.error('Browser is not supported!', 200, false);\n\t * }\n\t * (end)\n\t */\n\tisBrowserSupported: function()\n\t{\n\t\treturn mxClient.IS_VML || mxClient.IS_SVG;\n\t},\n\n\t/**\n\t * Function: link\n\t *\n\t * Adds a link node to the head of the document. Use this\n\t * to add a stylesheet to the page as follows:\n\t *\n\t * (code)\n\t * mxClient.link('stylesheet', filename);\n\t * (end)\n\t *\n\t * where filename is the (relative) URL of the stylesheet. The charset\n\t * is hardcoded to ISO-8859-1 and the type is text/css.\n\t * \n\t * Parameters:\n\t * \n\t * rel - String that represents the rel attribute of the link node.\n\t * href - String that represents the href attribute of the link node.\n\t * doc - Optional parent document of the link node.\n\t * id - unique id for the link element to check if it already exists\n\t */\n\tlink: function(rel, href, doc, id)\n\t{\n\t\tdoc = doc || document;\n\n\t\t// Workaround for Operation Aborted in IE6 if base tag is used in head\n\t\tif (mxClient.IS_IE6)\n\t\t{\n\t\t\tdoc.write('<link rel=\"' + rel + '\" href=\"' + href + '\" charset=\"UTF-8\" type=\"text/css\"/>');\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tvar link = doc.createElement('link');\n\t\t\t\n\t\t\tlink.setAttribute('rel', rel);\n\t\t\tlink.setAttribute('href', href);\n\t\t\tlink.setAttribute('charset', 'UTF-8');\n\t\t\tlink.setAttribute('type', 'text/css');\n\t\t\t\n\t\t\tif (id)\n\t\t\t{\n\t\t\t\tlink.setAttribute('id', id);\n\t\t\t}\n\t\t\t\n\t\t\tvar head = doc.getElementsByTagName('head')[0];\n\t   \t\thead.appendChild(link);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: loadResources\n\t * \n\t * Helper method to load the default bundles if mxLoadResources is false.\n\t * \n\t * Parameters:\n\t * \n\t * fn - Function to call after all resources have been loaded.\n\t * lan - Optional string to pass to <mxResources.add>.\n\t */\n\tloadResources: function(fn, lan)\n\t{\n\t\tvar pending = mxClient.defaultBundles.length;\n\t\t\n\t\tfunction callback()\n\t\t{\n\t\t\tif (--pending == 0)\n\t\t\t{\n\t\t\t\tfn();\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < mxClient.defaultBundles.length; i++)\n\t\t{\n\t\t\tmxResources.add(mxClient.defaultBundles[i], lan, callback);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: include\n\t *\n\t * Dynamically adds a script node to the document header.\n\t * \n\t * In production environments, the includes are resolved in the mxClient.js\n\t * file to reduce the number of requests required for client startup. This\n\t * function should only be used in development environments, but not in\n\t * production systems.\n\t */\n\tinclude: function(src)\n\t{\n\t\tdocument.write('<script src=\"'+src+'\"></script>');\n\t}\n};\n\n/**\n * Variable: mxLoadResources\n * \n * Optional global config variable to toggle loading of the two resource files\n * in <mxGraph> and <mxEditor>. Default is true. NOTE: This is a global variable,\n * not a variable of mxClient. If this is false, you can use <mxClient.loadResources>\n * with its callback to load the default bundles asynchronously.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadResources = false;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxLoadResources) == 'undefined')\n{\n\tmxLoadResources = true;\n}\n\n/**\n * Variable: mxForceIncludes\n * \n * Optional global config variable to force loading the JavaScript files in\n * development mode. Default is undefined. NOTE: This is a global variable,\n * not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadResources = true;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxForceIncludes) == 'undefined')\n{\n\tmxForceIncludes = false;\n}\n\n/**\n * Variable: mxResourceExtension\n * \n * Optional global config variable to specify the extension of resource files.\n * Default is true. NOTE: This is a global variable, not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxResourceExtension = '.txt';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxResourceExtension) == 'undefined')\n{\n\tmxResourceExtension = '.txt';\n}\n\n/**\n * Variable: mxLoadStylesheets\n * \n * Optional global config variable to toggle loading of the CSS files when\n * the library is initialized. Default is true. NOTE: This is a global variable,\n * not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadStylesheets = false;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxLoadStylesheets) == 'undefined')\n{\n\tmxLoadStylesheets = true;\n}\n\n/**\n * Variable: basePath\n *\n * Basepath for all URLs in the core without trailing slash. Default is '.'.\n * Set mxBasePath prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxBasePath = '/path/to/core/directory';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n * \n * When using a relative path, the path is relative to the URL of the page that\n * contains the assignment. Trailing slashes are automatically removed.\n */\nif (typeof(mxBasePath) != 'undefined' && mxBasePath.length > 0)\n{\n\t// Adds a trailing slash if required\n\tif (mxBasePath.substring(mxBasePath.length - 1) == '/')\n\t{\n\t\tmxBasePath = mxBasePath.substring(0, mxBasePath.length - 1);\n\t}\n\n\tmxClient.basePath = mxBasePath;\n}\nelse\n{\n\tmxClient.basePath = '.';\n}\n\n/**\n * Variable: imageBasePath\n *\n * Basepath for all images URLs in the core without trailing slash. Default is\n * <mxClient.basePath> + '/images'. Set mxImageBasePath prior to loading the\n * mxClient library as follows to override this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxImageBasePath = '/path/to/image/directory';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n * \n * When using a relative path, the path is relative to the URL of the page that\n * contains the assignment. Trailing slashes are automatically removed.\n */\nif (typeof(mxImageBasePath) != 'undefined' && mxImageBasePath.length > 0)\n{\n\t// Adds a trailing slash if required\n\tif (mxImageBasePath.substring(mxImageBasePath.length - 1) == '/')\n\t{\n\t\tmxImageBasePath = mxImageBasePath.substring(0, mxImageBasePath.length - 1);\n\t}\n\n\tmxClient.imageBasePath = mxImageBasePath;\n}\nelse\n{\n\tmxClient.imageBasePath = mxClient.basePath + '/images';\t\n}\n\n/**\n * Variable: language\n *\n * Defines the language of the client, eg. en for english, de for german etc.\n * The special value 'none' will disable all built-in internationalization and\n * resource loading. See <mxResources.getSpecialBundle> for handling identifiers\n * with and without a dash.\n * \n * Set mxLanguage prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxLanguage = 'en';\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n * \n * If internationalization is disabled, then the following variables should be\n * overridden to reflect the current language of the system. These variables are\n * cleared when i18n is disabled.\n * <mxEditor.askZoomResource>, <mxEditor.lastSavedResource>,\n * <mxEditor.currentFileResource>, <mxEditor.propertiesResource>,\n * <mxEditor.tasksResource>, <mxEditor.helpResource>, <mxEditor.outlineResource>,\n * <mxElbowEdgeHandler.doubleClickOrientationResource>, <mxUtils.errorResource>,\n * <mxUtils.closeResource>, <mxGraphSelectionModel.doneResource>,\n * <mxGraphSelectionModel.updatingSelectionResource>, <mxGraphView.doneResource>,\n * <mxGraphView.updatingDocumentResource>, <mxCellRenderer.collapseExpandResource>,\n * <mxGraph.containsValidationErrorsResource> and\n * <mxGraph.alreadyConnectedResource>.\n */\nif (typeof(mxLanguage) != 'undefined' && mxLanguage != null)\n{\n\tmxClient.language = mxLanguage;\n}\nelse\n{\n\tmxClient.language = (mxClient.IS_IE) ? navigator.userLanguage : navigator.language;\n}\n\n/**\n * Variable: defaultLanguage\n * \n * Defines the default language which is used in the common resource files. Any\n * resources for this language will only load the common resource file, but not\n * the language-specific resource file. Default is 'en'.\n * \n * Set mxDefaultLanguage prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxDefaultLanguage = 'de';\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxDefaultLanguage) != 'undefined' && mxDefaultLanguage != null)\n{\n\tmxClient.defaultLanguage = mxDefaultLanguage;\n}\nelse\n{\n\tmxClient.defaultLanguage = 'en';\n}\n\n// Adds all required stylesheets and namespaces\nif (mxLoadStylesheets)\n{\n\tmxClient.link('stylesheet', mxClient.basePath + '/css/common.css');\n}\n\n/**\n * Variable: languages\n *\n * Defines the optional array of all supported language extensions. The default\n * language does not have to be part of this list. See\n * <mxResources.isLanguageSupported>.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxLanguages = ['de', 'it', 'fr'];\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n * \n * This is used to avoid unnecessary requests to language files, ie. if a 404\n * will be returned.\n */\nif (typeof(mxLanguages) != 'undefined' && mxLanguages != null)\n{\n\tmxClient.languages = mxLanguages;\n}\n\n// Adds required namespaces, stylesheets and memory handling for older IE browsers\nif (mxClient.IS_VML)\n{\n\tif (mxClient.IS_SVG)\n\t{\n\t\tmxClient.IS_VML = false;\n\t}\n\telse\n\t{\n\t\t// Enables support for IE8 standards mode. Note that this requires all attributes for VML\n\t\t// elements to be set using direct notation, ie. node.attr = value. The use of setAttribute\n\t\t// is not possible.\n\t\tif (document.documentMode == 8)\n\t\t{\n\t\t\tdocument.namespaces.add(mxClient.VML_PREFIX, 'urn:schemas-microsoft-com:vml', '#default#VML');\n\t\t\tdocument.namespaces.add(mxClient.OFFICE_PREFIX, 'urn:schemas-microsoft-com:office:office', '#default#VML');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.namespaces.add(mxClient.VML_PREFIX, 'urn:schemas-microsoft-com:vml');\n\t\t\tdocument.namespaces.add(mxClient.OFFICE_PREFIX, 'urn:schemas-microsoft-com:office:office');\n\t\t}\n\n\t\t// Workaround for limited number of stylesheets in IE (does not work in standards mode)\n\t\tif (mxClient.IS_QUIRKS && document.styleSheets.length >= 30)\n\t\t{\n\t\t\t(function()\n\t\t\t{\n\t\t\t\tvar node = document.createElement('style');\n\t\t\t\tnode.type = 'text/css';\n\t\t\t\tnode.styleSheet.cssText = mxClient.VML_PREFIX + '\\\\:*{behavior:url(#default#VML)}' +\n\t\t        \tmxClient.OFFICE_PREFIX + '\\\\:*{behavior:url(#default#VML)}';\n\t\t        document.getElementsByTagName('head')[0].appendChild(node);\n\t\t\t})();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.createStyleSheet().cssText = mxClient.VML_PREFIX + '\\\\:*{behavior:url(#default#VML)}' +\n\t\t    \tmxClient.OFFICE_PREFIX + '\\\\:*{behavior:url(#default#VML)}';\n\t\t}\n\t    \n\t    if (mxLoadStylesheets)\n\t    {\n\t    \tmxClient.link('stylesheet', mxClient.basePath + '/css/explorer.css');\n\t    }\n\t}\n}\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxLog =\n{\n\t/**\n\t * Class: mxLog\n\t * \n\t * A singleton class that implements a simple console.\n\t * \n\t * Variable: consoleName\n\t * \n\t * Specifies the name of the console window. Default is 'Console'.\n\t */\n\tconsoleName: 'Console',\n\t\n\t/**\n\t * Variable: TRACE\n\t * \n\t * Specified if the output for <enter> and <leave> should be visible in the\n\t * console. Default is false.\n\t */\n\tTRACE: false,\n\n\t/**\n\t * Variable: DEBUG\n\t * \n\t * Specifies if the output for <debug> should be visible in the console.\n\t * Default is true.\n\t */\n\tDEBUG: true,\n\n\t/**\n\t * Variable: WARN\n\t * \n\t * Specifies if the output for <warn> should be visible in the console.\n\t * Default is true.\n\t */\n\tWARN: true,\n\n\t/**\n\t * Variable: buffer\n\t * \n\t * Buffer for pre-initialized content.\n\t */\n\tbuffer: '',\n\t\n\t/**\n\t * Function: init\n\t *\n\t * Initializes the DOM node for the console. This requires document.body to\n\t * point to a non-null value. This is called from within <setVisible> if the\n\t * log has not yet been initialized.\n\t */\n\tinit: function()\n\t{\n\t\tif (mxLog.window == null && document.body != null)\n\t\t{\n\t\t\tvar title = mxLog.consoleName + ' - mxGraph ' + mxClient.VERSION;\n\n\t\t\t// Creates a table that maintains the layout\n\t\t\tvar table = document.createElement('table');\n\t\t\ttable.setAttribute('width', '100%');\n\t\t\ttable.setAttribute('height', '100%');\n\n\t\t\tvar tbody = document.createElement('tbody');\n\t\t\tvar tr = document.createElement('tr');\n\t\t\tvar td = document.createElement('td');\n\t\t\ttd.style.verticalAlign = 'top';\n\t\t\t\t\n\t\t\t// Adds the actual console as a textarea\n\t\t\tmxLog.textarea = document.createElement('textarea');\n\t\t\tmxLog.textarea.setAttribute('wrap', 'off');\n\t\t\tmxLog.textarea.setAttribute('readOnly', 'true');\n\t\t\tmxLog.textarea.style.height = '100%';\n\t\t\tmxLog.textarea.style.resize = 'none';\n\t\t\tmxLog.textarea.value = mxLog.buffer;\n\n\t\t\t// Workaround for wrong width in standards mode\n\t\t\tif (mxClient.IS_NS && document.compatMode != 'BackCompat')\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.width = '99%';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.width = '100%';\n\t\t\t}\n\t\t\t\n\t\t\ttd.appendChild(mxLog.textarea);\n\t\t\ttr.appendChild(td);\n\t\t\ttbody.appendChild(tr);\n\n\t\t\t// Creates the container div\n\t\t\ttr = document.createElement('tr');\n\t\t\tmxLog.td = document.createElement('td');\n\t\t\tmxLog.td.style.verticalAlign = 'top';\n\t\t\tmxLog.td.setAttribute('height', '30px');\n\t\t\t\n\t\t\ttr.appendChild(mxLog.td);\n\t\t\ttbody.appendChild(tr);\n\t\t\ttable.appendChild(tbody);\n\n\t\t\t// Adds various debugging buttons\n\t\t\tmxLog.addButton('Info', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.info();\n\t\t\t});\n\t\t\n\t\t\tmxLog.addButton('DOM', function (evt)\n\t\t\t{\n\t\t\t\tvar content = mxUtils.getInnerHtml(document.body);\n\t\t\t\tmxLog.debug(content);\n\t\t\t});\n\t\n\t\t\tmxLog.addButton('Trace', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.TRACE = !mxLog.TRACE;\n\t\t\t\t\n\t\t\t\tif (mxLog.TRACE)\n\t\t\t\t{\n\t\t\t\t\tmxLog.debug('Tracing enabled');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmxLog.debug('Tracing disabled');\n\t\t\t\t}\n\t\t\t});\t\n\n\t\t\tmxLog.addButton('Copy', function (evt)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmxUtils.copy(mxLog.textarea.value);\n\t\t\t\t}\n\t\t\t\tcatch (err)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.alert(err);\n\t\t\t\t}\n\t\t\t});\t\t\t\n\n\t\t\tmxLog.addButton('Show', function (evt)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmxUtils.popup(mxLog.textarea.value);\n\t\t\t\t}\n\t\t\t\tcatch (err)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.alert(err);\n\t\t\t\t}\n\t\t\t});\t\n\t\t\t\n\t\t\tmxLog.addButton('Clear', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.textarea.value = '';\n\t\t\t});\n\n\t\t\t// Cross-browser code to get window size\n\t\t\tvar h = 0;\n\t\t\tvar w = 0;\n\t\t\t\n\t\t\tif (typeof(window.innerWidth) === 'number')\n\t\t\t{\n\t\t\t\th = window.innerHeight;\n\t\t\t\tw = window.innerWidth;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\th = (document.documentElement.clientHeight || document.body.clientHeight);\n\t\t\t\tw = document.body.clientWidth;\n\t\t\t}\n\n\t\t\tmxLog.window = new mxWindow(title, table, Math.max(0, w - 320), Math.max(0, h - 210), 300, 160);\n\t\t\tmxLog.window.setMaximizable(true);\n\t\t\tmxLog.window.setScrollable(false);\n\t\t\tmxLog.window.setResizable(true);\n\t\t\tmxLog.window.setClosable(true);\n\t\t\tmxLog.window.destroyOnClose = false;\n\t\t\t\n\t\t\t// Workaround for ignored textarea height in various setups\n\t\t\tif (((mxClient.IS_NS || mxClient.IS_IE) && !mxClient.IS_GC &&\n\t\t\t\t!mxClient.IS_SF && document.compatMode != 'BackCompat') ||\n\t\t\t\tdocument.documentMode == 11)\n\t\t\t{\n\t\t\t\tvar elt = mxLog.window.getElement();\n\t\t\t\t\n\t\t\t\tvar resizeHandler = function(sender, evt)\n\t\t\t\t{\n\t\t\t\t\tmxLog.textarea.style.height = Math.max(0, elt.offsetHeight - 70) + 'px';\n\t\t\t\t}; \n\t\t\t\t\n\t\t\t\tmxLog.window.addListener(mxEvent.RESIZE_END, resizeHandler);\n\t\t\t\tmxLog.window.addListener(mxEvent.MAXIMIZE, resizeHandler);\n\t\t\t\tmxLog.window.addListener(mxEvent.NORMALIZE, resizeHandler);\n\n\t\t\t\tmxLog.textarea.style.height = '92px';\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: info\n\t * \n\t * Writes the current navigator information to the console.\n\t */\n\tinfo: function()\n\t{\n\t\tmxLog.writeln(mxUtils.toString(navigator));\n\t},\n\t\t\t\n\t/**\n\t * Function: addButton\n\t * \n\t * Adds a button to the console using the given label and function.\n\t */\n\taddButton: function(lab, funct)\n\t{\n\t\tvar button = document.createElement('button');\n\t\tmxUtils.write(button, lab);\n\t\tmxEvent.addListener(button, 'click', funct);\n\t\tmxLog.td.appendChild(button);\n\t},\n\t\t\t\t\n\t/**\n\t * Function: isVisible\n\t * \n\t * Returns true if the console is visible.\n\t */\n\tisVisible: function()\n\t{\n\t\tif (mxLog.window != null)\n\t\t{\n\t\t\treturn mxLog.window.isVisible();\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\n\t/**\n\t * Function: show\n\t * \n\t * Shows the console.\n\t */\n\tshow: function()\n\t{\n\t\tmxLog.setVisible(true);\n\t},\n\n\t/**\n\t * Function: setVisible\n\t * \n\t * Shows or hides the console.\n\t */\n\tsetVisible: function(visible)\n\t{\n\t\tif (mxLog.window == null)\n\t\t{\n\t\t\tmxLog.init();\n\t\t}\n\n\t\tif (mxLog.window != null)\n\t\t{\n\t\t\tmxLog.window.setVisible(visible);\n\t\t}\n\t},\n\n\t/**\n\t * Function: enter\n\t * \n\t * Writes the specified string to the console\n\t * if <TRACE> is true and returns the current \n\t * time in milliseconds.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * var t0 = mxLog.enter('Hello');\n\t * // Do something\n\t * mxLog.leave('World!', t0);\n\t * (end)\n\t */\n\tenter: function(string)\n\t{\n\t\tif (mxLog.TRACE)\n\t\t{\n\t\t\tmxLog.writeln('Entering '+string);\n\t\t\t\n\t\t\treturn new Date().getTime();\n\t\t}\n\t},\n\n\t/**\n\t * Function: leave\n\t * \n\t * Writes the specified string to the console\n\t * if <TRACE> is true and computes the difference\n\t * between the current time and t0 in milliseconds.\n\t * See <enter> for an example.\n\t */\n\tleave: function(string, t0)\n\t{\n\t\tif (mxLog.TRACE)\n\t\t{\n\t\t\tvar dt = (t0 != 0) ? ' ('+(new Date().getTime() - t0)+' ms)' : '';\n\t\t\tmxLog.writeln('Leaving '+string+dt);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: debug\n\t * \n\t * Adds all arguments to the console if <DEBUG> is enabled.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * mxLog.debug('Hello, World!');\n\t * (end)\n\t */\n\tdebug: function()\n\t{\n\t\tif (mxLog.DEBUG)\n\t\t{\n\t\t\tmxLog.writeln.apply(this, arguments);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: warn\n\t * \n\t * Adds all arguments to the console if <WARN> is enabled.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * mxLog.warn('Hello, World!');\n\t * (end)\n\t */\n\twarn: function()\n\t{\n\t\tif (mxLog.WARN)\n\t\t{\n\t\t\tmxLog.writeln.apply(this, arguments);\n\t\t}\n\t},\n\n\t/**\n\t * Function: write\n\t * \n\t * Adds the specified strings to the console.\n\t */\n\twrite: function()\n\t{\n\t\tvar string = '';\n\t\t\n\t\tfor (var i = 0; i < arguments.length; i++)\n\t\t{\n\t\t\tstring += arguments[i];\n\t\t\t\n\t\t\tif (i < arguments.length - 1)\n\t\t\t{\n\t\t\t\tstring += ' ';\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (mxLog.textarea != null)\n\t\t{\n\t\t\tmxLog.textarea.value = mxLog.textarea.value + string;\n\n\t\t\t// Workaround for no update in Presto 2.5.22 (Opera 10.5)\n\t\t\tif (navigator.userAgent.indexOf('Presto/2.5') >= 0)\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.visibility = 'hidden';\n\t\t\t\tmxLog.textarea.style.visibility = 'visible';\n\t\t\t}\n\t\t\t\n\t\t\tmxLog.textarea.scrollTop = mxLog.textarea.scrollHeight;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxLog.buffer += string;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: writeln\n\t * \n\t * Adds the specified strings to the console, appending a linefeed at the\n\t * end of each string.\n\t */\n\twriteln: function()\n\t{\n\t\tvar string = '';\n\t\t\n\t\tfor (var i = 0; i < arguments.length; i++)\n\t\t{\n\t\t\tstring += arguments[i];\n\t\t\t\n\t\t\tif (i < arguments.length - 1)\n\t\t\t{\n\t\t\t\tstring += ' ';\n\t\t\t}\n\t\t}\n\n\t\tmxLog.write(string + '\\n');\n\t}\n\t\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxObjectIdentity =\n{\n\t/**\n\t * Class: mxObjectIdentity\n\t * \n\t * Identity for JavaScript objects and functions. This is implemented using\n\t * a simple incrementing counter which is stored in each object under\n\t * <FIELD_NAME>.\n\t * \n\t * The identity for an object does not change during its lifecycle.\n\t * \n\t * Variable: FIELD_NAME\n\t * \n\t * Name of the field to be used to store the object ID. Default is\n\t * <code>mxObjectId</code>.\n\t */\n\tFIELD_NAME: 'mxObjectId',\n\n\t/**\n\t * Variable: counter\n\t * \n\t * Current counter.\n\t */\n\tcounter: 0,\n\n\t/**\n\t * Function: get\n\t * \n\t * Returns the ID for the given object or function or null if no object\n\t * is specified.\n\t */\n\tget: function(obj)\n\t{\n\t\tif (obj != null)\n\t\t{\n\t\t\tif (obj[mxObjectIdentity.FIELD_NAME] == null)\n\t\t\t{\n\t\t\t\tif (typeof obj === 'object')\n\t\t\t\t{\n\t\t\t\t\tvar ctor = mxUtils.getFunctionName(obj.constructor);\n\t\t\t\t\tobj[mxObjectIdentity.FIELD_NAME] = ctor + '#' + mxObjectIdentity.counter++;\n\t\t\t\t}\n\t\t\t\telse if (typeof obj === 'function')\n\t\t\t\t{\n\t\t\t\t\tobj[mxObjectIdentity.FIELD_NAME] = 'Function#' + mxObjectIdentity.counter++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn obj[mxObjectIdentity.FIELD_NAME];\n\t\t}\n\t\t\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: clear\n\t * \n\t * Deletes the ID from the given object or function.\n\t */\n\tclear: function(obj)\n\t{\n\t\tif (typeof(obj) === 'object' || typeof obj === 'function')\n\t\t{\n\t\t\tdelete obj[mxObjectIdentity.FIELD_NAME];\n\t\t}\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDictionary\n *\n * A wrapper class for an associative array with object keys. Note: This\n * implementation uses <mxObjectIdentitiy> to turn object keys into strings.\n * \n * Constructor: mxEventSource\n *\n * Constructs a new dictionary which allows object to be used as keys.\n */\nfunction mxDictionary()\n{\n\tthis.clear();\n};\n\n/**\n * Function: map\n *\n * Stores the (key, value) pairs in this dictionary.\n */\nmxDictionary.prototype.map = null;\n\n/**\n * Function: clear\n *\n * Clears the dictionary.\n */\nmxDictionary.prototype.clear = function()\n{\n\tthis.map = {};\n};\n\n/**\n * Function: get\n *\n * Returns the value for the given key.\n */\nmxDictionary.prototype.get = function(key)\n{\n\tvar id = mxObjectIdentity.get(key);\n\t\n\treturn this.map[id];\n};\n\n/**\n * Function: put\n *\n * Stores the value under the given key and returns the previous\n * value for that key.\n */\nmxDictionary.prototype.put = function(key, value)\n{\n\tvar id = mxObjectIdentity.get(key);\n\tvar previous = this.map[id];\n\tthis.map[id] = value;\n\t\n\treturn previous;\n};\n\n/**\n * Function: remove\n *\n * Removes the value for the given key and returns the value that\n * has been removed.\n */\nmxDictionary.prototype.remove = function(key)\n{\n\tvar id = mxObjectIdentity.get(key);\n\tvar previous = this.map[id];\n\tdelete this.map[id];\n\t\n\treturn previous;\n};\n\n/**\n * Function: getKeys\n *\n * Returns all keys as an array.\n */\nmxDictionary.prototype.getKeys = function()\n{\n\tvar result = [];\n\t\n\tfor (var key in this.map)\n\t{\n\t\tresult.push(key);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getValues\n *\n * Returns all values as an array.\n */\nmxDictionary.prototype.getValues = function()\n{\n\tvar result = [];\n\t\n\tfor (var key in this.map)\n\t{\n\t\tresult.push(this.map[key]);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: visit\n *\n * Visits all entries in the dictionary using the given function with the\n * following signature: function(key, value) where key is a string and\n * value is an object.\n * \n * Parameters:\n * \n * visitor - A function that takes the key and value as arguments.\n */\nmxDictionary.prototype.visit = function(visitor)\n{\n\tfor (var key in this.map)\n\t{\n\t\tvisitor(key, this.map[key]);\n\t}\n};\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\nvar mxResources =\n{\n\t/**\n\t * Class: mxResources\n\t * \n\t * Implements internationalization. You can provide any number of \n\t * resource files on the server using the following format for the \n\t * filename: name[-en].properties. The en stands for any lowercase \n\t * 2-character language shortcut (eg. de for german, fr for french).\n\t *\n\t * If the optional language extension is omitted, then the file is used as a \n\t * default resource which is loaded in all cases. If a properties file for a \n\t * specific language exists, then it is used to override the settings in the \n\t * default resource. All entries in the file are of the form key=value. The\n\t * values may then be accessed in code via <get>. Lines without \n\t * equal signs in the properties files are ignored.\n\t *\n\t * Resource files may either be added programmatically using\n\t * <add> or via a resource tag in the UI section of the \n\t * editor configuration file, eg:\n\t * \n\t * (code)\n\t * <mxEditor>\n\t *   <ui>\n\t *     <resource basename=\"examples/resources/mxWorkflow\"/>\n\t * (end)\n\t * \n\t * The above element will load examples/resources/mxWorkflow.properties as well\n\t * as the language specific file for the current language, if it exists.\n\t * \n\t * Values may contain placeholders of the form {1}...{n} where each placeholder\n\t * is replaced with the value of the corresponding array element in the params\n\t * argument passed to <mxResources.get>. The placeholder {1} maps to the first\n\t * element in the array (at index 0).\n\t * \n\t * See <mxClient.language> for more information on specifying the default\n\t * language or disabling all loading of resources.\n\t * \n\t * Lines that start with a # sign will be ignored.\n\t * \n\t * Special characters\n\t * \n\t * To use unicode characters, use the standard notation (eg. \\u8fd1) or %u as a\n\t * prefix (eg. %u20AC will display a Euro sign). For normal hex encoded strings,\n\t * use % as a prefix, eg. %F6 will display a \"o umlaut\" (&ouml;).\n\t * \n\t * See <resourcesEncoded> to disable this. If you disable this, make sure that\n\t * your files are UTF-8 encoded.\n\t * \n\t * Asynchronous loading\n\t * \n\t * By default, the core adds two resource files synchronously at load time.\n\t * To load these files asynchronously, set <mxLoadResources> to false\n\t * before loading mxClient.js and use <mxResources.loadResources> instead.\n\t * \n\t * Variable: resources\n\t * \n\t * Object that maps from keys to values.\n\t */\n\tresources: {},\n\n\t/**\n\t * Variable: extension\n\t * \n\t * Specifies the extension used for language files. Default is <mxResourceExtension>.\n\t */\n\textension: mxResourceExtension,\n\n\t/**\n\t * Variable: resourcesEncoded\n\t * \n\t * Specifies whether or not values in resource files are encoded with \\u or\n\t * percentage. Default is false.\n\t */\n\tresourcesEncoded: false,\n\n\t/**\n\t * Variable: loadDefaultBundle\n\t * \n\t * Specifies if the default file for a given basename should be loaded.\n\t * Default is true.\n\t */\n\tloadDefaultBundle: true,\n\n\t/**\n\t * Variable: loadDefaultBundle\n\t * \n\t * Specifies if the specific language file file for a given basename should\n\t * be loaded. Default is true.\n\t */\n\tloadSpecialBundle: true,\n\n\t/**\n\t * Function: isLanguageSupported\n\t * \n\t * Hook for subclassers to disable support for a given language. This\n\t * implementation returns true if lan is in <mxClient.languages>.\n\t * \n\t * Parameters:\n\t *\n\t * lan - The current language.\n\t */\n\tisLanguageSupported: function(lan)\n\t{\n\t\tif (mxClient.languages != null)\n\t\t{\n\t\t\treturn mxUtils.indexOf(mxClient.languages, lan) >= 0;\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: getDefaultBundle\n\t * \n\t * Hook for subclassers to return the URL for the special bundle. This\n\t * implementation returns basename + <extension> or null if\n\t * <loadDefaultBundle> is false.\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The current language.\n\t */\n\tgetDefaultBundle: function(basename, lan)\n\t{\n\t\tif (mxResources.loadDefaultBundle || !mxResources.isLanguageSupported(lan))\n\t\t{\n\t\t\treturn basename + mxResources.extension;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t * Function: getSpecialBundle\n\t * \n\t * Hook for subclassers to return the URL for the special bundle. This\n\t * implementation returns basename + '_' + lan + <extension> or null if\n\t * <loadSpecialBundle> is false or lan equals <mxClient.defaultLanguage>.\n\t * \n\t * If <mxResources.languages> is not null and <mxClient.language> contains\n\t * a dash, then this method checks if <isLanguageSupported> returns true\n\t * for the full language (including the dash). If that returns false the\n\t * first part of the language (up to the dash) will be tried as an extension.\n\t * \n\t * If <mxResources.language> is null then the first part of the language is\n\t * used to maintain backwards compatibility.\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The language for which the file should be loaded.\n\t */\n\tgetSpecialBundle: function(basename, lan)\n\t{\n\t\tif (mxClient.languages == null || !this.isLanguageSupported(lan))\n\t\t{\n\t\t\tvar dash = lan.indexOf('-');\n\t\t\t\n\t\t\tif (dash > 0)\n\t\t\t{\n\t\t\t\tlan = lan.substring(0, dash);\n\t\t\t}\n\t\t}\n\n\t\tif (mxResources.loadSpecialBundle && mxResources.isLanguageSupported(lan) && lan != mxClient.defaultLanguage)\n\t\t{\n\t\t\treturn basename + '_' + lan + mxResources.extension;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t * Function: add\n\t * \n\t * Adds the default and current language properties file for the specified\n\t * basename. Existing keys are overridden as new files are added. If no\n\t * callback is used then the request is synchronous.\n\t *\n\t * Example:\n\t * \n\t * At application startup, additional resources may be \n\t * added using the following code:\n\t * \n\t * (code)\n\t * mxResources.add('resources/editor');\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The language for which the file should be loaded.\n\t * callback - Optional callback for asynchronous loading.\n\t */\n\tadd: function(basename, lan, callback)\n\t{\n\t\tlan = (lan != null) ? lan : ((mxClient.language != null) ?\n\t\t\tmxClient.language.toLowerCase() : mxConstants.NONE);\n\t\t\n\t\tif (lan != mxConstants.NONE)\n\t\t{\n\t\t\tvar defaultBundle = mxResources.getDefaultBundle(basename, lan);\n\t\t\tvar specialBundle = mxResources.getSpecialBundle(basename, lan);\n\t\t\t\n\t\t\tvar loadSpecialBundle = function()\n\t\t\t{\n\t\t\t\tif (specialBundle != null)\n\t\t\t\t{\n\t\t\t\t\tif (callback)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxUtils.get(specialBundle, function(req)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxResources.parse(req.getText());\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t}, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t   \t\tvar req = mxUtils.load(specialBundle);\n\t\t\t\t\t   \t\t\n\t\t\t\t\t   \t\tif (req.isReady())\n\t\t\t\t\t   \t\t{\n\t\t\t\t\t \t   \t\tmxResources.parse(req.getText());\n\t\t\t\t\t   \t\t}\n\t\t\t\t   \t\t}\n\t\t\t\t   \t\tcatch (e)\n\t\t\t\t   \t\t{\n\t\t\t\t   \t\t\t// ignore\n\t\t\t\t\t   \t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (callback != null)\n\t\t\t\t{\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (defaultBundle != null)\n\t\t\t{\n\t\t\t\tif (callback)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.get(defaultBundle, function(req)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxResources.parse(req.getText());\n\t\t\t\t\t\tloadSpecialBundle();\n\t\t\t\t\t}, function()\n\t\t\t\t\t{\n\t\t\t\t\t\tloadSpecialBundle();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t   \t\tvar req = mxUtils.load(defaultBundle);\n\t\t\t\t   \t\t\n\t\t\t\t   \t\tif (req.isReady())\n\t\t\t\t   \t\t{\n\t\t\t\t \t   \t\tmxResources.parse(req.getText());\n\t\t\t\t   \t\t}\n\t\t\t\t   \t\t\n\t\t\t\t   \t\tloadSpecialBundle();\n\t\t\t\t  \t}\n\t\t\t\t  \tcatch (e)\n\t\t\t\t  \t{\n\t\t\t\t  \t\t// ignore\n\t\t\t\t  \t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Overlays the language specific file (_lan-extension)\n\t\t\t\tloadSpecialBundle();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: parse\n\t * \n\t * Parses the key, value pairs in the specified\n\t * text and stores them as local resources.\n\t */\n\tparse: function(text)\n\t{\n\t\tif (text != null)\n\t\t{\n\t\t\tvar lines = text.split('\\n');\n\t\t\t\n\t\t\tfor (var i = 0; i < lines.length; i++)\n\t\t\t{\n\t\t\t\tif (lines[i].charAt(0) != '#')\n\t\t\t\t{\n\t\t\t\t\tvar index = lines[i].indexOf('=');\n\t\t\t\t\t\n\t\t\t\t\tif (index > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar key = lines[i].substring(0, index);\n\t\t\t\t\t\tvar idx = lines[i].length;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lines[i].charCodeAt(idx - 1) == 13)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tidx--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar value = lines[i].substring(index + 1, idx);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.resourcesEncoded)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue = value.replace(/\\\\(?=u[a-fA-F\\d]{4})/g,\"%\");\n\t\t\t\t\t\t\tmxResources.resources[key] = unescape(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxResources.resources[key] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: get\n\t * \n\t * Returns the value for the specified resource key.\n\t *\n\t * Example:\n\t * To read the value for 'welomeMessage', use the following:\n\t * (code)\n\t * var result = mxResources.get('welcomeMessage') || '';\n\t * (end)\n\t *\n\t * This would require an entry of the following form in\n\t * one of the English language resource files:\n\t * (code)\n\t * welcomeMessage=Welcome to mxGraph!\n\t * (end)\n\t * \n\t * The part behind the || is the string value to be used if the given\n\t * resource is not available.\n\t * \n\t * Parameters:\n\t * \n\t * key - String that represents the key of the resource to be returned.\n\t * params - Array of the values for the placeholders of the form {1}...{n}\n\t * to be replaced with in the resulting string.\n\t * defaultValue - Optional string that specifies the default return value.\n\t */\n\tget: function(key, params, defaultValue)\n\t{\n\t\tvar value = mxResources.resources[key];\n\t\t\n\t\t// Applies the default value if no resource was found\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\t\n\t\t// Replaces the placeholders with the values in the array\n\t\tif (value != null && params != null)\n\t\t{\n\t\t\tvalue = mxResources.replacePlaceholders(value, params);\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: replacePlaceholders\n\t * \n\t * Replaces the given placeholders with the given parameters.\n\t * \n\t * Parameters:\n\t * \n\t * value - String that contains the placeholders.\n\t * params - Array of the values for the placeholders of the form {1}...{n}\n\t * to be replaced with in the resulting string.\n\t */\n\treplacePlaceholders: function(value, params)\n\t{\n\t\tvar result = [];\n\t\tvar index = null;\n\t\t\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tvar c = value.charAt(i);\n\n\t\t\tif (c == '{')\n\t\t\t{\n\t\t\t\tindex = '';\n\t\t\t}\n\t\t\telse if (index != null && \tc == '}')\n\t\t\t{\n\t\t\t\tindex = parseInt(index)-1;\n\t\t\t\t\n\t\t\t\tif (index >= 0 && index < params.length)\n\t\t\t\t{\n\t\t\t\t\tresult.push(params[index]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tindex = null;\n\t\t\t}\n\t\t\telse if (index != null)\n\t\t\t{\n\t\t\t\tindex += c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(c);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join('');\n\t},\n\n\t/**\n\t * Function: loadResources\n\t * \n\t * Loads all required resources asynchronously. Use this to load the graph and\n\t * editor resources if <mxLoadResources> is false.\n\t * \n\t * Parameters:\n\t * \n\t * callback - Callback function for asynchronous loading.\n\t */\n\tloadResources: function(callback)\n\t{\n\t\tmxResources.add(mxClient.basePath+'/resources/editor', null, function()\n\t\t{\n\t\t\tmxResources.add(mxClient.basePath+'/resources/graph', null, callback);\n\t\t});\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPoint\n *\n * Implements a 2-dimensional vector with double precision coordinates.\n * \n * Constructor: mxPoint\n *\n * Constructs a new point for the optional x and y coordinates. If no\n * coordinates are given, then the default values for <x> and <y> are used.\n */\nfunction mxPoint(x, y)\n{\n\tthis.x = (x != null) ? x : 0;\n\tthis.y = (y != null) ? y : 0;\n};\n\n/**\n * Variable: x\n *\n * Holds the x-coordinate of the point. Default is 0.\n */\nmxPoint.prototype.x = null;\n\n/**\n * Variable: y\n *\n * Holds the y-coordinate of the point. Default is 0.\n */\nmxPoint.prototype.y = null;\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this point.\n */\nmxPoint.prototype.equals = function(obj)\n{\n\treturn obj != null && obj.x == this.x && obj.y == this.y;\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of this <mxPoint>.\n */\nmxPoint.prototype.clone = function()\n{\n\t// Handles subclasses as well\n\treturn mxUtils.clone(this);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRectangle\n *\n * Extends <mxPoint> to implement a 2-dimensional rectangle with double\n * precision coordinates.\n * \n * Constructor: mxRectangle\n *\n * Constructs a new rectangle for the optional parameters. If no parameters\n * are given then the respective default values are used.\n */\nfunction mxRectangle(x, y, width, height)\n{\n\tmxPoint.call(this, x, y);\n\n\tthis.width = (width != null) ? width : 0;\n\tthis.height = (height != null) ? height : 0;\n};\n\n/**\n * Extends mxPoint.\n */\nmxRectangle.prototype = new mxPoint();\nmxRectangle.prototype.constructor = mxRectangle;\n\n/**\n * Variable: width\n *\n * Holds the width of the rectangle. Default is 0.\n */\nmxRectangle.prototype.width = null;\n\n/**\n * Variable: height\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxRectangle.prototype.height = null;\n\n/**\n * Function: setRect\n * \n * Sets this rectangle to the specified values\n */\nmxRectangle.prototype.setRect = function(x, y, w, h)\n{\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n};\n\n/**\n * Function: getCenterX\n * \n * Returns the x-coordinate of the center point.\n */\nmxRectangle.prototype.getCenterX = function ()\n{\n\treturn this.x + this.width/2;\n};\n\n/**\n * Function: getCenterY\n * \n * Returns the y-coordinate of the center point.\n */\nmxRectangle.prototype.getCenterY = function ()\n{\n\treturn this.y + this.height/2;\n};\n\n/**\n * Function: add\n *\n * Adds the given rectangle to this rectangle.\n */\nmxRectangle.prototype.add = function(rect)\n{\n\tif (rect != null)\n\t{\n\t\tvar minX = Math.min(this.x, rect.x);\n\t\tvar minY = Math.min(this.y, rect.y);\n\t\tvar maxX = Math.max(this.x + this.width, rect.x + rect.width);\n\t\tvar maxY = Math.max(this.y + this.height, rect.y + rect.height);\n\t\t\n\t\tthis.x = minX;\n\t\tthis.y = minY;\n\t\tthis.width = maxX - minX;\n\t\tthis.height = maxY - minY;\n\t}\n};\n\n/**\n * Function: intersect\n * \n * Changes this rectangle to where it overlaps with the given rectangle.\n */\nmxRectangle.prototype.intersect = function(rect)\n{\n\tif (rect != null)\n\t{\n\t\tvar r1 = this.x + this.width;\n\t\tvar r2 = rect.x + rect.width;\n\t\t\n\t\tvar b1 = this.y + this.height;\n\t\tvar b2 = rect.y + rect.height;\n\t\t\n\t\tthis.x = Math.max(this.x, rect.x);\n\t\tthis.y = Math.max(this.y, rect.y);\n\t\tthis.width = Math.min(r1, r2) - this.x;\n\t\tthis.height = Math.min(b1, b2) - this.y;\n\t}\n};\n\n/**\n * Function: grow\n *\n * Grows the rectangle by the given amount, that is, this method subtracts\n * the given amount from the x- and y-coordinates and adds twice the amount\n * to the width and height.\n */\nmxRectangle.prototype.grow = function(amount)\n{\n\tthis.x -= amount;\n\tthis.y -= amount;\n\tthis.width += 2 * amount;\n\tthis.height += 2 * amount;\n};\n\n/**\n * Function: getPoint\n * \n * Returns the top, left corner as a new <mxPoint>.\n */\nmxRectangle.prototype.getPoint = function()\n{\n\treturn new mxPoint(this.x, this.y);\n};\n\n/**\n * Function: rotate90\n * \n * Rotates this rectangle by 90 degree around its center point.\n */\nmxRectangle.prototype.rotate90 = function()\n{\n\tvar t = (this.width - this.height) / 2;\n\tthis.x += t;\n\tthis.y -= t;\n\tvar tmp = this.width;\n\tthis.width = this.height;\n\tthis.height = tmp;\n};\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this rectangle.\n */\nmxRectangle.prototype.equals = function(obj)\n{\n\treturn obj != null && obj.x == this.x && obj.y == this.y &&\n\t\tobj.width == this.width && obj.height == this.height;\n};\n\n/**\n * Function: fromRectangle\n * \n * Returns a new <mxRectangle> which is a copy of the given rectangle.\n */\nmxRectangle.fromRectangle = function(rect)\n{\n\treturn new mxRectangle(rect.x, rect.y, rect.width, rect.height);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEffects =\n{\n\n\t/**\n\t * Class: mxEffects\n\t * \n\t * Provides animation effects.\n\t */\n\n\t/**\n\t * Function: animateChanges\n\t * \n\t * Asynchronous animated move operation. See also: <mxMorphing>.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * graph.model.addListener(mxEvent.CHANGE, function(sender, evt)\n\t * {\n\t *   var changes = evt.getProperty('edit').changes;\n\t * \n\t *   if (changes.length < 10)\n\t *   {\n\t *     mxEffects.animateChanges(graph, changes);\n\t *   }\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that received the changes.\n\t * changes - Array of changes to be animated.\n\t * done - Optional function argument that is invoked after the\n\t * last step of the animation.\n\t */\n\tanimateChanges: function(graph, changes, done)\n\t{\n\t\tvar maxStep = 10;\n\t\tvar step = 0;\n\n\t\tvar animate = function() \n\t\t{\n\t\t\tvar isRequired = false;\n\t\t\t\n\t\t\tfor (var i = 0; i < changes.length; i++)\n\t\t\t{\n\t\t\t\tvar change = changes[i];\n\t\t\t\t\n\t\t\t\tif (change instanceof mxGeometryChange ||\n\t\t\t\t\tchange instanceof mxTerminalChange ||\n\t\t\t\t\tchange instanceof mxValueChange ||\n\t\t\t\t\tchange instanceof mxChildChange ||\n\t\t\t\t\tchange instanceof mxStyleChange)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.getView().getState(change.cell || change.child, false);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tisRequired = true;\n\t\t\t\t\t\n\t\t\t\t\t\tif (change.constructor != mxGeometryChange || graph.model.isEdge(change.cell))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxUtils.setOpacity(state.shape.node, 100 * step / maxStep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar scale = graph.getView().scale;\t\t\t\t\t\n\n\t\t\t\t\t\t\tvar dx = (change.geometry.x - change.previous.x) * scale;\n\t\t\t\t\t\t\tvar dy = (change.geometry.y - change.previous.y) * scale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar sx = (change.geometry.width - change.previous.width) * scale;\n\t\t\t\t\t\t\tvar sy = (change.geometry.height - change.previous.height) * scale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (step == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.x -= dx;\n\t\t\t\t\t\t\t\tstate.y -= dy;\n\t\t\t\t\t\t\t\tstate.width -= sx;\n\t\t\t\t\t\t\t\tstate.height -= sy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.x += dx / maxStep;\n\t\t\t\t\t\t\t\tstate.y += dy / maxStep;\n\t\t\t\t\t\t\t\tstate.width += sx / maxStep;\n\t\t\t\t\t\t\t\tstate.height += sy / maxStep;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgraph.cellRenderer.redraw(state);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Fades all connected edges and children\n\t\t\t\t\t\t\tmxEffects.cascadeOpacity(graph, change.cell, 100 * step / maxStep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (step < maxStep && isRequired)\n\t\t\t{\n\t\t\t\tstep++;\n\t\t\t\twindow.setTimeout(animate, delay);\n\t\t\t}\n\t\t\telse if (done != null)\n\t\t\t{\n\t\t\t\tdone();\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar delay = 30;\n\t\tanimate();\n\t},\n    \n\t/**\n\t * Function: cascadeOpacity\n\t * \n\t * Sets the opacity on the given cell and its descendants.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells.\n\t * cell - <mxCell> to set the opacity for.\n\t * opacity - New value for the opacity in %.\n\t */\n    cascadeOpacity: function(graph, cell, opacity)\n\t{\n\t\t// Fades all children\n\t\tvar childCount = graph.model.getChildCount(cell);\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tvar child = graph.model.getChildAt(cell, i);\n\t\t\tvar childState = graph.getView().getState(child);\n\t\t\t\n\t\t\tif (childState != null)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(childState.shape.node, opacity);\n\t\t\t\tmxEffects.cascadeOpacity(graph, child, opacity);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Fades all connected edges\n\t\tvar edges = graph.model.getEdges(cell);\n\t\t\n\t\tif (edges != null)\n\t\t{\n\t\t\tfor (var i=0; i<edges.length; i++)\n\t\t\t{\n\t\t\t\tvar edgeState = graph.getView().getState(edges[i]);\n\t\t\t\t\n\t\t\t\tif (edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.setOpacity(edgeState.shape.node, opacity);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: fadeOut\n\t * \n\t * Asynchronous fade-out operation.\n\t */\n\tfadeOut: function(node, from, remove, step, delay, isEnabled)\n\t{\n\t\tstep = step || 40;\n\t\tdelay = delay || 30;\n\t\t\n\t\tvar opacity = from || 100;\n\t\t\n\t\tmxUtils.setOpacity(node, opacity);\n\t\t\n\t\tif (isEnabled || isEnabled == null)\n\t\t{\n\t\t\tvar f = function()\n\t\t\t{\n\t\t\t    opacity = Math.max(opacity-step, 0);\n\t\t\t\tmxUtils.setOpacity(node, opacity);\n\t\t\t\t\n\t\t\t\tif (opacity > 0)\n\t\t\t\t{\n\t\t\t\t\twindow.setTimeout(f, delay);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\t\t\n\t\t\t\t\tif (remove && node.parentNode)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\twindow.setTimeout(f, delay);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\n\t\t\tif (remove && node.parentNode)\n\t\t\t{\n\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t}\n\t\t}\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxUtils =\n{\n\t/**\n\t * Class: mxUtils\n\t * \n\t * A singleton class that provides cross-browser helper methods.\n\t * This is a global functionality. To access the functions in this\n\t * class, use the global classname appended by the functionname.\n\t * You may have to load chrome://global/content/contentAreaUtils.js\n\t * to disable certain security restrictions in Mozilla for the <open>,\n\t * <save>, <saveAs> and <copy> function.\n\t * \n\t * For example, the following code displays an error message:\n\t * \n\t * (code)\n\t * mxUtils.error('Browser is not supported!', 200, false);\n\t * (end)\n\t * \n\t * Variable: errorResource\n\t * \n\t * Specifies the resource key for the title of the error window. If the\n\t * resource for this key does not exist then the value is used as\n\t * the title. Default is 'error'.\n\t */\n\terrorResource: (mxClient.language != 'none') ? 'error' : '',\n\t\n\t/**\n\t * Variable: closeResource\n\t * \n\t * Specifies the resource key for the label of the close button. If the\n\t * resource for this key does not exist then the value is used as\n\t * the label. Default is 'close'.\n\t */\n\tcloseResource: (mxClient.language != 'none') ? 'close' : '',\n\n\t/**\n\t * Variable: errorImage\n\t * \n\t * Defines the image used for error dialogs.\n\t */\n\terrorImage: mxClient.imageBasePath + '/error.gif',\n\t\n\t/**\n\t * Function: removeCursors\n\t * \n\t * Removes the cursors from the style of the given DOM node and its\n\t * descendants.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node to remove the cursor style from.\n\t */\n\tremoveCursors: function(element)\n\t{\n\t\tif (element.style != null)\n\t\t{\n\t\t\telement.style.cursor = '';\n\t\t}\n\t\t\n\t\tvar children = element.childNodes;\n\t\t\n\t\tif (children != null)\n\t\t{\n\t        var childCount = children.length;\n\t        \n\t        for (var i = 0; i < childCount; i += 1)\n\t        {\n\t            mxUtils.removeCursors(children[i]);\n\t        }\n\t    }\n\t},\n\n\t/**\n\t * Function: getCurrentStyle\n\t * \n\t * Returns the current style of the specified element.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node whose current style should be returned.\n\t */\n\tgetCurrentStyle: function()\n\t{\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode < 9))\n\t\t{\n\t\t\treturn function(element)\n\t\t\t{\n\t\t\t\treturn (element != null) ? element.currentStyle : null;\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element)\n\t\t\t{\n\t\t\t\treturn (element != null) ?\n\t\t\t\t\twindow.getComputedStyle(element, '') :\n\t\t\t\t\tnull;\n\t\t\t};\n\t\t}\n\t}(),\n\t\n\t/**\n\t * Function: parseCssNumber\n\t * \n\t * Parses the given CSS numeric value adding handling for the values thin,\n\t * medium and thick (2, 4 and 6).\n\t */\n\tparseCssNumber: function(value)\n\t{\n\t\tif (value == 'thin')\n\t\t{\n\t\t\tvalue = '2';\n\t\t}\n\t\telse if (value == 'medium')\n\t\t{\n\t\t\tvalue = '4';\n\t\t}\n\t\telse if (value == 'thick')\n\t\t{\n\t\t\tvalue = '6';\n\t\t}\n\t\t\n\t\tvalue = parseFloat(value);\n\t\t\n\t\tif (isNaN(value))\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: setPrefixedStyle\n\t * \n\t * Adds the given style with the standard name and an optional vendor prefix for the current\n\t * browser.\n\t * \n\t * (code)\n\t * mxUtils.setPrefixedStyle(node.style, 'transformOrigin', '0% 0%');\n\t * (end)\n\t */\n\tsetPrefixedStyle: function()\n\t{\n\t\tvar prefix = null;\n\t\t\n\t\tif (mxClient.IS_OT)\n\t\t{\n\t\t\tprefix = 'O';\n\t\t}\n\t\telse if (mxClient.IS_SF || mxClient.IS_GC)\n\t\t{\n\t\t\tprefix = 'Webkit';\n\t\t}\n\t\telse if (mxClient.IS_MT)\n\t\t{\n\t\t\tprefix = 'Moz';\n\t\t}\n\t\telse if (mxClient.IS_IE && document.documentMode >= 9 && document.documentMode < 10)\n\t\t{\n\t\t\tprefix = 'ms';\n\t\t}\n\n\t\treturn function(style, name, value)\n\t\t{\n\t\t\tstyle[name] = value;\n\t\t\t\n\t\t\tif (prefix != null && name.length > 0)\n\t\t\t{\n\t\t\t\tname = prefix + name.substring(0, 1).toUpperCase() + name.substring(1);\n\t\t\t\tstyle[name] = value;\n\t\t\t}\n\t\t};\n\t}(),\n\t\n\t/**\n\t * Function: hasScrollbars\n\t * \n\t * Returns true if the overflow CSS property of the given node is either\n\t * scroll or auto.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose style should be checked for scrollbars.\n\t */\n\thasScrollbars: function(node)\n\t{\n\t\tvar style = mxUtils.getCurrentStyle(node);\n\n\t\treturn style != null && (style.overflow == 'scroll' || style.overflow == 'auto');\n\t},\n\t\n\t/**\n\t * Function: bind\n\t * \n\t * Returns a wrapper function that locks the execution scope of the given\n\t * function to the specified scope. Inside funct, the \"this\" keyword\n\t * becomes a reference to that scope.\n\t */\n\tbind: function(scope, funct)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\treturn funct.apply(scope, arguments);\n\t\t};\n\t},\n\t\n\t/**\n\t * Function: eval\n\t * \n\t * Evaluates the given expression using eval and returns the JavaScript\n\t * object that represents the expression result. Supports evaluation of\n\t * expressions that define functions and returns the function object for\n\t * these expressions.\n\t * \n\t * Parameters:\n\t * \n\t * expr - A string that represents a JavaScript expression.\n\t */\n\teval: function(expr)\n\t{\n\t\tvar result = null;\n\n\t\tif (expr.indexOf('function') >= 0)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\teval('var _mxJavaScriptExpression='+expr);\n\t\t\t\tresult = _mxJavaScriptExpression;\n\t\t\t\t// TODO: Use delete here?\n\t\t\t\t_mxJavaScriptExpression = null;\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxLog.warn(e.message + ' while evaluating ' + expr);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tresult = eval(expr);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxLog.warn(e.message + ' while evaluating ' + expr);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: findNode\n\t * \n\t * Returns the first node where attr equals value.\n\t * This implementation does not use XPath.\n\t */\n\tfindNode: function(node, attr, value)\n\t{\n\t\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\tvar tmp = node.getAttribute(attr);\n\t\n\t\t\tif (tmp != null && tmp == value)\n\t\t\t{\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t\n\t\tnode = node.firstChild;\n\t\t\n\t\twhile (node != null)\n\t\t{\n\t\t\tvar result = mxUtils.findNode(node, attr, value);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\t\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: getFunctionName\n\t * \n\t * Returns the name for the given function.\n\t * \n\t * Parameters:\n\t * \n\t * f - JavaScript object that represents a function.\n\t */\n\tgetFunctionName: function(f)\n\t{\n\t\tvar str = null;\n\n\t\tif (f != null)\n\t\t{\n\t\t\tif (f.name != null)\n\t\t\t{\n\t\t\t\tstr = f.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr = mxUtils.trim(f.toString());\n\t\t\t\t\n\t\t\t\tif (/^function\\s/.test(str))\n\t\t\t\t{\n\t\t\t\t\tstr = mxUtils.ltrim(str.substring(9));\n\t\t\t\t\tvar idx2 = str.indexOf('(');\n\t\t\t\t\t\n\t\t\t\t\tif (idx2 > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tstr = str.substring(0, idx2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn str;\n\t},\n\n\t/**\n\t * Function: indexOf\n\t * \n\t * Returns the index of obj in array or -1 if the array does not contain\n\t * the given object.\n\t * \n\t * Parameters:\n\t * \n\t * array - Array to check for the given obj.\n\t * obj - Object to find in the given array.\n\t */\n\tindexOf: function(array, obj)\n\t{\n\t\tif (array != null && obj != null)\n\t\t{\n\t\t\tfor (var i = 0; i < array.length; i++)\n\t\t\t{\n\t\t\t\tif (array[i] == obj)\n\t\t\t\t{\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn -1;\n\t},\n\n\t/**\n\t * Function: forEach\n\t * \n\t * Calls the given function for each element of the given array and returns\n\t * the array.\n\t * \n\t * Parameters:\n\t * \n\t * array - Array that contains the elements.\n\t * fn - Function to be called for each object.\n\t */\n\tforEach: function(array, fn)\n\t{\n\t\tif (array != null && fn != null)\n\t\t{\n\t\t\tfor (var i = 0; i < array.length; i++)\n\t\t\t{\n\t\t\t\tfn(array[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn array;\n\t},\n\n\t/**\n\t * Function: remove\n\t * \n\t * Removes all occurrences of the given object in the given array or\n\t * object. If there are multiple occurrences of the object, be they\n\t * associative or as an array entry, all occurrences are removed from\n\t * the array or deleted from the object. By removing the object from\n\t * the array, all elements following the removed element are shifted\n\t * by one step towards the beginning of the array.\n\t * \n\t * The length of arrays is not modified inside this function.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to find in the given array.\n\t * array - Array to check for the given obj.\n\t */\n\tremove: function(obj, array)\n\t{\n\t\tvar result = null;\n\t\t\n\t\tif (typeof(array) == 'object')\n\t\t{\n\t\t\tvar index = mxUtils.indexOf(array, obj);\n\t\t\t\n\t\t\twhile (index >= 0)\n\t\t\t{\n\t\t\t\tarray.splice(index, 1);\n\t\t\t\tresult = obj;\n\t\t\t\tindex = mxUtils.indexOf(array, obj);\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in array)\n\t\t{\n\t\t\tif (array[key] == obj)\n\t\t\t{\n\t\t\t\tdelete array[key];\n\t\t\t\tresult = obj;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: isNode\n\t * \n\t * Returns true if the given value is an XML node with the node name\n\t * and if the optional attribute has the specified value.\n\t * \n\t * This implementation assumes that the given value is a DOM node if the\n\t * nodeType property is numeric, that is, if isNaN returns false for\n\t * value.nodeType.\n\t * \n\t * Parameters:\n\t * \n\t * value - Object that should be examined as a node.\n\t * nodeName - String that specifies the node name.\n\t * attributeName - Optional attribute name to check.\n\t * attributeValue - Optional attribute value to check.\n\t */\n\t isNode: function(value, nodeName, attributeName, attributeValue)\n\t {\n\t \tif (value != null && !isNaN(value.nodeType) && (nodeName == null ||\n\t \t\tvalue.nodeName.toLowerCase() == nodeName.toLowerCase()))\n \t\t{\n \t\t\treturn attributeName == null ||\n \t\t\t\tvalue.getAttribute(attributeName) == attributeValue;\n \t\t}\n\t \t\n\t \treturn false;\n\t },\n\t\n\t/**\n\t * Function: isAncestorNode\n\t * \n\t * Returns true if the given ancestor is an ancestor of the\n\t * given DOM node in the DOM. This also returns true if the\n\t * child is the ancestor.\n\t * \n\t * Parameters:\n\t * \n\t * ancestor - DOM node that represents the ancestor.\n\t * child - DOM node that represents the child.\n\t */\n\t isAncestorNode: function(ancestor, child)\n\t {\n\t \tvar parent = child;\n\t \t\n\t \twhile (parent != null)\n\t \t{\n\t \t\tif (parent == ancestor)\n\t \t\t{\n\t \t\t\treturn true;\n\t \t\t}\n\n\t \t\tparent = parent.parentNode;\n\t \t}\n\t \t\n\t \treturn false;\n\t },\n\n\t/**\n\t * Function: getChildNodes\n\t * \n\t * Returns an array of child nodes that are of the given node type.\n\t * \n\t * Parameters:\n\t * \n\t * node - Parent DOM node to return the children from.\n\t * nodeType - Optional node type to return. Default is\n\t * <mxConstants.NODETYPE_ELEMENT>.\n\t */\n\tgetChildNodes: function(node, nodeType)\n\t{\n\t\tnodeType = nodeType || mxConstants.NODETYPE_ELEMENT;\n\t\t\n\t\tvar children = [];\n\t\tvar tmp = node.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeType == nodeType)\n\t\t\t{\n\t\t\t\tchildren.push(tmp);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\t\t\n\t\treturn children;\n\t},\n\n\t/**\n\t * Function: importNode\n\t * \n\t * Cross browser implementation for document.importNode. Uses document.importNode\n\t * in all browsers but IE, where the node is cloned by creating a new node and\n\t * copying all attributes and children into it using importNode, recursively.\n\t * \n\t * Parameters:\n\t * \n\t * doc - Document to import the node into.\n\t * node - Node to be imported.\n\t * allChildren - If all children should be imported.\n\t */\n\timportNode: function(doc, node, allChildren)\n\t{\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode < 10))\n\t\t{\n\t\t\tswitch (node.nodeType)\n\t\t\t{\n\t\t\t\tcase 1: /* element */\n\t\t\t\t{\n\t\t\t\t\tvar newNode = doc.createElement(node.nodeName);\n\t\t\t\t\t\n\t\t\t\t\tif (node.attributes && node.attributes.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < node.attributes.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewNode.setAttribute(node.attributes[i].nodeName,\n\t\t\t\t\t\t\t\tnode.getAttribute(node.attributes[i].nodeName));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (allChildren && node.childNodes && node.childNodes.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < node.childNodes.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tnewNode.appendChild(mxUtils.importNode(doc, node.childNodes[i], allChildren));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn newNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 3: /* text */\n\t\t\t    case 4: /* cdata-section */\n\t\t\t    case 8: /* comment */\n\t\t\t    {\n\t\t\t      return doc.createTextNode(node.value);\n\t\t\t      break;\n\t\t\t    }\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn doc.importNode(node, allChildren);\n\t\t}\n\t},\n\n\t/**\n\t * Function: createXmlDocument\n\t * \n\t * Returns a new, empty XML document.\n\t */\n\tcreateXmlDocument: function()\n\t{\n\t\tvar doc = null;\n\t\t\n\t\tif (document.implementation && document.implementation.createDocument)\n\t\t{\n\t\t\tdoc = document.implementation.createDocument('', '', null);\n\t\t}\n\t\telse if (window.ActiveXObject)\n\t\t{\n\t\t\tdoc = new ActiveXObject('Microsoft.XMLDOM');\n\t \t}\n\t \t\n\t \treturn doc;\n\t},\n\n\t/**\n\t * Function: parseXml\n\t * \n\t * Parses the specified XML string into a new XML document and returns the\n\t * new document.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var doc = mxUtils.parseXml(\n\t *   '<mxGraphModel><root><MyDiagram id=\"0\"><mxCell/></MyDiagram>'+\n\t *   '<MyLayer id=\"1\"><mxCell parent=\"0\" /></MyLayer><MyObject id=\"2\">'+\n\t *   '<mxCell style=\"strokeColor=blue;fillColor=red\" parent=\"1\" vertex=\"1\">'+\n\t *   '<mxGeometry x=\"10\" y=\"10\" width=\"80\" height=\"30\" as=\"geometry\"/>'+\n\t *   '</mxCell></MyObject></root></mxGraphModel>');\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * xml - String that contains the XML data.\n\t */\n\tparseXml: function()\n\t{\n\t\tif (window.DOMParser)\n\t\t{\n\t\t\treturn function(xml)\n\t\t\t{\n\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\n\t\t\t\treturn parser.parseFromString(xml, 'text/xml');\n\t\t\t};\n\t\t}\n\t\telse // IE<=9\n\t\t{\n\t\t\treturn function(xml)\n\t\t\t{\n\t\t\t\tvar result = mxUtils.createXmlDocument();\n\t\t\t\tresult.async = false;\n\t\t\t\t// Workaround for parsing errors with SVG DTD\n\t\t\t\tresult.validateOnParse = false;\n\t\t\t\tresult.resolveExternals = false;\n\t\t\t\tresult.loadXML(xml);\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: clearSelection\n\t * \n\t * Clears the current selection in the page.\n\t */\n\tclearSelection: function()\n\t{\n\t\tif (document.selection)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tdocument.selection.empty();\n\t\t\t};\n\t\t}\n\t\telse if (window.getSelection)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tif (window.getSelection().empty)\n\t\t\t\t{\n\t\t\t\t\twindow.getSelection().empty();\n\t\t\t\t}\n\t\t\t\telse if (window.getSelection().removeAllRanges)\n\t\t\t\t{\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function() { };\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: getPrettyXML\n\t * \n\t * Returns a pretty printed string that represents the XML tree for the\n\t * given node. This method should only be used to print XML for reading,\n\t * use <getXml> instead to obtain a string for processing.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the XML for.\n\t * tab - Optional string that specifies the indentation for one level.\n\t * Default is two spaces.\n\t * indent - Optional string that represents the current indentation.\n\t * Default is an empty string.\n\t */\n\tgetPrettyXml: function(node, tab, indent)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (node != null)\n\t\t{\n\t\t\ttab = tab || '  ';\n\t\t\tindent = indent || '';\n\t\t\t\n\t\t\tif (node.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t\t{\n\t\t\t\tvar value =  mxUtils.trim(mxUtils.getTextContent(node));\n\t\t\t\t\n\t\t\t\tif (value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(indent + mxUtils.htmlEntities(value) + '\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(indent + '<' + node.nodeName);\n\t\t\t\t\n\t\t\t\t// Creates the string with the node attributes\n\t\t\t\t// and converts all HTML entities in the values\n\t\t\t\tvar attrs = node.attributes;\n\t\t\t\t\n\t\t\t\tif (attrs != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar val = mxUtils.htmlEntities(attrs[i].value);\n\t\t\t\t\t\tresult.push(' ' + attrs[i].nodeName + '=\"' + val + '\"');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Recursively creates the XML string for each\n\t\t\t\t// child nodes and appends it here with an\n\t\t\t\t// indentation\n\t\t\t\tvar tmp = node.firstChild;\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tresult.push('>\\n');\n\t\t\t\t\t\n\t\t\t\t\twhile (tmp != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(mxUtils.getPrettyXml(tmp, tab, indent + tab));\n\t\t\t\t\t\ttmp = tmp.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tresult.push(indent + '</'+node.nodeName + '>\\n');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.push('/>\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join('');\n\t},\n\t\n\t/**\n\t * Function: removeWhitespace\n\t * \n\t * Removes the sibling text nodes for the given node that only consists\n\t * of tabs, newlines and spaces.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose siblings should be removed.\n\t * before - Optional boolean that specifies the direction of the traversal.\n\t */\n\tremoveWhitespace: function(node, before)\n\t{\n\t\tvar tmp = (before) ? node.previousSibling : node.nextSibling;\n\t\t\n\t\twhile (tmp != null && tmp.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t{\n\t\t\tvar next = (before) ? tmp.previousSibling : tmp.nextSibling;\n\t\t\tvar text = mxUtils.getTextContent(tmp);\n\t\t\t\n\t\t\tif (mxUtils.trim(text).length == 0)\n\t\t\t{\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = next;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: htmlEntities\n\t * \n\t * Replaces characters (less than, greater than, newlines and quotes) with\n\t * their HTML entities in the given string and returns the result.\n\t * \n\t * Parameters:\n\t * \n\t * s - String that contains the characters to be converted.\n\t * newline - If newlines should be replaced. Default is true.\n\t */\n\thtmlEntities: function(s, newline)\n\t{\n\t\ts = String(s || '');\n\t\t\n\t\ts = s.replace(/&/g,'&amp;'); // 38 26\n\t\ts = s.replace(/\"/g,'&quot;'); // 34 22\n\t\ts = s.replace(/\\'/g,'&#39;'); // 39 27\n\t\ts = s.replace(/</g,'&lt;'); // 60 3C\n\t\ts = s.replace(/>/g,'&gt;'); // 62 3E\n\n\t\tif (newline == null || newline)\n\t\t{\n\t\t\ts = s.replace(/\\n/g, '&#xa;');\n\t\t}\n\t\t\n\t\treturn s;\n\t},\n\t\n\t/**\n\t * Function: isVml\n\t * \n\t * Returns true if the given node is in the VML namespace.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose tag urn should be checked.\n\t */\n\tisVml: function(node)\n\t{\n\t\treturn node != null && node.tagUrn == 'urn:schemas-microsoft-com:vml';\n\t},\n\n\t/**\n\t * Function: getXml\n\t * \n\t * Returns the XML content of the specified node. For Internet Explorer,\n\t * all \\r\\n\\t[\\t]* are removed from the XML string and the remaining \\r\\n\n\t * are replaced by \\n. All \\n are then replaced with linefeed, or &#xa; if\n\t * no linefeed is defined.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the XML for.\n\t * linefeed - Optional string that linefeeds are converted into. Default is\n\t * &#xa;\n\t */\n\tgetXml: function(node, linefeed)\n\t{\n\t\tvar xml = '';\n\n\t\tif (window.XMLSerializer != null)\n\t\t{\n\t\t\tvar xmlSerializer = new XMLSerializer();\n\t\t\txml = xmlSerializer.serializeToString(node);     \n\t\t}\n\t\telse if (node.xml != null)\n\t\t{\n\t\t\txml = node.xml.replace(/\\r\\n\\t[\\t]*/g, '').\n\t\t\t\treplace(/>\\r\\n/g, '>').\n\t\t\t\treplace(/\\r\\n/g, '\\n');\n\t\t}\n\n\t\t// Replaces linefeeds with HTML Entities.\n\t\tlinefeed = linefeed || '&#xa;';\n\t\txml = xml.replace(/\\n/g, linefeed);\n\t\t  \n\t\treturn xml;\n\t},\n\t\n\t/**\n\t * Function: extractTextWithWhitespace\n\t * \n\t * Returns the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * elems - DOM nodes to return the text for.\n\t */\n\textractTextWithWhitespace: function(elems)\n\t{\n\t    // Known block elements for handling linefeeds (list is not complete)\n\t\tvar blocks = ['BLOCKQUOTE', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'OL', 'P', 'PRE', 'TABLE', 'UL'];\n\t\tvar ret = [];\n\t\t\n\t\tfunction doExtract(elts)\n\t\t{\n\t\t\t// Single break should be ignored\n\t\t\tif (elts.length == 1 && (elts[0].nodeName == 'BR' ||\n\t\t\t\telts[0].innerHTML == '\\n'))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t    for (var i = 0; i < elts.length; i++)\n\t\t    {\n\t\t        var elem = elts[i];\n\n\t\t\t\t// DIV with a br or linefeed forces a linefeed\n\t\t\t\tif (elem.nodeName == 'BR' || elem.innerHTML == '\\n' ||\n\t\t\t\t\t((elts.length == 1 || i == 0) && (elem.nodeName == 'DIV' &&\n\t\t\t\t\telem.innerHTML.toLowerCase() == '<br>')))\n\t\t    \t{\n\t    \t\t\tret.push('\\n');\n\t\t    \t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t        if (elem.nodeType === 3 || elem.nodeType === 4)\n\t\t\t        {\n\t\t\t        \tif (elem.nodeValue.length > 0)\n\t\t\t        \t{\n\t\t\t        \t\tret.push(elem.nodeValue);\n\t\t\t        \t}\n\t\t\t        }\n\t\t\t        else if (elem.nodeType !== 8 && elem.childNodes.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoExtract(elem.childNodes);\n\t\t\t\t\t}\n\t\t\t        \n\t        \t\tif (i < elts.length - 1 && mxUtils.indexOf(blocks, elts[i + 1].nodeName) >= 0)\n\t        \t\t{\n\t        \t\t\tret.push('\\n');\t\t\n\t        \t\t}\n\t\t\t\t}\n\t\t    }\n\t\t};\n\t\t\n\t\tdoExtract(elems);\n\t    \n\t    return ret.join('');\n\t},\n\n\t/**\n\t * Function: replaceTrailingNewlines\n\t * \n\t * Replaces each trailing newline with the given pattern.\n\t */\n\treplaceTrailingNewlines: function(str, pattern)\n\t{\n\t\t// LATER: Check is this can be done with a regular expression\n\t\tvar postfix = '';\n\t\t\n\t\twhile (str.length > 0 && str.charAt(str.length - 1) == '\\n')\n\t\t{\n\t\t\tstr = str.substring(0, str.length - 1);\n\t\t\tpostfix += pattern;\n\t\t}\n\t\t\n\t\treturn str + postfix;\n\t},\n\n\t/**\n\t * Function: getTextContent\n\t * \n\t * Returns the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the text content for.\n\t */\n\tgetTextContent: function(node)\n\t{\n\t\t// Only IE10-\n\t\tif (mxClient.IS_IE && node.innerText !== undefined)\n\t\t{\n\t\t\treturn node.innerText;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn (node != null) ? node[(node.textContent === undefined) ? 'text' : 'textContent'] : '';\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setTextContent\n\t * \n\t * Sets the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to set the text content for.\n\t * text - String that represents the text content.\n\t */\n\tsetTextContent: function(node, text)\n\t{\n\t\tif (node.innerText !== undefined)\n\t\t{\n\t\t\tnode.innerText = text;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode[(node.textContent === undefined) ? 'text' : 'textContent'] = text;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: getInnerHtml\n\t * \n\t * Returns the inner HTML for the given node as a string or an empty string\n\t * if no node was specified. The inner HTML is the text representing all\n\t * children of the node, but not the node itself.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the inner HTML for.\n\t */\n\tgetInnerHtml: function()\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\treturn node.innerHTML;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tvar serializer = new XMLSerializer();\n\t\t\t\t\treturn serializer.serializeToString(node);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: getOuterHtml\n\t * \n\t * Returns the outer HTML for the given node as a string or an empty\n\t * string if no node was specified. The outer HTML is the text representing\n\t * all children of the node including the node itself.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the outer HTML for.\n\t */\n\tgetOuterHtml: function()\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tif (node.outerHTML != null)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn node.outerHTML;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = [];\n\t\t\t\t\t\ttmp.push('<'+node.nodeName);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar attrs = node.attributes;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (attrs != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar value = attrs[i].value;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (value != null && value.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp.push(' ');\n\t\t\t\t\t\t\t\t\ttmp.push(attrs[i].nodeName);\n\t\t\t\t\t\t\t\t\ttmp.push('=\"');\n\t\t\t\t\t\t\t\t\ttmp.push(value);\n\t\t\t\t\t\t\t\t\ttmp.push('\"');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (node.innerHTML.length == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmp.push('/>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmp.push('>');\n\t\t\t\t\t\t\ttmp.push(node.innerHTML);\n\t\t\t\t\t\t\ttmp.push('</'+node.nodeName+'>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn tmp.join('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tvar serializer = new XMLSerializer();\n\t\t\t\t\treturn serializer.serializeToString(node);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t}(),\n\t\n\t/**\n\t * Function: write\n\t * \n\t * Creates a text node for the given string and appends it to the given\n\t * parent. Returns the text node.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text to be added.\n\t */\n\twrite: function(parent, text)\n\t{\n\t\tvar doc = parent.ownerDocument;\n\t\tvar node = doc.createTextNode(text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(node);\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Function: writeln\n\t * \n\t * Creates a text node for the given string and appends it to the given\n\t * parent with an additional linefeed. Returns the text node.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text to be added.\n\t */\n\twriteln: function(parent, text)\n\t{\n\t\tvar doc = parent.ownerDocument;\n\t\tvar node = doc.createTextNode(text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(node);\n\t\t\tparent.appendChild(document.createElement('br'));\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Function: br\n\t * \n\t * Appends a linebreak to the given parent and returns the linebreak.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the linebreak to.\n\t */\n\tbr: function(parent, count)\n\t{\n\t\tcount = count || 1;\n\t\tvar br = null;\n\t\t\n\t\tfor (var i = 0; i < count; i++)\n\t\t{\n\t\t\tif (parent != null)\n\t\t\t{\n\t\t\t\tbr = parent.ownerDocument.createElement('br');\n\t\t\t\tparent.appendChild(br);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn br;\n\t},\n\t\t\n\t/**\n\t * Function: button\n\t * \n\t * Returns a new button with the given level and function as an onclick\n\t * event handler.\n\t * \n\t * (code)\n\t * document.body.appendChild(mxUtils.button('Test', function(evt)\n\t * {\n\t *   alert('Hello, World!');\n\t * }));\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * label - String that represents the label of the button.\n\t * funct - Function to be called if the button is pressed.\n\t * doc - Optional document to be used for creating the button. Default is the\n\t * current document.\n\t */\n\tbutton: function(label, funct, doc)\n\t{\n\t\tdoc = (doc != null) ? doc : document;\n\t\t\n\t\tvar button = doc.createElement('button');\n\t\tmxUtils.write(button, label);\n\n\t\tmxEvent.addListener(button, 'click', function(evt)\n\t\t{\n\t\t\tfunct(evt);\n\t\t});\n\t\t\n\t\treturn button;\n\t},\n\t\n\t/**\n\t * Function: para\n\t * \n\t * Appends a new paragraph with the given text to the specified parent and\n\t * returns the paragraph.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text for the new paragraph.\n\t */\n\tpara: function(parent, text)\n\t{\n\t\tvar p = document.createElement('p');\n\t\tmxUtils.write(p, text);\n\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(p);\n\t\t}\n\t\t\n\t\treturn p;\n\t},\n\n\t/**\n\t * Function: addTransparentBackgroundFilter\n\t * \n\t * Adds a transparent background to the filter of the given node. This\n\t * background can be used in IE8 standards mode (native IE8 only) to pass\n\t * events through the node.\n\t */\n\taddTransparentBackgroundFilter: function(node)\n\t{\n\t\tnode.style.filter += 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\\'' +\n\t\t\tmxClient.imageBasePath + '/transparent.gif\\', sizingMethod=\\'scale\\')';\n\t},\n\n\t/**\n\t * Function: linkAction\n\t * \n\t * Adds a hyperlink to the specified parent that invokes action on the\n\t * specified editor.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * editor - <mxEditor> that will execute the action.\n\t * action - String that defines the name of the action to be executed.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlinkAction: function(parent, text, editor, action, pad)\n\t{\n\t\treturn mxUtils.link(parent, text, function()\n\t\t{\n\t\t\teditor.execute(action);\n\t\t}, pad);\n\t},\n\n\t/**\n\t * Function: linkInvoke\n\t * \n\t * Adds a hyperlink to the specified parent that invokes the specified\n\t * function on the editor passing along the specified argument. The\n\t * function name is the name of a function of the editor instance,\n\t * not an action name.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * editor - <mxEditor> instance to execute the function on.\n\t * functName - String that represents the name of the function.\n\t * arg - Object that represents the argument to the function.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlinkInvoke: function(parent, text, editor, functName, arg, pad)\n\t{\n\t\treturn mxUtils.link(parent, text, function()\n\t\t{\n\t\t\teditor[functName](arg);\n\t\t}, pad);\n\t},\n\t\n\t/**\n\t * Function: link\n\t * \n\t * Adds a hyperlink to the specified parent and invokes the given function\n\t * when the link is clicked.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * funct - Function to execute when the link is clicked.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlink: function(parent, text, funct, pad)\n\t{\n\t\tvar a = document.createElement('span');\n\t\t\n\t\ta.style.color = 'blue';\n\t\ta.style.textDecoration = 'underline';\n\t\ta.style.cursor = 'pointer';\n\t\t\n\t\tif (pad != null)\n\t\t{\n\t\t\ta.style.paddingLeft = pad+'px';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(a, 'click', funct);\n\t\tmxUtils.write(a, text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(a);\n\t\t}\n\t\t\n\t\treturn a;\n\t},\n\n\t/**\n\t * Function: getDocumentSize\n\t * \n\t * Returns the client size for the current document as an <mxRectangle>.\n\t */\n\tgetDocumentSize: function()\n\t{\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\t\n\t\ttry\n\t\t{\n\t\t\treturn new mxRectangle(0, 0, b.clientWidth || d.clientWidth, Math.max(b.clientHeight || 0, d.clientHeight));\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treturn new mxRectangle();\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: fit\n\t * \n\t * Makes sure the given node is inside the visible area of the window. This\n\t * is done by setting the left and top in the style. \n\t */\n\tfit: function(node)\n\t{\n\t\tvar ds = mxUtils.getDocumentSize();\n\t\tvar left = parseInt(node.offsetLeft);\n\t\tvar width = parseInt(node.offsetWidth);\n\t\t\t\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(node.ownerDocument);\n\t\tvar sl = offset.x;\n\t\tvar st = offset.y;\n\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\tvar right = (sl) + ds.width;\n\t\t\n\t\tif (left + width > right)\n\t\t{\n\t\t\tnode.style.left = Math.max(sl, right - width) + 'px';\n\t\t}\n\t\t\n\t\tvar top = parseInt(node.offsetTop);\n\t\tvar height = parseInt(node.offsetHeight);\n\t\t\n\t\tvar bottom = st + ds.height;\n\t\t\n\t\tif (top + height > bottom)\n\t\t{\n\t\t\tnode.style.top = Math.max(st, bottom - height) + 'px';\n\t\t}\n\t},\n\n\t/**\n\t * Function: load\n\t * \n\t * Loads the specified URL *synchronously* and returns the <mxXmlRequest>.\n\t * Throws an exception if the file cannot be loaded. See <mxUtils.get> for\n\t * an asynchronous implementation.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * try\n\t * {\n\t *   var req = mxUtils.load(filename);\n\t *   var root = req.getDocumentElement();\n\t *   // Process XML DOM...\n\t * }\n\t * catch (ex)\n\t * {\n\t *   mxUtils.alert('Cannot load '+filename+': '+ex);\n\t * }\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t */\n\tload: function(url)\n\t{\n\t\tvar req = new mxXmlRequest(url, null, 'GET', false);\n\t\treq.send();\n\t\t\n\t\treturn req;\n\t},\n\n\t/**\n\t * Function: get\n\t * \n\t * Loads the specified URL *asynchronously* and invokes the given functions\n\t * depending on the request status. Returns the <mxXmlRequest> in use. Both\n\t * functions take the <mxXmlRequest> as the only parameter. See\n\t * <mxUtils.load> for a synchronous implementation.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxUtils.get(url, function(req)\n\t * {\n\t *    var node = req.getDocumentElement();\n\t *    // Process XML DOM...\n\t * });\n\t * (end)\n\t * \n\t * So for example, to load a diagram into an existing graph model, the\n\t * following code is used.\n\t * \n\t * (code)\n\t * mxUtils.get(url, function(req)\n\t * {\n\t *   var node = req.getDocumentElement();\n\t *   var dec = new mxCodec(node.ownerDocument);\n\t *   dec.decode(node, graph.getModel());\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * onload - Optional function to execute for a successful response.\n\t * onerror - Optional function to execute on error.\n\t * binary - Optional boolean parameter that specifies if the request is\n\t * binary.\n\t * timeout - Optional timeout in ms before calling ontimeout.\n\t * ontimeout - Optional function to execute on timeout.\n\t */\n\tget: function(url, onload, onerror, binary, timeout, ontimeout)\n\t{\n\t\tvar req = new mxXmlRequest(url, null, 'GET');\n\t\t\n\t\tif (binary != null)\n\t\t{\n\t\t\treq.setBinary(binary);\n\t\t}\n\t\t\n\t\treq.send(onload, onerror, timeout, ontimeout);\n\t\t\n\t\treturn req;\n\t},\n\n\t/**\n\t * Function: getAll\n\t * \n\t * Loads the URLs in the given array *asynchronously* and invokes the given function\n\t * if all requests returned with a valid 2xx status. The error handler is invoked\n\t * once on the first error or invalid response.\n\t *\n\t * Parameters:\n\t * \n\t * urls - Array of URLs to be loaded.\n\t * onload - Callback with array of <mxXmlRequests>.\n\t * onerror - Optional function to execute on error.\n\t */\n\tgetAll: function(urls, onload, onerror)\n\t{\n\t\tvar remain = urls.length;\n\t\tvar result = [];\n\t\tvar errors = 0;\n\t\tvar err = function()\n\t\t{\n\t\t\tif (errors == 0 && onerror != null)\n\t\t\t{\n\t\t\t\tonerror();\n\t\t\t}\n\n\t\t\terrors++;\n\t\t};\n\t\t\n\t\tfor (var i = 0; i < urls.length; i++)\n\t\t{\n\t\t\t(function(url, index)\n\t\t\t{\n\t\t\t\tmxUtils.get(url, function(req)\n\t\t\t\t{\n\t\t\t\t\tvar status = req.getStatus();\n\t\t\t\t\t\n\t\t\t\t\tif (status < 200 || status > 299)\n\t\t\t\t\t{\n\t\t\t\t\t\terr();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult[index] = req;\n\t\t\t\t\t\tremain--;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (remain == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonload(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, err);\n\t\t\t})(urls[i], i);\n\t\t}\n\t\t\n\t\tif (remain == 0)\n\t\t{\n\t\t\tonload(result);\t\t\t\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: post\n\t * \n\t * Posts the specified params to the given URL *asynchronously* and invokes\n\t * the given functions depending on the request status. Returns the\n\t * <mxXmlRequest> in use. Both functions take the <mxXmlRequest> as the\n\t * only parameter. Make sure to use encodeURIComponent for the parameter\n\t * values.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxUtils.post(url, 'key=value', function(req)\n\t * {\n\t * \tmxUtils.alert('Ready: '+req.isReady()+' Status: '+req.getStatus());\n\t *  // Process req.getDocumentElement() using DOM API if OK...\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * params - Parameters for the post request.\n\t * onload - Optional function to execute for a successful response.\n\t * onerror - Optional function to execute on error.\n\t */\n\tpost: function(url, params, onload, onerror)\n\t{\n\t\treturn new mxXmlRequest(url, params).send(onload, onerror);\n\t},\n\t\n\t/**\n\t * Function: submit\n\t * \n\t * Submits the given parameters to the specified URL using\n\t * <mxXmlRequest.simulate> and returns the <mxXmlRequest>.\n\t * Make sure to use encodeURIComponent for the parameter\n\t * values.\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * params - Parameters for the form.\n\t * doc - Document to create the form in.\n\t * target - Target to send the form result to.\n\t */\n\tsubmit: function(url, params, doc, target)\n\t{\n\t\treturn new mxXmlRequest(url, params).simulate(doc, target);\n\t},\n\t\n\t/**\n\t * Function: loadInto\n\t * \n\t * Loads the specified URL *asynchronously* into the specified document,\n\t * invoking onload after the document has been loaded. This implementation\n\t * does not use <mxXmlRequest>, but the document.load method.\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * doc - The document to load the URL into.\n\t * onload - Function to execute when the URL has been loaded.\n\t */\n\tloadInto: function(url, doc, onload)\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tdoc.onreadystatechange = function ()\n\t\t\t{\n\t\t\t\tif (doc.readyState == 4)\n\t\t\t\t{\n\t\t\t\t\tonload();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.addEventListener('load', onload, false);\n\t\t}\n\t\t\n\t\tdoc.load(url);\n\t},\n\t\n\t/**\n\t * Function: getValue\n\t * \n\t * Returns the value for the given key in the given associative array or\n\t * the given default value if the value is null.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null.\n\t */\n\tgetValue: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\t\n\t/**\n\t * Function: getNumber\n\t * \n\t * Returns the numeric value for the given key in the given associative\n\t * array or the given default value (or 0) if the value is null. The value\n\t * is converted to a numeric value using the Number function.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null. Default is 0.\n\t */\n\tgetNumber: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue || 0;\t\t\t\n\t\t}\n\t\t\n\t\treturn Number(value);\n\t},\n\t\n\t/**\n\t * Function: getColor\n\t * \n\t * Returns the color value for the given key in the given associative\n\t * array or the given default value if the value is null. If the value\n\t * is <mxConstants.NONE> then null is returned.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null. Default is null.\n\t */\n\tgetColor: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\telse if (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: clone\n\t * \n\t * Recursively clones the specified object ignoring all fieldnames in the\n\t * given array of transient fields. <mxObjectIdentity.FIELD_NAME> is always\n\t * ignored by this function.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to be cloned.\n\t * transients - Optional array of strings representing the fieldname to be\n\t * ignored.\n\t * shallow - Optional boolean argument to specify if a shallow clone should\n\t * be created, that is, one where all object references are not cloned or,\n\t * in other words, one where only atomic (strings, numbers) values are\n\t * cloned. Default is false.\n\t */\n\tclone: function(obj, transients, shallow)\n\t{\n\t\tshallow = (shallow != null) ? shallow : false;\n\t\tvar clone = null;\n\t\t\n\t\tif (obj != null && typeof(obj.constructor) == 'function')\n\t\t{\n\t\t\tclone = new obj.constructor();\n\t\t\t\n\t\t    for (var i in obj)\n\t\t    {\n\t\t    \tif (i != mxObjectIdentity.FIELD_NAME && (transients == null ||\n\t\t    \t\tmxUtils.indexOf(transients, i) < 0))\n\t\t    \t{\n\t\t\t    \tif (!shallow && typeof(obj[i]) == 'object')\n\t\t\t    \t{\n\t\t\t            clone[i] = mxUtils.clone(obj[i]);\n\t\t\t        }\n\t\t\t        else\n\t\t\t        {\n\t\t\t            clone[i] = obj[i];\n\t\t\t        }\n\t\t\t\t}\n\t\t    }\n\t\t}\n\t\t\n\t    return clone;\n\t},\n\n\t/**\n\t * Function: equalPoints\n\t * \n\t * Compares all mxPoints in the given lists.\n\t * \n\t * Parameters:\n\t * \n\t * a - Array of <mxPoints> to be compared.\n\t * b - Array of <mxPoints> to be compared.\n\t */\n\tequalPoints: function(a, b)\n\t{\n\t\tif ((a == null && b != null) || (a != null && b == null) ||\n\t\t\t(a != null && b != null && a.length != b.length))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (a != null && b != null)\n\t\t{\n\t\t\tfor (var i = 0; i < a.length; i++)\n\t\t\t{\n\t\t\t\tif (a[i] == b[i] || (a[i] != null && !a[i].equals(b[i])))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: equalEntries\n\t * \n\t * Returns true if all properties of the given objects are equal. Values\n\t * with NaN are equal to NaN and unequal to any other value.\n\t * \n\t * Parameters:\n\t * \n\t * a - First object to be compared.\n\t * b - Second object to be compared.\n\t */\n\tequalEntries: function(a, b)\n\t{\n\t\t// Counts keys in b to check if all values have been compared\n\t\tvar count = 0;\n\n\t\tif ((a == null && b != null) || (a != null && b == null) ||\n\t\t\t(a != null && b != null && a.length != b.length))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (a != null && b != null)\n\t\t{\n\t\t\tfor (var key in b)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\tfor (var key in a)\n\t\t\t{\n\t\t\t\tcount--\n\t\t\t\t\n\t\t\t\tif ((!mxUtils.isNaN(a[key]) || !mxUtils.isNaN(b[key])) && a[key] != b[key])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn count == 0;\n\t},\n\t\n\t/**\n\t * Function: removeDuplicates\n\t * \n\t * Removes all duplicates from the given array.\n\t */\n\tremoveDuplicates: function(arr)\n\t{\n\t\tvar dict = new mxDictionary();\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 0; i < arr.length; i++)\n\t\t{\n\t\t\tif (!dict.get(arr[i]))\n\t\t\t{\n\t\t\t\tresult.push(arr[i]);\n\t\t\t\tdict.put(arr[i], true);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: isNaN\n\t *\n\t * Returns true if the given value is of type number and isNaN returns true.\n\t */\n\tisNaN: function(value)\n\t{\n\t\treturn typeof(value) == 'number' && isNaN(value);\n\t},\n\t\n\t/**\n\t * Function: extend\n\t *\n\t * Assigns a copy of the superclass prototype to the subclass prototype.\n\t * Note that this does not call the constructor of the superclass at this\n\t * point, the superclass constructor should be called explicitely in the\n\t * subclass constructor. Below is an example.\n\t * \n\t * (code)\n\t * MyGraph = function(container, model, renderHint, stylesheet)\n\t * {\n\t *   mxGraph.call(this, container, model, renderHint, stylesheet);\n\t * }\n\t * \n\t * mxUtils.extend(MyGraph, mxGraph);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * ctor - Constructor of the subclass.\n\t * superCtor - Constructor of the superclass.\n\t */\n\textend: function(ctor, superCtor)\n\t{\n\t\tvar f = function() {};\n\t\tf.prototype = superCtor.prototype;\n\t\t\n\t\tctor.prototype = new f();\n\t\tctor.prototype.constructor = ctor;\n\t},\n\n\t/**\n\t * Function: toString\n\t * \n\t * Returns a textual representation of the specified object.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to return the string representation for.\n\t */\n\ttoString: function(obj)\n\t{\n\t    var output = '';\n\t    \n\t    for (var i in obj)\n\t    {\n\t    \ttry\n\t    \t{\n\t\t\t    if (obj[i] == null)\n\t\t\t    {\n\t\t            output += i + ' = [null]\\n';\n\t\t\t    }\n\t\t\t    else if (typeof(obj[i]) == 'function')\n\t\t\t    {\n\t\t            output += i + ' => [Function]\\n';\n\t\t        }\n\t\t        else if (typeof(obj[i]) == 'object')\n\t\t        {\n\t\t        \tvar ctor = mxUtils.getFunctionName(obj[i].constructor); \n\t\t            output += i + ' => [' + ctor + ']\\n';\n\t\t        }\n\t\t        else\n\t\t        {\n\t\t            output += i + ' = ' + obj[i] + '\\n';\n\t\t        }\n\t    \t}\n\t    \tcatch (e)\n\t    \t{\n\t    \t\toutput += i + '=' + e.message;\n\t    \t}\n\t    }\n\t    \n\t    return output;\n\t},\n\n\t/**\n\t * Function: toRadians\n\t * \n\t * Converts the given degree to radians.\n\t */\n\ttoRadians: function(deg)\n\t{\n\t\treturn Math.PI * deg / 180;\n\t},\n\n\t/**\n\t * Function: toDegree\n\t * \n\t * Converts the given radians to degree.\n\t */\n\ttoDegree: function(rad)\n\t{\n\t\treturn rad * 180 / Math.PI;\n\t},\n\t\n\t/**\n\t * Function: arcToCurves\n\t * \n\t * Converts the given arc to a series of curves.\n\t */\n\tarcToCurves: function(x0, y0, r1, r2, angle, largeArcFlag, sweepFlag, x, y)\n\t{\n\t\tx -= x0;\n\t\ty -= y0;\n\t\t\n        if (r1 === 0 || r2 === 0) \n        {\n        \treturn result;\n        }\n        \n        var fS = sweepFlag;\n        var psai = angle;\n        r1 = Math.abs(r1);\n        r2 = Math.abs(r2);\n        var ctx = -x / 2;\n        var cty = -y / 2;\n        var cpsi = Math.cos(psai * Math.PI / 180);\n        var spsi = Math.sin(psai * Math.PI / 180);\n        var rxd = cpsi * ctx + spsi * cty;\n        var ryd = -1 * spsi * ctx + cpsi * cty;\n        var rxdd = rxd * rxd;\n        var rydd = ryd * ryd;\n        var r1x = r1 * r1;\n        var r2y = r2 * r2;\n        var lamda = rxdd / r1x + rydd / r2y;\n        var sds;\n        \n        if (lamda > 1) \n        {\n        \tr1 = Math.sqrt(lamda) * r1;\n        \tr2 = Math.sqrt(lamda) * r2;\n        \tsds = 0;\n        }  \n        else\n        {\n        \tvar seif = 1;\n            \n        \tif (largeArcFlag === fS) \n        \t{\n        \t\tseif = -1;\n        \t}\n            \n        \tsds = seif * Math.sqrt((r1x * r2y - r1x * rydd - r2y * rxdd) / (r1x * rydd + r2y * rxdd));\n        }\n        \n        var txd = sds * r1 * ryd / r2;\n        var tyd = -1 * sds * r2 * rxd / r1;\n        var tx = cpsi * txd - spsi * tyd + x / 2;\n        var ty = spsi * txd + cpsi * tyd + y / 2;\n        var rad = Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1) - Math.atan2(0, 1);\n        var s1 = (rad >= 0) ? rad : 2 * Math.PI + rad;\n        rad = Math.atan2((-ryd - tyd) / r2, (-rxd - txd) / r1) - Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1);\n        var dr = (rad >= 0) ? rad : 2 * Math.PI + rad;\n        \n        if (fS == 0 && dr > 0) \n        {\n        \tdr -= 2 * Math.PI;\n        }\n        else if (fS != 0 && dr < 0) \n        {\n        \tdr += 2 * Math.PI;\n        }\n        \n        var sse = dr * 2 / Math.PI;\n        var seg = Math.ceil(sse < 0 ? -1 * sse : sse);\n        var segr = dr / seg;\n        var t = 8/3 * Math.sin(segr / 4) * Math.sin(segr / 4) / Math.sin(segr / 2);\n        var cpsir1 = cpsi * r1;\n        var cpsir2 = cpsi * r2;\n        var spsir1 = spsi * r1;\n        var spsir2 = spsi * r2;\n        var mc = Math.cos(s1);\n        var ms = Math.sin(s1);\n        var x2 = -t * (cpsir1 * ms + spsir2 * mc);\n        var y2 = -t * (spsir1 * ms - cpsir2 * mc);\n        var x3 = 0;\n        var y3 = 0;\n\n\t\tvar result = [];\n        \n        for (var n = 0; n < seg; ++n) \n        {\n            s1 += segr;\n            mc = Math.cos(s1);\n            ms = Math.sin(s1);\n            \n            x3 = cpsir1 * mc - spsir2 * ms + tx;\n            y3 = spsir1 * mc + cpsir2 * ms + ty;\n            var dx = -t * (cpsir1 * ms + spsir2 * mc);\n            var dy = -t * (spsir1 * ms - cpsir2 * mc);\n            \n            // CurveTo updates x0, y0 so need to restore it\n            var index = n * 6;\n            result[index] = Number(x2 + x0);\n            result[index + 1] = Number(y2 + y0);\n            result[index + 2] = Number(x3 - dx + x0);\n            result[index + 3] = Number(y3 - dy + y0);\n            result[index + 4] = Number(x3 + x0);\n            result[index + 5] = Number(y3 + y0);\n            \n\t\t\tx2 = x3 + dx;\n            y2 = y3 + dy;\n        }\n        \n        return result;\n\t},\n\n\t/**\n\t * Function: getBoundingBox\n\t * \n\t * Returns the bounding box for the rotated rectangle.\n\t * \n\t * Parameters:\n\t * \n\t * rect - <mxRectangle> to be rotated.\n\t * angle - Number that represents the angle (in degrees).\n\t * cx - Optional <mxPoint> that represents the rotation center. If no\n\t * rotation center is given then the center of rect is used.\n\t */\n\tgetBoundingBox: function(rect, rotation, cx)\n\t{\n        var result = null;\n\n        if (rect != null && rotation != null && rotation != 0)\n        {\n            var rad = mxUtils.toRadians(rotation);\n            var cos = Math.cos(rad);\n            var sin = Math.sin(rad);\n\n            cx = (cx != null) ? cx : new mxPoint(rect.x + rect.width / 2, rect.y  + rect.height / 2);\n\n            var p1 = new mxPoint(rect.x, rect.y);\n            var p2 = new mxPoint(rect.x + rect.width, rect.y);\n            var p3 = new mxPoint(p2.x, rect.y + rect.height);\n            var p4 = new mxPoint(rect.x, p3.y);\n\n            p1 = mxUtils.getRotatedPoint(p1, cos, sin, cx);\n            p2 = mxUtils.getRotatedPoint(p2, cos, sin, cx);\n            p3 = mxUtils.getRotatedPoint(p3, cos, sin, cx);\n            p4 = mxUtils.getRotatedPoint(p4, cos, sin, cx);\n\n            result = new mxRectangle(p1.x, p1.y, 0, 0);\n            result.add(new mxRectangle(p2.x, p2.y, 0, 0));\n            result.add(new mxRectangle(p3.x, p3.y, 0, 0));\n            result.add(new mxRectangle(p4.x, p4.y, 0, 0));\n        }\n\n        return result;\n\t},\n\n\t/**\n\t * Function: getRotatedPoint\n\t * \n\t * Rotates the given point by the given cos and sin.\n\t */\n\tgetRotatedPoint: function(pt, cos, sin, c)\n\t{\n\t\tc = (c != null) ? c : new mxPoint();\n\t\tvar x = pt.x - c.x;\n\t\tvar y = pt.y - c.y;\n\n\t\tvar x1 = x * cos - y * sin;\n\t\tvar y1 = y * cos + x * sin;\n\n\t\treturn new mxPoint(x1 + c.x, y1 + c.y);\n\t},\n\t\n\t/**\n\t * Returns an integer mask of the port constraints of the given map\n\t * @param dict the style map to determine the port constraints for\n\t * @param defaultValue Default value to return if the key is undefined.\n\t * @return the mask of port constraint directions\n\t * \n\t * Parameters:\n\t * \n\t * terminal - <mxCelState> that represents the terminal.\n\t * edge - <mxCellState> that represents the edge.\n\t * source - Boolean that specifies if the terminal is the source terminal.\n\t * defaultValue - Default value to be returned.\n\t */\n\tgetPortConstraints: function(terminal, edge, source, defaultValue)\n\t{\n\t\tvar value = mxUtils.getValue(terminal.style, mxConstants.STYLE_PORT_CONSTRAINT,\n\t\t\tmxUtils.getValue(edge.style, (source) ? mxConstants.STYLE_SOURCE_PORT_CONSTRAINT :\n\t\t\t\tmxConstants.STYLE_TARGET_PORT_CONSTRAINT, null));\n\t\t\n\t\tif (value == null)\n\t\t{\n\t\t\treturn defaultValue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar directions = value.toString();\n\t\t\tvar returnValue = mxConstants.DIRECTION_MASK_NONE;\n\t\t\tvar constraintRotationEnabled = mxUtils.getValue(terminal.style, mxConstants.STYLE_PORT_CONSTRAINT_ROTATION, 0);\n\t\t\tvar rotation = 0;\n\t\t\t\n\t\t\tif (constraintRotationEnabled == 1)\n\t\t\t{\n\t\t\t\trotation = mxUtils.getValue(terminal.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t}\n\t\t\t\n\t\t\tvar quad = 0;\n\n\t\t\tif (rotation > 45)\n\t\t\t{\n\t\t\t\tquad = 1;\n\t\t\t\t\n\t\t\t\tif (rotation >= 135)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (rotation < -45)\n\t\t\t{\n\t\t\t\tquad = 3;\n\t\t\t\t\n\t\t\t\tif (rotation <= -135)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_NORTH) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_WEST) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_SOUTH) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_EAST) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn returnValue;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: reversePortConstraints\n\t * \n\t * Reverse the port constraint bitmask. For example, north | east\n\t * becomes south | west\n\t */\n\treversePortConstraints: function(constraint)\n\t{\n\t\tvar result = 0;\n\t\t\n\t\tresult = (constraint & mxConstants.DIRECTION_MASK_WEST) << 3;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_NORTH) << 1;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_SOUTH) >> 1;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_EAST) >> 3;\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: findNearestSegment\n\t * \n\t * Finds the index of the nearest segment on the given cell state for\n\t * the specified coordinate pair.\n\t */\n\tfindNearestSegment: function(state, x, y)\n\t{\n\t\tvar index = -1;\n\t\t\n\t\tif (state.absolutePoints.length > 0)\n\t\t{\n\t\t\tvar last = state.absolutePoints[0];\n\t\t\tvar min = null;\n\t\t\t\n\t\t\tfor (var i = 1; i < state.absolutePoints.length; i++)\n\t\t\t{\n\t\t\t\tvar current = state.absolutePoints[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(last.x, last.y,\n\t\t\t\t\tcurrent.x, current.y, x, y);\n\t\t\t\t\n\t\t\t\tif (min == null || dist < min)\n\t\t\t\t{\n\t\t\t\t\tmin = dist;\n\t\t\t\t\tindex = i - 1;\n\t\t\t\t}\n\n\t\t\t\tlast = current;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn index;\n\t},\n\n\t/**\n\t * Function: getDirectedBounds\n\t * \n\t * Adds the given margins to the given rectangle and rotates and flips the\n\t * rectangle according to the respective styles in style.\n\t */\n\tgetDirectedBounds: function (rect, m, style, flipH, flipV)\n\t{\n\t\tvar d = mxUtils.getValue(style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\t\tflipH = (flipH != null) ? flipH : mxUtils.getValue(style, mxConstants.STYLE_FLIPH, false);\n\t\tflipV = (flipV != null) ? flipV : mxUtils.getValue(style, mxConstants.STYLE_FLIPV, false);\n\n\t\tm.x = Math.round(Math.max(0, Math.min(rect.width, m.x)));\n\t\tm.y = Math.round(Math.max(0, Math.min(rect.height, m.y)));\n\t\tm.width = Math.round(Math.max(0, Math.min(rect.width, m.width)));\n\t\tm.height = Math.round(Math.max(0, Math.min(rect.height, m.height)));\n\t\t\n\t\tif ((flipV && (d == mxConstants.DIRECTION_SOUTH || d == mxConstants.DIRECTION_NORTH)) ||\n\t\t\t(flipH && (d == mxConstants.DIRECTION_EAST || d == mxConstants.DIRECTION_WEST)))\n\t\t{\n\t\t\tvar tmp = m.x;\n\t\t\tm.x = m.width;\n\t\t\tm.width = tmp;\n\t\t}\n\t\t\t\n\t\tif ((flipH && (d == mxConstants.DIRECTION_SOUTH || d == mxConstants.DIRECTION_NORTH)) ||\n\t\t\t(flipV && (d == mxConstants.DIRECTION_EAST || d == mxConstants.DIRECTION_WEST)))\n\t\t{\n\t\t\tvar tmp = m.y;\n\t\t\tm.y = m.height;\n\t\t\tm.height = tmp;\n\t\t}\n\t\t\n\t\tvar m2 = mxRectangle.fromRectangle(m);\n\t\t\n\t\tif (d == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tm2.y = m.x;\n\t\t\tm2.x = m.height;\n\t\t\tm2.width = m.y;\n\t\t\tm2.height = m.width;\n\t\t}\n\t\telse if (d == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tm2.y = m.height;\n\t\t\tm2.x = m.width;\n\t\t\tm2.width = m.x;\n\t\t\tm2.height = m.y;\n\t\t}\n\t\telse if (d == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tm2.y = m.width;\n\t\t\tm2.x = m.y;\n\t\t\tm2.width = m.height;\n\t\t\tm2.height = m.x;\n\t\t}\n\t\t\n\t\treturn new mxRectangle(rect.x + m2.x, rect.y + m2.y, rect.width - m2.width - m2.x, rect.height - m2.height - m2.y);\n\t},\n\n\t/**\n\t * Function: getPerimeterPoint\n\t * \n\t * Returns the intersection between the polygon defined by the array of\n\t * points and the line between center and point.\n\t */\n\tgetPerimeterPoint: function (pts, center, point)\n\t{\n\t\tvar min = null;\n\t\t\n\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t{\n\t\t\tvar pt = mxUtils.intersection(pts[i].x, pts[i].y, pts[i + 1].x, pts[i + 1].y,\n\t\t\t\tcenter.x, center.y, point.x, point.y);\n\t\t\t\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar dx = point.x - pt.x;\n\t\t\t\tvar dy = point.y - pt.y;\n\t\t\t\tvar ip = {p: pt, distSq: dy * dy + dx * dx};\n\t\t\t\t\n\t\t\t\tif (ip != null && (min == null || min.distSq > ip.distSq))\n\t\t\t\t{\n\t\t\t\t\tmin = ip;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (min != null) ? min.p : null;\n\t},\n\n\t/**\n\t * Function: rectangleIntersectsSegment\n\t * \n\t * Returns true if the given rectangle intersects the given segment.\n\t * \n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the rectangle.\n\t * p1 - <mxPoint> that represents the first point of the segment.\n\t * p2 - <mxPoint> that represents the second point of the segment.\n\t */\n\trectangleIntersectsSegment: function(bounds, p1, p2)\n\t{\n\t\tvar top = bounds.y;\n\t\tvar left = bounds.x;\n\t\tvar bottom = top + bounds.height;\n\t\tvar right = left + bounds.width;\n\t\t\t\n\t\t// Find min and max X for the segment\n\t\tvar minX = p1.x;\n\t\tvar maxX = p2.x;\n\t\t\n\t\tif (p1.x > p2.x)\n\t\t{\n\t\t  minX = p2.x;\n\t\t  maxX = p1.x;\n\t\t}\n\t\t\n\t\t// Find the intersection of the segment's and rectangle's x-projections\n\t\tif (maxX > right)\n\t\t{\n\t\t  maxX = right;\n\t\t}\n\t\t\n\t\tif (minX < left)\n\t\t{\n\t\t  minX = left;\n\t\t}\n\t\t\n\t\tif (minX > maxX) // If their projections do not intersect return false\n\t\t{\n\t\t  return false;\n\t\t}\n\t\t\n\t\t// Find corresponding min and max Y for min and max X we found before\n\t\tvar minY = p1.y;\n\t\tvar maxY = p2.y;\n\t\tvar dx = p2.x - p1.x;\n\t\t\n\t\tif (Math.abs(dx) > 0.0000001)\n\t\t{\n\t\t  var a = (p2.y - p1.y) / dx;\n\t\t  var b = p1.y - a * p1.x;\n\t\t  minY = a * minX + b;\n\t\t  maxY = a * maxX + b;\n\t\t}\n\t\t\n\t\tif (minY > maxY)\n\t\t{\n\t\t  var tmp = maxY;\n\t\t  maxY = minY;\n\t\t  minY = tmp;\n\t\t}\n\t\t\n\t\t// Find the intersection of the segment's and rectangle's y-projections\n\t\tif (maxY > bottom)\n\t\t{\n\t\t  maxY = bottom;\n\t\t}\n\t\t\n\t\tif (minY < top)\n\t\t{\n\t\t  minY = top;\n\t\t}\n\t\t\n\t\tif (minY > maxY) // If Y-projections do not intersect return false\n\t\t{\n\t\t  return false;\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\t\n\t/**\n\t * Function: contains\n\t * \n\t * Returns true if the specified point (x, y) is contained in the given rectangle.\n\t * \n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the area.\n\t * x - X-coordinate of the point.\n\t * y - Y-coordinate of the point.\n\t */\n\tcontains: function(bounds, x, y)\n\t{\n\t\treturn (bounds.x <= x && bounds.x + bounds.width >= x &&\n\t\t\t\tbounds.y <= y && bounds.y + bounds.height >= y);\n\t},\n\n\t/**\n\t * Function: intersects\n\t * \n\t * Returns true if the two rectangles intersect.\n\t * \n\t * Parameters:\n\t * \n\t * a - <mxRectangle> to be checked for intersection.\n\t * b - <mxRectangle> to be checked for intersection.\n\t */\n\tintersects: function(a, b)\n\t{\n\t\tvar tw = a.width;\n\t\tvar th = a.height;\n\t\tvar rw = b.width;\n\t\tvar rh = b.height;\n\t\t\n\t\tif (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0)\n\t\t{\n\t\t    return false;\n\t\t}\n\t\t\n\t\tvar tx = a.x;\n\t\tvar ty = a.y;\n\t\tvar rx = b.x;\n\t\tvar ry = b.y;\n\t\t\n\t\trw += rx;\n\t\trh += ry;\n\t\ttw += tx;\n\t\tth += ty;\n\n\t\treturn ((rw < rx || rw > tx) &&\n\t\t\t(rh < ry || rh > ty) &&\n\t\t\t(tw < tx || tw > rx) &&\n\t\t\t(th < ty || th > ry));\n\t},\n\n\t/**\n\t * Function: intersects\n\t * \n\t * Returns true if the two rectangles intersect.\n\t * \n\t * Parameters:\n\t * \n\t * a - <mxRectangle> to be checked for intersection.\n\t * b - <mxRectangle> to be checked for intersection.\n\t */\n\tintersectsHotspot: function(state, x, y, hotspot, min, max)\n\t{\n\t\thotspot = (hotspot != null) ? hotspot : 1;\n\t\tmin = (min != null) ? min : 0;\n\t\tmax = (max != null) ? max : 0;\n\t\t\n\t\tif (hotspot > 0)\n\t\t{\n\t\t\tvar cx = state.getCenterX();\n\t\t\tvar cy = state.getCenterY();\n\t\t\tvar w = state.width;\n\t\t\tvar h = state.height;\n\t\t\t\n\t\t\tvar start = mxUtils.getValue(state.style, mxConstants.STYLE_STARTSIZE) * state.view.scale;\n\n\t\t\tif (start > 0)\n\t\t\t{\n\t\t\t\tif (mxUtils.getValue(state.style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t{\n\t\t\t\t\tcy = state.y + start / 2;\n\t\t\t\t\th = start;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcx = state.x + start / 2;\n\t\t\t\t\tw = start;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tw = Math.max(min, w * hotspot);\n\t\t\th = Math.max(min, h * hotspot);\n\t\t\t\n\t\t\tif (max > 0)\n\t\t\t{\n\t\t\t\tw = Math.min(w, max);\n\t\t\t\th = Math.min(h, max);\n\t\t\t}\n\t\t\t\n\t\t\tvar rect = new mxRectangle(cx - w / 2, cy - h / 2, w, h);\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(x, y), cos, sin, cx);\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\treturn mxUtils.contains(rect, x, y);\t\t\t\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: getOffset\n\t * \n\t * Returns the offset for the specified container as an <mxPoint>. The\n\t * offset is the distance from the top left corner of the container to the\n\t * top left corner of the document.\n\t * \n\t * Parameters:\n\t * \n\t * container - DOM node to return the offset for.\n\t * scollOffset - Optional boolean to add the scroll offset of the document.\n\t * Default is false.\n\t */\n\tgetOffset: function(container, scrollOffset)\n\t{\n\t\tvar offsetLeft = 0;\n\t\tvar offsetTop = 0;\n\t\t\n\t\t// Ignores document scroll origin for fixed elements\n\t\tvar fixed = false;\n\t\tvar node = container;\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\n\t\twhile (node != null && node != b && node != d && !fixed)\n\t\t{\n\t\t\tvar style = mxUtils.getCurrentStyle(node);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tfixed = fixed || style.position == 'fixed';\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\t\n\t\tif (!scrollOffset && !fixed)\n\t\t{\n\t\t\tvar offset = mxUtils.getDocumentScrollOrigin(container.ownerDocument);\n\t\t\toffsetLeft += offset.x;\n\t\t\toffsetTop += offset.y;\n\t\t}\n\t\t\n\t\tvar r = container.getBoundingClientRect();\n\t\t\n\t\tif (r != null)\n\t\t{\n\t\t\toffsetLeft += r.left;\n\t\t\toffsetTop += r.top;\n\t\t}\n\t\t\n\t\treturn new mxPoint(offsetLeft, offsetTop);\n\t},\n\n\t/**\n\t * Function: getDocumentScrollOrigin\n\t * \n\t * Returns the scroll origin of the given document or the current document\n\t * if no document is given.\n\t */\n\tgetDocumentScrollOrigin: function(doc)\n\t{\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\treturn new mxPoint(doc.body.scrollLeft, doc.body.scrollTop);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar wnd = doc.defaultView || doc.parentWindow;\n\t\t\t\n\t\t\tvar x = (wnd != null && window.pageXOffset !== undefined) ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft;\n\t\t\tvar y = (wnd != null && window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n\t\t\t\n\t\t\treturn new mxPoint(x, y);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: getScrollOrigin\n\t * \n\t * Returns the top, left corner of the viewrect as an <mxPoint>.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose scroll origin should be returned.\n\t * includeAncestors - Whether the scroll origin of the ancestors should be\n\t * included. Default is false.\n\t * includeDocument - Whether the scroll origin of the document should be\n\t * included. Default is true.\n\t */\n\tgetScrollOrigin: function(node, includeAncestors, includeDocument)\n\t{\n\t\tincludeAncestors = (includeAncestors != null) ? includeAncestors : false;\n\t\tincludeDocument = (includeDocument != null) ? includeDocument : true;\n\t\t\n\t\tvar doc = (node != null) ? node.ownerDocument : document;\n\t\tvar b = doc.body;\n\t\tvar d = doc.documentElement;\n\t\tvar result = new mxPoint();\n\t\tvar fixed = false;\n\n\t\twhile (node != null && node != b && node != d)\n\t\t{\n\t\t\tif (!isNaN(node.scrollLeft) && !isNaN(node.scrollTop))\n\t\t\t{\n\t\t\t\tresult.x += node.scrollLeft;\n\t\t\t\tresult.y += node.scrollTop;\n\t\t\t}\n\t\t\t\n\t\t\tvar style = mxUtils.getCurrentStyle(node);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tfixed = fixed || style.position == 'fixed';\n\t\t\t}\n\n\t\t\tnode = (includeAncestors) ? node.parentNode : null;\n\t\t}\n\n\t\tif (!fixed && includeDocument)\n\t\t{\n\t\t\tvar origin = mxUtils.getDocumentScrollOrigin(doc);\n\n\t\t\tresult.x += origin.x;\n\t\t\tresult.y += origin.y;\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: convertPoint\n\t * \n\t * Converts the specified point (x, y) using the offset of the specified\n\t * container and returns a new <mxPoint> with the result.\n\t * \n\t * (code)\n\t * var pt = mxUtils.convertPoint(graph.container,\n\t *   mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * container - DOM node to use for the offset.\n\t * x - X-coordinate of the point to be converted.\n\t * y - Y-coordinate of the point to be converted.\n\t */\n\tconvertPoint: function(container, x, y)\n\t{\n\t\tvar origin = mxUtils.getScrollOrigin(container, false);\n\t\tvar offset = mxUtils.getOffset(container);\n\n\t\toffset.x -= origin.x;\n\t\toffset.y -= origin.y;\n\t\t\n\t\treturn new mxPoint(x - offset.x, y - offset.y);\n\t},\n\t\n\t/**\n\t * Function: ltrim\n\t * \n\t * Strips all whitespaces from the beginning of the string. Without the\n\t * second parameter, this will trim these characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\tltrim: function(str, chars)\n\t{\n\t\tchars = chars || \"\\\\s\";\n\t\t\n\t\treturn (str != null) ? str.replace(new RegExp(\"^[\" + chars + \"]+\", \"g\"), \"\") : null;\n\t},\n\t\n\t/**\n\t * Function: rtrim\n\t * \n\t * Strips all whitespaces from the end of the string. Without the second\n\t * parameter, this will trim these characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\trtrim: function(str, chars)\n\t{\n\t\tchars = chars || \"\\\\s\";\n\t\t\n\t\treturn (str != null) ? str.replace(new RegExp(\"[\" + chars + \"]+$\", \"g\"), \"\") : null;\n\t},\n\t\n\t/**\n\t * Function: trim\n\t * \n\t * Strips all whitespaces from both end of the string.\n\t * Without the second parameter, Javascript function will trim these\n\t * characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\ttrim: function(str, chars)\n\t{\n\t\treturn mxUtils.ltrim(mxUtils.rtrim(str, chars), chars);\n\t},\n\t\n\t/**\n\t * Function: isNumeric\n\t * \n\t * Returns true if the specified value is numeric, that is, if it is not\n\t * null, not an empty string, not a HEX number and isNaN returns false.\n\t * \n\t * Parameters:\n\t * \n\t * n - String representing the possibly numeric value.\n\t */\n\tisNumeric: function(n)\n\t{\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n) && (typeof(n) != 'string' || n.toLowerCase().indexOf('0x') < 0);\n\t},\n\n\t/**\n\t * Function: isInteger\n\t * \n\t * Returns true if the given value is an valid integer number.\n\t * \n\t * Parameters:\n\t * \n\t * n - String representing the possibly numeric value.\n\t */\n\tisInteger: function(n)\n\t{\n\t\treturn String(parseInt(n)) === String(n);\n\t},\n\n\t/**\n\t * Function: mod\n\t * \n\t * Returns the remainder of division of n by m. You should use this instead\n\t * of the built-in operation as the built-in operation does not properly\n\t * handle negative numbers.\n\t */\n\tmod: function(n, m)\n\t{\n\t\treturn ((n % m) + m) % m;\n\t},\n\n\t/**\n\t * Function: intersection\n\t * \n\t * Returns the intersection of two lines as an <mxPoint>.\n\t * \n\t * Parameters:\n\t * \n\t * x0 - X-coordinate of the first line's startpoint.\n\t * y0 - X-coordinate of the first line's startpoint.\n\t * x1 - X-coordinate of the first line's endpoint.\n\t * y1 - Y-coordinate of the first line's endpoint.\n\t * x2 - X-coordinate of the second line's startpoint.\n\t * y2 - Y-coordinate of the second line's startpoint.\n\t * x3 - X-coordinate of the second line's endpoint.\n\t * y3 - Y-coordinate of the second line's endpoint.\n\t */\n\tintersection: function (x0, y0, x1, y1, x2, y2, x3, y3)\n\t{\n\t\tvar denom = ((y3 - y2) * (x1 - x0)) - ((x3 - x2) * (y1 - y0));\n\t\tvar nume_a = ((x3 - x2) * (y0 - y2)) - ((y3 - y2) * (x0 - x2));\n\t\tvar nume_b = ((x1 - x0) * (y0 - y2)) - ((y1 - y0) * (x0 - x2));\n\n\t\tvar ua = nume_a / denom;\n\t\tvar ub = nume_b / denom;\n\t\t\n\t\tif(ua >= 0.0 && ua <= 1.0 && ub >= 0.0 && ub <= 1.0)\n\t\t{\n\t\t\t// Get the intersection point\n\t\t\tvar x = x0 + ua * (x1 - x0);\n\t\t\tvar y = y0 + ua * (y1 - y0);\n\t\t\t\n\t\t\treturn new mxPoint(x, y);\n\t\t}\n\t\t\n\t\t// No intersection\n\t\treturn null;\n\t},\n\t\n\t/**\n\t * Function: ptSegDistSq\n\t * \n\t * Returns the square distance between a segment and a point. To get the\n\t * distance between a point and a line (with infinite length) use\n\t * <mxUtils.ptLineDist>.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of the startpoint of the segment.\n\t * y1 - Y-coordinate of the startpoint of the segment.\n\t * x2 - X-coordinate of the endpoint of the segment.\n\t * y2 - Y-coordinate of the endpoint of the segment.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n\tptSegDistSq: function(x1, y1, x2, y2, px, py)\n    {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\n\t\tpx -= x1;\n\t\tpy -= y1;\n\n\t\tvar dotprod = px * x2 + py * y2;\n\t\tvar projlenSq;\n\n\t\tif (dotprod <= 0.0)\n\t\t{\n\t\t    projlenSq = 0.0;\n\t\t}\n\t\telse\n\t\t{\n\t\t    px = x2 - px;\n\t\t    py = y2 - py;\n\t\t    dotprod = px * x2 + py * y2;\n\n\t\t    if (dotprod <= 0.0)\n\t\t    {\n\t\t\t\tprojlenSq = 0.0;\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t\t\tprojlenSq = dotprod * dotprod / (x2 * x2 + y2 * y2);\n\t\t    }\n\t\t}\n\n\t\tvar lenSq = px * px + py * py - projlenSq;\n\t\t\n\t\tif (lenSq < 0)\n\t\t{\n\t\t    lenSq = 0;\n\t\t}\n\t\t\n\t\treturn lenSq;\n    },\n\t\n\t/**\n\t * Function: ptLineDist\n\t * \n\t * Returns the distance between a line defined by two points and a point.\n\t * To get the distance between a point and a segment (with a specific\n\t * length) use <mxUtils.ptSeqDistSq>.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of point 1 of the line.\n\t * y1 - Y-coordinate of point 1 of the line.\n\t * x2 - X-coordinate of point 1 of the line.\n\t * y2 - Y-coordinate of point 1 of the line.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n    ptLineDist: function(x1, y1, x2, y2, px, py)\n    {\n\t\treturn Math.abs((y2 - y1) * px - (x2 - x1) * py + x2 * y1 - y2 * x1) /\n\t\t\tMath.sqrt((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n    },\n    \t\n\t/**\n\t * Function: relativeCcw\n\t * \n\t * Returns 1 if the given point on the right side of the segment, 0 if its\n\t * on the segment, and -1 if the point is on the left side of the segment.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of the startpoint of the segment.\n\t * y1 - Y-coordinate of the startpoint of the segment.\n\t * x2 - X-coordinate of the endpoint of the segment.\n\t * y2 - Y-coordinate of the endpoint of the segment.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n\trelativeCcw: function(x1, y1, x2, y2, px, py)\n    {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\t\tpx -= x1;\n\t\tpy -= y1;\n\t\tvar ccw = px * y2 - py * x2;\n\t\t\n\t\tif (ccw == 0.0)\n\t\t{\n\t\t    ccw = px * x2 + py * y2;\n\t\t    \n\t\t    if (ccw > 0.0)\n\t\t    {\n\t\t\t\tpx -= x2;\n\t\t\t\tpy -= y2;\n\t\t\t\tccw = px * x2 + py * y2;\n\t\t\t\t\n\t\t\t\tif (ccw < 0.0)\n\t\t\t\t{\n\t\t\t\t    ccw = 0.0;\n\t\t\t\t}\n\t\t    }\n\t\t}\n\t\t\n\t\treturn (ccw < 0.0) ? -1 : ((ccw > 0.0) ? 1 : 0);\n    },\n    \n\t/**\n\t * Function: animateChanges\n\t * \n\t * See <mxEffects.animateChanges>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n\tanimateChanges: function(graph, changes)\n\t{\n\t\t// LATER: Deprecated, remove this function\n    \tmxEffects.animateChanges.apply(this, arguments);\n\t},\n    \n\t/**\n\t * Function: cascadeOpacity\n\t * \n\t * See <mxEffects.cascadeOpacity>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n    cascadeOpacity: function(graph, cell, opacity)\n\t{\n\t\tmxEffects.cascadeOpacity.apply(this, arguments);\n\t},\n\n\t/**\n\t * Function: fadeOut\n\t * \n\t * See <mxEffects.fadeOut>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n\tfadeOut: function(node, from, remove, step, delay, isEnabled)\n\t{\n\t\tmxEffects.fadeOut.apply(this, arguments);\n\t},\n\t\n\t/**\n\t * Function: setOpacity\n\t * \n\t * Sets the opacity of the specified DOM node to the given value in %.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to set the opacity for.\n\t * value - Opacity in %. Possible values are between 0 and 100.\n\t */\n\tsetOpacity: function(node, value)\n\t{\n\t\tif (mxUtils.isVml(node))\n\t\t{\n\t    \tif (value >= 100)\n\t    \t{\n\t    \t\tnode.style.filter = '';\n\t    \t}\n\t    \telse\n\t    \t{\n\t    \t\t// TODO: Why is the division by 5 needed in VML?\n\t\t\t    node.style.filter = 'alpha(opacity=' + (value/5) + ')';\n\t    \t}\n\t\t}\n\t\telse if (mxClient.IS_IE && (typeof(document.documentMode) === 'undefined' || document.documentMode < 9))\n\t    {\n\t    \tif (value >= 100)\n\t    \t{\n\t    \t\tnode.style.filter = '';\n\t    \t}\n\t    \telse\n\t    \t{\n\t\t\t    node.style.filter = 'alpha(opacity=' + value + ')';\n\t    \t}\n\t\t}\n\t\telse\n\t\t{\n\t\t    node.style.opacity = (value / 100);\n\t\t}\n\t},\n\n\t/**\n\t * Function: createImage\n\t * \n\t * Creates and returns an image (IMG node) or VML image (v:image) in IE6 in\n\t * quirks mode.\n\t * \n\t * Parameters:\n\t * \n\t * src - URL that points to the image to be displayed.\n\t */\n\tcreateImage: function(src)\n\t{\n        var imageNode = null;\n        \n\t\tif (mxClient.IS_IE6 && document.compatMode != 'CSS1Compat')\n\t\t{\n        \timageNode = document.createElement(mxClient.VML_PREFIX + ':image');\n        \timageNode.setAttribute('src', src);\n        \timageNode.style.borderStyle = 'none';\n        }\n\t\telse\n\t\t{\n\t\t\timageNode = document.createElement('img');\n\t\t\timageNode.setAttribute('src', src);\n\t\t\timageNode.setAttribute('border', '0');\n\t\t}\n\t\t\n\t\treturn imageNode;\n\t},\n\n\t/**\n\t * Function: sortCells\n\t * \n\t * Sorts the given cells according to the order in the cell hierarchy.\n\t * Ascending is optional and defaults to true.\n\t */\n\tsortCells: function(cells, ascending)\n\t{\n\t\tascending = (ascending != null) ? ascending : true;\n\t\tvar lookup = new mxDictionary();\n\t\tcells.sort(function(o1, o2)\n\t\t{\n\t\t\tvar p1 = lookup.get(o1);\n\t\t\t\n\t\t\tif (p1 == null)\n\t\t\t{\n\t\t\t\tp1 = mxCellPath.create(o1).split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\tlookup.put(o1, p1);\n\t\t\t}\n\t\t\t\n\t\t\tvar p2 = lookup.get(o2);\n\t\t\t\n\t\t\tif (p2 == null)\n\t\t\t{\n\t\t\t\tp2 = mxCellPath.create(o2).split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\tlookup.put(o2, p2);\n\t\t\t}\n\t\t\t\n\t\t\tvar comp = mxCellPath.compare(p1, p2);\n\t\t\t\n\t\t\treturn (comp == 0) ? 0 : (((comp > 0) == ascending) ? 1 : -1);\n\t\t});\n\t\t\n\t\treturn cells;\n\t},\n\n\t/**\n\t * Function: getStylename\n\t * \n\t * Returns the stylename in a style of the form [(stylename|key=value);] or\n\t * an empty string if the given style does not contain a stylename.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t */\n\tgetStylename: function(style)\n\t{\n\t\tif (style != null)\n\t\t{\n\t\t\tvar pairs = style.split(';');\n\t\t\tvar stylename = pairs[0];\n\t\t\t\n\t\t\tif (stylename.indexOf('=') < 0)\n\t\t\t{\n\t\t\t\treturn stylename;\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn '';\n\t},\n\n\t/**\n\t * Function: getStylenames\n\t * \n\t * Returns the stylenames in a style of the form [(stylename|key=value);]\n\t * or an empty array if the given style does not contain any stylenames.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t */\n\tgetStylenames: function(style)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar pairs = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < pairs.length; i++)\n\t\t\t{\n\t\t\t\tif (pairs[i].indexOf('=') < 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(pairs[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: indexOfStylename\n\t * \n\t * Returns the index of the given stylename in the given style. This\n\t * returns -1 if the given stylename does not occur (as a stylename) in the\n\t * given style, otherwise it returns the index of the first character.\n\t */\n\tindexOfStylename: function(style, stylename)\n\t{\n\t\tif (style != null && stylename != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\tvar pos = 0;\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\tif (tokens[i] == stylename)\n\t\t\t\t{\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpos += tokens[i].length + 1;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t},\n\t\n\t/**\n\t * Function: addStylename\n\t * \n\t * Adds the specified stylename to the given style if it does not already\n\t * contain the stylename.\n\t */\n\taddStylename: function(style, stylename)\n\t{\n\t\tif (mxUtils.indexOfStylename(style, stylename) < 0)\n\t\t{\n\t\t\tif (style == null)\n\t\t\t{\n\t\t\t\tstyle = '';\n\t\t\t}\n\t\t\telse if (style.length > 0 && style.charAt(style.length - 1) != ';')\n\t\t\t{\n\t\t\t\tstyle += ';';\n\t\t\t}\n\t\t\t\n\t\t\tstyle += stylename;\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\t\n\t/**\n\t * Function: removeStylename\n\t * \n\t * Removes all occurrences of the specified stylename in the given style\n\t * and returns the updated style. Trailing semicolons are not preserved.\n\t */\n\tremoveStylename: function(style, stylename)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\tif (tokens[i] != stylename)\n\t\t\t\t{\n\t\t\t\t\tresult.push(tokens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join(';');\n\t},\n\t\n\t/**\n\t * Function: removeAllStylenames\n\t * \n\t * Removes all stylenames from the given style and returns the updated\n\t * style.\n\t */\n\tremoveAllStylenames: function(style)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\t// Keeps the key, value assignments\n\t\t\t\tif (tokens[i].indexOf('=') >= 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(tokens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join(';');\n\t},\n\n\t/**\n\t * Function: setCellStyles\n\t * \n\t * Assigns the value for the given key in the styles of the given cells, or\n\t * removes the key from the styles if the value is null.\n\t * \n\t * Parameters:\n\t * \n\t * model - <mxGraphModel> to execute the transaction in.\n\t * cells - Array of <mxCells> to be updated.\n\t * key - Key of the style to be changed.\n\t * value - New value for the given key.\n\t */\n\tsetCellStyles: function(model, cells, key, value)\n\t{\n\t\tif (cells != null && cells.length > 0)\n\t\t{\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (cells[i] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar style = mxUtils.setStyle(model.getStyle(cells[i]), key, value);\n\t\t\t\t\t\tmodel.setStyle(cells[i], style);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setStyle\n\t * \n\t * Adds or removes the given key, value pair to the style and returns the\n\t * new style. If value is null or zero length then the key is removed from\n\t * the style. This is for cell styles, not for CSS styles.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t * key - Key of the style to be changed.\n\t * value - New value for the given key.\n\t */\n\tsetStyle: function(style, key, value)\n\t{\n\t\tvar isValue = value != null && (typeof(value.length) == 'undefined' || value.length > 0);\n\t\t\n\t\tif (style == null || style.length == 0)\n\t\t{\n\t\t\tif (isValue)\n\t\t\t{\n\t\t\t\tstyle = key + '=' + value + ';';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (style.substring(0, key.length + 1) == key + '=')\n\t\t\t{\n\t\t\t\tvar next = style.indexOf(';');\n\t\t\t\t\n\t\t\t\tif (isValue)\n\t\t\t\t{\n\t\t\t\t\tstyle = key + '=' + value + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstyle = (next < 0 || next == style.length - 1) ? '' : style.substring(next + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar index = style.indexOf(';' + key + '=');\n\t\t\t\t\n\t\t\t\tif (index < 0)\n\t\t\t\t{\n\t\t\t\t\tif (isValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar sep = (style.charAt(style.length - 1) == ';') ? '' : ';';\n\t\t\t\t\t\tstyle = style + sep + key + '=' + value + ';';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar next = style.indexOf(';', index + 1);\n\t\t\t\t\t\n\t\t\t\t\tif (isValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle = style.substring(0, index + 1) + key + '=' + value + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle = style.substring(0, index) + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\n\t/**\n\t * Function: setCellStyleFlags\n\t * \n\t * Sets or toggles the flag bit for the given key in the cell's styles.\n\t * If value is null then the flag is toggled.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var cells = graph.getSelectionCells();\n\t * mxUtils.setCellStyleFlags(graph.model,\n\t * \t\t\tcells,\n\t * \t\t\tmxConstants.STYLE_FONTSTYLE,\n\t * \t\t\tmxConstants.FONT_BOLD);\n\t * (end)\n\t * \n\t * Toggles the bold font style.\n\t * \n\t * Parameters:\n\t * \n\t * model - <mxGraphModel> that contains the cells.\n\t * cells - Array of <mxCells> to change the style for.\n\t * key - Key of the style to be changed.\n\t * flag - Integer for the bit to be changed.\n\t * value - Optional boolean value for the flag.\n\t */\n\tsetCellStyleFlags: function(model, cells, key, flag, value)\n\t{\n\t\tif (cells != null && cells.length > 0)\n\t\t{\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (cells[i] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar style = mxUtils.setStyleFlag(\n\t\t\t\t\t\t\tmodel.getStyle(cells[i]),\n\t\t\t\t\t\t\tkey, flag, value);\n\t\t\t\t\t\tmodel.setStyle(cells[i], style);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setStyleFlag\n\t * \n\t * Sets or removes the given key from the specified style and returns the\n\t * new style. If value is null then the flag is toggled.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t * key - Key of the style to be changed.\n\t * flag - Integer for the bit to be changed.\n\t * value - Optional boolean value for the given flag.\n\t */\n\tsetStyleFlag: function(style, key, flag, value)\n\t{\n\t\tif (style == null || style.length == 0)\n\t\t{\n\t\t\tif (value || value == null)\n\t\t\t{\n\t\t\t\tstyle = key+'='+flag;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstyle = key+'=0';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar index = style.indexOf(key+'=');\n\t\t\t\n\t\t\tif (index < 0)\n\t\t\t{\n\t\t\t\tvar sep = (style.charAt(style.length-1) == ';') ? '' : ';';\n\n\t\t\t\tif (value || value == null)\n\t\t\t\t{\n\t\t\t\t\tstyle = style + sep + key + '=' + flag;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstyle = style + sep + key + '=0';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar cont = style.indexOf(';', index);\n\t\t\t\tvar tmp = '';\n\t\t\t\t\n\t\t\t\tif (cont < 0)\n\t\t\t\t{\n\t\t\t\t\ttmp  = style.substring(index+key.length+1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = style.substring(index+key.length+1, cont);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (value == null)\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) ^ flag;\n\t\t\t\t}\n\t\t\t\telse if (value)\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) | flag;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) & ~flag;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstyle = style.substring(0, index) + key + '=' + tmp +\n\t\t\t\t\t((cont >= 0) ? style.substring(cont) : '');\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\t\n\t/**\n\t * Function: getAlignmentAsPoint\n\t * \n\t * Returns an <mxPoint> that represents the horizontal and vertical alignment\n\t * for numeric computations. X is -0.5 for center, -1 for right and 0 for\n\t * left alignment. Y is -0.5 for middle, -1 for bottom and 0 for top\n\t * alignment. Default values for missing arguments is top, left.\n\t */\n\tgetAlignmentAsPoint: function(align, valign)\n\t{\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\t// Horizontal alignment\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tdx = -0.5;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tdx = -1;\n\t\t}\n\n\t\t// Vertical alignment\n\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tdy = -0.5;\n\t\t}\n\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy = -1;\n\t\t}\n\t\t\n\t\treturn new mxPoint(dx, dy);\n\t},\n\t\n\t/**\n\t * Function: getSizeForString\n\t * \n\t * Returns an <mxRectangle> with the size (width and height in pixels) of\n\t * the given string. The string may contain HTML markup. Newlines should be\n\t * converted to <br> before calling this method. The caller is responsible\n\t * for sanitizing the HTML markup.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var label = graph.getLabel(cell).replace(/\\n/g, \"<br>\");\n\t * var size = graph.getSizeForString(label);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * text - String whose size should be returned.\n\t * fontSize - Integer that specifies the font size in pixels. Default is\n\t * <mxConstants.DEFAULT_FONTSIZE>.\n\t * fontFamily - String that specifies the name of the font family. Default\n\t * is <mxConstants.DEFAULT_FONTFAMILY>.\n\t * textWidth - Optional width for text wrapping.\n\t */\n\tgetSizeForString: function(text, fontSize, fontFamily, textWidth)\n\t{\n\t\tfontSize = (fontSize != null) ? fontSize : mxConstants.DEFAULT_FONTSIZE;\n\t\tfontFamily = (fontFamily != null) ? fontFamily : mxConstants.DEFAULT_FONTFAMILY;\n\t\tvar div = document.createElement('div');\n\t\t\n\t\t// Sets the font size and family\n\t\tdiv.style.fontFamily = fontFamily;\n\t\tdiv.style.fontSize = Math.round(fontSize) + 'px';\n\t\tdiv.style.lineHeight = Math.round(fontSize * mxConstants.LINE_HEIGHT) + 'px';\n\t\t\n\t\t// Disables block layout and outside wrapping and hides the div\n\t\tdiv.style.position = 'absolute';\n\t\tdiv.style.visibility = 'hidden';\n\t\tdiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\tdiv.style.zoom = '1';\n\t\t\n\t\tif (textWidth != null)\n\t\t{\n\t\t\tdiv.style.width = textWidth + 'px';\n\t\t\tdiv.style.whiteSpace = 'normal';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t}\n\t\t\n\t\t// Adds the text and inserts into DOM for updating of size\n\t\tdiv.innerHTML = text;\n\t\tdocument.body.appendChild(div);\n\t\t\n\t\t// Gets the size and removes from DOM\n\t\tvar size = new mxRectangle(0, 0, div.offsetWidth, div.offsetHeight);\n\t\tdocument.body.removeChild(div);\n\t\t\n\t\treturn size;\n\t},\n\t\n\t/**\n\t * Function: getViewXml\n\t */\n\tgetViewXml: function(graph, scale, cells, x0, y0)\n\t{\n\t\tx0 = (x0 != null) ? x0 : 0;\n\t\ty0 = (y0 != null) ? y0 : 0;\n\t\tscale = (scale != null) ? scale : 1;\n\n\t\tif (cells == null)\n\t\t{\n\t\t\tvar model = graph.getModel();\n\t\t\tcells = [model.getRoot()];\n\t\t}\n\t\t\n\t\tvar view = graph.getView();\n\t\tvar result = null;\n\n\t\t// Disables events on the view\n\t\tvar eventsEnabled = view.isEventsEnabled();\n\t\tview.setEventsEnabled(false);\n\n\t\t// Workaround for label bounds not taken into account for image export.\n\t\t// Creates a temporary draw pane which is used for rendering the text.\n\t\t// Text rendering is required for finding the bounds of the labels.\n\t\tvar drawPane = view.drawPane;\n\t\tvar overlayPane = view.overlayPane;\n\n\t\tif (graph.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tview.drawPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\t\tview.canvas.appendChild(view.drawPane);\n\n\t\t\t// Redirects cell overlays into temporary container\n\t\t\tview.overlayPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\t\tview.canvas.appendChild(view.overlayPane);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tview.drawPane = view.drawPane.cloneNode(false);\n\t\t\tview.canvas.appendChild(view.drawPane);\n\t\t\t\n\t\t\t// Redirects cell overlays into temporary container\n\t\t\tview.overlayPane = view.overlayPane.cloneNode(false);\n\t\t\tview.canvas.appendChild(view.overlayPane);\n\t\t}\n\n\t\t// Resets the translation\n\t\tvar translate = view.getTranslate();\n\t\tview.translate = new mxPoint(x0, y0);\n\n\t\t// Creates the temporary cell states in the view\n\t\tvar temp = new mxTemporaryCellStates(graph.getView(), scale, cells);\n\n\t\ttry\n\t\t{\n\t\t\tvar enc = new mxCodec();\n\t\t\tresult = enc.encode(graph.getView());\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\ttemp.destroy();\n\t\t\tview.translate = translate;\n\t\t\tview.canvas.removeChild(view.drawPane);\n\t\t\tview.canvas.removeChild(view.overlayPane);\n\t\t\tview.drawPane = drawPane;\n\t\t\tview.overlayPane = overlayPane;\n\t\t\tview.setEventsEnabled(eventsEnabled);\n\t\t}\n\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: getScaleForPageCount\n\t * \n\t * Returns the scale to be used for printing the graph with the given\n\t * bounds across the specifies number of pages with the given format. The\n\t * scale is always computed such that it given the given amount or fewer\n\t * pages in the print output. See <mxPrintPreview> for an example.\n\t * \n\t * Parameters:\n\t * \n\t * pageCount - Specifies the number of pages in the print output.\n\t * graph - <mxGraph> that should be printed.\n\t * pageFormat - Optional <mxRectangle> that specifies the page format.\n\t * Default is <mxConstants.PAGE_FORMAT_A4_PORTRAIT>.\n\t * border - The border along each side of every page.\n\t */\n\tgetScaleForPageCount: function(pageCount, graph, pageFormat, border)\n\t{\n\t\tif (pageCount < 1)\n\t\t{\n\t\t\t// We can't work with less than 1 page, return no scale\n\t\t\t// change\n\t\t\treturn 1;\n\t\t}\n\t\t\n\t\tpageFormat = (pageFormat != null) ? pageFormat : mxConstants.PAGE_FORMAT_A4_PORTRAIT;\n\t\tborder = (border != null) ? border : 0;\n\t\t\n\t\tvar availablePageWidth = pageFormat.width - (border * 2);\n\t\tvar availablePageHeight = pageFormat.height - (border * 2);\n\n\t\t// Work out the number of pages required if the\n\t\t// graph is not scaled.\n\t\tvar graphBounds = graph.getGraphBounds().clone();\n\t\tvar sc = graph.getView().getScale();\n\t\tgraphBounds.width /= sc;\n\t\tgraphBounds.height /= sc;\n\t\tvar graphWidth = graphBounds.width;\n\t\tvar graphHeight = graphBounds.height;\n\n\t\tvar scale = 1;\n\t\t\n\t\t// The ratio of the width/height for each printer page\n\t\tvar pageFormatAspectRatio = availablePageWidth / availablePageHeight;\n\t\t// The ratio of the width/height for the graph to be printer\n\t\tvar graphAspectRatio = graphWidth / graphHeight;\n\t\t\n\t\t// The ratio of horizontal pages / vertical pages for this \n\t\t// graph to maintain its aspect ratio on this page format\n\t\tvar pagesAspectRatio = graphAspectRatio / pageFormatAspectRatio;\n\t\t\n\t\t// Factor the square root of the page count up and down \n\t\t// by the pages aspect ratio to obtain a horizontal and \n\t\t// vertical page count that adds up to the page count\n\t\t// and has the correct aspect ratio\n\t\tvar pageRoot = Math.sqrt(pageCount);\n\t\tvar pagesAspectRatioSqrt = Math.sqrt(pagesAspectRatio);\n\t\tvar numRowPages = pageRoot * pagesAspectRatioSqrt;\n\t\tvar numColumnPages = pageRoot / pagesAspectRatioSqrt;\n\n\t\t// These value are rarely more than 2 rounding downs away from\n\t\t// a total that meets the page count. In cases of one being less \n\t\t// than 1 page, the other value can be too high and take more iterations \n\t\t// In this case, just change that value to be the page count, since \n\t\t// we know the other value is 1\n\t\tif (numRowPages < 1 && numColumnPages > pageCount)\n\t\t{\n\t\t\tvar scaleChange = numColumnPages / pageCount;\n\t\t\tnumColumnPages = pageCount;\n\t\t\tnumRowPages /= scaleChange;\n\t\t}\n\t\t\n\t\tif (numColumnPages < 1 && numRowPages > pageCount)\n\t\t{\n\t\t\tvar scaleChange = numRowPages / pageCount;\n\t\t\tnumRowPages = pageCount;\n\t\t\tnumColumnPages /= scaleChange;\n\t\t}\t\t\n\n\t\tvar currentTotalPages = Math.ceil(numRowPages) * Math.ceil(numColumnPages);\n\n\t\tvar numLoops = 0;\n\t\t\n\t\t// Iterate through while the rounded up number of pages comes to\n\t\t// a total greater than the required number\n\t\twhile (currentTotalPages > pageCount)\n\t\t{\n\t\t\t// Round down the page count (rows or columns) that is\n\t\t\t// closest to its next integer down in percentage terms.\n\t\t\t// i.e. Reduce the page total by reducing the total\n\t\t\t// page area by the least possible amount\n\n\t\t\tvar roundRowDownProportion = Math.floor(numRowPages) / numRowPages;\n\t\t\tvar roundColumnDownProportion = Math.floor(numColumnPages) / numColumnPages;\n\t\t\t\n\t\t\t// If the round down proportion is, work out the proportion to\n\t\t\t// round down to 1 page less\n\t\t\tif (roundRowDownProportion == 1)\n\t\t\t{\n\t\t\t\troundRowDownProportion = Math.floor(numRowPages-1) / numRowPages;\n\t\t\t}\n\t\t\tif (roundColumnDownProportion == 1)\n\t\t\t{\n\t\t\t\troundColumnDownProportion = Math.floor(numColumnPages-1) / numColumnPages;\n\t\t\t}\n\t\t\t\n\t\t\t// Check which rounding down is smaller, but in the case of very small roundings\n\t\t\t// try the other dimension instead\n\t\t\tvar scaleChange = 1;\n\t\t\t\n\t\t\t// Use the higher of the two values\n\t\t\tif (roundRowDownProportion > roundColumnDownProportion)\n\t\t\t{\n\t\t\t\tscaleChange = roundRowDownProportion;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tscaleChange = roundColumnDownProportion;\n\t\t\t}\n\n\t\t\tnumRowPages = numRowPages * scaleChange;\n\t\t\tnumColumnPages = numColumnPages * scaleChange;\n\t\t\tcurrentTotalPages = Math.ceil(numRowPages) * Math.ceil(numColumnPages);\n\t\t\t\n\t\t\tnumLoops++;\n\t\t\t\n\t\t\tif (numLoops > 10)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Work out the scale from the number of row pages required\n\t\t// The column pages will give the same value\n\t\tvar posterWidth = availablePageWidth * numRowPages;\n\t\tscale = posterWidth / graphWidth;\n\t\t\n\t\t// Allow for rounding errors\n\t\treturn scale * 0.99999;\n\t},\n\t\n\t/**\n\t * Function: show\n\t * \n\t * Copies the styles and the markup from the graph's container into the\n\t * given document and removes all cursor styles. The document is returned.\n\t * \n\t * This function should be called from within the document with the graph.\n\t * If you experience problems with missing stylesheets in IE then try adding\n\t * the domain to the trusted sites.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to be copied.\n\t * doc - Document where the new graph is created.\n\t * x0 - X-coordinate of the graph view origin. Default is 0.\n\t * y0 - Y-coordinate of the graph view origin. Default is 0.\n\t * w - Optional width of the graph view.\n\t * h - Optional height of the graph view.\n\t */\n\tshow: function(graph, doc, x0, y0, w, h)\n\t{\n\t\tx0 = (x0 != null) ? x0 : 0;\n\t\ty0 = (y0 != null) ? y0 : 0;\n\t\t\n\t\tif (doc == null)\n\t\t{\n\t\t\tvar wnd = window.open();\n\t\t\tdoc = wnd.document;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.open();\n\t\t}\n\n\t\t// Workaround for missing print output in IE9 standards\n\t\tif (document.documentMode == 9)\n\t\t{\n\t\t\tdoc.writeln('<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\"><![endif]-->');\n\t\t}\n\t\t\n\t\tvar bounds = graph.getGraphBounds();\n\t\tvar dx = Math.ceil(x0 - bounds.x);\n\t\tvar dy = Math.ceil(y0 - bounds.y);\n\t\t\n\t\tif (w == null)\n\t\t{\n\t\t\tw = Math.ceil(bounds.width + x0) + Math.ceil(Math.ceil(bounds.x) - bounds.x);\n\t\t}\n\t\t\n\t\tif (h == null)\n\t\t{\n\t\t\th = Math.ceil(bounds.height + y0) + Math.ceil(Math.ceil(bounds.y) - bounds.y);\n\t\t}\n\t\t\n\t\t// Needs a special way of creating the page so that no click is required\n\t\t// to refresh the contents after the external CSS styles have been loaded.\n\t\t// To avoid a click or programmatic refresh, the styleSheets[].cssText\n\t\t// property is copied over from the original document.\n\t\tif (mxClient.IS_IE || document.documentMode == 11)\n\t\t{\n\t\t\tvar html = '<html><head>';\n\n\t\t\tvar base = document.getElementsByTagName('base');\n\t\t\t\n\t\t\tfor (var i = 0; i < base.length; i++)\n\t\t\t{\n\t\t\t\thtml += base[i].outerHTML;\n\t\t\t}\n\n\t\t\thtml += '<style>';\n\n\t\t\t// Copies the stylesheets without having to load them again\n\t\t\tfor (var i = 0; i < document.styleSheets.length; i++)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\thtml += document.styleSheets[i].cssText;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// ignore security exception\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</style></head><body style=\"margin:0px;\">';\n\t\t\t\n\t\t\t// Copies the contents of the graph container\n\t\t\thtml += '<div style=\"position:absolute;overflow:hidden;width:' + w + 'px;height:' + h + 'px;\"><div style=\"position:relative;left:' + dx + 'px;top:' + dy + 'px;\">';\n\t\t\thtml += graph.container.innerHTML;\n\t\t\thtml += '</div></div></body><html>';\n\n\t\t\tdoc.writeln(html);\n\t\t\tdoc.close();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.writeln('<html><head>');\n\t\t\t\n\t\t\tvar base = document.getElementsByTagName('base');\n\t\t\t\n\t\t\tfor (var i = 0; i < base.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(base[i]));\n\t\t\t}\n\t\t\t\n\t\t\tvar links = document.getElementsByTagName('link');\n\t\t\t\n\t\t\tfor (var i = 0; i < links.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(links[i]));\n\t\t\t}\n\t\n\t\t\tvar styles = document.getElementsByTagName('style');\n\t\t\t\n\t\t\tfor (var i = 0; i < styles.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(styles[i]));\n\t\t\t}\n\n\t\t\tdoc.writeln('</head><body style=\"margin:0px;\"></body></html>');\n\t\t\tdoc.close();\n\n\t\t\tvar outer = doc.createElement('div');\n\t\t\touter.position = 'absolute';\n\t\t\touter.overflow = 'hidden';\n\t\t\touter.style.width = w + 'px';\n\t\t\touter.style.height = h + 'px';\n\n\t\t\t// Required for HTML labels if foreignObjects are disabled\n\t\t\tvar div = doc.createElement('div');\n\t\t\tdiv.style.position = 'absolute';\n\t\t\tdiv.style.left = dx + 'px';\n\t\t\tdiv.style.top = dy + 'px';\n\n\t\t\tvar node = graph.container.firstChild;\n\t\t\tvar svg = null;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tvar clone = node.cloneNode(true);\n\t\t\t\t\n\t\t\t\tif (node == graph.view.drawPane.ownerSVGElement)\n\t\t\t\t{\n\t\t\t\t\touter.appendChild(clone);\n\t\t\t\t\tsvg = clone;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdiv.appendChild(clone);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\n\t\t\tdoc.body.appendChild(outer);\n\t\t\t\n\t\t\tif (div.firstChild != null)\n\t\t\t{\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tif (svg != null)\n\t\t\t{\n\t\t\t\tsvg.style.minWidth = '';\n\t\t\t\tsvg.style.minHeight = '';\n\t\t\t\tsvg.firstChild.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t}\n\t\t}\n\t\t\n\t\tmxUtils.removeCursors(doc.body);\n\t\n\t\treturn doc;\n\t},\n\t\n\t/**\n\t * Function: printScreen\n\t * \n\t * Prints the specified graph using a new window and the built-in print\n\t * dialog.\n\t * \n\t * This function should be called from within the document with the graph.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to be printed.\n\t */\n\tprintScreen: function(graph)\n\t{\n\t\tvar wnd = window.open();\n\t\tvar bounds = graph.getGraphBounds();\n\t\tmxUtils.show(graph, wnd.document);\n\t\t\n\t\tvar print = function()\n\t\t{\n\t\t\twnd.focus();\n\t\t\twnd.print();\n\t\t\twnd.close();\n\t\t};\n\t\t\n\t\t// Workaround for Google Chrome which needs a bit of a\n\t\t// delay in order to render the SVG contents\n\t\tif (mxClient.IS_GC)\n\t\t{\n\t\t\twnd.setTimeout(print, 500);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint();\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: popup\n\t * \n\t * Shows the specified text content in a new <mxWindow> or a new browser\n\t * window if isInternalWindow is false.\n\t * \n\t * Parameters:\n\t * \n\t * content - String that specifies the text to be displayed.\n\t * isInternalWindow - Optional boolean indicating if an mxWindow should be\n\t * used instead of a new browser window. Default is false.\n\t */\n\tpopup: function(content, isInternalWindow)\n\t{\n\t   \tif (isInternalWindow)\n\t   \t{\n\t\t\tvar div = document.createElement('div');\n\t\t\t\n\t\t\tdiv.style.overflow = 'scroll';\n\t\t\tdiv.style.width = '636px';\n\t\t\tdiv.style.height = '460px';\n\t\t\t\n\t\t\tvar pre = document.createElement('pre');\n\t\t    pre.innerHTML = mxUtils.htmlEntities(content, false).\n\t\t    \treplace(/\\n/g,'<br>').replace(/ /g, '&nbsp;');\n\t\t\t\n\t\t\tdiv.appendChild(pre);\n\t\t\t\n\t\t\tvar w = document.body.clientWidth;\n\t\t\tvar h = Math.max(document.body.clientHeight || 0, document.documentElement.clientHeight)\n\t\t\tvar wnd = new mxWindow('Popup Window', div,\n\t\t\t\tw/2-320, h/2-240, 640, 480, false, true);\n\n\t\t\twnd.setClosable(true);\n\t\t\twnd.setVisible(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Wraps up the XML content in a textarea\n\t\t\tif (mxClient.IS_NS)\n\t\t\t{\n\t\t\t    var wnd = window.open();\n\t\t\t\twnd.document.writeln('<pre>'+mxUtils.htmlEntities(content)+'</pre');\n\t\t\t   \twnd.document.close();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t    var wnd = window.open();\n\t\t\t    var pre = wnd.document.createElement('pre');\n\t\t\t    pre.innerHTML = mxUtils.htmlEntities(content, false).\n\t\t\t    \treplace(/\\n/g,'<br>').replace(/ /g, '&nbsp;');\n\t\t\t   \twnd.document.body.appendChild(pre);\n\t\t\t}\n\t   \t}\n\t},\n\t\n\t/**\n\t * Function: alert\n\t * \n\t * Displayss the given alert in a new dialog. This implementation uses the\n\t * built-in alert function. This is used to display validation errors when\n\t * connections cannot be changed or created.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t */\n\talert: function(message)\n\t{\n\t\talert(message);\n\t},\n\t\n\t/**\n\t * Function: prompt\n\t * \n\t * Displays the given message in a prompt dialog. This implementation uses\n\t * the built-in prompt function.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t * defaultValue - Optional string specifying the default value.\n\t */\n\tprompt: function(message, defaultValue)\n\t{\n\t\treturn prompt(message, (defaultValue != null) ? defaultValue : '');\n\t},\n\t\n\t/**\n\t * Function: confirm\n\t * \n\t * Displays the given message in a confirm dialog. This implementation uses\n\t * the built-in confirm function.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t */\n\tconfirm: function(message)\n\t{\n\t\treturn confirm(message);\n\t},\n\n\t/**\n\t * Function: error\n\t * \n\t * Displays the given error message in a new <mxWindow> of the given width.\n\t * If close is true then an additional close button is added to the window.\n\t * The optional icon specifies the icon to be used for the window. Default\n\t * is <mxUtils.errorImage>.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t * width - Integer specifying the width of the window.\n\t * close - Optional boolean indicating whether to add a close button.\n\t * icon - Optional icon for the window decoration.\n\t */\n\terror: function(message, width, close, icon)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.style.padding = '20px';\n\n\t\tvar img = document.createElement('img');\n\t\timg.setAttribute('src', icon || mxUtils.errorImage);\n\t\timg.setAttribute('valign', 'bottom');\n\t\timg.style.verticalAlign = 'middle';\n\t\tdiv.appendChild(img);\n\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tmxUtils.write(div, message);\n\n\t\tvar w = document.body.clientWidth;\n\t\tvar h = (document.body.clientHeight || document.documentElement.clientHeight);\n\t\tvar warn = new mxWindow(mxResources.get(mxUtils.errorResource) ||\n\t\t\tmxUtils.errorResource, div, (w-width)/2, h/4, width, null,\n\t\t\tfalse, true);\n\n\t\tif (close)\n\t\t{\n\t\t\tmxUtils.br(div);\n\t\t\t\n\t\t\tvar tmp = document.createElement('p');\n\t\t\tvar button = document.createElement('button');\n\n\t\t\tif (mxClient.IS_IE)\n\t\t\t{\n\t\t\t\tbutton.style.cssText = 'float:right';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbutton.setAttribute('style', 'float:right');\n\t\t\t}\n\n\t\t\tmxEvent.addListener(button, 'click', function(evt)\n\t\t\t{\n\t\t\t\twarn.destroy();\n\t\t\t});\n\n\t\t\tmxUtils.write(button, mxResources.get(mxUtils.closeResource) ||\n\t\t\t\tmxUtils.closeResource);\n\t\t\t\n\t\t\ttmp.appendChild(button);\n\t\t\tdiv.appendChild(tmp);\n\t\t\t\n\t\t\tmxUtils.br(div);\n\t\t\t\n\t\t\twarn.setClosable(true);\n\t\t}\n\t\t\n\t\twarn.setVisible(true);\n\t\t\n\t\treturn warn;\n\t},\n\n\t/**\n\t * Function: makeDraggable\n\t * \n\t * Configures the given DOM element to act as a drag source for the\n\t * specified graph. Returns a a new <mxDragSource>. If\n\t * <mxDragSource.guideEnabled> is enabled then the x and y arguments must\n\t * be used in funct to match the preview location.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var funct = function(graph, evt, cell, x, y)\n\t * {\n\t *   if (graph.canImportCell(cell))\n\t *   {\n\t *     var parent = graph.getDefaultParent();\n\t *     var vertex = null;\n\t *     \n\t *     graph.getModel().beginUpdate();\n\t *     try\n\t *     {\n\t * \t     vertex = graph.insertVertex(parent, null, 'Hello', x, y, 80, 30);\n\t *     }\n\t *     finally\n\t *     {\n\t *       graph.getModel().endUpdate();\n\t *     }\n\t *\n\t *     graph.setSelectionCell(vertex);\n\t *   }\n\t * }\n\t * \n\t * var img = document.createElement('img');\n\t * img.setAttribute('src', 'editors/images/rectangle.gif');\n\t * img.style.position = 'absolute';\n\t * img.style.left = '0px';\n\t * img.style.top = '0px';\n\t * img.style.width = '16px';\n\t * img.style.height = '16px';\n\t * \n\t * var dragImage = img.cloneNode(true);\n\t * dragImage.style.width = '32px';\n\t * dragImage.style.height = '32px';\n\t * mxUtils.makeDraggable(img, graph, funct, dragImage);\n\t * document.body.appendChild(img);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM element to make draggable.\n\t * graphF - <mxGraph> that acts as the drop target or a function that takes a\n\t * mouse event and returns the current <mxGraph>.\n\t * funct - Function to execute on a successful drop.\n\t * dragElement - Optional DOM node to be used for the drag preview.\n\t * dx - Optional horizontal offset between the cursor and the drag\n\t * preview.\n\t * dy - Optional vertical offset between the cursor and the drag\n\t * preview.\n\t * autoscroll - Optional boolean that specifies if autoscroll should be\n\t * used. Default is mxGraph.autoscroll.\n\t * scalePreview - Optional boolean that specifies if the preview element\n\t * should be scaled according to the graph scale. If this is true, then\n\t * the offsets will also be scaled. Default is false.\n\t * highlightDropTargets - Optional boolean that specifies if dropTargets\n\t * should be highlighted. Default is true.\n\t * getDropTarget - Optional function to return the drop target for a given\n\t * location (x, y). Default is mxGraph.getCellAt.\n\t */\n\tmakeDraggable: function(element, graphF, funct, dragElement, dx, dy, autoscroll,\n\t\t\tscalePreview, highlightDropTargets, getDropTarget)\n\t{\n\t\tvar dragSource = new mxDragSource(element, funct);\n\t\tdragSource.dragOffset = new mxPoint((dx != null) ? dx : 0,\n\t\t\t(dy != null) ? dy : mxConstants.TOOLTIP_VERTICAL_OFFSET);\n\t\tdragSource.autoscroll = autoscroll;\n\t\t\n\t\t// Cannot enable this by default. This needs to be enabled in the caller\n\t\t// if the funct argument uses the new x- and y-arguments.\n\t\tdragSource.setGuidesEnabled(false);\n\t\t\n\t\tif (highlightDropTargets != null)\n\t\t{\n\t\t\tdragSource.highlightDropTargets = highlightDropTargets;\n\t\t}\n\t\t\n\t\t// Overrides function to find drop target cell\n\t\tif (getDropTarget != null)\n\t\t{\n\t\t\tdragSource.getDropTarget = getDropTarget;\n\t\t}\n\t\t\n\t\t// Overrides function to get current graph\n\t\tdragSource.getGraphForEvent = function(evt)\n\t\t{\n\t\t\treturn (typeof(graphF) == 'function') ? graphF(evt) : graphF;\n\t\t};\n\t\t\n\t\t// Translates switches into dragSource customizations\n\t\tif (dragElement != null)\n\t\t{\n\t\t\tdragSource.createDragElement = function()\n\t\t\t{\n\t\t\t\treturn dragElement.cloneNode(true);\n\t\t\t};\n\t\t\t\n\t\t\tif (scalePreview)\n\t\t\t{\n\t\t\t\tdragSource.createPreviewElement = function(graph)\n\t\t\t\t{\n\t\t\t\t\tvar elt = dragElement.cloneNode(true);\n\n\t\t\t\t\tvar w = parseInt(elt.style.width);\n\t\t\t\t\tvar h = parseInt(elt.style.height);\n\t\t\t\t\telt.style.width = Math.round(w * graph.view.scale) + 'px';\n\t\t\t\t\telt.style.height = Math.round(h * graph.view.scale) + 'px';\n\t\t\t\t\t\n\t\t\t\t\treturn elt;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn dragSource;\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n var mxConstants =\n {\n\t/**\n\t * Class: mxConstants\n\t * \n\t * Defines various global constants.\n\t * \n\t * Variable: DEFAULT_HOTSPOT\n\t * \n\t * Defines the portion of the cell which is to be used as a connectable\n\t * region. Default is 0.3. Possible values are 0 < x <= 1. \n\t */\n\tDEFAULT_HOTSPOT: 0.3,\n\n\t/**\n\t * Variable: MIN_HOTSPOT_SIZE\n\t * \n\t * Defines the minimum size in pixels of the portion of the cell which is\n\t * to be used as a connectable region. Default is 8.\n\t */\n\tMIN_HOTSPOT_SIZE: 8,\n\n\t/**\n\t * Variable: MAX_HOTSPOT_SIZE\n\t * \n\t * Defines the maximum size in pixels of the portion of the cell which is\n\t * to be used as a connectable region. Use 0 for no maximum. Default is 0.\n\t */\n\tMAX_HOTSPOT_SIZE: 0,\n\n\t/**\n\t * Variable: RENDERING_HINT_EXACT\n\t * \n\t * Defines the exact rendering hint.\n\t */\n\tRENDERING_HINT_EXACT: 'exact',\n\n\t/**\n\t * Variable: RENDERING_HINT_FASTER\n\t * \n\t * Defines the faster rendering hint.\n\t */\n\tRENDERING_HINT_FASTER: 'faster',\n\n\t/**\n\t * Variable: RENDERING_HINT_FASTEST\n\t * \n\t * Defines the fastest rendering hint.\n\t */\n\tRENDERING_HINT_FASTEST: 'fastest',\n\n\t/**\n\t * Variable: DIALECT_SVG\n\t * \n\t * Defines the SVG display dialect name.\n\t */\n\tDIALECT_SVG: 'svg',\n\n\t/**\n\t * Variable: DIALECT_VML\n\t * \n\t * Defines the VML display dialect name.\n\t */\n\tDIALECT_VML: 'vml',\n\n\t/**\n\t * Variable: DIALECT_MIXEDHTML\n\t * \n\t * Defines the mixed HTML display dialect name.\n\t */\n\tDIALECT_MIXEDHTML: 'mixedHtml',\n\n\t/**\n\t * Variable: DIALECT_PREFERHTML\n\t * \n\t * Defines the preferred HTML display dialect name.\n\t */\n\tDIALECT_PREFERHTML: 'preferHtml',\n\n\t/**\n\t * Variable: DIALECT_STRICTHTML\n\t * \n\t * Defines the strict HTML display dialect.\n\t */\n\tDIALECT_STRICTHTML: 'strictHtml',\n\n\t/**\n\t * Variable: NS_SVG\n\t * \n\t * Defines the SVG namespace.\n\t */\n\tNS_SVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * Variable: NS_XHTML\n\t * \n\t * Defines the XHTML namespace.\n\t */\n\tNS_XHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Variable: NS_XLINK\n\t * \n\t * Defines the XLink namespace.\n\t */\n\tNS_XLINK: 'http://www.w3.org/1999/xlink',\n\n\t/**\n\t * Variable: SHADOWCOLOR\n\t * \n\t * Defines the color to be used to draw shadows in shapes and windows.\n\t * Default is gray.\n\t */\n\tSHADOWCOLOR: 'gray',\n\n\t/**\n\t * Variable: VML_SHADOWCOLOR\n\t * \n\t * Used for shadow color in filters where transparency is not supported\n\t * (Microsoft Internet Explorer). Default is gray.\n\t */\n\tVML_SHADOWCOLOR: 'gray',\n\n\t/**\n\t * Variable: SHADOW_OFFSET_X\n\t * \n\t * Specifies the x-offset of the shadow. Default is 2.\n\t */\n\tSHADOW_OFFSET_X: 2,\n\n\t/**\n\t * Variable: SHADOW_OFFSET_Y\n\t * \n\t * Specifies the y-offset of the shadow. Default is 3.\n\t */\n\tSHADOW_OFFSET_Y: 3,\n\t\n\t/**\n\t * Variable: SHADOW_OPACITY\n\t * \n\t * Defines the opacity for shadows. Default is 1.\n\t */\n\tSHADOW_OPACITY: 1,\n \n\t/**\n\t * Variable: NODETYPE_ELEMENT\n\t * \n\t * DOM node of type ELEMENT.\n\t */\n\tNODETYPE_ELEMENT: 1,\n\n\t/**\n\t * Variable: NODETYPE_ATTRIBUTE\n\t * \n\t * DOM node of type ATTRIBUTE.\n\t */\n\tNODETYPE_ATTRIBUTE: 2,\n\n\t/**\n\t * Variable: NODETYPE_TEXT\n\t * \n\t * DOM node of type TEXT.\n\t */\n\tNODETYPE_TEXT: 3,\n\n\t/**\n\t * Variable: NODETYPE_CDATA\n\t * \n\t * DOM node of type CDATA.\n\t */\n\tNODETYPE_CDATA: 4,\n\t\n\t/**\n\t * Variable: NODETYPE_ENTITY_REFERENCE\n\t * \n\t * DOM node of type ENTITY_REFERENCE.\n\t */\n\tNODETYPE_ENTITY_REFERENCE: 5,\n\n\t/**\n\t * Variable: NODETYPE_ENTITY\n\t * \n\t * DOM node of type ENTITY.\n\t */\n\tNODETYPE_ENTITY: 6,\n\n\t/**\n\t * Variable: NODETYPE_PROCESSING_INSTRUCTION\n\t * \n\t * DOM node of type PROCESSING_INSTRUCTION.\n\t */\n\tNODETYPE_PROCESSING_INSTRUCTION: 7,\n\n\t/**\n\t * Variable: NODETYPE_COMMENT\n\t * \n\t * DOM node of type COMMENT.\n\t */\n\tNODETYPE_COMMENT: 8,\n\t\t\n\t/**\n\t * Variable: NODETYPE_DOCUMENT\n\t * \n\t * DOM node of type DOCUMENT.\n\t */\n\tNODETYPE_DOCUMENT: 9,\n\n\t/**\n\t * Variable: NODETYPE_DOCUMENTTYPE\n\t * \n\t * DOM node of type DOCUMENTTYPE.\n\t */\n\tNODETYPE_DOCUMENTTYPE: 10,\n\n\t/**\n\t * Variable: NODETYPE_DOCUMENT_FRAGMENT\n\t * \n\t * DOM node of type DOCUMENT_FRAGMENT.\n\t */\n\tNODETYPE_DOCUMENT_FRAGMENT: 11,\n\n\t/**\n\t * Variable: NODETYPE_NOTATION\n\t * \n\t * DOM node of type NOTATION.\n\t */\n\tNODETYPE_NOTATION: 12,\n\t\n\t/**\n\t * Variable: TOOLTIP_VERTICAL_OFFSET\n\t * \n\t * Defines the vertical offset for the tooltip.\n\t * Default is 16.\n\t */\n\tTOOLTIP_VERTICAL_OFFSET: 16,\n\n\t/**\n\t * Variable: DEFAULT_VALID_COLOR\n\t * \n\t * Specifies the default valid color. Default is #0000FF.\n\t */\n\tDEFAULT_VALID_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: DEFAULT_INVALID_COLOR\n\t * \n\t * Specifies the default invalid color. Default is #FF0000.\n\t */\n\tDEFAULT_INVALID_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: OUTLINE_HIGHLIGHT_COLOR\n\t * \n\t * Specifies the default highlight color for shape outlines.\n\t * Default is #0000FF. This is used in <mxEdgeHandler>.\n\t */\n\tOUTLINE_HIGHLIGHT_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: OUTLINE_HIGHLIGHT_COLOR\n\t * \n\t * Defines the strokewidth to be used for shape outlines.\n\t * Default is 5. This is used in <mxEdgeHandler>.\n\t */\n\tOUTLINE_HIGHLIGHT_STROKEWIDTH: 5,\n\n\t/**\n\t * Variable: HIGHLIGHT_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the highlights.\n\t * Default is 3.\n\t */\n\tHIGHLIGHT_STROKEWIDTH: 3,\n\n\t/**\n\t * Variable: CONSTRAINT_HIGHLIGHT_SIZE\n\t * \n\t * Size of the constraint highlight (in px). Default is 2.\n\t */\n\tHIGHLIGHT_SIZE: 2,\n\t\n\t/**\n\t * Variable: HIGHLIGHT_OPACITY\n\t * \n\t * Opacity (in %) used for the highlights (including outline).\n\t * Default is 100.\n\t */\n\tHIGHLIGHT_OPACITY: 100,\n\t\n\t/**\n\t * Variable: CURSOR_MOVABLE_VERTEX\n\t * \n\t * Defines the cursor for a movable vertex. Default is 'move'.\n\t */\n\tCURSOR_MOVABLE_VERTEX: 'move',\n\t\n\t/**\n\t * Variable: CURSOR_MOVABLE_EDGE\n\t * \n\t * Defines the cursor for a movable edge. Default is 'move'.\n\t */\n\tCURSOR_MOVABLE_EDGE: 'move',\n\t\n\t/**\n\t * Variable: CURSOR_LABEL_HANDLE\n\t * \n\t * Defines the cursor for a movable label. Default is 'default'.\n\t */\n\tCURSOR_LABEL_HANDLE: 'default',\n\t\n\t/**\n\t * Variable: CURSOR_TERMINAL_HANDLE\n\t * \n\t * Defines the cursor for a terminal handle. Default is 'pointer'.\n\t */\n\tCURSOR_TERMINAL_HANDLE: 'pointer',\n\t\n\t/**\n\t * Variable: CURSOR_BEND_HANDLE\n\t * \n\t * Defines the cursor for a movable bend. Default is 'crosshair'.\n\t */\n\tCURSOR_BEND_HANDLE: 'crosshair',\n\n\t/**\n\t * Variable: CURSOR_VIRTUAL_BEND_HANDLE\n\t * \n\t * Defines the cursor for a movable bend. Default is 'crosshair'.\n\t */\n\tCURSOR_VIRTUAL_BEND_HANDLE: 'crosshair',\n\t\n\t/**\n\t * Variable: CURSOR_CONNECT\n\t * \n\t * Defines the cursor for a connectable state. Default is 'pointer'.\n\t */\n\tCURSOR_CONNECT: 'pointer',\n\n\t/**\n\t * Variable: HIGHLIGHT_COLOR\n\t * \n\t * Defines the color to be used for the cell highlighting.\n\t * Use 'none' for no color. Default is #00FF00.\n\t */\n\tHIGHLIGHT_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: TARGET_HIGHLIGHT_COLOR\n\t * \n\t * Defines the color to be used for highlighting a target cell for a new\n\t * or changed connection. Note that this may be either a source or\n\t * target terminal in the graph. Use 'none' for no color.\n\t * Default is #0000FF.\n\t */\n\tCONNECT_TARGET_COLOR: '#0000FF',\n\n\t/**\n\t * Variable: INVALID_CONNECT_TARGET_COLOR\n\t * \n\t * Defines the color to be used for highlighting a invalid target cells\n\t * for a new or changed connections. Note that this may be either a source\n\t * or target terminal in the graph. Use 'none' for no color. Default is\n\t * #FF0000.\n\t */\n\tINVALID_CONNECT_TARGET_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: DROP_TARGET_COLOR\n\t * \n\t * Defines the color to be used for the highlighting target parent cells\n\t * (for drag and drop). Use 'none' for no color. Default is #0000FF.\n\t */\n\tDROP_TARGET_COLOR: '#0000FF',\n\n\t/**\n\t * Variable: VALID_COLOR\n\t * \n\t * Defines the color to be used for the coloring valid connection\n\t * previews. Use 'none' for no color. Default is #FF0000.\n\t */\n\tVALID_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: INVALID_COLOR\n\t * \n\t * Defines the color to be used for the coloring invalid connection\n\t * previews. Use 'none' for no color. Default is #FF0000.\n\t */\n\tINVALID_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: EDGE_SELECTION_COLOR\n\t * \n\t * Defines the color to be used for the selection border of edges. Use\n\t * 'none' for no color. Default is #00FF00.\n\t */\n\tEDGE_SELECTION_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: VERTEX_SELECTION_COLOR\n\t * \n\t * Defines the color to be used for the selection border of vertices. Use\n\t * 'none' for no color. Default is #00FF00.\n\t */\n\tVERTEX_SELECTION_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: VERTEX_SELECTION_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for vertex selections.\n\t * Default is 1.\n\t */\n\tVERTEX_SELECTION_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: EDGE_SELECTION_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for edge selections.\n\t * Default is 1.\n\t */\n\tEDGE_SELECTION_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: SELECTION_DASHED\n\t * \n\t * Defines the dashed state to be used for the vertex selection\n\t * border. Default is true.\n\t */\n\tVERTEX_SELECTION_DASHED: true,\n\n\t/**\n\t * Variable: SELECTION_DASHED\n\t * \n\t * Defines the dashed state to be used for the edge selection\n\t * border. Default is true.\n\t */\n\tEDGE_SELECTION_DASHED: true,\n\n\t/**\n\t * Variable: GUIDE_COLOR\n\t * \n\t * Defines the color to be used for the guidelines in mxGraphHandler.\n\t * Default is #FF0000.\n\t */\n\tGUIDE_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: GUIDE_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the guidelines in mxGraphHandler.\n\t * Default is 1.\n\t */\n\tGUIDE_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: OUTLINE_COLOR\n\t * \n\t * Defines the color to be used for the outline rectangle\n\t * border.  Use 'none' for no color. Default is #0099FF.\n\t */\n\tOUTLINE_COLOR: '#0099FF',\n\n\t/**\n\t * Variable: OUTLINE_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the outline rectangle\n\t * stroke width. Default is 3.\n\t */\n\tOUTLINE_STROKEWIDTH: (mxClient.IS_IE) ? 2 : 3,\n\n\t/**\n\t * Variable: HANDLE_SIZE\n\t * \n\t * Defines the default size for handles. Default is 6.\n\t */\n\tHANDLE_SIZE: 6,\n\n\t/**\n\t * Variable: LABEL_HANDLE_SIZE\n\t * \n\t * Defines the default size for label handles. Default is 4.\n\t */\n\tLABEL_HANDLE_SIZE: 4,\n\n\t/**\n\t * Variable: HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the handle fill color. Use 'none' for\n\t * no color. Default is #00FF00 (green).\n\t */\n\tHANDLE_FILLCOLOR: '#00FF00',\n\n\t/**\n\t * Variable: HANDLE_STROKECOLOR\n\t * \n\t * Defines the color to be used for the handle stroke color. Use 'none' for\n\t * no color. Default is black.\n\t */\n\tHANDLE_STROKECOLOR: 'black',\n\n\t/**\n\t * Variable: LABEL_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the label handle fill color. Use 'none'\n\t * for no color. Default is yellow.\n\t */\n\tLABEL_HANDLE_FILLCOLOR: 'yellow',\n\n\t/**\n\t * Variable: CONNECT_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the connect handle fill color. Use\n\t * 'none' for no color. Default is #0000FF (blue).\n\t */\n\tCONNECT_HANDLE_FILLCOLOR: '#0000FF',\n\n\t/**\n\t * Variable: LOCKED_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the locked handle fill color. Use\n\t * 'none' for no color. Default is #FF0000 (red).\n\t */\n\tLOCKED_HANDLE_FILLCOLOR: '#FF0000',\n\n\t/**\n\t * Variable: OUTLINE_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the outline sizer fill color. Use\n\t * 'none' for no color. Default is #00FFFF.\n\t */\n\tOUTLINE_HANDLE_FILLCOLOR: '#00FFFF',\n\n\t/**\n\t * Variable: OUTLINE_HANDLE_STROKECOLOR\n\t * \n\t * Defines the color to be used for the outline sizer stroke color. Use\n\t * 'none' for no color. Default is #0033FF.\n\t */\n\tOUTLINE_HANDLE_STROKECOLOR: '#0033FF',\n\n\t/**\n\t * Variable: DEFAULT_FONTFAMILY\n\t * \n\t * Defines the default family for all fonts. Default is Arial,Helvetica.\n\t */\n\tDEFAULT_FONTFAMILY: 'Arial,Helvetica',\n\n\t/**\n\t * Variable: DEFAULT_FONTSIZE\n\t * \n\t * Defines the default size (in px). Default is 11.\n\t */\n\tDEFAULT_FONTSIZE: 11,\n\n\t/**\n\t * Variable: DEFAULT_TEXT_DIRECTION\n\t * \n\t * Defines the default value for the <STYLE_TEXT_DIRECTION> if no value is\n\t * defined for it in the style. Default value is an empty string which means\n\t * the default system setting is used and no direction is set.\n\t */\n\tDEFAULT_TEXT_DIRECTION: '',\n\n\t/**\n\t * Variable: LINE_HEIGHT\n\t * \n\t * Defines the default line height for text labels. Default is 1.2.\n\t */\n\tLINE_HEIGHT: 1.2,\n\n\t/**\n\t * Variable: WORD_WRAP\n\t * \n\t * Defines the CSS value for the word-wrap property. Default is \"normal\".\n\t * Change this to \"break-word\" to allow long words to be able to be broken\n\t * and wrap onto the next line.\n\t */\n\tWORD_WRAP: 'normal',\n\n\t/**\n\t * Variable: ABSOLUTE_LINE_HEIGHT\n\t * \n\t * Specifies if absolute line heights should be used (px) in CSS. Default\n\t * is false. Set this to true for backwards compatibility.\n\t */\n\tABSOLUTE_LINE_HEIGHT: false,\n\n\t/**\n\t * Variable: DEFAULT_FONTSTYLE\n\t * \n\t * Defines the default style for all fonts. Default is 0. This can be set\n\t * to any combination of font styles as follows.\n\t * \n\t * (code)\n\t * mxConstants.DEFAULT_FONTSTYLE = mxConstants.FONT_BOLD | mxConstants.FONT_ITALIC;\n\t * (end)\n\t */\n\tDEFAULT_FONTSTYLE: 0,\n\n\t/**\n\t * Variable: DEFAULT_STARTSIZE\n\t * \n\t * Defines the default start size for swimlanes. Default is 40.\n\t */\n\tDEFAULT_STARTSIZE: 40,\n\n\t/**\n\t * Variable: DEFAULT_MARKERSIZE\n\t * \n\t * Defines the default size for all markers. Default is 6.\n\t */\n\tDEFAULT_MARKERSIZE: 6,\n\n\t/**\n\t * Variable: DEFAULT_IMAGESIZE\n\t * \n\t * Defines the default width and height for images used in the\n\t * label shape. Default is 24.\n\t */\n\tDEFAULT_IMAGESIZE: 24,\n\n\t/**\n\t * Variable: ENTITY_SEGMENT\n\t * \n\t * Defines the length of the horizontal segment of an Entity Relation.\n\t * This can be overridden using <mxConstants.STYLE_SEGMENT> style.\n\t * Default is 30.\n\t */\n\tENTITY_SEGMENT: 30,\n\n\t/**\n\t * Variable: RECTANGLE_ROUNDING_FACTOR\n\t * \n\t * Defines the rounding factor for rounded rectangles in percent between\n\t * 0 and 1. Values should be smaller than 0.5. Default is 0.15.\n\t */\n\tRECTANGLE_ROUNDING_FACTOR: 0.15,\n\n\t/**\n\t * Variable: LINE_ARCSIZE\n\t * \n\t * Defines the size of the arcs for rounded edges. Default is 20.\n\t */\n\tLINE_ARCSIZE: 20,\n\n\t/**\n\t * Variable: ARROW_SPACING\n\t * \n\t * Defines the spacing between the arrow shape and its terminals. Default is 0.\n\t */\n\tARROW_SPACING: 0,\n\n\t/**\n\t * Variable: ARROW_WIDTH\n\t * \n\t * Defines the width of the arrow shape. Default is 30.\n\t */\n\tARROW_WIDTH: 30,\n\n\t/**\n\t * Variable: ARROW_SIZE\n\t * \n\t * Defines the size of the arrowhead in the arrow shape. Default is 30.\n\t */\n\tARROW_SIZE: 30,\n\n\t/**\n\t * Variable: PAGE_FORMAT_A4_PORTRAIT\n\t * \n\t * Defines the rectangle for the A4 portrait page format. The dimensions\n\t * of this page format are 826x1169 pixels.\n\t */\n\tPAGE_FORMAT_A4_PORTRAIT: new mxRectangle(0, 0, 827, 1169),\n\n\t/**\n\t * Variable: PAGE_FORMAT_A4_PORTRAIT\n\t * \n\t * Defines the rectangle for the A4 portrait page format. The dimensions\n\t * of this page format are 826x1169 pixels.\n\t */\n\tPAGE_FORMAT_A4_LANDSCAPE: new mxRectangle(0, 0, 1169, 827),\n\n\t/**\n\t * Variable: PAGE_FORMAT_LETTER_PORTRAIT\n\t * \n\t * Defines the rectangle for the Letter portrait page format. The\n\t * dimensions of this page format are 850x1100 pixels.\n\t */\n\tPAGE_FORMAT_LETTER_PORTRAIT: new mxRectangle(0, 0, 850, 1100),\n\n\t/**\n\t * Variable: PAGE_FORMAT_LETTER_PORTRAIT\n\t * \n\t * Defines the rectangle for the Letter portrait page format. The dimensions\n\t * of this page format are 850x1100 pixels.\n\t */\n\tPAGE_FORMAT_LETTER_LANDSCAPE: new mxRectangle(0, 0, 1100, 850),\n\n\t/**\n\t * Variable: NONE\n\t * \n\t * Defines the value for none. Default is \"none\".\n\t */\n\tNONE: 'none',\n\n\t/**\n\t * Variable: STYLE_PERIMETER\n\t * \n\t * Defines the key for the perimeter style. This is a function that defines\n\t * the perimeter around a particular shape. Possible values are the\n\t * functions defined in <mxPerimeter>. Alternatively, the constants in this\n\t * class that start with \"PERIMETER_\" may be used to access\n\t * perimeter styles in <mxStyleRegistry>. Value is \"perimeter\".\n\t */\n\tSTYLE_PERIMETER: 'perimeter',\n\t\n\t/**\n\t * Variable: STYLE_SOURCE_PORT\n\t * \n\t * Defines the ID of the cell that should be used for computing the\n\t * perimeter point of the source for an edge. This allows for graphically\n\t * connecting to a cell while keeping the actual terminal of the edge.\n\t * Value is \"sourcePort\".\n\t */\n\tSTYLE_SOURCE_PORT: 'sourcePort',\n\t\n\t/**\n\t * Variable: STYLE_TARGET_PORT\n\t * \n\t * Defines the ID of the cell that should be used for computing the\n\t * perimeter point of the target for an edge. This allows for graphically\n\t * connecting to a cell while keeping the actual terminal of the edge.\n\t * Value is \"targetPort\".\n\t */\n\tSTYLE_TARGET_PORT: 'targetPort',\n\n\t/**\n\t * Variable: STYLE_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to cells in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, \n\t * DIRECTION_EAST\" and \"DIRECTION_WEST\". Value is\n\t * \"portConstraint\".\n\t */\n\tSTYLE_PORT_CONSTRAINT: 'portConstraint',\n\n\t/**\n\t * Variable: STYLE_PORT_CONSTRAINT_ROTATION\n\t * \n\t * Define whether port constraint directions are rotated with vertex\n\t * rotation. 0 (default) causes port constraints to remain absolute, \n\t * relative to the graph, 1 causes the constraints to rotate with\n\t * the vertex. Value is \"portConstraintRotation\".\n\t */\n\tSTYLE_PORT_CONSTRAINT_ROTATION: 'portConstraintRotation',\n\n\t/**\n\t * Variable: STYLE_SOURCE_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to sources in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, DIRECTION_EAST\"\n\t * and \"DIRECTION_WEST\". Value is \"sourcePortConstraint\".\n\t */\n\tSTYLE_SOURCE_PORT_CONSTRAINT: 'sourcePortConstraint',\n\n\t/**\n\t * Variable: STYLE_TARGET_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to targets in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, DIRECTION_EAST\"\n\t * and \"DIRECTION_WEST\". Value is \"targetPortConstraint\".\n\t */\n\tSTYLE_TARGET_PORT_CONSTRAINT: 'targetPortConstraint',\n\n\t/**\n\t * Variable: STYLE_OPACITY\n\t * \n\t * Defines the key for the opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"opacity\".\n\t */\n\tSTYLE_OPACITY: 'opacity',\n\n\t/**\n\t * Variable: STYLE_FILL_OPACITY\n\t * \n\t * Defines the key for the fill opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"fillOpacity\".\n\t */\n\tSTYLE_FILL_OPACITY: 'fillOpacity',\n\n\t/**\n\t * Variable: STYLE_STROKE_OPACITY\n\t * \n\t * Defines the key for the stroke opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"strokeOpacity\".\n\t */\n\tSTYLE_STROKE_OPACITY: 'strokeOpacity',\n\n\t/**\n\t * Variable: STYLE_TEXT_OPACITY\n\t * \n\t * Defines the key for the text opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"textOpacity\".\n\t */\n\tSTYLE_TEXT_OPACITY: 'textOpacity',\n\n\t/**\n\t * Variable: STYLE_TEXT_DIRECTION\n\t * \n\t * Defines the key for the text direction style. Possible values are\n\t * \"TEXT_DIRECTION_DEFAULT, TEXT_DIRECTION_AUTO, TEXT_DIRECTION_LTR\"\n\t * and \"TEXT_DIRECTION_RTL\". Value is \"textDirection\".\n\t * The default value for the style is defined in <DEFAULT_TEXT_DIRECTION>.\n\t * It is used is no value is defined for this key in a given style. This is\n\t * an experimental style that is currently ignored in the backends.\n\t */\n\tSTYLE_TEXT_DIRECTION: 'textDirection',\n\n\t/**\n\t * Variable: STYLE_OVERFLOW\n\t * \n\t * Defines the key for the overflow style. Possible values are 'visible',\n\t * 'hidden', 'fill' and 'width'. The default value is 'visible'. This value\n\t * specifies how overlapping vertex labels are handled. A value of\n\t * 'visible' will show the complete label. A value of 'hidden' will clip\n\t * the label so that it does not overlap the vertex bounds. A value of\n\t * 'fill' will use the vertex bounds and a value of 'width' will use the\n\t * the vertex width for the label. See <mxGraph.isLabelClipped>. Note that\n\t * the vertical alignment is ignored for overflow fill and for horizontal\n\t * alignment, left should be used to avoid pixel offsets in Internet Explorer\n\t * 11 and earlier or if foreignObjects are disabled. Value is \"overflow\".\n\t */\n\tSTYLE_OVERFLOW: 'overflow',\n\n\t/**\n\t * Variable: STYLE_ORTHOGONAL\n\t * \n\t * Defines if the connection points on either end of the edge should be\n\t * computed so that the edge is vertical or horizontal if possible and\n\t * if the point is not at a fixed location. Default is false. This is\n\t * used in <mxGraph.isOrthogonal>, which also returns true if the edgeStyle\n\t * of the edge is an elbow or entity. Value is \"orthogonal\".\n\t */\n\tSTYLE_ORTHOGONAL: 'orthogonal',\n\n\t/**\n\t * Variable: STYLE_EXIT_X\n\t * \n\t * Defines the key for the horizontal relative coordinate connection point\n\t * of an edge with its source terminal. Value is \"exitX\".\n\t */\n\tSTYLE_EXIT_X: 'exitX',\n\n\t/**\n\t * Variable: STYLE_EXIT_Y\n\t * \n\t * Defines the key for the vertical relative coordinate connection point\n\t * of an edge with its source terminal. Value is \"exitY\".\n\t */\n\tSTYLE_EXIT_Y: 'exitY',\n\n\t\n\t/**\n\t* Variable: STYLE_EXIT_DX\n\t* \n\t* Defines the key for the horizontal offset of the connection point\n\t* of an edge with its source terminal. Value is \"exitDx\".\n\t*/\n\tSTYLE_EXIT_DX: 'exitDx',\n\n\t/**\n\t* Variable: STYLE_EXIT_DY\n\t* \n\t* Defines the key for the vertical offset of the connection point\n\t* of an edge with its source terminal. Value is \"exitDy\".\n\t*/\n\tSTYLE_EXIT_DY: 'exitDy',\n\t\n\t/**\n\t * Variable: STYLE_EXIT_PERIMETER\n\t * \n\t * Defines if the perimeter should be used to find the exact entry point\n\t * along the perimeter of the source. Possible values are 0 (false) and\n\t * 1 (true). Default is 1 (true). Value is \"exitPerimeter\".\n\t */\n\tSTYLE_EXIT_PERIMETER: 'exitPerimeter',\n\n\t/**\n\t * Variable: STYLE_ENTRY_X\n\t * \n\t * Defines the key for the horizontal relative coordinate connection point\n\t * of an edge with its target terminal. Value is \"entryX\".\n\t */\n\tSTYLE_ENTRY_X: 'entryX',\n\n\t/**\n\t * Variable: STYLE_ENTRY_Y\n\t * \n\t * Defines the key for the vertical relative coordinate connection point\n\t * of an edge with its target terminal. Value is \"entryY\".\n\t */\n\tSTYLE_ENTRY_Y: 'entryY',\n\n\t/**\n\t * Variable: STYLE_ENTRY_DX\n\t * \n\t* Defines the key for the horizontal offset of the connection point\n\t* of an edge with its target terminal. Value is \"entryDx\".\n\t*/\n\tSTYLE_ENTRY_DX: 'entryDx',\n\n\t/**\n\t * Variable: STYLE_ENTRY_DY\n\t * \n\t* Defines the key for the vertical offset of the connection point\n\t* of an edge with its target terminal. Value is \"entryDy\".\n\t*/\n\tSTYLE_ENTRY_DY: 'entryDy',\n\n\t/**\n\t * Variable: STYLE_ENTRY_PERIMETER\n\t * \n\t * Defines if the perimeter should be used to find the exact entry point\n\t * along the perimeter of the target. Possible values are 0 (false) and\n\t * 1 (true). Default is 1 (true). Value is \"entryPerimeter\".\n\t */\n\tSTYLE_ENTRY_PERIMETER: 'entryPerimeter',\n\n\t/**\n\t * Variable: STYLE_WHITE_SPACE\n\t * \n\t * Defines the key for the white-space style. Possible values are 'nowrap'\n\t * and 'wrap'. The default value is 'nowrap'. This value specifies how\n\t * white-space inside a HTML vertex label should be handled. A value of\n\t * 'nowrap' means the text will never wrap to the next line until a\n\t * linefeed is encountered. A value of 'wrap' means text will wrap when\n\t * necessary. This style is only used for HTML labels.\n\t * See <mxGraph.isWrapping>. Value is \"whiteSpace\".\n\t */\n\tSTYLE_WHITE_SPACE: 'whiteSpace',\n\n\t/**\n\t * Variable: STYLE_ROTATION\n\t * \n\t * Defines the key for the rotation style. The type of the value is \n\t * numeric and the possible range is 0-360. Value is \"rotation\".\n\t */\n\tSTYLE_ROTATION: 'rotation',\n\n\t/**\n\t * Variable: STYLE_FILLCOLOR\n\t * \n\t * Defines the key for the fill color. Possible values are all HTML color\n\t * names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit' or 'indicated' to use the color code of a related cell or the\n\t * indicator shape. Value is \"fillColor\".\n\t */\n\tSTYLE_FILLCOLOR: 'fillColor',\n\n\t/**\n\t * Variable: STYLE_POINTER_EVENTS\n\t * \n\t * Specifies if pointer events should be fired on transparent backgrounds.\n\t * This style is currently only supported in <mxRectangleShape>. Default\n\t * is true. Value is \"pointerEvents\". This is typically set to\n\t * false in groups where the transparent part should allow any underlying\n\t * cells to be clickable.\n\t */\n\tSTYLE_POINTER_EVENTS: 'pointerEvents',\n\n\t/**\n\t * Variable: STYLE_SWIMLANE_FILLCOLOR\n\t * \n\t * Defines the key for the fill color of the swimlane background. Possible\n\t * values are all HTML color names or HEX codes. Default is no background.\n\t * Value is \"swimlaneFillColor\".\n\t */\n\tSTYLE_SWIMLANE_FILLCOLOR: 'swimlaneFillColor',\n\n\t/**\n\t * Variable: STYLE_MARGIN\n\t * \n\t * Defines the key for the margin between the ellipses in the double ellipse shape.\n\t * Possible values are all positive numbers. Value is \"margin\".\n\t */\n\tSTYLE_MARGIN: 'margin',\n\n\t/**\n\t * Variable: STYLE_GRADIENTCOLOR\n\t * \n\t * Defines the key for the gradient color. Possible values are all HTML color\n\t * names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit' or 'indicated' to use the color code of a related cell or the\n\t * indicator shape. This is ignored if no fill color is defined. Value is\n\t * \"gradientColor\".\n\t */\n\tSTYLE_GRADIENTCOLOR: 'gradientColor',\n\n\t/**\n\t * Variable: STYLE_GRADIENT_DIRECTION\n\t * \n\t * Defines the key for the gradient direction. Possible values are\n\t * <DIRECTION_EAST>, <DIRECTION_WEST>, <DIRECTION_NORTH> and\n\t * <DIRECTION_SOUTH>. Default is <DIRECTION_SOUTH>. Generally, and by\n\t * default in mxGraph, gradient painting is done from the value of\n\t * <STYLE_FILLCOLOR> to the value of <STYLE_GRADIENTCOLOR>. Taking the\n\t * example of <DIRECTION_NORTH>, this means <STYLE_FILLCOLOR> color at the \n\t * bottom of paint pattern and <STYLE_GRADIENTCOLOR> at top, with a\n\t * gradient in-between. Value is \"gradientDirection\".\n\t */\n\tSTYLE_GRADIENT_DIRECTION: 'gradientDirection',\n\n\t/**\n\t * Variable: STYLE_STROKECOLOR\n\t * \n\t * Defines the key for the strokeColor style. Possible values are all HTML\n\t * color names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit', 'indicated' to use the color code of a related cell or the\n\t * indicator shape or 'none' for no color. Value is \"strokeColor\".\n\t */\n\tSTYLE_STROKECOLOR: 'strokeColor',\n\n\t/**\n\t * Variable: STYLE_SEPARATORCOLOR\n\t * \n\t * Defines the key for the separatorColor style. Possible values are all\n\t * HTML color names or HEX codes. This style is only used for\n\t * <SHAPE_SWIMLANE> shapes. Value is \"separatorColor\".\n\t */\n\tSTYLE_SEPARATORCOLOR: 'separatorColor',\n\n\t/**\n\t * Variable: STYLE_STROKEWIDTH\n\t * \n\t * Defines the key for the strokeWidth style. The type of the value is \n\t * numeric and the possible range is any non-negative value larger or equal\n\t * to 1. The value defines the stroke width in pixels. Note: To hide a\n\t * stroke use strokeColor none. Value is \"strokeWidth\".\n\t */\n\tSTYLE_STROKEWIDTH: 'strokeWidth',\n\n\t/**\n\t * Variable: STYLE_ALIGN\n\t * \n\t * Defines the key for the align style. Possible values are <ALIGN_LEFT>,\n\t * <ALIGN_CENTER> and <ALIGN_RIGHT>. This value defines how the lines of\n\t * the label are horizontally aligned. <ALIGN_LEFT> mean label text lines\n\t * are aligned to left of the label bounds, <ALIGN_RIGHT> to the right of\n\t * the label bounds and <ALIGN_CENTER> means the center of the text lines\n\t * are aligned in the center of the label bounds. Note this value doesn't\n\t * affect the positioning of the overall label bounds relative to the\n\t * vertex, to move the label bounds horizontally, use\n\t * <STYLE_LABEL_POSITION>. Value is \"align\".\n\t */\n\tSTYLE_ALIGN: 'align',\n\n\t/**\n\t * Variable: STYLE_VERTICAL_ALIGN\n\t * \n\t * Defines the key for the verticalAlign style. Possible values are\n\t * <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>. This value defines how\n\t * the lines of the label are vertically aligned. <ALIGN_TOP> means the\n\t * topmost label text line is aligned against the top of the label bounds,\n\t * <ALIGN_BOTTOM> means the bottom-most label text line is aligned against\n\t * the bottom of the label bounds and <ALIGN_MIDDLE> means there is equal\n\t * spacing between the topmost text label line and the top of the label\n\t * bounds and the bottom-most text label line and the bottom of the label\n\t * bounds. Note this value doesn't affect the positioning of the overall\n\t * label bounds relative to the vertex, to move the label bounds\n\t * vertically, use <STYLE_VERTICAL_LABEL_POSITION>. Value is \"verticalAlign\".\n\t */\n\tSTYLE_VERTICAL_ALIGN: 'verticalAlign',\n\n\t/**\n\t * Variable: STYLE_LABEL_WIDTH\n\t * \n\t * Defines the key for the width of the label if the label position is not\n\t * center. Value is \"labelWidth\".\n\t */\n\tSTYLE_LABEL_WIDTH: 'labelWidth',\n\n\t/**\n\t * Variable: STYLE_LABEL_POSITION\n\t * \n\t * Defines the key for the horizontal label position of vertices. Possible\n\t * values are <ALIGN_LEFT>, <ALIGN_CENTER> and <ALIGN_RIGHT>. Default is\n\t * <ALIGN_CENTER>. The label align defines the position of the label\n\t * relative to the cell. <ALIGN_LEFT> means the entire label bounds is\n\t * placed completely just to the left of the vertex, <ALIGN_RIGHT> means\n\t * adjust to the right and <ALIGN_CENTER> means the label bounds are\n\t * vertically aligned with the bounds of the vertex. Note this value\n\t * doesn't affect the positioning of label within the label bounds, to move\n\t * the label horizontally within the label bounds, use <STYLE_ALIGN>.\n\t * Value is \"labelPosition\".\n\t */\n\tSTYLE_LABEL_POSITION: 'labelPosition',\n\n\t/**\n\t * Variable: STYLE_VERTICAL_LABEL_POSITION\n\t * \n\t * Defines the key for the vertical label position of vertices. Possible\n\t * values are <ALIGN_TOP>, <ALIGN_BOTTOM> and <ALIGN_MIDDLE>. Default is\n\t * <ALIGN_MIDDLE>. The label align defines the position of the label\n\t * relative to the cell. <ALIGN_TOP> means the entire label bounds is\n\t * placed completely just on the top of the vertex, <ALIGN_BOTTOM> means\n\t * adjust on the bottom and <ALIGN_MIDDLE> means the label bounds are\n\t * horizontally aligned with the bounds of the vertex. Note this value\n\t * doesn't affect the positioning of label within the label bounds, to move\n\t * the label vertically within the label bounds, use\n\t * <STYLE_VERTICAL_ALIGN>. Value is \"verticalLabelPosition\".\n\t */\n\tSTYLE_VERTICAL_LABEL_POSITION: 'verticalLabelPosition',\n\t\n\t/**\n\t * Variable: STYLE_IMAGE_ASPECT\n\t * \n\t * Defines the key for the image aspect style. Possible values are 0 (do\n\t * not preserve aspect) or 1 (keep aspect). This is only used in\n\t * <mxImageShape>. Default is 1. Value is \"imageAspect\".\n\t */\n\tSTYLE_IMAGE_ASPECT: 'imageAspect',\n\n\t/**\n\t * Variable: STYLE_IMAGE_ALIGN\n\t * \n\t * Defines the key for the align style. Possible values are <ALIGN_LEFT>,\n\t * <ALIGN_CENTER> and <ALIGN_RIGHT>. The value defines how any image in the\n\t * vertex label is aligned horizontally within the label bounds of a\n\t * <SHAPE_LABEL> shape. Value is \"imageAlign\".\n\t */\n\tSTYLE_IMAGE_ALIGN: 'imageAlign',\n\n\t/**\n\t * Variable: STYLE_IMAGE_VERTICAL_ALIGN\n\t * \n\t * Defines the key for the verticalAlign style. Possible values are\n\t * <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>. The value defines how\n\t * any image in the vertex label is aligned vertically within the label\n\t * bounds of a <SHAPE_LABEL> shape. Value is \"imageVerticalAlign\".\n\t */\n\tSTYLE_IMAGE_VERTICAL_ALIGN: 'imageVerticalAlign',\n\n\t/**\n\t * Variable: STYLE_GLASS\n\t * \n\t * Defines the key for the glass style. Possible values are 0 (disabled) and\n\t * 1(enabled). The default value is 0. This is used in <mxLabel>. Value is\n\t * \"glass\".\n\t */\n\tSTYLE_GLASS: 'glass',\n\n\t/**\n\t * Variable: STYLE_IMAGE\n\t * \n\t * Defines the key for the image style. Possible values are any image URL,\n\t * the type of the value is String. This is the path to the image that is\n\t * to be displayed within the label of a vertex. Data URLs should use the\n\t * following format: data:image/png,xyz where xyz is the base64 encoded\n\t * data (without the \"base64\"-prefix). Note that Data URLs are only\n\t * supported in modern browsers. Value is \"image\".\n\t */\n\tSTYLE_IMAGE: 'image',\n\n\t/**\n\t * Variable: STYLE_IMAGE_WIDTH\n\t * \n\t * Defines the key for the imageWidth style. The type of this value is\n\t * int, the value is the image width in pixels and must be greater than 0.\n\t * Value is \"imageWidth\".\n\t */\n\tSTYLE_IMAGE_WIDTH: 'imageWidth',\n\n\t/**\n\t * Variable: STYLE_IMAGE_HEIGHT\n\t * \n\t * Defines the key for the imageHeight style. The type of this value is\n\t * int, the value is the image height in pixels and must be greater than 0.\n\t * Value is \"imageHeight\".\n\t */\n\tSTYLE_IMAGE_HEIGHT: 'imageHeight',\n\n\t/**\n\t * Variable: STYLE_IMAGE_BACKGROUND\n\t * \n\t * Defines the key for the image background color. This style is only used\n\t * in <mxImageShape>. Possible values are all HTML color names or HEX\n\t * codes. Value is \"imageBackground\".\n\t */\n\tSTYLE_IMAGE_BACKGROUND: 'imageBackground',\n\n\t/**\n\t * Variable: STYLE_IMAGE_BORDER\n\t * \n\t * Defines the key for the image border color. This style is only used in\n\t * <mxImageShape>. Possible values are all HTML color names or HEX codes.\n\t * Value is \"imageBorder\".\n\t */\n\tSTYLE_IMAGE_BORDER: 'imageBorder',\n\n\t/**\n\t * Variable: STYLE_FLIPH\n\t * \n\t * Defines the key for the horizontal image flip. This style is only used\n\t * in <mxImageShape>. Possible values are 0 and 1. Default is 0. Value is\n\t * \"flipH\".\n\t */\n\tSTYLE_FLIPH: 'flipH',\n\n\t/**\n\t * Variable: STYLE_FLIPV\n\t * \n\t * Defines the key for the vertical flip. Possible values are 0 and 1.\n\t * Default is 0. Value is \"flipV\".\n\t */\n\tSTYLE_FLIPV: 'flipV',\n\n\t/**\n\t * Variable: STYLE_NOLABEL\n\t * \n\t * Defines the key for the noLabel style. If this is true then no label is\n\t * visible for a given cell. Possible values are true or false (1 or 0).\n\t * Default is false. Value is \"noLabel\".\n\t */\n\tSTYLE_NOLABEL: 'noLabel',\n\n\t/**\n\t * Variable: STYLE_NOEDGESTYLE\n\t * \n\t * Defines the key for the noEdgeStyle style. If this is true then no edge\n\t * style is applied for a given edge. Possible values are true or false\n\t * (1 or 0). Default is false. Value is \"noEdgeStyle\".\n\t */\n\tSTYLE_NOEDGESTYLE: 'noEdgeStyle',\n\n\t/**\n\t * Variable: STYLE_LABEL_BACKGROUNDCOLOR\n\t * \n\t * Defines the key for the label background color. Possible values are all\n\t * HTML color names or HEX codes. Value is \"labelBackgroundColor\".\n\t */\n\tSTYLE_LABEL_BACKGROUNDCOLOR: 'labelBackgroundColor',\n\n\t/**\n\t * Variable: STYLE_LABEL_BORDERCOLOR\n\t * \n\t * Defines the key for the label border color. Possible values are all\n\t * HTML color names or HEX codes. Value is \"labelBorderColor\".\n\t */\n\tSTYLE_LABEL_BORDERCOLOR: 'labelBorderColor',\n\n\t/**\n\t * Variable: STYLE_LABEL_PADDING\n\t * \n\t * Defines the key for the label padding, ie. the space between the label\n\t * border and the label. Value is \"labelPadding\".\n\t */\n\tSTYLE_LABEL_PADDING: 'labelPadding',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_SHAPE\n\t * \n\t * Defines the key for the indicator shape used within an <mxLabel>.\n\t * Possible values are all SHAPE_* constants or the names of any new\n\t * shapes. The indicatorShape has precedence over the indicatorImage.\n\t * Value is \"indicatorShape\".\n\t */\n\tSTYLE_INDICATOR_SHAPE: 'indicatorShape',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_IMAGE\n\t * \n\t * Defines the key for the indicator image used within an <mxLabel>.\n\t * Possible values are all image URLs. The indicatorShape has\n\t * precedence over the indicatorImage. Value is \"indicatorImage\".\n\t */\n\tSTYLE_INDICATOR_IMAGE: 'indicatorImage',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_COLOR\n\t * \n\t * Defines the key for the indicatorColor style. Possible values are all\n\t * HTML color names or HEX codes, as well as the special 'swimlane' keyword\n\t * to refer to the color of the parent swimlane if one exists. Value is\n\t * \"indicatorColor\".\n\t */\n\tSTYLE_INDICATOR_COLOR: 'indicatorColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_STROKECOLOR\n\t * \n\t * Defines the key for the indicator stroke color in <mxLabel>.\n\t * Possible values are all color codes. Value is \"indicatorStrokeColor\".\n\t */\n\tSTYLE_INDICATOR_STROKECOLOR: 'indicatorStrokeColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_GRADIENTCOLOR\n\t * \n\t * Defines the key for the indicatorGradientColor style. Possible values\n\t * are all HTML color names or HEX codes. This style is only supported in\n\t * <SHAPE_LABEL> shapes. Value is \"indicatorGradientColor\".\n\t */\n\tSTYLE_INDICATOR_GRADIENTCOLOR: 'indicatorGradientColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_SPACING\n\t * \n\t * The defines the key for the spacing between the label and the\n\t * indicator in <mxLabel>. Possible values are in pixels. Value is\n\t * \"indicatorSpacing\".\n\t */\n\tSTYLE_INDICATOR_SPACING: 'indicatorSpacing',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_WIDTH\n\t * \n\t * Defines the key for the indicator width. Possible values start at 0 (in\n\t * pixels). Value is \"indicatorWidth\".\n\t */\n\tSTYLE_INDICATOR_WIDTH: 'indicatorWidth',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_HEIGHT\n\t * \n\t * Defines the key for the indicator height. Possible values start at 0 (in\n\t * pixels). Value is \"indicatorHeight\".\n\t */\n\tSTYLE_INDICATOR_HEIGHT: 'indicatorHeight',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_DIRECTION\n\t * \n\t * Defines the key for the indicatorDirection style. The direction style is\n\t * used to specify the direction of certain shapes (eg. <mxTriangle>).\n\t * Possible values are <DIRECTION_EAST> (default), <DIRECTION_WEST>,\n\t * <DIRECTION_NORTH> and <DIRECTION_SOUTH>. Value is \"indicatorDirection\".\n\t */\n\tSTYLE_INDICATOR_DIRECTION: 'indicatorDirection',\n\n\t/**\n\t * Variable: STYLE_SHADOW\n\t * \n\t * Defines the key for the shadow style. The type of the value is Boolean.\n\t * Value is \"shadow\".\n\t */\n\tSTYLE_SHADOW: 'shadow',\n\t\n\t/**\n\t * Variable: STYLE_SEGMENT\n\t * \n\t * Defines the key for the segment style. The type of this value is float\n\t * and the value represents the size of the horizontal segment of the\n\t * entity relation style. Default is ENTITY_SEGMENT. Value is \"segment\".\n\t */\n\tSTYLE_SEGMENT: 'segment',\n\t\n\t/**\n\t * Variable: STYLE_ENDARROW\n\t *\n\t * Defines the key for the end arrow marker. Possible values are all\n\t * constants with an ARROW-prefix. This is only used in <mxConnector>.\n\t * Value is \"endArrow\".\n\t *\n\t * Example:\n\t * (code)\n\t * style[mxConstants.STYLE_ENDARROW] = mxConstants.ARROW_CLASSIC;\n\t * (end)\n\t */\n\tSTYLE_ENDARROW: 'endArrow',\n\n\t/**\n\t * Variable: STYLE_STARTARROW\n\t * \n\t * Defines the key for the start arrow marker. Possible values are all\n\t * constants with an ARROW-prefix. This is only used in <mxConnector>.\n\t * See <STYLE_ENDARROW>. Value is \"startArrow\".\n\t */\n\tSTYLE_STARTARROW: 'startArrow',\n\n\t/**\n\t * Variable: STYLE_ENDSIZE\n\t * \n\t * Defines the key for the endSize style. The type of this value is numeric\n\t * and the value represents the size of the end marker in pixels. Value is\n\t * \"endSize\".\n\t */\n\tSTYLE_ENDSIZE: 'endSize',\n\n\t/**\n\t * Variable: STYLE_STARTSIZE\n\t * \n\t * Defines the key for the startSize style. The type of this value is\n\t * numeric and the value represents the size of the start marker or the\n\t * size of the swimlane title region depending on the shape it is used for.\n\t * Value is \"startSize\".\n\t */\n\tSTYLE_STARTSIZE: 'startSize',\n\n\t/**\n\t * Variable: STYLE_SWIMLANE_LINE\n\t * \n\t * Defines the key for the swimlaneLine style. This style specifies whether\n\t * the line between the title regio of a swimlane should be visible. Use 0\n\t * for hidden or 1 (default) for visible. Value is \"swimlaneLine\".\n\t */\n\tSTYLE_SWIMLANE_LINE: 'swimlaneLine',\n\n\t/**\n\t * Variable: STYLE_ENDFILL\n\t * \n\t * Defines the key for the endFill style. Use 0 for no fill or 1 (default)\n\t * for fill. (This style is only exported via <mxImageExport>.) Value is\n\t * \"endFill\".\n\t */\n\tSTYLE_ENDFILL: 'endFill',\n\n\t/**\n\t * Variable: STYLE_STARTFILL\n\t * \n\t * Defines the key for the startFill style. Use 0 for no fill or 1 (default)\n\t * for fill. (This style is only exported via <mxImageExport>.) Value is\n\t * \"startFill\".\n\t */\n\tSTYLE_STARTFILL: 'startFill',\n\n\t/**\n\t * Variable: STYLE_DASHED\n\t * \n\t * Defines the key for the dashed style. Use 0 (default) for non-dashed or 1\n\t * for dashed. Value is \"dashed\".\n\t */\n\tSTYLE_DASHED: 'dashed',\n\n\t/**\n\t * Defines the key for the dashed pattern style in SVG and image exports.\n\t * The type of this value is a space separated list of numbers that specify\n\t * a custom-defined dash pattern. Dash styles are defined in terms of the\n\t * length of the dash (the drawn part of the stroke) and the length of the\n\t * space between the dashes. The lengths are relative to the line width: a\n\t * length of \"1\" is equal to the line width. VML ignores this style and\n\t * uses dashStyle instead as defined in the VML specification. This style\n\t * is only used in the <mxConnector> shape. Value is \"dashPattern\".\n\t */\n\tSTYLE_DASH_PATTERN: 'dashPattern',\n\n\t/**\n\t * Variable: STYLE_FIX_DASH\n\t * \n\t * Defines the key for the fixDash style. Use 0 (default) for dash patterns\n\t * that depend on the linewidth and 1 for dash patterns that ignore the\n\t * line width. Value is \"fixDash\".\n\t */\n\tSTYLE_FIX_DASH: 'fixDash',\n\n\t/**\n\t * Variable: STYLE_ROUNDED\n\t * \n\t * Defines the key for the rounded style. The type of this value is\n\t * Boolean. For edges this determines whether or not joins between edges\n\t * segments are smoothed to a rounded finish. For vertices that have the\n\t * rectangle shape, this determines whether or not the rectangle is\n\t * rounded. Use 0 (default) for non-rounded or 1 for rounded. Value is\n\t * \"rounded\".\n\t */\n\tSTYLE_ROUNDED: 'rounded',\n\n\t/**\n\t * Variable: STYLE_CURVED\n\t * \n\t * Defines the key for the curved style. The type of this value is\n\t * Boolean. It is only applicable for connector shapes. Use 0 (default)\n\t * for non-curved or 1 for curved. Value is \"curved\".\n\t */\n\tSTYLE_CURVED: 'curved',\n\n\t/**\n\t * Variable: STYLE_ARCSIZE\n\t * \n\t * Defines the rounding factor for a rounded rectangle in percent (without\n\t * the percent sign). Possible values are between 0 and 100. If this value\n\t * is not specified then RECTANGLE_ROUNDING_FACTOR * 100 is used. For\n\t * edges, this defines the absolute size of rounded corners in pixels. If\n\t * this values is not specified then LINE_ARCSIZE is used.\n\t * (This style is only exported via <mxImageExport>.) Value is \"arcSize\".\n\t */\n\tSTYLE_ARCSIZE: 'arcSize',\n\n\t/**\n\t * Variable: STYLE_ABSOLUTE_ARCSIZE\n\t * \n\t * Defines the key for the absolute arc size style. This specifies if\n\t * arcSize for rectangles is abolute or relative. Possible values are 1\n\t * and 0 (default). Value is \"absoluteArcSize\".\n\t */\n\tSTYLE_ABSOLUTE_ARCSIZE: 'absoluteArcSize',\n\n\t/**\n\t * Variable: STYLE_SOURCE_PERIMETER_SPACING\n\t * \n\t * Defines the key for the source perimeter spacing. The type of this value\n\t * is numeric. This is the distance between the source connection point of\n\t * an edge and the perimeter of the source vertex in pixels. This style\n\t * only applies to edges. Value is \"sourcePerimeterSpacing\".\n\t */\n\tSTYLE_SOURCE_PERIMETER_SPACING: 'sourcePerimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_TARGET_PERIMETER_SPACING\n\t * \n\t * Defines the key for the target perimeter spacing. The type of this value\n\t * is numeric. This is the distance between the target connection point of\n\t * an edge and the perimeter of the target vertex in pixels. This style\n\t * only applies to edges. Value is \"targetPerimeterSpacing\".\n\t */\n\tSTYLE_TARGET_PERIMETER_SPACING: 'targetPerimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_PERIMETER_SPACING\n\t * \n\t * Defines the key for the perimeter spacing. This is the distance between\n\t * the connection point and the perimeter in pixels. When used in a vertex\n\t * style, this applies to all incoming edges to floating ports (edges that\n\t * terminate on the perimeter of the vertex). When used in an edge style,\n\t * this spacing applies to the source and target separately, if they\n\t * terminate in floating ports (on the perimeter of the vertex). Value is\n\t * \"perimeterSpacing\".\n\t */\n\tSTYLE_PERIMETER_SPACING: 'perimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_SPACING\n\t * \n\t * Defines the key for the spacing. The value represents the spacing, in\n\t * pixels, added to each side of a label in a vertex (style applies to\n\t * vertices only). Value is \"spacing\".\n\t */\n\tSTYLE_SPACING: 'spacing',\n\n\t/**\n\t * Variable: STYLE_SPACING_TOP\n\t * \n\t * Defines the key for the spacingTop style. The value represents the\n\t * spacing, in pixels, added to the top side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingTop\".\n\t */\n\tSTYLE_SPACING_TOP: 'spacingTop',\n\n\t/**\n\t * Variable: STYLE_SPACING_LEFT\n\t * \n\t * Defines the key for the spacingLeft style. The value represents the\n\t * spacing, in pixels, added to the left side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingLeft\".\n\t */\n\tSTYLE_SPACING_LEFT: 'spacingLeft',\n\n\t/**\n\t * Variable: STYLE_SPACING_BOTTOM\n\t * \n\t * Defines the key for the spacingBottom style The value represents the\n\t * spacing, in pixels, added to the bottom side of a label in a vertex\n\t * (style applies to vertices only). Value is \"spacingBottom\".\n\t */\n\tSTYLE_SPACING_BOTTOM: 'spacingBottom',\n\n\t/**\n\t * Variable: STYLE_SPACING_RIGHT\n\t * \n\t * Defines the key for the spacingRight style The value represents the\n\t * spacing, in pixels, added to the right side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingRight\".\n\t */\n\tSTYLE_SPACING_RIGHT: 'spacingRight',\n\n\t/**\n\t * Variable: STYLE_HORIZONTAL\n\t * \n\t * Defines the key for the horizontal style. Possible values are\n\t * true or false. This value only applies to vertices. If the <STYLE_SHAPE>\n\t * is \"SHAPE_SWIMLANE\" a value of false indicates that the\n\t * swimlane should be drawn vertically, true indicates to draw it\n\t * horizontally. If the shape style does not indicate that this vertex is a\n\t * swimlane, this value affects only whether the label is drawn\n\t * horizontally or vertically. Value is \"horizontal\".\n\t */\n\tSTYLE_HORIZONTAL: 'horizontal',\n\n\t/**\n\t * Variable: STYLE_DIRECTION\n\t * \n\t * Defines the key for the direction style. The direction style is used\n\t * to specify the direction of certain shapes (eg. <mxTriangle>).\n\t * Possible values are <DIRECTION_EAST> (default), <DIRECTION_WEST>,\n\t * <DIRECTION_NORTH> and <DIRECTION_SOUTH>. Value is \"direction\".\n\t */\n\tSTYLE_DIRECTION: 'direction',\n\n\t/**\n\t * Variable: STYLE_ANCHOR_POINT_DIRECTION\n\t * \n\t * Defines the key for the anchorPointDirection style. The defines if the\n\t * direction style should be taken into account when computing the fixed\n\t * point location for connected edges. Default is 1 (yes). Set this to 0\n\t * to ignore the direction style for fixed connection points. Value is\n\t * \"anchorPointDirection\".\n\t */\n\tSTYLE_ANCHOR_POINT_DIRECTION: 'anchorPointDirection',\n\n\t/**\n\t * Variable: STYLE_ELBOW\n\t * \n\t * Defines the key for the elbow style. Possible values are\n\t * <ELBOW_HORIZONTAL> and <ELBOW_VERTICAL>. Default is <ELBOW_HORIZONTAL>.\n\t * This defines how the three segment orthogonal edge style leaves its\n\t * terminal vertices. The vertical style leaves the terminal vertices at\n\t * the top and bottom sides. Value is \"elbow\".\n\t */\n\tSTYLE_ELBOW: 'elbow',\n\n\t/**\n\t * Variable: STYLE_FONTCOLOR\n\t * \n\t * Defines the key for the fontColor style. Possible values are all HTML\n\t * color names or HEX codes. Value is \"fontColor\".\n\t */\n\tSTYLE_FONTCOLOR: 'fontColor',\n\n\t/**\n\t * Variable: STYLE_FONTFAMILY\n\t * \n\t * Defines the key for the fontFamily style. Possible values are names such\n\t * as Arial; Dialog; Verdana; Times New Roman. The value is of type String.\n\t * Value is fontFamily.\n\t */\n\tSTYLE_FONTFAMILY: 'fontFamily',\n\n\t/**\n\t * Variable: STYLE_FONTSIZE\n\t * \n\t * Defines the key for the fontSize style (in px). The type of the value\n\t * is int. Value is \"fontSize\".\n\t */\n\tSTYLE_FONTSIZE: 'fontSize',\n\n\t/**\n\t * Variable: STYLE_FONTSTYLE\n\t * \n\t * Defines the key for the fontStyle style. Values may be any logical AND\n\t * (sum) of <FONT_BOLD>, <FONT_ITALIC> and <FONT_UNDERLINE>.\n\t * The type of the value is int. Value is \"fontStyle\".\n\t */\n\tSTYLE_FONTSTYLE: 'fontStyle',\n\t\n\t/**\n\t * Variable: STYLE_ASPECT\n\t * \n\t * Defines the key for the aspect style. Possible values are empty or fixed.\n\t * If fixed is used then the aspect ratio of the cell will be maintained\n\t * when resizing. Default is empty. Value is \"aspect\".\n\t */\n\tSTYLE_ASPECT: 'aspect',\n\n\t/**\n\t * Variable: STYLE_AUTOSIZE\n\t * \n\t * Defines the key for the autosize style. This specifies if a cell should be\n\t * resized automatically if the value has changed. Possible values are 0 or 1.\n\t * Default is 0. See <mxGraph.isAutoSizeCell>. This is normally combined with\n\t * <STYLE_RESIZABLE> to disable manual sizing. Value is \"autosize\".\n\t */\n\tSTYLE_AUTOSIZE: 'autosize',\n\n\t/**\n\t * Variable: STYLE_FOLDABLE\n\t * \n\t * Defines the key for the foldable style. This specifies if a cell is foldable\n\t * using a folding icon. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellFoldable>. Value is \"foldable\".\n\t */\n\tSTYLE_FOLDABLE: 'foldable',\n\n\t/**\n\t * Variable: STYLE_EDITABLE\n\t * \n\t * Defines the key for the editable style. This specifies if the value of\n\t * a cell can be edited using the in-place editor. Possible values are 0 or\n\t * 1. Default is 1. See <mxGraph.isCellEditable>. Value is \"editable\".\n\t */\n\tSTYLE_EDITABLE: 'editable',\n\n\t/**\n\t * Variable: STYLE_BACKGROUND_OUTLINE\n\t * \n\t * Defines the key for the backgroundOutline style. This specifies if a\n\t * only the background of a cell should be painted when it is highlighted.\n\t * Possible values are 0 or 1. Default is 0. Value is \"backgroundOutline\".\n\t */\n\tSTYLE_BACKGROUND_OUTLINE: 'backgroundOutline',\n\n\t/**\n\t * Variable: STYLE_BENDABLE\n\t * \n\t * Defines the key for the bendable style. This specifies if the control\n\t * points of an edge can be moved. Possible values are 0 or 1. Default is\n\t * 1. See <mxGraph.isCellBendable>. Value is \"bendable\".\n\t */\n\tSTYLE_BENDABLE: 'bendable',\n\n\t/**\n\t * Variable: STYLE_MOVABLE\n\t * \n\t * Defines the key for the movable style. This specifies if a cell can\n\t * be moved. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellMovable>. Value is \"movable\".\n\t */\n\tSTYLE_MOVABLE: 'movable',\n\n\t/**\n\t * Variable: STYLE_RESIZABLE\n\t * \n\t * Defines the key for the resizable style. This specifies if a cell can\n\t * be resized. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellResizable>. Value is \"resizable\".\n\t */\n\tSTYLE_RESIZABLE: 'resizable',\n\n\t/**\n\t * Variable: STYLE_RESIZE_WIDTH\n\t * \n\t * Defines the key for the resizeWidth style. This specifies if a cell's\n\t * width is resized if the parent is resized. If this is 1 then the width\n\t * will be resized even if the cell's geometry is relative. If this is 0\n\t * then the cell's width will not be resized. Default is not defined. Value\n\t * is \"resizeWidth\".\n\t */\n\tSTYLE_RESIZE_WIDTH: 'resizeWidth',\n\n\t/**\n\t * Variable: STYLE_RESIZE_WIDTH\n\t * \n\t * Defines the key for the resizeHeight style. This specifies if a cell's\n\t * height if resize if the parent is resized. If this is 1 then the height\n\t * will be resized even if the cell's geometry is relative. If this is 0\n\t * then the cell's height will not be resized. Default is not defined. Value\n\t * is \"resizeHeight\".\n\t */\n\tSTYLE_RESIZE_HEIGHT: 'resizeHeight',\n\n\t/**\n\t * Variable: STYLE_ROTATABLE\n\t * \n\t * Defines the key for the rotatable style. This specifies if a cell can\n\t * be rotated. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellRotatable>. Value is \"rotatable\".\n\t */\n\tSTYLE_ROTATABLE: 'rotatable',\n\n\t/**\n\t * Variable: STYLE_CLONEABLE\n\t * \n\t * Defines the key for the cloneable style. This specifies if a cell can\n\t * be cloned. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellCloneable>. Value is \"cloneable\".\n\t */\n\tSTYLE_CLONEABLE: 'cloneable',\n\n\t/**\n\t * Variable: STYLE_DELETABLE\n\t * \n\t * Defines the key for the deletable style. This specifies if a cell can be\n\t * deleted. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellDeletable>. Value is \"deletable\".\n\t */\n\tSTYLE_DELETABLE: 'deletable',\n\n\t/**\n\t * Variable: STYLE_SHAPE\n\t * \n\t * Defines the key for the shape. Possible values are all constants with\n\t * a SHAPE-prefix or any newly defined shape names. Value is \"shape\".\n\t */\n\tSTYLE_SHAPE: 'shape',\n\n\t/**\n\t * Variable: STYLE_EDGE\n\t * \n\t * Defines the key for the edge style. Possible values are the functions\n\t * defined in <mxEdgeStyle>. Value is \"edgeStyle\".\n\t */\n\tSTYLE_EDGE: 'edgeStyle',\n\n\t/**\n\t * Variable: STYLE_JETTY_SIZE\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are all numeric values or \"auto\".\n\t * Jetty size is the minimum length of the orthogonal segment before\n\t * it attaches to a shape.\n\t * Value is \"jettySize\".\n\t */\n\tSTYLE_JETTY_SIZE: 'jettySize',\n\n\t/**\n\t * Variable: STYLE_SOURCE_JETTY_SIZE\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are numeric values or \"auto\". This has\n\t * precedence over <STYLE_JETTY_SIZE>. Value is \"sourceJettySize\".\n\t */\n\tSTYLE_SOURCE_JETTY_SIZE: 'sourceJettySize',\n\n\t/**\n\t * Variable: targetJettySize\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are numeric values or \"auto\". This has\n\t * precedence over <STYLE_JETTY_SIZE>. Value is \"targetJettySize\".\n\t */\n\tSTYLE_TARGET_JETTY_SIZE: 'targetJettySize',\n\n\t/**\n\t * Variable: STYLE_LOOP\n\t * \n\t * Defines the key for the loop style. Possible values are the functions\n\t * defined in <mxEdgeStyle>. Value is \"loopStyle\". Default is\n\t * <mxGraph.defaultLoopStylean>.\n\t */\n\tSTYLE_LOOP: 'loopStyle',\n\n\t/**\n\t * Variable: STYLE_ORTHOGONAL_LOOP\n\t * \n\t * Defines the key for the orthogonal loop style. Possible values are 0 and\n\t * 1. Default is 0. Value is \"orthogonalLoop\". Use this style to specify\n\t * if loops with no waypoints and defined anchor points should be routed\n\t * using <STYLE_LOOP> or not routed.\n\t */\n\tSTYLE_ORTHOGONAL_LOOP: 'orthogonalLoop',\n\n\t/**\n\t * Variable: STYLE_ROUTING_CENTER_X\n\t * \n\t * Defines the key for the horizontal routing center. Possible values are\n\t * between -0.5 and 0.5. This is the relative offset from the center used\n\t * for connecting edges. The type of this value is numeric. Value is\n\t * \"routingCenterX\".\n\t */\n\tSTYLE_ROUTING_CENTER_X: 'routingCenterX',\n\n\t/**\n\t * Variable: STYLE_ROUTING_CENTER_Y\n\t * \n\t * Defines the key for the vertical routing center. Possible values are\n\t * between -0.5 and 0.5. This is the relative offset from the center used\n\t * for connecting edges. The type of this value is numeric. Value is\n\t * \"routingCenterY\".\n\t */\n\tSTYLE_ROUTING_CENTER_Y: 'routingCenterY',\n\n\t/**\n\t * Variable: FONT_BOLD\n\t * \n\t * Constant for bold fonts. Default is 1.\n\t */\n\tFONT_BOLD: 1,\n\n\t/**\n\t * Variable: FONT_ITALIC\n\t * \n\t * Constant for italic fonts. Default is 2.\n\t */\n\tFONT_ITALIC: 2,\n\n\t/**\n\t * Variable: FONT_UNDERLINE\n\t * \n\t * Constant for underlined fonts. Default is 4.\n\t */\n\tFONT_UNDERLINE: 4,\n\n\t/**\n\t * Variable: SHAPE_RECTANGLE\n\t * \n\t * Name under which <mxRectangleShape> is registered in <mxCellRenderer>.\n\t * Default is rectangle.\n\t */\n\tSHAPE_RECTANGLE: 'rectangle',\n\n\t/**\n\t * Variable: SHAPE_ELLIPSE\n\t * \n\t * Name under which <mxEllipse> is registered in <mxCellRenderer>.\n\t * Default is ellipse.\n\t */\n\tSHAPE_ELLIPSE: 'ellipse',\n\n\t/**\n\t * Variable: SHAPE_DOUBLE_ELLIPSE\n\t * \n\t * Name under which <mxDoubleEllipse> is registered in <mxCellRenderer>.\n\t * Default is doubleEllipse.\n\t */\n\tSHAPE_DOUBLE_ELLIPSE: 'doubleEllipse',\n\n\t/**\n\t * Variable: SHAPE_RHOMBUS\n\t * \n\t * Name under which <mxRhombus> is registered in <mxCellRenderer>.\n\t * Default is rhombus.\n\t */\n\tSHAPE_RHOMBUS: 'rhombus',\n\n\t/**\n\t * Variable: SHAPE_LINE\n\t * \n\t * Name under which <mxLine> is registered in <mxCellRenderer>.\n\t * Default is line.\n\t */\n\tSHAPE_LINE: 'line',\n\n\t/**\n\t * Variable: SHAPE_IMAGE\n\t * \n\t * Name under which <mxImageShape> is registered in <mxCellRenderer>.\n\t * Default is image.\n\t */\n\tSHAPE_IMAGE: 'image',\n\t\n\t/**\n\t * Variable: SHAPE_ARROW\n\t * \n\t * Name under which <mxArrow> is registered in <mxCellRenderer>.\n\t * Default is arrow.\n\t */\n\tSHAPE_ARROW: 'arrow',\n\t\n\t/**\n\t * Variable: SHAPE_ARROW_CONNECTOR\n\t * \n\t * Name under which <mxArrowConnector> is registered in <mxCellRenderer>.\n\t * Default is arrowConnector.\n\t */\n\tSHAPE_ARROW_CONNECTOR: 'arrowConnector',\n\t\n\t/**\n\t * Variable: SHAPE_LABEL\n\t * \n\t * Name under which <mxLabel> is registered in <mxCellRenderer>.\n\t * Default is label.\n\t */\n\tSHAPE_LABEL: 'label',\n\t\n\t/**\n\t * Variable: SHAPE_CYLINDER\n\t * \n\t * Name under which <mxCylinder> is registered in <mxCellRenderer>.\n\t * Default is cylinder.\n\t */\n\tSHAPE_CYLINDER: 'cylinder',\n\t\n\t/**\n\t * Variable: SHAPE_SWIMLANE\n\t * \n\t * Name under which <mxSwimlane> is registered in <mxCellRenderer>.\n\t * Default is swimlane.\n\t */\n\tSHAPE_SWIMLANE: 'swimlane',\n\t\t\n\t/**\n\t * Variable: SHAPE_CONNECTOR\n\t * \n\t * Name under which <mxConnector> is registered in <mxCellRenderer>.\n\t * Default is connector.\n\t */\n\tSHAPE_CONNECTOR: 'connector',\n\n\t/**\n\t * Variable: SHAPE_ACTOR\n\t * \n\t * Name under which <mxActor> is registered in <mxCellRenderer>.\n\t * Default is actor.\n\t */\n\tSHAPE_ACTOR: 'actor',\n\t\t\n\t/**\n\t * Variable: SHAPE_CLOUD\n\t * \n\t * Name under which <mxCloud> is registered in <mxCellRenderer>.\n\t * Default is cloud.\n\t */\n\tSHAPE_CLOUD: 'cloud',\n\t\t\n\t/**\n\t * Variable: SHAPE_TRIANGLE\n\t * \n\t * Name under which <mxTriangle> is registered in <mxCellRenderer>.\n\t * Default is triangle.\n\t */\n\tSHAPE_TRIANGLE: 'triangle',\n\t\t\n\t/**\n\t * Variable: SHAPE_HEXAGON\n\t * \n\t * Name under which <mxHexagon> is registered in <mxCellRenderer>.\n\t * Default is hexagon.\n\t */\n\tSHAPE_HEXAGON: 'hexagon',\n\n\t/**\n\t * Variable: ARROW_CLASSIC\n\t * \n\t * Constant for classic arrow markers.\n\t */\n\tARROW_CLASSIC: 'classic',\n\n\t/**\n\t * Variable: ARROW_CLASSIC_THIN\n\t * \n\t * Constant for thin classic arrow markers.\n\t */\n\tARROW_CLASSIC_THIN: 'classicThin',\n\n\t/**\n\t * Variable: ARROW_BLOCK\n\t * \n\t * Constant for block arrow markers.\n\t */\n\tARROW_BLOCK: 'block',\n\n\t/**\n\t * Variable: ARROW_BLOCK_THIN\n\t * \n\t * Constant for thin block arrow markers.\n\t */\n\tARROW_BLOCK_THIN: 'blockThin',\n\n\t/**\n\t * Variable: ARROW_OPEN\n\t * \n\t * Constant for open arrow markers.\n\t */\n\tARROW_OPEN: 'open',\n\n\t/**\n\t * Variable: ARROW_OPEN_THIN\n\t * \n\t * Constant for thin open arrow markers.\n\t */\n\tARROW_OPEN_THIN: 'openThin',\n\n\t/**\n\t * Variable: ARROW_OVAL\n\t * \n\t * Constant for oval arrow markers.\n\t */\n\tARROW_OVAL: 'oval',\n\n\t/**\n\t * Variable: ARROW_DIAMOND\n\t * \n\t * Constant for diamond arrow markers.\n\t */\n\tARROW_DIAMOND: 'diamond',\n\n\t/**\n\t * Variable: ARROW_DIAMOND_THIN\n\t * \n\t * Constant for thin diamond arrow markers.\n\t */\n\tARROW_DIAMOND_THIN: 'diamondThin',\n\n\t/**\n\t * Variable: ALIGN_LEFT\n\t * \n\t * Constant for left horizontal alignment. Default is left.\n\t */\n\tALIGN_LEFT: 'left',\n\n\t/**\n\t * Variable: ALIGN_CENTER\n\t * \n\t * Constant for center horizontal alignment. Default is center.\n\t */\n\tALIGN_CENTER: 'center',\n\n\t/**\n\t * Variable: ALIGN_RIGHT\n\t * \n\t * Constant for right horizontal alignment. Default is right.\n\t */\n\tALIGN_RIGHT: 'right',\n\n\t/**\n\t * Variable: ALIGN_TOP\n\t * \n\t * Constant for top vertical alignment. Default is top.\n\t */\n\tALIGN_TOP: 'top',\n\n\t/**\n\t * Variable: ALIGN_MIDDLE\n\t * \n\t * Constant for middle vertical alignment. Default is middle.\n\t */\n\tALIGN_MIDDLE: 'middle',\n\n\t/**\n\t * Variable: ALIGN_BOTTOM\n\t * \n\t * Constant for bottom vertical alignment. Default is bottom.\n\t */\n\tALIGN_BOTTOM: 'bottom',\n\n\t/**\n\t * Variable: DIRECTION_NORTH\n\t * \n\t * Constant for direction north. Default is north.\n\t */\n\tDIRECTION_NORTH: 'north',\n\n\t/**\n\t * Variable: DIRECTION_SOUTH\n\t * \n\t * Constant for direction south. Default is south.\n\t */\n\tDIRECTION_SOUTH: 'south',\n\n\t/**\n\t * Variable: DIRECTION_EAST\n\t * \n\t * Constant for direction east. Default is east.\n\t */\n\tDIRECTION_EAST: 'east',\n\n\t/**\n\t * Variable: DIRECTION_WEST\n\t * \n\t * Constant for direction west. Default is west.\n\t */\n\tDIRECTION_WEST: 'west',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_DEFAULT\n\t * \n\t * Constant for text direction default. Default is an empty string. Use\n\t * this value to use the default text direction of the operating system. \n\t */\n\tTEXT_DIRECTION_DEFAULT: '',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_AUTO\n\t * \n\t * Constant for text direction automatic. Default is auto. Use this value\n\t * to find the direction for a given text with <mxText.getAutoDirection>. \n\t */\n\tTEXT_DIRECTION_AUTO: 'auto',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_LTR\n\t * \n\t * Constant for text direction left to right. Default is ltr. Use this\n\t * value for left to right text direction.\n\t */\n\tTEXT_DIRECTION_LTR: 'ltr',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_RTL\n\t * \n\t * Constant for text direction right to left. Default is rtl. Use this\n\t * value for right to left text direction.\n\t */\n\tTEXT_DIRECTION_RTL: 'rtl',\n\n\t/**\n\t * Variable: DIRECTION_MASK_NONE\n\t * \n\t * Constant for no direction.\n\t */\n\tDIRECTION_MASK_NONE: 0,\n\n\t/**\n\t * Variable: DIRECTION_MASK_WEST\n\t * \n\t * Bitwise mask for west direction.\n\t */\n\tDIRECTION_MASK_WEST: 1,\n\t\n\t/**\n\t * Variable: DIRECTION_MASK_NORTH\n\t * \n\t * Bitwise mask for north direction.\n\t */\n\tDIRECTION_MASK_NORTH: 2,\n\n\t/**\n\t * Variable: DIRECTION_MASK_SOUTH\n\t * \n\t * Bitwise mask for south direction.\n\t */\n\tDIRECTION_MASK_SOUTH: 4,\n\n\t/**\n\t * Variable: DIRECTION_MASK_EAST\n\t * \n\t * Bitwise mask for east direction.\n\t */\n\tDIRECTION_MASK_EAST: 8,\n\t\n\t/**\n\t * Variable: DIRECTION_MASK_ALL\n\t * \n\t * Bitwise mask for all directions.\n\t */\n\tDIRECTION_MASK_ALL: 15,\n\n\t/**\n\t * Variable: ELBOW_VERTICAL\n\t * \n\t * Constant for elbow vertical. Default is horizontal.\n\t */\n\tELBOW_VERTICAL: 'vertical',\n\n\t/**\n\t * Variable: ELBOW_HORIZONTAL\n\t * \n\t * Constant for elbow horizontal. Default is horizontal.\n\t */\n\tELBOW_HORIZONTAL: 'horizontal',\n\n\t/**\n\t * Variable: EDGESTYLE_ELBOW\n\t * \n\t * Name of the elbow edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ELBOW: 'elbowEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_ENTITY_RELATION\n\t * \n\t * Name of the entity relation edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ENTITY_RELATION: 'entityRelationEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_LOOP\n\t * \n\t * Name of the loop edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_LOOP: 'loopEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_SIDETOSIDE\n\t * \n\t * Name of the side to side edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_SIDETOSIDE: 'sideToSideEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_TOPTOBOTTOM\n\t * \n\t * Name of the top to bottom edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_TOPTOBOTTOM: 'topToBottomEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_ORTHOGONAL\n\t * \n\t * Name of the generic orthogonal edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ORTHOGONAL: 'orthogonalEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_SEGMENT\n\t * \n\t * Name of the generic segment edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_SEGMENT: 'segmentEdgeStyle',\n \n\t/**\n\t * Variable: PERIMETER_ELLIPSE\n\t * \n\t * Name of the ellipse perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_ELLIPSE: 'ellipsePerimeter',\n\n\t/**\n\t * Variable: PERIMETER_RECTANGLE\n\t *\n\t * Name of the rectangle perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_RECTANGLE: 'rectanglePerimeter',\n\n\t/**\n\t * Variable: PERIMETER_RHOMBUS\n\t * \n\t * Name of the rhombus perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_RHOMBUS: 'rhombusPerimeter',\n\n\t/**\n\t * Variable: PERIMETER_HEXAGON\n\t * \n\t * Name of the hexagon perimeter. Can be used as a string value \n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_HEXAGON: 'hexagonPerimeter',\n\n\t/**\n\t * Variable: PERIMETER_TRIANGLE\n\t * \n\t * Name of the triangle perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_TRIANGLE: 'trianglePerimeter'\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEventObject\n * \n * The mxEventObject is a wrapper for all properties of a single event.\n * Additionally, it also offers functions to consume the event and check if it\n * was consumed as follows:\n * \n * (code)\n * evt.consume();\n * INV: evt.isConsumed() == true\n * (end)\n * \n * Constructor: mxEventObject\n *\n * Constructs a new event object with the specified name. An optional\n * sequence of key, value pairs can be appended to define properties.\n * \n * Example:\n *\n * (code)\n * new mxEventObject(\"eventName\", key1, val1, .., keyN, valN)\n * (end)\n */\nfunction mxEventObject(name)\n{\n\tthis.name = name;\n\tthis.properties = [];\n\t\n\tfor (var i = 1; i < arguments.length; i += 2)\n\t{\n\t\tif (arguments[i + 1] != null)\n\t\t{\n\t\t\tthis.properties[arguments[i]] = arguments[i + 1];\n\t\t}\n\t}\n};\n\n/**\n * Variable: name\n *\n * Holds the name.\n */\nmxEventObject.prototype.name = null;\n\n/**\n * Variable: properties\n *\n * Holds the properties as an associative array.\n */\nmxEventObject.prototype.properties = null;\n\n/**\n * Variable: consumed\n *\n * Holds the consumed state. Default is false.\n */\nmxEventObject.prototype.consumed = false;\n\n/**\n * Function: getName\n * \n * Returns <name>.\n */\nmxEventObject.prototype.getName = function()\n{\n\treturn this.name;\n};\n\n/**\n * Function: getProperties\n * \n * Returns <properties>.\n */\nmxEventObject.prototype.getProperties = function()\n{\n\treturn this.properties;\n};\n\n/**\n * Function: getProperty\n * \n * Returns the property for the given key.\n */\nmxEventObject.prototype.getProperty = function(key)\n{\n\treturn this.properties[key];\n};\n\n/**\n * Function: isConsumed\n *\n * Returns true if the event has been consumed.\n */\nmxEventObject.prototype.isConsumed = function()\n{\n\treturn this.consumed;\n};\n\n/**\n * Function: consume\n *\n * Consumes the event.\n */\nmxEventObject.prototype.consume = function()\n{\n\tthis.consumed = true;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMouseEvent\n * \n * Base class for all mouse events in mxGraph. A listener for this event should\n * implement the following methods:\n * \n * (code)\n * graph.addMouseListener(\n * {\n *   mouseDown: function(sender, evt)\n *   {\n *     mxLog.debug('mouseDown');\n *   },\n *   mouseMove: function(sender, evt)\n *   {\n *     mxLog.debug('mouseMove');\n *   },\n *   mouseUp: function(sender, evt)\n *   {\n *     mxLog.debug('mouseUp');\n *   }\n * });\n * (end)\n * \n * Constructor: mxMouseEvent\n *\n * Constructs a new event object for the given arguments.\n * \n * Parameters:\n * \n * evt - Native mouse event.\n * state - Optional <mxCellState> under the mouse.\n * \n */\nfunction mxMouseEvent(evt, state)\n{\n\tthis.evt = evt;\n\tthis.state = state;\n\tthis.sourceState = state;\n};\n\n/**\n * Variable: consumed\n *\n * Holds the consumed state of this event.\n */\nmxMouseEvent.prototype.consumed = false;\n\n/**\n * Variable: evt\n *\n * Holds the inner event object.\n */\nmxMouseEvent.prototype.evt = null;\n\n/**\n * Variable: graphX\n *\n * Holds the x-coordinate of the event in the graph. This value is set in\n * <mxGraph.fireMouseEvent>.\n */\nmxMouseEvent.prototype.graphX = null;\n\n/**\n * Variable: graphY\n *\n * Holds the y-coordinate of the event in the graph. This value is set in\n * <mxGraph.fireMouseEvent>.\n */\nmxMouseEvent.prototype.graphY = null;\n\n/**\n * Variable: state\n *\n * Holds the optional <mxCellState> associated with this event.\n */\nmxMouseEvent.prototype.state = null;\n\n/**\n * Variable: sourceState\n * \n * Holds the <mxCellState> that was passed to the constructor. This can be\n * different from <state> depending on the result of <mxGraph.getEventState>.\n */\nmxMouseEvent.prototype.sourceState = null;\n\n/**\n * Function: getEvent\n * \n * Returns <evt>.\n */\nmxMouseEvent.prototype.getEvent = function()\n{\n\treturn this.evt;\n};\n\n/**\n * Function: getSource\n * \n * Returns the target DOM element using <mxEvent.getSource> for <evt>.\n */\nmxMouseEvent.prototype.getSource = function()\n{\n\treturn mxEvent.getSource(this.evt);\n};\n\n/**\n * Function: isSource\n * \n * Returns true if the given <mxShape> is the source of <evt>.\n */\nmxMouseEvent.prototype.isSource = function(shape)\n{\n\tif (shape != null)\n\t{\n\t\treturn mxUtils.isAncestorNode(shape.node, this.getSource());\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getX\n * \n * Returns <evt.clientX>.\n */\nmxMouseEvent.prototype.getX = function()\n{\n\treturn mxEvent.getClientX(this.getEvent());\n};\n\n/**\n * Function: getY\n * \n * Returns <evt.clientY>.\n */\nmxMouseEvent.prototype.getY = function()\n{\n\treturn mxEvent.getClientY(this.getEvent());\n};\n\n/**\n * Function: getGraphX\n * \n * Returns <graphX>.\n */\nmxMouseEvent.prototype.getGraphX = function()\n{\n\treturn this.graphX;\n};\n\n/**\n * Function: getGraphY\n * \n * Returns <graphY>.\n */\nmxMouseEvent.prototype.getGraphY = function()\n{\n\treturn this.graphY;\n};\n\n/**\n * Function: getState\n * \n * Returns <state>.\n */\nmxMouseEvent.prototype.getState = function()\n{\n\treturn this.state;\n};\n\n/**\n * Function: getCell\n * \n * Returns the <mxCell> in <state> is not null.\n */\nmxMouseEvent.prototype.getCell = function()\n{\n\tvar state = this.getState();\n\t\n\tif (state != null)\n\t{\n\t\treturn state.cell;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: isPopupTrigger\n *\n * Returns true if the event is a popup trigger.\n */\nmxMouseEvent.prototype.isPopupTrigger = function()\n{\n\treturn mxEvent.isPopupTrigger(this.getEvent());\n};\n\n/**\n * Function: isConsumed\n *\n * Returns <consumed>.\n */\nmxMouseEvent.prototype.isConsumed = function()\n{\n\treturn this.consumed;\n};\n\n/**\n * Function: consume\n *\n * Sets <consumed> to true and invokes preventDefault on the native event\n * if such a method is defined. This is used mainly to avoid the cursor from\n * being changed to a text cursor in Webkit. You can use the preventDefault\n * flag to disable this functionality.\n * \n * Parameters:\n * \n * preventDefault - Specifies if the native event should be canceled. Default\n * is true.\n */\nmxMouseEvent.prototype.consume = function(preventDefault)\n{\n\tpreventDefault = (preventDefault != null) ? preventDefault :\n\t\t(this.evt.touches != null || mxEvent.isMouseEvent(this.evt));\n\t\n\tif (preventDefault && this.evt.preventDefault)\n\t{\n\t\tthis.evt.preventDefault();\n\t}\n\n\t// Workaround for images being dragged in IE\n\t// Does not change returnValue in Opera\n\tif (mxClient.IS_IE)\n\t{\n\t\tthis.evt.returnValue = true;\n\t}\n\n\t// Sets local consumed state\n\tthis.consumed = true;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEventSource\n *\n * Base class for objects that dispatch named events. To create a subclass that\n * inherits from mxEventSource, the following code is used.\n *\n * (code)\n * function MyClass() { };\n *\n * MyClass.prototype = new mxEventSource();\n * MyClass.prototype.constructor = MyClass;\n * (end)\n *\n * Known Subclasses:\n *\n * <mxGraphModel>, <mxGraph>, <mxGraphView>, <mxEditor>, <mxCellOverlay>,\n * <mxToolbar>, <mxWindow>\n * \n * Constructor: mxEventSource\n *\n * Constructs a new event source.\n */\nfunction mxEventSource(eventSource)\n{\n\tthis.setEventSource(eventSource);\n};\n\n/**\n * Variable: eventListeners\n *\n * Holds the event names and associated listeners in an array. The array\n * contains the event name followed by the respective listener for each\n * registered listener.\n */\nmxEventSource.prototype.eventListeners = null;\n\n/**\n * Variable: eventsEnabled\n *\n * Specifies if events can be fired. Default is true.\n */\nmxEventSource.prototype.eventsEnabled = true;\n\n/**\n * Variable: eventSource\n *\n * Optional source for events. Default is null.\n */\nmxEventSource.prototype.eventSource = null;\n\n/**\n * Function: isEventsEnabled\n * \n * Returns <eventsEnabled>.\n */\nmxEventSource.prototype.isEventsEnabled = function()\n{\n\treturn this.eventsEnabled;\n};\n\n/**\n * Function: setEventsEnabled\n * \n * Sets <eventsEnabled>.\n */\nmxEventSource.prototype.setEventsEnabled = function(value)\n{\n\tthis.eventsEnabled = value;\n};\n\n/**\n * Function: getEventSource\n * \n * Returns <eventSource>.\n */\nmxEventSource.prototype.getEventSource = function()\n{\n\treturn this.eventSource;\n};\n\n/**\n * Function: setEventSource\n * \n * Sets <eventSource>.\n */\nmxEventSource.prototype.setEventSource = function(value)\n{\n\tthis.eventSource = value;\n};\n\n/**\n * Function: addListener\n *\n * Binds the specified function to the given event name. If no event name\n * is given, then the listener is registered for all events.\n * \n * The parameters of the listener are the sender and an <mxEventObject>.\n */\nmxEventSource.prototype.addListener = function(name, funct)\n{\n\tif (this.eventListeners == null)\n\t{\n\t\tthis.eventListeners = [];\n\t}\n\t\n\tthis.eventListeners.push(name);\n\tthis.eventListeners.push(funct);\n};\n\n/**\n * Function: removeListener\n *\n * Removes all occurrences of the given listener from <eventListeners>.\n */\nmxEventSource.prototype.removeListener = function(funct)\n{\n\tif (this.eventListeners != null)\n\t{\n\t\tvar i = 0;\n\t\t\n\t\twhile (i < this.eventListeners.length)\n\t\t{\n\t\t\tif (this.eventListeners[i+1] == funct)\n\t\t\t{\n\t\t\t\tthis.eventListeners.splice(i, 2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: fireEvent\n *\n * Dispatches the given event to the listeners which are registered for\n * the event. The sender argument is optional. The current execution scope\n * (\"this\") is used for the listener invocation (see <mxUtils.bind>).\n *\n * Example:\n *\n * (code)\n * fireEvent(new mxEventObject(\"eventName\", key1, val1, .., keyN, valN))\n * (end)\n * \n * Parameters:\n *\n * evt - <mxEventObject> that represents the event.\n * sender - Optional sender to be passed to the listener. Default value is\n * the return value of <getEventSource>.\n */\nmxEventSource.prototype.fireEvent = function(evt, sender)\n{\n\tif (this.eventListeners != null && this.isEventsEnabled())\n\t{\n\t\tif (evt == null)\n\t\t{\n\t\t\tevt = new mxEventObject();\n\t\t}\n\t\t\n\t\tif (sender == null)\n\t\t{\n\t\t\tsender = this.getEventSource();\n\t\t}\n\n\t\tif (sender == null)\n\t\t{\n\t\t\tsender = this;\n\t\t}\n\n\t\tvar args = [sender, evt];\n\t\t\n\t\tfor (var i = 0; i < this.eventListeners.length; i += 2)\n\t\t{\n\t\t\tvar listen = this.eventListeners[i];\n\t\t\t\n\t\t\tif (listen == null || listen == evt.getName())\n\t\t\t{\n\t\t\t\tthis.eventListeners[i+1].apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEvent =\n{\n\n\t/**\n\t * Class: mxEvent\n\t * \n\t * Cross-browser DOM event support. For internal event handling,\n\t * <mxEventSource> and the graph event dispatch loop in <mxGraph> are used.\n\t * \n\t * Memory Leaks:\n\t * \n\t * Use this class for adding and removing listeners to/from DOM nodes. The\n\t * <removeAllListeners> function is provided to remove all listeners that\n\t * have been added using <addListener>. The function should be invoked when\n\t * the last reference is removed in the JavaScript code, typically when the\n\t * referenced DOM node is removed from the DOM.\n\t *\n\t * Function: addListener\n\t * \n\t * Binds the function to the specified event on the given element. Use\n\t * <mxUtils.bind> in order to bind the \"this\" keyword inside the function\n\t * to a given execution scope.\n\t */\n\taddListener: function()\n\t{\n\t\tvar updateListenerList = function(element, eventName, funct)\n\t\t{\n\t\t\tif (element.mxListenerList == null)\n\t\t\t{\n\t\t\t\telement.mxListenerList = [];\n\t\t\t}\n\t\t\t\n\t\t\tvar entry = {name: eventName, f: funct};\n\t\t\telement.mxListenerList.push(entry);\n\t\t};\n\t\t\n\t\tif (window.addEventListener)\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.addEventListener(eventName, funct, false);\n\t\t\t\tupdateListenerList(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.attachEvent('on' + eventName, funct);\n\t\t\t\tupdateListenerList(element, eventName, funct);\t\t\t\t\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeListener\n\t *\n\t * Removes the specified listener from the given element.\n\t */\n\tremoveListener: function()\n\t{\n\t\tvar updateListener = function(element, eventName, funct)\n\t\t{\n\t\t\tif (element.mxListenerList != null)\n\t\t\t{\n\t\t\t\tvar listenerCount = element.mxListenerList.length;\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < listenerCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar entry = element.mxListenerList[i];\n\t\t\t\t\t\n\t\t\t\t\tif (entry.f == funct)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.mxListenerList.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (element.mxListenerList.length == 0)\n\t\t\t\t{\n\t\t\t\t\telement.mxListenerList = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tif (window.removeEventListener)\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.removeEventListener(eventName, funct, false);\n\t\t\t\tupdateListener(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.detachEvent('on' + eventName, funct);\n\t\t\t\tupdateListener(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeAllListeners\n\t * \n\t * Removes all listeners from the given element.\n\t */\n\tremoveAllListeners: function(element)\n\t{\n\t\tvar list = element.mxListenerList;\n\n\t\tif (list != null)\n\t\t{\n\t\t\twhile (list.length > 0)\n\t\t\t{\n\t\t\t\tvar entry = list[0];\n\t\t\t\tmxEvent.removeListener(element, entry.name, entry.f);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: addGestureListeners\n\t * \n\t * Adds the given listeners for touch, mouse and/or pointer events. If\n\t * <mxClient.IS_POINTER> is true then pointer events will be registered,\n\t * else the respective mouse events will be registered. If <mxClient.IS_POINTER>\n\t * is false and <mxClient.IS_TOUCH> is true then the respective touch events\n\t * will be registered as well as the mouse events.\n\t */\n\taddGestureListeners: function(node, startListener, moveListener, endListener)\n\t{\n\t\tif (startListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointerdown' : 'mousedown', startListener);\n\t\t}\n\t\t\n\t\tif (moveListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointermove' : 'mousemove', moveListener);\n\t\t}\n\t\t\n\t\tif (endListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointerup' : 'mouseup', endListener);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_POINTER && mxClient.IS_TOUCH)\n\t\t{\n\t\t\tif (startListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchstart', startListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (moveListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchmove', moveListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (endListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchend', endListener);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: removeGestureListeners\n\t * \n\t * Removes the given listeners from mousedown, mousemove, mouseup and the\n\t * respective touch events if <mxClient.IS_TOUCH> is true.\n\t */\n\tremoveGestureListeners: function(node, startListener, moveListener, endListener)\n\t{\n\t\tif (startListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointerdown' : 'mousedown', startListener);\n\t\t}\n\t\t\n\t\tif (moveListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointermove' : 'mousemove', moveListener);\n\t\t}\n\t\t\n\t\tif (endListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointerup' : 'mouseup', endListener);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_POINTER && mxClient.IS_TOUCH)\n\t\t{\n\t\t\tif (startListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchstart', startListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (moveListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchmove', moveListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (endListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchend', endListener);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: redirectMouseEvents\n\t *\n\t * Redirects the mouse events from the given DOM node to the graph dispatch\n\t * loop using the event and given state as event arguments. State can\n\t * either be an instance of <mxCellState> or a function that returns an\n\t * <mxCellState>. The down, move, up and dblClick arguments are optional\n\t * functions that take the trigger event as arguments and replace the\n\t * default behaviour.\n\t */\n\tredirectMouseEvents: function(node, graph, state, down, move, up, dblClick)\n\t{\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\treturn (typeof(state) == 'function') ? state(evt) : state;\n\t\t};\n\t\t\n\t\tmxEvent.addGestureListeners(node, function (evt)\n\t\t{\n\t\t\tif (down != null)\n\t\t\t{\n\t\t\t\tdown(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tif (move != null)\n\t\t\t{\n\t\t\t\tmove(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tif (up != null)\n\t\t\t{\n\t\t\t\tup(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t});\n\n\t\tmxEvent.addListener(node, 'dblclick', function (evt)\n\t\t{\n\t\t\tif (dblClick != null)\n\t\t\t{\n\t\t\t\tdblClick(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tvar tmp = getState(evt);\n\t\t\t\tgraph.dblClick(evt, (tmp != null) ? tmp.cell : null);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Function: release\n\t * \n\t * Removes the known listeners from the given DOM node and its descendants.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node to remove the listeners from.\n\t */\n\trelease: function(element)\n\t{\n\t\ttry\n\t\t{\n\t\t\tif (element != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeAllListeners(element);\n\t\t\t\t\n\t\t\t\tvar children = element.childNodes;\n\t\t\t\t\n\t\t\t\tif (children != null)\n\t\t\t\t{\n\t\t\t        var childCount = children.length;\n\t\t\t        \n\t\t\t        for (var i = 0; i < childCount; i += 1)\n\t\t\t        {\n\t\t\t        \tmxEvent.release(children[i]);\n\t\t\t        }\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignores errors as this is typically called in cleanup code\n\t\t}\n\t},\n\n\t/**\n\t * Function: addMouseWheelListener\n\t * \n\t * Installs the given function as a handler for mouse wheel events. The\n\t * function has two arguments: the mouse event and a boolean that specifies\n\t * if the wheel was moved up or down.\n\t * \n\t * This has been tested with IE 6 and 7, Firefox (all versions), Opera and\n\t * Safari. It does currently not work on Safari for Mac.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * mxEvent.addMouseWheelListener(function (evt, up)\n\t * {\n\t *   mxLog.show();\n\t *   mxLog.debug('mouseWheel: up='+up);\n\t * });\n\t *(end)\n\t * \n\t * Parameters:\n\t * \n\t * funct - Handler function that takes the event argument and a boolean up\n\t * argument for the mousewheel direction.\n\t * target - Target for installing the listener in Google Chrome. See \n\t * https://www.chromestatus.com/features/6662647093133312.\n\t */\n\taddMouseWheelListener: function(funct, target)\n\t{\n\t\tif (funct != null)\n\t\t{\n\t\t\tvar wheelHandler = function(evt)\n\t\t\t{\n\t\t\t\t// IE does not give an event object but the\n\t\t\t\t// global event object is the mousewheel event\n\t\t\t\t// at this point in time.\n\t\t\t\tif (evt == null)\n\t\t\t\t{\n\t\t\t\t\tevt = window.event;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar delta = 0;\n\t\t\t\t\n\t\t\t\tif (mxClient.IS_FF)\n\t\t\t\t{\n\t\t\t\t\tdelta = -evt.detail / 2;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelta = evt.wheelDelta / 120;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Handles the event using the given function\n\t\t\t\tif (delta != 0)\n\t\t\t\t{\n\t\t\t\t\tfunct(evt, delta > 0);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\t// Webkit has NS event API, but IE event name and details \n\t\t\tif (mxClient.IS_NS && document.documentMode == null)\n\t\t\t{\n\t\t\t\tvar eventName = (mxClient.IS_SF || mxClient.IS_GC) ? 'mousewheel' : 'DOMMouseScroll';\n\t\t\t\tmxEvent.addListener((mxClient.IS_GC && target != null) ? target : window,\n\t\t\t\t\teventName, wheelHandler);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxEvent.addListener(document, 'mousewheel', wheelHandler);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: disableContextMenu\n\t *\n\t * Disables the context menu for the given element.\n\t */\n\tdisableContextMenu: function(element)\n\t{\n\t\tmxEvent.addListener(element, 'contextmenu', function(evt)\n\t\t{\n\t\t\tif (evt.preventDefault)\n\t\t\t{\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t},\n\t\n\t/**\n\t * Function: getSource\n\t * \n\t * Returns the event's target or srcElement depending on the browser.\n\t */\n\tgetSource: function(evt)\n\t{\n\t\treturn (evt.srcElement != null) ? evt.srcElement : evt.target;\n\t},\n\n\t/**\n\t * Function: isConsumed\n\t * \n\t * Returns true if the event has been consumed using <consume>.\n\t */\n\tisConsumed: function(evt)\n\t{\n\t\treturn evt.isConsumed != null && evt.isConsumed;\n\t},\n\n\t/**\n\t * Function: isTouchEvent\n\t * \n\t * Returns true if the event was generated using a touch device (not a pen or mouse).\n\t */\n\tisTouchEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'touch' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_TOUCH) : ((evt.mozInputSource != null) ?\n\t\t\t\t\tevt.mozInputSource == 5 : evt.type.indexOf('touch') == 0);\n\t},\n\n\t/**\n\t * Function: isPenEvent\n\t * \n\t * Returns true if the event was generated using a pen (not a touch device or mouse).\n\t */\n\tisPenEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'pen' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_PEN) : ((evt.mozInputSource != null) ?\n\t\t\t\t\tevt.mozInputSource == 2 : evt.type.indexOf('pen') == 0);\n\t},\n\n\t/**\n\t * Function: isMultiTouchEvent\n\t * \n\t * Returns true if the event was generated using a touch device (not a pen or mouse).\n\t */\n\tisMultiTouchEvent: function(evt)\n\t{\n\t\treturn (evt.type != null && evt.type.indexOf('touch') == 0 && evt.touches != null && evt.touches.length > 1);\n\t},\n\n\t/**\n\t * Function: isMouseEvent\n\t * \n\t * Returns true if the event was generated using a mouse (not a pen or touch device).\n\t */\n\tisMouseEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'mouse' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_MOUSE) : ((evt.mozInputSource != null) ?\n\t\t\t\tevt.mozInputSource == 1 : evt.type.indexOf('mouse') == 0);\n\t},\n\t\n\t/**\n\t * Function: isLeftMouseButton\n\t * \n\t * Returns true if the left mouse button is pressed for the given event.\n\t * To check if a button is pressed during a mouseMove you should use the\n\t * <mxGraph.isMouseDown> property. Note that this returns true in Firefox\n\t * for control+left-click on the Mac.\n\t */\n\tisLeftMouseButton: function(evt)\n\t{\n\t\t// Special case for mousemove and mousedown we check the buttons\n\t\t// if it exists because which is 0 even if no button is pressed\n\t\tif ('buttons' in evt && (evt.type == 'mousedown' || evt.type == 'mousemove'))\n\t\t{\n\t\t\treturn evt.buttons == 1;\n\t\t}\n\t\telse if ('which' in evt)\n\t\t{\n\t        return evt.which === 1;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 1;\n\t    }\n\t},\n\t\n\t/**\n\t * Function: isMiddleMouseButton\n\t * \n\t * Returns true if the middle mouse button is pressed for the given event.\n\t * To check if a button is pressed during a mouseMove you should use the\n\t * <mxGraph.isMouseDown> property.\n\t */\n\tisMiddleMouseButton: function(evt)\n\t{\n\t\tif ('which' in evt)\n\t\t{\n\t        return evt.which === 2;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 4;\n\t    }\n\t},\n\t\n\t/**\n\t * Function: isRightMouseButton\n\t * \n\t * Returns true if the right mouse button was pressed. Note that this\n\t * button might not be available on some systems. For handling a popup\n\t * trigger <isPopupTrigger> should be used.\n\t */\n\tisRightMouseButton: function(evt)\n\t{\n\t\tif ('which' in evt)\n\t\t{\n\t        return evt.which === 3;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 2;\n\t    }\n\t},\n\n\t/**\n\t * Function: isPopupTrigger\n\t * \n\t * Returns true if the event is a popup trigger. This implementation\n\t * returns true if the right button or the left button and control was\n\t * pressed on a Mac.\n\t */\n\tisPopupTrigger: function(evt)\n\t{\n\t\treturn mxEvent.isRightMouseButton(evt) || (mxClient.IS_MAC && mxEvent.isControlDown(evt) &&\n\t\t\t!mxEvent.isShiftDown(evt) && !mxEvent.isMetaDown(evt) && !mxEvent.isAltDown(evt));\n\t},\n\n\t/**\n\t * Function: isShiftDown\n\t * \n\t * Returns true if the shift key is pressed for the given event.\n\t */\n\tisShiftDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.shiftKey : false;\n\t},\n\n\t/**\n\t * Function: isAltDown\n\t * \n\t * Returns true if the alt key is pressed for the given event.\n\t */\n\tisAltDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.altKey : false;\n\t},\n\n\t/**\n\t * Function: isControlDown\n\t * \n\t * Returns true if the control key is pressed for the given event.\n\t */\n\tisControlDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.ctrlKey : false;\n\t},\n\n\t/**\n\t * Function: isMetaDown\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tisMetaDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.metaKey : false;\n\t},\n\n\t/**\n\t * Function: getMainEvent\n\t * \n\t * Returns the touch or mouse event that contains the mouse coordinates.\n\t */\n\tgetMainEvent: function(e)\n\t{\n\t\tif ((e.type == 'touchstart' || e.type == 'touchmove') && e.touches != null && e.touches[0] != null)\n\t\t{\n\t\t\te = e.touches[0];\n\t\t}\n\t\telse if (e.type == 'touchend' && e.changedTouches != null && e.changedTouches[0] != null)\n\t\t{\n\t\t\te = e.changedTouches[0];\n\t\t}\n\t\t\n\t\treturn e;\n\t},\n\t\n\t/**\n\t * Function: getClientX\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tgetClientX: function(e)\n\t{\n\t\treturn mxEvent.getMainEvent(e).clientX;\n\t},\n\n\t/**\n\t * Function: getClientY\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tgetClientY: function(e)\n\t{\n\t\treturn mxEvent.getMainEvent(e).clientY;\n\t},\n\n\t/**\n\t * Function: consume\n\t * \n\t * Consumes the given event.\n\t * \n\t * Parameters:\n\t * \n\t * evt - Native event to be consumed.\n\t * preventDefault - Optional boolean to prevent the default for the event.\n\t * Default is true.\n\t * stopPropagation - Option boolean to stop event propagation. Default is\n\t * true.\n\t */\n\tconsume: function(evt, preventDefault, stopPropagation)\n\t{\n\t\tpreventDefault = (preventDefault != null) ? preventDefault : true;\n\t\tstopPropagation = (stopPropagation != null) ? stopPropagation : true;\n\t\t\n\t\tif (preventDefault)\n\t\t{\n\t\t\tif (evt.preventDefault)\n\t\t\t{\n\t\t\t\tif (stopPropagation)\n\t\t\t\t{\n\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t\telse if (stopPropagation)\n\t\t\t{\n\t\t\t\tevt.cancelBubble = true;\n\t\t\t}\n\t\t}\n\n\t\t// Opera\n\t\tevt.isConsumed = true;\n\n\t\t// Other browsers\n\t\tif (!evt.preventDefault)\n\t\t{\n\t\t\tevt.returnValue = false;\n\t\t}\n\t},\n\t\n\t//\n\t// Special handles in mouse events\n\t//\n\t\n\t/**\n\t * Variable: LABEL_HANDLE\n\t * \n\t * Index for the label handle in an mxMouseEvent. This should be a negative\n\t * value that does not interfere with any possible handle indices. Default\n\t * is -1.\n\t */\n\tLABEL_HANDLE: -1,\n\t\n\t/**\n\t * Variable: ROTATION_HANDLE\n\t * \n\t * Index for the rotation handle in an mxMouseEvent. This should be a\n\t * negative value that does not interfere with any possible handle indices.\n\t * Default is -2.\n\t */\n\tROTATION_HANDLE: -2,\n\t\n\t/**\n\t * Variable: CUSTOM_HANDLE\n\t * \n\t * Start index for the custom handles in an mxMouseEvent. This should be a\n\t * negative value and is the start index which is decremented for each\n\t * custom handle. Default is -100.\n\t */\n\tCUSTOM_HANDLE: -100,\n\t\n\t/**\n\t * Variable: VIRTUAL_HANDLE\n\t * \n\t * Start index for the virtual handles in an mxMouseEvent. This should be a\n\t * negative value and is the start index which is decremented for each\n\t * virtual handle. Default is -100000. This assumes that there are no more\n\t * than VIRTUAL_HANDLE - CUSTOM_HANDLE custom handles.\n\t * \n\t */\n\tVIRTUAL_HANDLE: -100000,\n\t\n\t//\n\t// Event names\n\t//\n\t\n\t/**\n\t * Variable: MOUSE_DOWN\n\t *\n\t * Specifies the event name for mouseDown.\n\t */\n\tMOUSE_DOWN: 'mouseDown',\n\t\n\t/**\n\t * Variable: MOUSE_MOVE\n\t *\n\t * Specifies the event name for mouseMove. \n\t */\n\tMOUSE_MOVE: 'mouseMove',\n\t\n\t/**\n\t * Variable: MOUSE_UP\n\t *\n\t * Specifies the event name for mouseUp. \n\t */\n\tMOUSE_UP: 'mouseUp',\n\n\t/**\n\t * Variable: ACTIVATE\n\t *\n\t * Specifies the event name for activate.\n\t */\n\tACTIVATE: 'activate',\n\n\t/**\n\t * Variable: RESIZE_START\n\t *\n\t * Specifies the event name for resizeStart.\n\t */\n\tRESIZE_START: 'resizeStart',\n\n\t/**\n\t * Variable: RESIZE\n\t *\n\t * Specifies the event name for resize.\n\t */\n\tRESIZE: 'resize',\n\n\t/**\n\t * Variable: RESIZE_END\n\t *\n\t * Specifies the event name for resizeEnd.\n\t */\n\tRESIZE_END: 'resizeEnd',\n\n\t/**\n\t * Variable: MOVE_START\n\t *\n\t * Specifies the event name for moveStart.\n\t */\n\tMOVE_START: 'moveStart',\n\n\t/**\n\t * Variable: MOVE\n\t *\n\t * Specifies the event name for move.\n\t */\n\tMOVE: 'move',\n\n\t/**\n\t * Variable: MOVE_END\n\t *\n\t * Specifies the event name for moveEnd.\n\t */\n\tMOVE_END: 'moveEnd',\n\n\t/**\n\t * Variable: PAN_START\n\t *\n\t * Specifies the event name for panStart.\n\t */\n\tPAN_START: 'panStart',\n\n\t/**\n\t * Variable: PAN\n\t *\n\t * Specifies the event name for pan.\n\t */\n\tPAN: 'pan',\n\n\t/**\n\t * Variable: PAN_END\n\t *\n\t * Specifies the event name for panEnd.\n\t */\n\tPAN_END: 'panEnd',\n\n\t/**\n\t * Variable: MINIMIZE\n\t *\n\t * Specifies the event name for minimize.\n\t */\n\tMINIMIZE: 'minimize',\n\n\t/**\n\t * Variable: NORMALIZE\n\t *\n\t * Specifies the event name for normalize.\n\t */\n\tNORMALIZE: 'normalize',\n\n\t/**\n\t * Variable: MAXIMIZE\n\t *\n\t * Specifies the event name for maximize.\n\t */\n\tMAXIMIZE: 'maximize',\n\n\t/**\n\t * Variable: HIDE\n\t *\n\t * Specifies the event name for hide.\n\t */\n\tHIDE: 'hide',\n\n\t/**\n\t * Variable: SHOW\n\t *\n\t * Specifies the event name for show.\n\t */\n\tSHOW: 'show',\n\n\t/**\n\t * Variable: CLOSE\n\t *\n\t * Specifies the event name for close.\n\t */\n\tCLOSE: 'close',\n\n\t/**\n\t * Variable: DESTROY\n\t *\n\t * Specifies the event name for destroy.\n\t */\n\tDESTROY: 'destroy',\n\n\t/**\n\t * Variable: REFRESH\n\t *\n\t * Specifies the event name for refresh.\n\t */\n\tREFRESH: 'refresh',\n\n\t/**\n\t * Variable: SIZE\n\t *\n\t * Specifies the event name for size.\n\t */\n\tSIZE: 'size',\n\t\n\t/**\n\t * Variable: SELECT\n\t *\n\t * Specifies the event name for select.\n\t */\n\tSELECT: 'select',\n\n\t/**\n\t * Variable: FIRED\n\t *\n\t * Specifies the event name for fired.\n\t */\n\tFIRED: 'fired',\n\n\t/**\n\t * Variable: FIRE_MOUSE_EVENT\n\t *\n\t * Specifies the event name for fireMouseEvent.\n\t */\n\tFIRE_MOUSE_EVENT: 'fireMouseEvent',\n\n\t/**\n\t * Variable: GESTURE\n\t *\n\t * Specifies the event name for gesture.\n\t */\n\tGESTURE: 'gesture',\n\n\t/**\n\t * Variable: TAP_AND_HOLD\n\t *\n\t * Specifies the event name for tapAndHold.\n\t */\n\tTAP_AND_HOLD: 'tapAndHold',\n\n\t/**\n\t * Variable: GET\n\t *\n\t * Specifies the event name for get.\n\t */\n\tGET: 'get',\n\n\t/**\n\t * Variable: RECEIVE\n\t *\n\t * Specifies the event name for receive.\n\t */\n\tRECEIVE: 'receive',\n\n\t/**\n\t * Variable: CONNECT\n\t *\n\t * Specifies the event name for connect.\n\t */\n\tCONNECT: 'connect',\n\n\t/**\n\t * Variable: DISCONNECT\n\t *\n\t * Specifies the event name for disconnect.\n\t */\n\tDISCONNECT: 'disconnect',\n\n\t/**\n\t * Variable: SUSPEND\n\t *\n\t * Specifies the event name for suspend.\n\t */\n\tSUSPEND: 'suspend',\n\n\t/**\n\t * Variable: RESUME\n\t *\n\t * Specifies the event name for suspend.\n\t */\n\tRESUME: 'resume',\n\n\t/**\n\t * Variable: MARK\n\t *\n\t * Specifies the event name for mark.\n\t */\n\tMARK: 'mark',\n\n\t/**\n\t * Variable: ROOT\n\t *\n\t * Specifies the event name for root.\n\t */\n\tROOT: 'root',\n\n\t/**\n\t * Variable: POST\n\t *\n\t * Specifies the event name for post.\n\t */\n\tPOST: 'post',\n\n\t/**\n\t * Variable: OPEN\n\t *\n\t * Specifies the event name for open.\n\t */\n\tOPEN: 'open',\n\n\t/**\n\t * Variable: SAVE\n\t *\n\t * Specifies the event name for open.\n\t */\n\tSAVE: 'save',\n\n\t/**\n\t * Variable: BEFORE_ADD_VERTEX\n\t *\n\t * Specifies the event name for beforeAddVertex.\n\t */\n\tBEFORE_ADD_VERTEX: 'beforeAddVertex',\n\n\t/**\n\t * Variable: ADD_VERTEX\n\t *\n\t * Specifies the event name for addVertex.\n\t */\n\tADD_VERTEX: 'addVertex',\n\n\t/**\n\t * Variable: AFTER_ADD_VERTEX\n\t *\n\t * Specifies the event name for afterAddVertex.\n\t */\n\tAFTER_ADD_VERTEX: 'afterAddVertex',\n\n\t/**\n\t * Variable: DONE\n\t *\n\t * Specifies the event name for done.\n\t */\n\tDONE: 'done',\n\n\t/**\n\t * Variable: EXECUTE\n\t *\n\t * Specifies the event name for execute.\n\t */\n\tEXECUTE: 'execute',\n\n\t/**\n\t * Variable: EXECUTED\n\t *\n\t * Specifies the event name for executed.\n\t */\n\tEXECUTED: 'executed',\n\n\t/**\n\t * Variable: BEGIN_UPDATE\n\t *\n\t * Specifies the event name for beginUpdate.\n\t */\n\tBEGIN_UPDATE: 'beginUpdate',\n\n\t/**\n\t * Variable: START_EDIT\n\t *\n\t * Specifies the event name for startEdit.\n\t */\n\tSTART_EDIT: 'startEdit',\n\n\t/**\n\t * Variable: END_UPDATE\n\t *\n\t * Specifies the event name for endUpdate.\n\t */\n\tEND_UPDATE: 'endUpdate',\n\n\t/**\n\t * Variable: END_EDIT\n\t *\n\t * Specifies the event name for endEdit.\n\t */\n\tEND_EDIT: 'endEdit',\n\n\t/**\n\t * Variable: BEFORE_UNDO\n\t *\n\t * Specifies the event name for beforeUndo.\n\t */\n\tBEFORE_UNDO: 'beforeUndo',\n\n\t/**\n\t * Variable: UNDO\n\t *\n\t * Specifies the event name for undo.\n\t */\n\tUNDO: 'undo',\n\n\t/**\n\t * Variable: REDO\n\t *\n\t * Specifies the event name for redo.\n\t */\n\tREDO: 'redo',\n\n\t/**\n\t * Variable: CHANGE\n\t *\n\t * Specifies the event name for change.\n\t */\n\tCHANGE: 'change',\n\n\t/**\n\t * Variable: NOTIFY\n\t *\n\t * Specifies the event name for notify.\n\t */\n\tNOTIFY: 'notify',\n\n\t/**\n\t * Variable: LAYOUT_CELLS\n\t *\n\t * Specifies the event name for layoutCells.\n\t */\n\tLAYOUT_CELLS: 'layoutCells',\n\n\t/**\n\t * Variable: CLICK\n\t *\n\t * Specifies the event name for click.\n\t */\n\tCLICK: 'click',\n\n\t/**\n\t * Variable: SCALE\n\t *\n\t * Specifies the event name for scale.\n\t */\n\tSCALE: 'scale',\n\n\t/**\n\t * Variable: TRANSLATE\n\t *\n\t * Specifies the event name for translate.\n\t */\n\tTRANSLATE: 'translate',\n\n\t/**\n\t * Variable: SCALE_AND_TRANSLATE\n\t *\n\t * Specifies the event name for scaleAndTranslate.\n\t */\n\tSCALE_AND_TRANSLATE: 'scaleAndTranslate',\n\n\t/**\n\t * Variable: UP\n\t *\n\t * Specifies the event name for up.\n\t */\n\tUP: 'up',\n\n\t/**\n\t * Variable: DOWN\n\t *\n\t * Specifies the event name for down.\n\t */\n\tDOWN: 'down',\n\n\t/**\n\t * Variable: ADD\n\t *\n\t * Specifies the event name for add.\n\t */\n\tADD: 'add',\n\n\t/**\n\t * Variable: REMOVE\n\t *\n\t * Specifies the event name for remove.\n\t */\n\tREMOVE: 'remove',\n\t\n\t/**\n\t * Variable: CLEAR\n\t *\n\t * Specifies the event name for clear.\n\t */\n\tCLEAR: 'clear',\n\n\t/**\n\t * Variable: ADD_CELLS\n\t *\n\t * Specifies the event name for addCells.\n\t */\n\tADD_CELLS: 'addCells',\n\n\t/**\n\t * Variable: CELLS_ADDED\n\t *\n\t * Specifies the event name for cellsAdded.\n\t */\n\tCELLS_ADDED: 'cellsAdded',\n\n\t/**\n\t * Variable: MOVE_CELLS\n\t *\n\t * Specifies the event name for moveCells.\n\t */\n\tMOVE_CELLS: 'moveCells',\n\n\t/**\n\t * Variable: CELLS_MOVED\n\t *\n\t * Specifies the event name for cellsMoved.\n\t */\n\tCELLS_MOVED: 'cellsMoved',\n\n\t/**\n\t * Variable: RESIZE_CELLS\n\t *\n\t * Specifies the event name for resizeCells.\n\t */\n\tRESIZE_CELLS: 'resizeCells',\n\n\t/**\n\t * Variable: CELLS_RESIZED\n\t *\n\t * Specifies the event name for cellsResized.\n\t */\n\tCELLS_RESIZED: 'cellsResized',\n\n\t/**\n\t * Variable: TOGGLE_CELLS\n\t *\n\t * Specifies the event name for toggleCells.\n\t */\n\tTOGGLE_CELLS: 'toggleCells',\n\n\t/**\n\t * Variable: CELLS_TOGGLED\n\t *\n\t * Specifies the event name for cellsToggled.\n\t */\n\tCELLS_TOGGLED: 'cellsToggled',\n\n\t/**\n\t * Variable: ORDER_CELLS\n\t *\n\t * Specifies the event name for orderCells.\n\t */\n\tORDER_CELLS: 'orderCells',\n\n\t/**\n\t * Variable: CELLS_ORDERED\n\t *\n\t * Specifies the event name for cellsOrdered.\n\t */\n\tCELLS_ORDERED: 'cellsOrdered',\n\n\t/**\n\t * Variable: REMOVE_CELLS\n\t *\n\t * Specifies the event name for removeCells.\n\t */\n\tREMOVE_CELLS: 'removeCells',\n\n\t/**\n\t * Variable: CELLS_REMOVED\n\t *\n\t * Specifies the event name for cellsRemoved.\n\t */\n\tCELLS_REMOVED: 'cellsRemoved',\n\n\t/**\n\t * Variable: GROUP_CELLS\n\t *\n\t * Specifies the event name for groupCells.\n\t */\n\tGROUP_CELLS: 'groupCells',\n\n\t/**\n\t * Variable: UNGROUP_CELLS\n\t *\n\t * Specifies the event name for ungroupCells.\n\t */\n\tUNGROUP_CELLS: 'ungroupCells',\n\n\t/**\n\t * Variable: REMOVE_CELLS_FROM_PARENT\n\t *\n\t * Specifies the event name for removeCellsFromParent.\n\t */\n\tREMOVE_CELLS_FROM_PARENT: 'removeCellsFromParent',\n\n\t/**\n\t * Variable: FOLD_CELLS\n\t *\n\t * Specifies the event name for foldCells.\n\t */\n\tFOLD_CELLS: 'foldCells',\n\n\t/**\n\t * Variable: CELLS_FOLDED\n\t *\n\t * Specifies the event name for cellsFolded.\n\t */\n\tCELLS_FOLDED: 'cellsFolded',\n\n\t/**\n\t * Variable: ALIGN_CELLS\n\t *\n\t * Specifies the event name for alignCells.\n\t */\n\tALIGN_CELLS: 'alignCells',\n\n\t/**\n\t * Variable: LABEL_CHANGED\n\t *\n\t * Specifies the event name for labelChanged.\n\t */\n\tLABEL_CHANGED: 'labelChanged',\n\n\t/**\n\t * Variable: CONNECT_CELL\n\t *\n\t * Specifies the event name for connectCell.\n\t */\n\tCONNECT_CELL: 'connectCell',\n\n\t/**\n\t * Variable: CELL_CONNECTED\n\t *\n\t * Specifies the event name for cellConnected.\n\t */\n\tCELL_CONNECTED: 'cellConnected',\n\n\t/**\n\t * Variable: SPLIT_EDGE\n\t *\n\t * Specifies the event name for splitEdge.\n\t */\n\tSPLIT_EDGE: 'splitEdge',\n\n\t/**\n\t * Variable: FLIP_EDGE\n\t *\n\t * Specifies the event name for flipEdge.\n\t */\n\tFLIP_EDGE: 'flipEdge',\n\n\t/**\n\t * Variable: START_EDITING\n\t *\n\t * Specifies the event name for startEditing.\n\t */\n\tSTART_EDITING: 'startEditing',\n\n\t/**\n\t * Variable: EDITING_STARTED\n\t *\n\t * Specifies the event name for editingStarted.\n\t */\n\tEDITING_STARTED: 'editingStarted',\n\n\t/**\n\t * Variable: EDITING_STOPPED\n\t *\n\t * Specifies the event name for editingStopped.\n\t */\n\tEDITING_STOPPED: 'editingStopped',\n\n\t/**\n\t * Variable: ADD_OVERLAY\n\t *\n\t * Specifies the event name for addOverlay.\n\t */\n\tADD_OVERLAY: 'addOverlay',\n\n\t/**\n\t * Variable: REMOVE_OVERLAY\n\t *\n\t * Specifies the event name for removeOverlay.\n\t */\n\tREMOVE_OVERLAY: 'removeOverlay',\n\n\t/**\n\t * Variable: UPDATE_CELL_SIZE\n\t *\n\t * Specifies the event name for updateCellSize.\n\t */\n\tUPDATE_CELL_SIZE: 'updateCellSize',\n\n\t/**\n\t * Variable: ESCAPE\n\t *\n\t * Specifies the event name for escape.\n\t */\n\tESCAPE: 'escape',\n\n\t/**\n\t * Variable: DOUBLE_CLICK\n\t *\n\t * Specifies the event name for doubleClick.\n\t */\n\tDOUBLE_CLICK: 'doubleClick',\n\n\t/**\n\t * Variable: START\n\t *\n\t * Specifies the event name for start.\n\t */\n\tSTART: 'start',\n\n\t/**\n\t * Variable: RESET\n\t *\n\t * Specifies the event name for reset.\n\t */\n\tRESET: 'reset'\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxXmlRequest\n * \n * XML HTTP request wrapper. See also: <mxUtils.get>, <mxUtils.post> and\n * <mxUtils.load>. This class provides a cross-browser abstraction for Ajax\n * requests.\n * \n * Encoding:\n * \n * For encoding parameter values, the built-in encodeURIComponent JavaScript\n * method must be used. For automatic encoding of post data in <mxEditor> the\n * <mxEditor.escapePostData> switch can be set to true (default). The encoding\n * will be carried out using the conte type of the page. That is, the page\n * containting the editor should contain a meta tag in the header, eg.\n * <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n * \n * Example:\n * \n * (code)\n * var onload = function(req)\n * {\n *   mxUtils.alert(req.getDocumentElement());\n * }\n * \n * var onerror = function(req)\n * {\n *   mxUtils.alert('Error');\n * }\n * new mxXmlRequest(url, 'key=value').send(onload, onerror);\n * (end)\n * \n * Sends an asynchronous POST request to the specified URL.\n * \n * Example:\n * \n * (code)\n * var req = new mxXmlRequest(url, 'key=value', 'POST', false);\n * req.send();\n * mxUtils.alert(req.getDocumentElement());\n * (end)\n * \n * Sends a synchronous POST request to the specified URL.\n * \n * Example:\n * \n * (code)\n * var encoder = new mxCodec();\n * var result = encoder.encode(graph.getModel());\n * var xml = encodeURIComponent(mxUtils.getXml(result));\n * new mxXmlRequest(url, 'xml='+xml).send();\n * (end)\n * \n * Sends an encoded graph model to the specified URL using xml as the\n * parameter name. The parameter can then be retrieved in C# as follows:\n * \n * (code)\n * string xml = HttpUtility.UrlDecode(context.Request.Params[\"xml\"]);\n * (end)\n * \n * Or in Java as follows:\n * \n * (code)\n * String xml = URLDecoder.decode(request.getParameter(\"xml\"), \"UTF-8\").replace(\"\\n\", \"&#xa;\");\n * (end)\n *\n * Note that the linefeeds should only be replaced if the XML is\n * processed in Java, for example when creating an image.\n * \n * Constructor: mxXmlRequest\n * \n * Constructs an XML HTTP request.\n * \n * Parameters:\n * \n * url - Target URL of the request.\n * params - Form encoded parameters to send with a POST request.\n * method - String that specifies the request method. Possible values are\n * POST and GET. Default is POST.\n * async - Boolean specifying if an asynchronous request should be used.\n * Default is true.\n * username - String specifying the username to be used for the request.\n * password - String specifying the password to be used for the request.\n */\nfunction mxXmlRequest(url, params, method, async, username, password)\n{\n\tthis.url = url;\n\tthis.params = params;\n\tthis.method = method || 'POST';\n\tthis.async = (async != null) ? async : true;\n\tthis.username = username;\n\tthis.password = password;\n};\n\n/**\n * Variable: url\n * \n * Holds the target URL of the request.\n */\nmxXmlRequest.prototype.url = null;\n\n/**\n * Variable: params\n * \n * Holds the form encoded data for the POST request.\n */\nmxXmlRequest.prototype.params = null;\n\n/**\n * Variable: method\n * \n * Specifies the request method. Possible values are POST and GET. Default\n * is POST.\n */\nmxXmlRequest.prototype.method = null;\n\n/**\n * Variable: async\n * \n * Boolean indicating if the request is asynchronous.\n */\nmxXmlRequest.prototype.async = null;\n\n/**\n * Variable: binary\n * \n * Boolean indicating if the request is binary. This option is ignored in IE.\n * In all other browsers the requested mime type is set to\n * text/plain; charset=x-user-defined. Default is false.\n */\nmxXmlRequest.prototype.binary = false;\n\n/**\n * Variable: withCredentials\n * \n * Specifies if withCredentials should be used in HTML5-compliant browsers. Default is\n * false.\n */\nmxXmlRequest.prototype.withCredentials = false;\n\n/**\n * Variable: username\n * \n * Specifies the username to be used for authentication.\n */\nmxXmlRequest.prototype.username = null;\n\n/**\n * Variable: password\n * \n * Specifies the password to be used for authentication.\n */\nmxXmlRequest.prototype.password = null;\n\n/**\n * Variable: request\n * \n * Holds the inner, browser-specific request object.\n */\nmxXmlRequest.prototype.request = null;\n\n/**\n * Variable: decodeSimulateValues\n * \n * Specifies if request values should be decoded as URIs before setting the\n * textarea value in <simulate>. Defaults to false for backwards compatibility,\n * to avoid another decode on the server this should be set to true.\n */\nmxXmlRequest.prototype.decodeSimulateValues = false;\n\n/**\n * Function: isBinary\n * \n * Returns <binary>.\n */\nmxXmlRequest.prototype.isBinary = function()\n{\n\treturn this.binary;\n};\n\n/**\n * Function: setBinary\n * \n * Sets <binary>.\n */\nmxXmlRequest.prototype.setBinary = function(value)\n{\n\tthis.binary = value;\n};\n\n/**\n * Function: getText\n * \n * Returns the response as a string.\n */\nmxXmlRequest.prototype.getText = function()\n{\n\treturn this.request.responseText;\n};\n\n/**\n * Function: isReady\n * \n * Returns true if the response is ready.\n */\nmxXmlRequest.prototype.isReady = function()\n{\n\treturn this.request.readyState == 4;\n};\n\n/**\n * Function: getDocumentElement\n * \n * Returns the document element of the response XML document.\n */\nmxXmlRequest.prototype.getDocumentElement = function()\n{\n\tvar doc = this.getXml();\n\t\n\tif (doc != null)\n\t{\n\t\treturn doc.documentElement;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getXml\n * \n * Returns the response as an XML document. Use <getDocumentElement> to get\n * the document element of the XML document.\n */\nmxXmlRequest.prototype.getXml = function()\n{\n\tvar xml = this.request.responseXML;\n\t\n\t// Handles missing response headers in IE, the first condition handles\n\t// the case where responseXML is there, but using its nodes leads to\n\t// type errors in the mxCellCodec when putting the nodes into a new\n\t// document. This happens in IE9 standards mode and with XML user\n\t// objects only, as they are used directly as values in cells.\n\tif (document.documentMode >= 9 || xml == null || xml.documentElement == null)\n\t{\n\t\txml = mxUtils.parseXml(this.request.responseText);\n\t}\n\t\n\treturn xml;\n};\n\n/**\n * Function: getText\n * \n * Returns the response as a string.\n */\nmxXmlRequest.prototype.getText = function()\n{\n\treturn this.request.responseText;\n};\n\n/**\n * Function: getStatus\n * \n * Returns the status as a number, eg. 404 for \"Not found\" or 200 for \"OK\".\n * Note: The NS_ERROR_NOT_AVAILABLE for invalid responses cannot be cought.\n */\nmxXmlRequest.prototype.getStatus = function()\n{\n\treturn this.request.status;\n};\n\n/**\n * Function: create\n * \n * Creates and returns the inner <request> object.\n */\nmxXmlRequest.prototype.create = function()\n{\n\tif (window.XMLHttpRequest)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\tvar req = new XMLHttpRequest();\n\t\t\t\n\t\t\t// TODO: Check for overrideMimeType required here?\n\t\t\tif (this.isBinary() && req.overrideMimeType)\n\t\t\t{\n\t\t\t\treq.overrideMimeType('text/plain; charset=x-user-defined');\n\t\t\t}\n\n\t\t\treturn req;\n\t\t};\n\t}\n\telse if (typeof(ActiveXObject) != 'undefined')\n\t{\n\t\treturn function()\n\t\t{\n\t\t\t// TODO: Implement binary option\n\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\n\t\t};\n\t}\n}();\n\n/**\n * Function: send\n * \n * Send the <request> to the target URL using the specified functions to\n * process the response asychronously.\n * \n * Note: Due to technical limitations, onerror is currently ignored.\n * \n * Parameters:\n * \n * onload - Function to be invoked if a successful response was received.\n * onerror - Function to be called on any error.\n * timeout - Optional timeout in ms before calling ontimeout.\n * ontimeout - Optional function to execute on timeout.\n */\nmxXmlRequest.prototype.send = function(onload, onerror, timeout, ontimeout)\n{\n\tthis.request = this.create();\n\t\n\tif (this.request != null)\n\t{\n\t\tif (onload != null)\n\t\t{\n\t\t\tthis.request.onreadystatechange = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tif (this.isReady())\n\t\t\t\t{\n\t\t\t\t\tonload(this);\n\t\t\t\t\tthis.request.onreadystatechaange = null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.request.open(this.method, this.url, this.async,\n\t\t\tthis.username, this.password);\n\t\tthis.setRequestHeaders(this.request, this.params);\n\t\t\n\t\tif (window.XMLHttpRequest && this.withCredentials)\n\t\t{\n\t\t\tthis.request.withCredentials = 'true';\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_QUIRKS && (document.documentMode == null || document.documentMode > 9) &&\n\t\t\twindow.XMLHttpRequest && timeout != null && ontimeout != null)\n\t\t{\n\t\t\tthis.request.timeout = timeout;\n\t\t\tthis.request.ontimeout = ontimeout;\n\t\t}\n\t\t\t\t\n\t\tthis.request.send(this.params);\n\t}\n};\n\n/**\n * Function: setRequestHeaders\n * \n * Sets the headers for the given request and parameters. This sets the\n * content-type to application/x-www-form-urlencoded if any params exist.\n * \n * Example:\n * \n * (code)\n * request.setRequestHeaders = function(request, params)\n * {\n *   if (params != null)\n *   {\n *     request.setRequestHeader('Content-Type',\n *             'multipart/form-data');\n *     request.setRequestHeader('Content-Length',\n *             params.length);\n *   }\n * };\n * (end)\n * \n * Use the code above before calling <send> if you require a\n * multipart/form-data request.   \n */\nmxXmlRequest.prototype.setRequestHeaders = function(request, params)\n{\n\tif (params != null)\n\t{\n\t\trequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t}\n};\n\n/**\n * Function: simulate\n * \n * Creates and posts a request to the given target URL using a dynamically\n * created form inside the given document.\n * \n * Parameters:\n * \n * docs - Document that contains the form element.\n * target - Target to send the form result to.\n */\nmxXmlRequest.prototype.simulate = function(doc, target)\n{\n\tdoc = doc || document;\n\tvar old = null;\n\n\tif (doc == document)\n\t{\n\t\told = window.onbeforeunload;\t\t\n\t\twindow.onbeforeunload = null;\n\t}\n\t\t\t\n\tvar form = doc.createElement('form');\n\tform.setAttribute('method', this.method);\n\tform.setAttribute('action', this.url);\n\n\tif (target != null)\n\t{\n\t\tform.setAttribute('target', target);\n\t}\n\n\tform.style.display = 'none';\n\tform.style.visibility = 'hidden';\n\t\n\tvar pars = (this.params.indexOf('&') > 0) ?\n\t\tthis.params.split('&') :\n\t\tthis.params.split();\n\n\t// Adds the parameters as textareas to the form\n\tfor (var i=0; i<pars.length; i++)\n\t{\n\t\tvar pos = pars[i].indexOf('=');\n\t\t\n\t\tif (pos > 0)\n\t\t{\n\t\t\tvar name = pars[i].substring(0, pos);\n\t\t\tvar value = pars[i].substring(pos+1);\n\t\t\t\n\t\t\tif (this.decodeSimulateValues)\n\t\t\t{\n\t\t\t\tvalue = decodeURIComponent(value);\n\t\t\t}\n\t\t\t\n\t\t\tvar textarea = doc.createElement('textarea');\n\t\t\ttextarea.setAttribute('wrap', 'off');\n\t\t\ttextarea.setAttribute('name', name);\n\t\t\tmxUtils.write(textarea, value);\n\t\t\tform.appendChild(textarea);\n\t\t}\n\t}\n\t\n\tdoc.body.appendChild(form);\n\tform.submit();\n\t\n\tif (form.parentNode != null)\n\t{\n\t\tform.parentNode.removeChild(form);\n\t}\n\n\tif (old != null)\n\t{\t\t\n\t\twindow.onbeforeunload = old;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxClipboard =\n{\n\t/**\n\t * Class: mxClipboard\n\t * \n\t * Singleton that implements a clipboard for graph cells.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxClipboard.copy(graph);\n\t * mxClipboard.paste(graph2);\n\t * (end)\n\t *\n\t * This copies the selection cells from the graph to the clipboard and\n\t * pastes them into graph2.\n\t * \n\t * For fine-grained control of the clipboard data the <mxGraph.canExportCell>\n\t * and <mxGraph.canImportCell> functions can be overridden.\n\t * \n\t * To restore previous parents for pasted cells, the implementation for\n\t * <copy> and <paste> can be changed as follows.\n\t * \n\t * (code)\n\t * mxClipboard.copy = function(graph, cells)\n\t * {\n\t *   cells = cells || graph.getSelectionCells();\n\t *   var result = graph.getExportableCells(cells);\n\t *   \n\t *   mxClipboard.parents = new Object();\n\t *   \n\t *   for (var i = 0; i < result.length; i++)\n\t *   {\n\t *     mxClipboard.parents[i] = graph.model.getParent(cells[i]);\n\t *   }\n\t *   \n\t *   mxClipboard.insertCount = 1;\n\t *   mxClipboard.setCells(graph.cloneCells(result));\n\t *   \n\t *   return result;\n\t * };\n\t * \n\t * mxClipboard.paste = function(graph)\n\t * {\n\t *   if (!mxClipboard.isEmpty())\n\t *   {\n\t *     var cells = graph.getImportableCells(mxClipboard.getCells());\n\t *     var delta = mxClipboard.insertCount * mxClipboard.STEPSIZE;\n\t *     var parent = graph.getDefaultParent();\n\t *     \n\t *     graph.model.beginUpdate();\n\t *     try\n\t *     {\n\t *       for (var i = 0; i < cells.length; i++)\n\t *       {\n\t *         var tmp = (mxClipboard.parents != null && graph.model.contains(mxClipboard.parents[i])) ?\n\t *              mxClipboard.parents[i] : parent;\n\t *         cells[i] = graph.importCells([cells[i]], delta, delta, tmp)[0];\n\t *       }\n\t *     }\n\t *     finally\n\t *     {\n\t *       graph.model.endUpdate();\n\t *     }\n\t *     \n\t *     // Increments the counter and selects the inserted cells\n\t *     mxClipboard.insertCount++;\n\t *     graph.setSelectionCells(cells);\n\t *   }\n\t * };\n\t * (end)\n\t * \n\t * Variable: STEPSIZE\n\t * \n\t * Defines the step size to offset the cells after each paste operation.\n\t * Default is 10.\n\t */\n\tSTEPSIZE: 10,\n\n\t/**\n\t * Variable: insertCount\n\t * \n\t * Counts the number of times the clipboard data has been inserted.\n\t */\n\tinsertCount: 1,\n\n\t/**\n\t * Variable: cells\n\t * \n\t * Holds the array of <mxCells> currently in the clipboard.\n\t */\n\tcells: null,\n\n\t/**\n\t * Function: setCells\n\t * \n\t * Sets the cells in the clipboard. Fires a <mxEvent.CHANGE> event.\n\t */\n\tsetCells: function(cells)\n\t{\n\t\tmxClipboard.cells = cells;\n\t},\n\n\t/**\n\t * Function: getCells\n\t * \n\t * Returns  the cells in the clipboard.\n\t */\n\tgetCells: function()\n\t{\n\t\treturn mxClipboard.cells;\n\t},\n\t\n\t/**\n\t * Function: isEmpty\n\t * \n\t * Returns true if the clipboard currently has not data stored.\n\t */\n\tisEmpty: function()\n\t{\n\t\treturn mxClipboard.getCells() == null;\n\t},\n\t\n\t/**\n\t * Function: cut\n\t * \n\t * Cuts the given array of <mxCells> from the specified graph.\n\t * If cells is null then the selection cells of the graph will\n\t * be used. Returns the cells that have been cut from the graph.\n\t *\n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be cut.\n\t * cells - Optional array of <mxCells> to be cut.\n\t */\n\tcut: function(graph, cells)\n\t{\n\t\tcells = mxClipboard.copy(graph, cells);\n\t\tmxClipboard.insertCount = 0;\n\t\tmxClipboard.removeCells(graph, cells);\n\t\t\n\t\treturn cells;\n\t},\n\n\t/**\n\t * Function: removeCells\n\t * \n\t * Hook to remove the given cells from the given graph after\n\t * a cut operation.\n\t *\n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be cut.\n\t * cells - Array of <mxCells> to be cut.\n\t */\n\tremoveCells: function(graph, cells)\n\t{\n\t\tgraph.removeCells(cells);\n\t},\n\n\t/**\n\t * Function: copy\n\t * \n\t * Copies the given array of <mxCells> from the specified\n\t * graph to <cells>. Returns the original array of cells that has\n\t * been cloned. Descendants of cells in the array are ignored.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be copied.\n\t * cells - Optional array of <mxCells> to be copied.\n\t */\n\tcopy: function(graph, cells)\n\t{\n\t\tcells = cells || graph.getSelectionCells();\n\t\tvar result = graph.getExportableCells(graph.model.getTopmostCells(cells));\n\t\tmxClipboard.insertCount = 1;\n\t\tmxClipboard.setCells(graph.cloneCells(result));\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: paste\n\t * \n\t * Pastes the <cells> into the specified graph restoring\n\t * the relation to <parents>, if possible. If the parents\n\t * are no longer in the graph or invisible then the\n\t * cells are added to the graph's default or into the\n\t * swimlane under the cell's new location if one exists.\n\t * The cells are added to the graph using <mxGraph.importCells>\n\t * and returned.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to paste the <cells> into.\n\t */\n\tpaste: function(graph)\n\t{\n\t\tvar cells = null;\n\t\t\n\t\tif (!mxClipboard.isEmpty())\n\t\t{\n\t\t\tcells = graph.getImportableCells(mxClipboard.getCells());\n\t\t\tvar delta = mxClipboard.insertCount * mxClipboard.STEPSIZE;\n\t\t\tvar parent = graph.getDefaultParent();\n\t\t\tcells = graph.importCells(cells, delta, delta, parent);\n\t\t\t\n\t\t\t// Increments the counter and selects the inserted cells\n\t\t\tmxClipboard.insertCount++;\n\t\t\tgraph.setSelectionCells(cells);\n\t\t}\n\t\t\n\t\treturn cells;\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxWindow\n * \n * Basic window inside a document.\n * \n * Examples:\n * \n * Creating a simple window.\n *\n * (code)\n * var tb = document.createElement('div');\n * var wnd = new mxWindow('Title', tb, 100, 100, 200, 200, true, true);\n * wnd.setVisible(true); \n * (end)\n *\n * Creating a window that contains an iframe. \n * \n * (code)\n * var frame = document.createElement('iframe');\n * frame.setAttribute('width', '192px');\n * frame.setAttribute('height', '172px');\n * frame.setAttribute('src', 'http://www.example.com/');\n * frame.style.backgroundColor = 'white';\n * \n * var w = document.body.clientWidth;\n * var h = (document.body.clientHeight || document.documentElement.clientHeight);\n * var wnd = new mxWindow('Title', frame, (w-200)/2, (h-200)/3, 200, 200);\n * wnd.setVisible(true);\n * (end)\n * \n * To limit the movement of a window, eg. to keep it from being moved beyond\n * the top, left corner the following method can be overridden (recommended):\n * \n * (code)\n * wnd.setLocation = function(x, y)\n * {\n *   x = Math.max(0, x);\n *   y = Math.max(0, y);\n *   mxWindow.prototype.setLocation.apply(this, arguments);\n * };\n * (end)\n * \n * Or the following event handler can be used:\n * \n * (code)\n * wnd.addListener(mxEvent.MOVE, function(e)\n * {\n *   wnd.setLocation(Math.max(0, wnd.getX()), Math.max(0, wnd.getY()));\n * });\n * (end)\n * \n * To keep a window inside the current window:\n * \n * (code)\n * mxEvent.addListener(window, 'resize', mxUtils.bind(this, function()\n * {\n *   var iw = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n *   var ih = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n *   \n *   var x = this.window.getX();\n *   var y = this.window.getY();\n *   \n *   if (x + this.window.table.clientWidth > iw)\n *   {\n *     x = Math.max(0, iw - this.window.table.clientWidth);\n *   }\n *   \n *   if (y + this.window.table.clientHeight > ih)\n *   {\n *     y = Math.max(0, ih - this.window.table.clientHeight);\n *   }\n *   \n *   if (this.window.getX() != x || this.window.getY() != y)\n *   {\n *     this.window.setLocation(x, y);\n *   }\n * }));\n * (end)\n *\n * Event: mxEvent.MOVE_START\n *\n * Fires before the window is moved. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.MOVE\n *\n * Fires while the window is being moved. The <code>event</code> property\n * contains the corresponding mouse event.\n *\n * Event: mxEvent.MOVE_END\n *\n * Fires after the window is moved. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE_START\n *\n * Fires before the window is resized. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE\n *\n * Fires while the window is being resized. The <code>event</code> property\n * contains the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE_END\n *\n * Fires after the window is resized. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.MAXIMIZE\n * \n * Fires after the window is maximized. The <code>event</code> property\n * contains the corresponding mouse event.\n * \n * Event: mxEvent.MINIMIZE\n * \n * Fires after the window is minimized. The <code>event</code> property\n * contains the corresponding mouse event.\n * \n * Event: mxEvent.NORMALIZE\n * \n * Fires after the window is normalized, that is, it returned from\n * maximized or minimized state. The <code>event</code> property contains the\n * corresponding mouse event.\n *  \n * Event: mxEvent.ACTIVATE\n * \n * Fires after a window is activated. The <code>previousWindow</code> property\n * contains the previous window. The event sender is the active window.\n * \n * Event: mxEvent.SHOW\n * \n * Fires after the window is shown. This event has no properties.\n * \n * Event: mxEvent.HIDE\n * \n * Fires after the window is hidden. This event has no properties.\n * \n * Event: mxEvent.CLOSE\n * \n * Fires before the window is closed. The <code>event</code> property contains\n * the corresponding mouse event.\n * \n * Event: mxEvent.DESTROY\n * \n * Fires before the window is destroyed. This event has no properties.\n * \n * Constructor: mxWindow\n * \n * Constructs a new window with the given dimension and title to display\n * the specified content. The window elements use the given style as a\n * prefix for the classnames of the respective window elements, namely,\n * the window title and window pane. The respective postfixes are appended\n * to the given stylename as follows:\n * \n *   style - Base style for the window.\n *   style+Title - Style for the window title.\n *   style+Pane - Style for the window pane.\n * \n * The default value for style is mxWindow, resulting in the following\n * classnames for the window elements: mxWindow, mxWindowTitle and\n * mxWindowPane.\n * \n * If replaceNode is given then the window replaces the given DOM node in\n * the document.\n * \n * Parameters:\n * \n * title - String that represents the title of the new window.\n * content - DOM node that is used as the window content.\n * x - X-coordinate of the window location.\n * y - Y-coordinate of the window location.\n * width - Width of the window.\n * height - Optional height of the window. Default is to match the height\n * of the content at the specified width.\n * minimizable - Optional boolean indicating if the window is minimizable.\n * Default is true.\n * movable - Optional boolean indicating if the window is movable. Default\n * is true.\n * replaceNode - Optional DOM node that the window should replace.\n * style - Optional base classname for the window elements. Default is\n * mxWindow.\n */\nfunction mxWindow(title, content, x, y, width, height, minimizable, movable, replaceNode, style)\n{\n\tif (content != null)\n\t{\n\t\tminimizable = (minimizable != null) ? minimizable : true;\n\t\tthis.content = content;\n\t\tthis.init(x, y, width, height, style);\n\t\t\n\t\tthis.installMaximizeHandler();\n\t\tthis.installMinimizeHandler();\n\t\tthis.installCloseHandler();\n\t\tthis.setMinimizable(minimizable);\n\t\tthis.setTitle(title);\n\t\t\n\t\tif (movable == null || movable)\n\t\t{\n\t\t\tthis.installMoveHandler();\n\t\t}\n\n\t\tif (replaceNode != null && replaceNode.parentNode != null)\n\t\t{\n\t\t\treplaceNode.parentNode.replaceChild(this.div, replaceNode);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.body.appendChild(this.div);\n\t\t}\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxWindow.prototype = new mxEventSource();\nmxWindow.prototype.constructor = mxWindow;\n\n/**\n * Variable: closeImage\n * \n * URL of the image to be used for the close icon in the titlebar.\n */\nmxWindow.prototype.closeImage = mxClient.imageBasePath + '/close.gif';\n\n/**\n * Variable: minimizeImage\n * \n * URL of the image to be used for the minimize icon in the titlebar.\n */\nmxWindow.prototype.minimizeImage = mxClient.imageBasePath + '/minimize.gif';\n\t\n/**\n * Variable: normalizeImage\n * \n * URL of the image to be used for the normalize icon in the titlebar.\n */\nmxWindow.prototype.normalizeImage = mxClient.imageBasePath + '/normalize.gif';\n\t\n/**\n * Variable: maximizeImage\n * \n * URL of the image to be used for the maximize icon in the titlebar.\n */\nmxWindow.prototype.maximizeImage = mxClient.imageBasePath + '/maximize.gif';\n\n/**\n * Variable: normalizeImage\n * \n * URL of the image to be used for the resize icon.\n */\nmxWindow.prototype.resizeImage = mxClient.imageBasePath + '/resize.gif';\n\n/**\n * Variable: visible\n * \n * Boolean flag that represents the visible state of the window.\n */\nmxWindow.prototype.visible = false;\n\n/**\n * Variable: minimumSize\n * \n * <mxRectangle> that specifies the minimum width and height of the window.\n * Default is (50, 40).\n */\nmxWindow.prototype.minimumSize = new mxRectangle(0, 0, 50, 40);\n\n/**\n * Variable: destroyOnClose\n * \n * Specifies if the window should be destroyed when it is closed. If this\n * is false then the window is hidden using <setVisible>. Default is true.\n */\nmxWindow.prototype.destroyOnClose = true;\n\n/**\n * Variable: contentHeightCorrection\n * \n * Defines the correction factor for computing the height of the contentWrapper.\n * Default is 6 for IE 7/8 standards mode and 2 for all other browsers and modes.\n */\nmxWindow.prototype.contentHeightCorrection = (document.documentMode == 8 || document.documentMode == 7) ? 6 : 2;\n\n/**\n * Variable: title\n * \n * Reference to the DOM node (TD) that contains the title.\n */\nmxWindow.prototype.title = null;\n\n/**\n * Variable: content\n * \n * Reference to the DOM node that represents the window content.\n */\nmxWindow.prototype.content = null;\n\n/**\n * Function: init\n * \n * Initializes the DOM tree that represents the window.\n */\nmxWindow.prototype.init = function(x, y, width, height, style)\n{\n\tstyle = (style != null) ? style : 'mxWindow';\n\t\n\tthis.div = document.createElement('div');\n\tthis.div.className = style;\n\n\tthis.div.style.left = x + 'px';\n\tthis.div.style.top = y + 'px';\n\tthis.table = document.createElement('table');\n\tthis.table.className = style;\n\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tthis.div.style.touchAction = 'none';\n\t}\n\t\n\t// Workaround for table size problems in FF\n\tif (width != null)\n\t{\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tthis.div.style.width = width + 'px'; \n\t\t}\n\t\t\n\t\tthis.table.style.width = width + 'px';\n\t} \n\t\n\tif (height != null)\n\t{\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tthis.div.style.height = height + 'px';\n\t\t}\n\t\t\n\t\tthis.table.style.height = height + 'px';\n\t}\t\t\n\t\n\t// Creates title row\n\tvar tbody = document.createElement('tbody');\n\tvar tr = document.createElement('tr');\n\t\n\tthis.title = document.createElement('td');\n\tthis.title.className = style + 'Title';\n\t\n\tthis.buttons = document.createElement('div');\n\tthis.buttons.style.position = 'absolute';\n\tthis.buttons.style.display = 'inline-block';\n\tthis.buttons.style.right = '4px';\n\tthis.buttons.style.top = '5px';\n\tthis.title.appendChild(this.buttons);\n\t\n\ttr.appendChild(this.title);\n\ttbody.appendChild(tr);\n\t\n\t// Creates content row and table cell\n\ttr = document.createElement('tr');\n\tthis.td = document.createElement('td');\n\tthis.td.className = style + 'Pane';\n\t\n\tif (document.documentMode == 7)\n\t{\n\t\tthis.td.style.height = '100%';\n\t}\n\n\tthis.contentWrapper = document.createElement('div');\n\tthis.contentWrapper.className = style + 'Pane';\n\tthis.contentWrapper.style.width = '100%';\n\tthis.contentWrapper.appendChild(this.content);\n\n\t// Workaround for div around div restricts height\n\t// of inner div if outerdiv has hidden overflow\n\tif (mxClient.IS_QUIRKS || this.content.nodeName.toUpperCase() != 'DIV')\n\t{\n\t\tthis.contentWrapper.style.height = '100%';\n\t}\n\n\t// Puts all content into the DOM\n\tthis.td.appendChild(this.contentWrapper);\n\ttr.appendChild(this.td);\n\ttbody.appendChild(tr);\n\tthis.table.appendChild(tbody);\n\tthis.div.appendChild(this.table);\n\t\n\t// Puts the window on top of other windows when clicked\n\tvar activator = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t});\n\t\n\tmxEvent.addGestureListeners(this.title, activator);\n\tmxEvent.addGestureListeners(this.table, activator);\n\n\tthis.hide();\n};\n\n/**\n * Function: setTitle\n * \n * Sets the window title to the given string. HTML markup inside the title\n * will be escaped.\n */\nmxWindow.prototype.setTitle = function(title)\n{\n\t// Removes all text content nodes (normally just one)\n\tvar child = this.title.firstChild;\n\t\n\twhile (child != null)\n\t{\n\t\tvar next = child.nextSibling;\n\t\t\n\t\tif (child.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t{\n\t\t\tchild.parentNode.removeChild(child);\n\t\t}\n\t\t\n\t\tchild = next;\n\t}\n\t\n\tmxUtils.write(this.title, title || '');\n\tthis.title.appendChild(this.buttons);\n};\n\n/**\n * Function: setScrollable\n * \n * Sets if the window contents should be scrollable.\n */\nmxWindow.prototype.setScrollable = function(scrollable)\n{\n\t// Workaround for hang in Presto 2.5.22 (Opera 10.5)\n\tif (navigator.userAgent.indexOf('Presto/2.5') < 0)\n\t{\n\t\tif (scrollable)\n\t\t{\n\t\t\tthis.contentWrapper.style.overflow = 'auto';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.contentWrapper.style.overflow = 'hidden';\n\t\t}\n\t}\n};\n\n/**\n * Function: activate\n * \n * Puts the window on top of all other windows.\n */\nmxWindow.prototype.activate = function()\n{\n\tif (mxWindow.activeWindow != this)\n\t{\n\t\tvar style = mxUtils.getCurrentStyle(this.getElement());\n\t\tvar index = (style != null) ? style.zIndex : 3;\n\n\t\tif (mxWindow.activeWindow)\n\t\t{\n\t\t\tvar elt = mxWindow.activeWindow.getElement();\n\t\t\t\n\t\t\tif (elt != null && elt.style != null)\n\t\t\t{\n\t\t\t\telt.style.zIndex = index;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar previousWindow = mxWindow.activeWindow;\n\t\tthis.getElement().style.zIndex = parseInt(index) + 1;\n\t\tmxWindow.activeWindow = this;\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ACTIVATE, 'previousWindow', previousWindow));\n\t}\n};\n\n/**\n * Function: getElement\n * \n * Returuns the outermost DOM node that makes up the window.\n */\nmxWindow.prototype.getElement = function()\n{\n\treturn this.div;\n};\n\n/**\n * Function: fit\n * \n * Makes sure the window is inside the client area of the window.\n */\nmxWindow.prototype.fit = function()\n{\n\tmxUtils.fit(this.div);\n};\n\n/**\n * Function: isResizable\n * \n * Returns true if the window is resizable.\n */\nmxWindow.prototype.isResizable = function()\n{\n\tif (this.resize != null)\n\t{\n\t\treturn this.resize.style.display != 'none';\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: setResizable\n * \n * Sets if the window should be resizable. To avoid interference with some\n * built-in features of IE10 and later, the use of the following code is\n * recommended if there are resizable <mxWindow>s in the page:\n * \n * (code)\n * if (mxClient.IS_POINTER)\n * {\n *   document.body.style.msTouchAction = 'none';\n * }\n * (end)\n */\nmxWindow.prototype.setResizable = function(resizable)\n{\n\tif (resizable)\n\t{\n\t\tif (this.resize == null)\n\t\t{\n\t\t\tthis.resize = document.createElement('img');\n\t\t\tthis.resize.style.position = 'absolute';\n\t\t\tthis.resize.style.bottom = '2px';\n\t\t\tthis.resize.style.right = '2px';\n\n\t\t\tthis.resize.setAttribute('src', this.resizeImage);\n\t\t\tthis.resize.style.cursor = 'nw-resize';\n\t\t\t\n\t\t\tvar startX = null;\n\t\t\tvar startY = null;\n\t\t\tvar width = null;\n\t\t\tvar height = null;\n\t\t\t\n\t\t\tvar start = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\t// LATER: pointerdown starting on border of resize does start\n\t\t\t\t// the drag operation but does not fire consecutive events via\n\t\t\t\t// one of the listeners below (does pan instead).\n\t\t\t\t// Workaround: document.body.style.msTouchAction = 'none'\n\t\t\t\tthis.activate();\n\t\t\t\tstartX = mxEvent.getClientX(evt);\n\t\t\t\tstartY = mxEvent.getClientY(evt);\n\t\t\t\twidth = this.div.offsetWidth;\n\t\t\t\theight = this.div.offsetHeight;\n\t\t\t\t\n\t\t\t\tmxEvent.addGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_START, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\n\t\t\t// Adds a temporary pair of listeners to intercept\n\t\t\t// the gesture event in the document\n\t\t\tvar dragHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (startX != null && startY != null)\n\t\t\t\t{\n\t\t\t\t\tvar dx = mxEvent.getClientX(evt) - startX;\n\t\t\t\t\tvar dy = mxEvent.getClientY(evt) - startY;\n\t\n\t\t\t\t\tthis.setSize(width + dx, height + dy);\n\t\n\t\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE, 'event', evt));\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tvar dropHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (startX != null && startY != null)\n\t\t\t\t{\n\t\t\t\t\tstartX = null;\n\t\t\t\t\tstartY = null;\n\t\t\t\t\tmxEvent.removeGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_END, 'event', evt));\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addGestureListeners(this.resize, start, dragHandler, dropHandler);\n\t\t\tthis.div.appendChild(this.resize);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tthis.resize.style.display = 'inline';\n\t\t}\n\t}\n\telse if (this.resize != null)\n\t{\n\t\tthis.resize.style.display = 'none';\n\t}\n};\n\t\n/**\n * Function: setSize\n * \n * Sets the size of the window.\n */\nmxWindow.prototype.setSize = function(width, height)\n{\n\twidth = Math.max(this.minimumSize.width, width);\n\theight = Math.max(this.minimumSize.height, height);\n\n\t// Workaround for table size problems in FF\n\tif (!mxClient.IS_QUIRKS)\n\t{\n\t\tthis.div.style.width =  width + 'px';\n\t\tthis.div.style.height = height + 'px';\n\t}\n\t\n\tthis.table.style.width =  width + 'px';\n\tthis.table.style.height = height + 'px';\n\n\tif (!mxClient.IS_QUIRKS)\n\t{\n\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t}\n};\n\t\n/**\n * Function: setMinimizable\n * \n * Sets if the window is minimizable.\n */\nmxWindow.prototype.setMinimizable = function(minimizable)\n{\n\tthis.minimize.style.display = (minimizable) ? '' : 'none';\n};\n\n/**\n * Function: getMinimumSize\n * \n * Returns an <mxRectangle> that specifies the size for the minimized window.\n * A width or height of 0 means keep the existing width or height. This\n * implementation returns the height of the window title and keeps the width.\n */\nmxWindow.prototype.getMinimumSize = function()\n{\n\treturn new mxRectangle(0, 0, 0, this.title.offsetHeight);\n};\n\n/**\n * Function: installMinimizeHandler\n * \n * Installs the event listeners required for minimizing the window.\n */\nmxWindow.prototype.installMinimizeHandler = function()\n{\n\tthis.minimize = document.createElement('img');\n\t\n\tthis.minimize.setAttribute('src', this.minimizeImage);\n\tthis.minimize.setAttribute('title', 'Minimize');\n\tthis.minimize.style.cursor = 'pointer';\n\tthis.minimize.style.marginLeft = '2px';\n\tthis.minimize.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.minimize);\n\t\n\tvar minimized = false;\n\tvar maxDisplay = null;\n\tvar height = null;\n\n\tvar funct = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t\t\n\t\tif (!minimized)\n\t\t{\n\t\t\tminimized = true;\n\t\t\t\n\t\t\tthis.minimize.setAttribute('src', this.normalizeImage);\n\t\t\tthis.minimize.setAttribute('title', 'Normalize');\n\t\t\tthis.contentWrapper.style.display = 'none';\n\t\t\tmaxDisplay = this.maximize.style.display;\n\t\t\t\n\t\t\tthis.maximize.style.display = 'none';\n\t\t\theight = this.table.style.height;\n\t\t\t\n\t\t\tvar minSize = this.getMinimumSize();\n\t\t\t\n\t\t\tif (minSize.height > 0)\n\t\t\t{\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.height = minSize.height + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.height = minSize.height + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (minSize.width > 0)\n\t\t\t{\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.width = minSize.width + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.width = minSize.width + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (this.resize != null)\n\t\t\t{\n\t\t\t\tthis.resize.style.visibility = 'hidden';\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MINIMIZE, 'event', evt));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tminimized = false;\n\t\t\t\n\t\t\tthis.minimize.setAttribute('src', this.minimizeImage);\n\t\t\tthis.minimize.setAttribute('title', 'Minimize');\n\t\t\tthis.contentWrapper.style.display = ''; // default\n\t\t\tthis.maximize.style.display = maxDisplay;\n\t\t\t\n\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\tthis.div.style.height = height;\n\t\t\t}\n\t\t\t\n\t\t\tthis.table.style.height = height;\n\n\t\t\tif (this.resize != null)\n\t\t\t{\n\t\t\t\tthis.resize.style.visibility = '';\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.NORMALIZE, 'event', evt));\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tmxEvent.addGestureListeners(this.minimize, funct);\n};\n\t\n/**\n * Function: setMaximizable\n * \n * Sets if the window is maximizable.\n */\nmxWindow.prototype.setMaximizable = function(maximizable)\n{\n\tthis.maximize.style.display = (maximizable) ? '' : 'none';\n};\n\n/**\n * Function: installMaximizeHandler\n * \n * Installs the event listeners required for maximizing the window.\n */\nmxWindow.prototype.installMaximizeHandler = function()\n{\n\tthis.maximize = document.createElement('img');\n\t\n\tthis.maximize.setAttribute('src', this.maximizeImage);\n\tthis.maximize.setAttribute('title', 'Maximize');\n\tthis.maximize.style.cursor = 'default';\n\tthis.maximize.style.marginLeft = '2px';\n\tthis.maximize.style.cursor = 'pointer';\n\tthis.maximize.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.maximize);\n\t\n\tvar maximized = false;\n\tvar x = null;\n\tvar y = null;\n\tvar height = null;\n\tvar width = null;\n\tvar minDisplay = null;\n\n\tvar funct = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t\t\n\t\tif (this.maximize.style.display != 'none')\n\t\t{\n\t\t\tif (!maximized)\n\t\t\t{\n\t\t\t\tmaximized = true;\n\t\t\t\t\n\t\t\t\tthis.maximize.setAttribute('src', this.normalizeImage);\n\t\t\t\tthis.maximize.setAttribute('title', 'Normalize');\n\t\t\t\tthis.contentWrapper.style.display = '';\n\t\t\t\tminDisplay = this.minimize.style.display;\n\t\t\t\tthis.minimize.style.display = 'none';\n\t\t\t\t\n\t\t\t\t// Saves window state\n\t\t\t\tx = parseInt(this.div.style.left);\n\t\t\t\ty = parseInt(this.div.style.top);\n\t\t\t\theight = this.table.style.height;\n\t\t\t\twidth = this.table.style.width;\n\n\t\t\t\tthis.div.style.left = '0px';\n\t\t\t\tthis.div.style.top = '0px';\n\t\t\t\tvar docHeight = Math.max(document.body.clientHeight || 0, document.documentElement.clientHeight || 0);\n\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.width = (document.body.clientWidth - 2) + 'px';\n\t\t\t\t\tthis.div.style.height = (docHeight - 2) + 'px';\n\t\t\t\t}\n\n\t\t\t\tthis.table.style.width = (document.body.clientWidth - 2) + 'px';\n\t\t\t\tthis.table.style.height = (docHeight - 2) + 'px';\n\t\t\t\t\n\t\t\t\tif (this.resize != null)\n\t\t\t\t{\n\t\t\t\t\tthis.resize.style.visibility = 'hidden';\n\t\t\t\t}\n\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\t\n\t\t\t\t\tif (style.overflow == 'auto' || this.resize != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MAXIMIZE, 'event', evt));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmaximized = false;\n\t\t\t\t\n\t\t\t\tthis.maximize.setAttribute('src', this.maximizeImage);\n\t\t\t\tthis.maximize.setAttribute('title', 'Maximize');\n\t\t\t\tthis.contentWrapper.style.display = '';\n\t\t\t\tthis.minimize.style.display = minDisplay;\n\n\t\t\t\t// Restores window state\n\t\t\t\tthis.div.style.left = x+'px';\n\t\t\t\tthis.div.style.top = y+'px';\n\t\t\t\t\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.height = height;\n\t\t\t\t\tthis.div.style.width = width;\n\n\t\t\t\t\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\t\n\t\t\t\t\tif (style.overflow == 'auto' || this.resize != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.height = height;\n\t\t\t\tthis.table.style.width = width;\n\n\t\t\t\tif (this.resize != null)\n\t\t\t\t{\n\t\t\t\t\tthis.resize.style.visibility = '';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.NORMALIZE, 'event', evt));\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t});\n\t\n\tmxEvent.addGestureListeners(this.maximize, funct);\n\tmxEvent.addListener(this.title, 'dblclick', funct);\n};\n\t\n/**\n * Function: installMoveHandler\n * \n * Installs the event listeners required for moving the window.\n */\nmxWindow.prototype.installMoveHandler = function()\n{\n\tthis.title.style.cursor = 'move';\n\t\n\tmxEvent.addGestureListeners(this.title,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tvar startX = mxEvent.getClientX(evt);\n\t\t\tvar startY = mxEvent.getClientY(evt);\n\t\t\tvar x = this.getX();\n\t\t\tvar y = this.getY();\n\t\t\t\t\t\t\n\t\t\t// Adds a temporary pair of listeners to intercept\n\t\t\t// the gesture event in the document\n\t\t\tvar dragHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tvar dx = mxEvent.getClientX(evt) - startX;\n\t\t\t\tvar dy = mxEvent.getClientY(evt) - startY;\n\t\t\t\tthis.setLocation(x + dx, y + dy);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\t\n\t\t\tvar dropHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tmxEvent.removeGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_END, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_START, 'event', evt));\n\t\t\tmxEvent.consume(evt);\n\t\t}));\n\t\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tthis.title.style.touchAction = 'none';\n\t}\n};\n\n/**\n * Function: setLocation\n * \n * Sets the upper, left corner of the window.\n */\n mxWindow.prototype.setLocation = function(x, y)\n {\n\tthis.div.style.left = x + 'px';\n\tthis.div.style.top = y + 'px';\n };\n\n/**\n * Function: getX\n *\n * Returns the current position on the x-axis.\n */\nmxWindow.prototype.getX = function()\n{\n\treturn parseInt(this.div.style.left);\n};\n\n/**\n * Function: getY\n *\n * Returns the current position on the y-axis.\n */\nmxWindow.prototype.getY = function()\n{\n\treturn parseInt(this.div.style.top);\n};\n\n/**\n * Function: installCloseHandler\n *\n * Adds the <closeImage> as a new image node in <closeImg> and installs the\n * <close> event.\n */\nmxWindow.prototype.installCloseHandler = function()\n{\n\tthis.closeImg = document.createElement('img');\n\t\n\tthis.closeImg.setAttribute('src', this.closeImage);\n\tthis.closeImg.setAttribute('title', 'Close');\n\tthis.closeImg.style.marginLeft = '2px';\n\tthis.closeImg.style.cursor = 'pointer';\n\tthis.closeImg.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.closeImg);\n\n\tmxEvent.addGestureListeners(this.closeImg,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CLOSE, 'event', evt));\n\t\t\t\n\t\t\tif (this.destroyOnClose)\n\t\t\t{\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.setVisible(false);\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(evt);\n\t\t}));\n};\n\n/**\n * Function: setImage\n * \n * Sets the image associated with the window.\n * \n * Parameters:\n * \n * image - URL of the image to be used.\n */\nmxWindow.prototype.setImage = function(image)\n{\n\tthis.image = document.createElement('img');\n\tthis.image.setAttribute('src', image);\n\tthis.image.setAttribute('align', 'left');\n\tthis.image.style.marginRight = '4px';\n\tthis.image.style.marginLeft = '0px';\n\tthis.image.style.marginTop = '-2px';\n\t\n\tthis.title.insertBefore(this.image, this.title.firstChild);\n};\n\n/**\n * Function: setClosable\n * \n * Sets the image associated with the window.\n * \n * Parameters:\n * \n * closable - Boolean specifying if the window should be closable.\n */\nmxWindow.prototype.setClosable = function(closable)\n{\n\tthis.closeImg.style.display = (closable) ? '' : 'none';\n};\n\n/**\n * Function: isVisible\n * \n * Returns true if the window is visible.\n */\nmxWindow.prototype.isVisible = function()\n{\n\tif (this.div != null)\n\t{\n\t\treturn this.div.style.display != 'none';\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: setVisible\n *\n * Shows or hides the window depending on the given flag.\n * \n * Parameters:\n * \n * visible - Boolean indicating if the window should be made visible.\n */\nmxWindow.prototype.setVisible = function(visible)\n{\n\tif (this.div != null && this.isVisible() != visible)\n\t{\n\t\tif (visible)\n\t\t{\n\t\t\tthis.show();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.hide();\n\t\t}\n\t}\n};\n\n/**\n * Function: show\n *\n * Shows the window.\n */\nmxWindow.prototype.show = function()\n{\n\tthis.div.style.display = '';\n\tthis.activate();\n\t\n\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\n\tif (!mxClient.IS_QUIRKS && (style.overflow == 'auto' || this.resize != null) &&\n\t\tthis.contentWrapper.style.display != 'none')\n\t{\n\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SHOW));\n};\n\n/**\n * Function: hide\n *\n * Hides the window.\n */\nmxWindow.prototype.hide = function()\n{\n\tthis.div.style.display = 'none';\n\tthis.fireEvent(new mxEventObject(mxEvent.HIDE));\n};\n\n/**\n * Function: destroy\n *\n * Destroys the window and removes all associated resources. Fires a\n * <destroy> event prior to destroying the window.\n */\nmxWindow.prototype.destroy = function()\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.DESTROY));\n\t\n\tif (this.div != null)\n\t{\n\t\tmxEvent.release(this.div);\n\t\tthis.div.parentNode.removeChild(this.div);\n\t\tthis.div = null;\n\t}\n\t\n\tthis.title = null;\n\tthis.content = null;\n\tthis.contentWrapper = null;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxForm\n * \n * A simple class for creating HTML forms.\n * \n * Constructor: mxForm\n * \n * Creates a HTML table using the specified classname.\n */\nfunction mxForm(className)\n{\n\tthis.table = document.createElement('table');\n\tthis.table.className = className;\n\tthis.body = document.createElement('tbody');\n\t\n\tthis.table.appendChild(this.body);\n};\n\n/**\n * Variable: table\n * \n * Holds the DOM node that represents the table.\n */\nmxForm.prototype.table = null;\n\n/**\n * Variable: body\n * \n * Holds the DOM node that represents the tbody (table body). New rows\n * can be added to this object using DOM API.\n */\nmxForm.prototype.body = false;\n\n/**\n * Function: getTable\n * \n * Returns the table that contains this form.\n */\nmxForm.prototype.getTable = function()\n{\n\treturn this.table;\n};\n\n/**\n * Function: addButtons\n * \n * Helper method to add an OK and Cancel button using the respective\n * functions.\n */\nmxForm.prototype.addButtons = function(okFunct, cancelFunct)\n{\n\tvar tr = document.createElement('tr');\n\tvar td = document.createElement('td');\n\ttr.appendChild(td);\n\ttd = document.createElement('td');\n\n\t// Adds the ok button\n\tvar button = document.createElement('button');\n\tmxUtils.write(button, mxResources.get('ok') || 'OK');\n\ttd.appendChild(button);\n\n\tmxEvent.addListener(button, 'click', function()\n\t{\n\t\tokFunct();\n\t});\n\t\n\t// Adds the cancel button\n\tbutton = document.createElement('button');\n\tmxUtils.write(button, mxResources.get('cancel') || 'Cancel');\n\ttd.appendChild(button);\n\t\n\tmxEvent.addListener(button, 'click', function()\n\t{\n\t\tcancelFunct();\n\t});\n\t\n\ttr.appendChild(td);\n\tthis.body.appendChild(tr);\n};\n\n/**\n * Function: addText\n * \n * Adds an input for the given name, type and value and returns it.\n */\nmxForm.prototype.addText = function(name, value, type)\n{\n\tvar input = document.createElement('input');\n\t\n\tinput.setAttribute('type', type || 'text');\n\tinput.value = value;\n\t\n\treturn this.addField(name, input);\n};\n\n/**\n * Function: addCheckbox\n * \n * Adds a checkbox for the given name and value and returns the textfield.\n */\nmxForm.prototype.addCheckbox = function(name, value)\n{\n\tvar input = document.createElement('input');\n\t\n\tinput.setAttribute('type', 'checkbox');\n\tthis.addField(name, input);\n\n\t// IE can only change the checked value if the input is inside the DOM\n\tif (value)\n\t{\n\t\tinput.checked = true;\n\t}\n\n\treturn input;\n};\n\n/**\n * Function: addTextarea\n * \n * Adds a textarea for the given name and value and returns the textarea.\n */\nmxForm.prototype.addTextarea = function(name, value, rows)\n{\n\tvar input = document.createElement('textarea');\n\t\n\tif (mxClient.IS_NS)\n\t{\n\t\trows--;\n\t}\n\t\n\tinput.setAttribute('rows', rows || 2);\n\tinput.value = value;\n\t\n\treturn this.addField(name, input);\n};\n\n/**\n * Function: addCombo\n * \n * Adds a combo for the given name and returns the combo.\n */\nmxForm.prototype.addCombo = function(name, isMultiSelect, size)\n{\n\tvar select = document.createElement('select');\n\t\n\tif (size != null)\n\t{\n\t\tselect.setAttribute('size', size);\n\t}\n\t\n\tif (isMultiSelect)\n\t{\n\t\tselect.setAttribute('multiple', 'true');\n\t}\n\t\n\treturn this.addField(name, select);\n};\n\n/**\n * Function: addOption\n * \n * Adds an option for the given label to the specified combo.\n */\nmxForm.prototype.addOption = function(combo, label, value, isSelected)\n{\n\tvar option = document.createElement('option');\n\t\n\tmxUtils.writeln(option, label);\n\toption.setAttribute('value', value);\n\t\n\tif (isSelected)\n\t{\n\t\toption.setAttribute('selected', isSelected);\n\t}\n\t\n\tcombo.appendChild(option);\n};\n\n/**\n * Function: addField\n * \n * Adds a new row with the name and the input field in two columns and\n * returns the given input.\n */\nmxForm.prototype.addField = function(name, input)\n{\n\tvar tr = document.createElement('tr');\n\tvar td = document.createElement('td');\n\tmxUtils.write(td, name);\n\ttr.appendChild(td);\n\t\n\ttd = document.createElement('td');\n\ttd.appendChild(input);\n\ttr.appendChild(td);\n\tthis.body.appendChild(tr);\n\t\n\treturn input;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImage\n *\n * Encapsulates the URL, width and height of an image.\n * \n * Constructor: mxImage\n * \n * Constructs a new image.\n */\nfunction mxImage(src, width, height)\n{\n\tthis.src = src;\n\tthis.width = width;\n\tthis.height = height;\n};\n\n/**\n * Variable: src\n *\n * String that specifies the URL of the image.\n */\nmxImage.prototype.src = null;\n\n/**\n * Variable: width\n *\n * Integer that specifies the width of the image.\n */\nmxImage.prototype.width = null;\n\n/**\n * Variable: height\n *\n * Integer that specifies the height of the image.\n */\nmxImage.prototype.height = null;\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDivResizer\n * \n * Maintains the size of a div element in Internet Explorer. This is a\n * workaround for the right and bottom style being ignored in IE.\n * \n * If you need a div to cover the scrollwidth and -height of a document,\n * then you can use this class as follows:\n * \n * (code)\n * var resizer = new mxDivResizer(background);\n * resizer.getDocumentHeight = function()\n * {\n *   return document.body.scrollHeight;\n * }\n * resizer.getDocumentWidth = function()\n * {\n *   return document.body.scrollWidth;\n * }\n * resizer.resize();\n * (end)\n * \n * Constructor: mxDivResizer\n * \n * Constructs an object that maintains the size of a div\n * element when the window is being resized. This is only\n * required for Internet Explorer as it ignores the respective\n * stylesheet information for DIV elements.\n * \n * Parameters:\n * \n * div - Reference to the DOM node whose size should be maintained.\n * container - Optional Container that contains the div. Default is the\n * window.\n */\nfunction mxDivResizer(div, container)\n{\n\tif (div.nodeName.toLowerCase() == 'div')\n\t{\n\t\tif (container == null)\n\t\t{\n\t\t\tcontainer = window;\n\t\t}\n\n\t\tthis.div = div;\n\t\tvar style = mxUtils.getCurrentStyle(div);\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tthis.resizeWidth = style.width == 'auto';\n\t\t\tthis.resizeHeight = style.height == 'auto';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(container, 'resize',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (!this.handlingResize)\n\t\t\t\t{\n\t\t\t\t\tthis.handlingResize = true;\n\t\t\t\t\tthis.resize();\n\t\t\t\t\tthis.handlingResize = false;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\t\n\t\tthis.resize();\n\t}\n};\n\n/**\n * Function: resizeWidth\n * \n * Boolean specifying if the width should be updated.\n */\nmxDivResizer.prototype.resizeWidth = true;\n\n/**\n * Function: resizeHeight\n * \n * Boolean specifying if the height should be updated.\n */\nmxDivResizer.prototype.resizeHeight = true;\n\n/**\n * Function: handlingResize\n * \n * Boolean specifying if the width should be updated.\n */\nmxDivResizer.prototype.handlingResize = false;\n\n/**\n * Function: resize\n * \n * Updates the style of the DIV after the window has been resized.\n */\nmxDivResizer.prototype.resize = function()\n{\n\tvar w = this.getDocumentWidth();\n\tvar h = this.getDocumentHeight();\n\n\tvar l = parseInt(this.div.style.left);\n\tvar r = parseInt(this.div.style.right);\n\tvar t = parseInt(this.div.style.top);\n\tvar b = parseInt(this.div.style.bottom);\n\t\n\tif (this.resizeWidth &&\n\t\t!isNaN(l) &&\n\t\t!isNaN(r) &&\n\t\tl >= 0 &&\n\t\tr >= 0 &&\n\t\tw - r - l > 0)\n\t{\n\t\tthis.div.style.width = (w - r - l)+'px';\n\t}\n\t\n\tif (this.resizeHeight &&\n\t\t!isNaN(t) &&\n\t\t!isNaN(b) &&\n\t\tt >= 0 &&\n\t\tb >= 0 &&\n\t\th - t - b > 0)\n\t{\n\t\tthis.div.style.height = (h - t - b)+'px';\n\t}\n};\n\n/**\n * Function: getDocumentWidth\n * \n * Hook for subclassers to return the width of the document (without\n * scrollbars).\n */\nmxDivResizer.prototype.getDocumentWidth = function()\n{\n\treturn document.body.clientWidth;\n};\n\n/**\n * Function: getDocumentHeight\n * \n * Hook for subclassers to return the height of the document (without\n * scrollbars).\n */\nmxDivResizer.prototype.getDocumentHeight = function()\n{\n\treturn document.body.clientHeight;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDragSource\n * \n * Wrapper to create a drag source from a DOM element so that the element can\n * be dragged over a graph and dropped into the graph as a new cell.\n * \n * Problem is that in the dropHandler the current preview location is not\n * available, so the preview and the dropHandler must match.\n * \n * Constructor: mxDragSource\n * \n * Constructs a new drag source for the given element.\n */\nfunction mxDragSource(element, dropHandler)\n{\n\tthis.element = element;\n\tthis.dropHandler = dropHandler;\n\t\n\t// Handles a drag gesture on the element\n\tmxEvent.addGestureListeners(element, mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseDown(evt);\n\t}));\n\t\n\t// Prevents native drag and drop\n\tmxEvent.addListener(element, 'dragstart', function(evt)\n\t{\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tthis.eventConsumer = function(sender, evt)\n\t{\n\t\tvar evtName = evt.getProperty('eventName');\n\t\tvar me = evt.getProperty('event');\n\t\t\n\t\tif (evtName != mxEvent.MOUSE_DOWN)\n\t\t{\n\t\t\tme.consume();\n\t\t}\n\t};\n};\n\n/**\n * Variable: element\n *\n * Reference to the DOM node which was made draggable.\n */\nmxDragSource.prototype.element = null;\n\n/**\n * Variable: dropHandler\n *\n * Holds the DOM node that is used to represent the drag preview. If this is\n * null then the source element will be cloned and used for the drag preview.\n */\nmxDragSource.prototype.dropHandler = null;\n\n/**\n * Variable: dragOffset\n *\n * <mxPoint> that specifies the offset of the <dragElement>. Default is null.\n */\nmxDragSource.prototype.dragOffset = null;\n\n/**\n * Variable: dragElement\n *\n * Holds the DOM node that is used to represent the drag preview. If this is\n * null then the source element will be cloned and used for the drag preview.\n */\nmxDragSource.prototype.dragElement = null;\n\n/**\n * Variable: previewElement\n *\n * Optional <mxRectangle> that specifies the unscaled size of the preview.\n */\nmxDragSource.prototype.previewElement = null;\n\n/**\n * Variable: enabled\n *\n * Specifies if this drag source is enabled. Default is true.\n */\nmxDragSource.prototype.enabled = true;\n\n/**\n * Variable: currentGraph\n *\n * Reference to the <mxGraph> that is the current drop target.\n */\nmxDragSource.prototype.currentGraph = null;\n\n/**\n * Variable: currentDropTarget\n *\n * Holds the current drop target under the mouse.\n */\nmxDragSource.prototype.currentDropTarget = null;\n\n/**\n * Variable: currentPoint\n *\n * Holds the current drop location.\n */\nmxDragSource.prototype.currentPoint = null;\n\n/**\n * Variable: currentGuide\n *\n * Holds an <mxGuide> for the <currentGraph> if <dragPreview> is not null.\n */\nmxDragSource.prototype.currentGuide = null;\n\n/**\n * Variable: currentGuide\n *\n * Holds an <mxGuide> for the <currentGraph> if <dragPreview> is not null.\n */\nmxDragSource.prototype.currentHighlight = null;\n\n/**\n * Variable: autoscroll\n *\n * Specifies if the graph should scroll automatically. Default is true.\n */\nmxDragSource.prototype.autoscroll = true;\n\n/**\n * Variable: guidesEnabled\n *\n * Specifies if <mxGuide> should be enabled. Default is true.\n */\nmxDragSource.prototype.guidesEnabled = true;\n\n/**\n * Variable: gridEnabled\n *\n * Specifies if the grid should be allowed. Default is true.\n */\nmxDragSource.prototype.gridEnabled = true;\n\n/**\n * Variable: highlightDropTargets\n *\n * Specifies if drop targets should be highlighted. Default is true.\n */\nmxDragSource.prototype.highlightDropTargets = true;\n\n/**\n * Variable: dragElementZIndex\n * \n * ZIndex for the drag element. Default is 100.\n */\nmxDragSource.prototype.dragElementZIndex = 100;\n\n/**\n * Variable: dragElementOpacity\n * \n * Opacity of the drag element in %. Default is 70.\n */\nmxDragSource.prototype.dragElementOpacity = 70;\n\n/**\n * Variable: checkEventSource\n * \n * Whether the event source should be checked in <graphContainerEvent>. Default\n * is true.\n */\nmxDragSource.prototype.checkEventSource = true;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxDragSource.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxDragSource.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isGuidesEnabled\n * \n * Returns <guidesEnabled>.\n */\nmxDragSource.prototype.isGuidesEnabled = function()\n{\n\treturn this.guidesEnabled;\n};\n\n/**\n * Function: setGuidesEnabled\n * \n * Sets <guidesEnabled>.\n */\nmxDragSource.prototype.setGuidesEnabled = function(value)\n{\n\tthis.guidesEnabled = value;\n};\n\n/**\n * Function: isGridEnabled\n * \n * Returns <gridEnabled>.\n */\nmxDragSource.prototype.isGridEnabled = function()\n{\n\treturn this.gridEnabled;\n};\n\n/**\n * Function: setGridEnabled\n * \n * Sets <gridEnabled>.\n */\nmxDragSource.prototype.setGridEnabled = function(value)\n{\n\tthis.gridEnabled = value;\n};\n\n/**\n * Function: getGraphForEvent\n * \n * Returns the graph for the given mouse event. This implementation returns\n * null.\n */\nmxDragSource.prototype.getGraphForEvent = function(evt)\n{\n\treturn null;\n};\n\n/**\n * Function: getDropTarget\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n */\nmxDragSource.prototype.getDropTarget = function(graph, x, y, evt)\n{\n\treturn graph.getCellAt(x, y);\n};\n\n/**\n * Function: createDragElement\n * \n * Creates and returns a clone of the <dragElementPrototype> or the <element>\n * if the former is not defined.\n */\nmxDragSource.prototype.createDragElement = function(evt)\n{\n\treturn this.element.cloneNode(true);\n};\n\n/**\n * Function: createPreviewElement\n * \n * Creates and returns an element which can be used as a preview in the given\n * graph.\n */\nmxDragSource.prototype.createPreviewElement = function(graph)\n{\n\treturn null;\n};\n\n/**\n * Function: isActive\n * \n * Returns true if this drag source is active.\n */\nmxDragSource.prototype.isActive = function()\n{\n\treturn this.mouseMoveHandler != null;\n};\n\n/**\n * Function: reset\n * \n * Stops and removes everything and restores the state of the object.\n */\nmxDragSource.prototype.reset = function()\n{\n\tif (this.currentGraph != null)\n\t{\n\t\tthis.dragExit(this.currentGraph);\n\t\tthis.currentGraph = null;\n\t}\n\t\n\tthis.removeDragElement();\n\tthis.removeListeners();\n\tthis.stopDrag();\n};\n\n/**\n * Function: mouseDown\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n * \n * To ignore popup menu events for a drag source, this function can be\n * overridden as follows.\n * \n * (code)\n * var mouseDown = dragSource.mouseDown;\n * \n * dragSource.mouseDown = function(evt)\n * {\n *   if (!mxEvent.isPopupTrigger(evt))\n *   {\n *     mouseDown.apply(this, arguments);\n *   }\n * };\n * (end)\n */\nmxDragSource.prototype.mouseDown = function(evt)\n{\n\tif (this.enabled && !mxEvent.isConsumed(evt) && this.mouseMoveHandler == null)\n\t{\n\t\tthis.startDrag(evt);\n\t\tthis.mouseMoveHandler = mxUtils.bind(this, this.mouseMove);\n\t\tthis.mouseUpHandler = mxUtils.bind(this, this.mouseUp);\t\t\n\t\tmxEvent.addGestureListeners(document, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\t\n\t\tif (mxClient.IS_TOUCH && !mxEvent.isMouseEvent(evt))\n\t\t{\n\t\t\tthis.eventSource = mxEvent.getSource(evt);\n\t\t\tmxEvent.addGestureListeners(this.eventSource, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\t}\n\t}\n};\n\n/**\n * Function: startDrag\n * \n * Creates the <dragElement> using <createDragElement>.\n */\nmxDragSource.prototype.startDrag = function(evt)\n{\n\tthis.dragElement = this.createDragElement(evt);\n\tthis.dragElement.style.position = 'absolute';\n\tthis.dragElement.style.zIndex = this.dragElementZIndex;\n\tmxUtils.setOpacity(this.dragElement, this.dragElementOpacity);\n\n\tif (this.checkEventSource && mxClient.IS_SVG)\n\t{\n\t\tthis.dragElement.style.pointerEvents = 'none';\n\t}\n};\n\n/**\n * Function: stopDrag\n * \n * Invokes <removeDragElement>.\n */\nmxDragSource.prototype.stopDrag = function()\n{\n\t// LATER: This used to have a mouse event. If that is still needed we need to add another\n\t// final call to the DnD protocol to add a cleanup step in the case of escape press, which\n\t// is not associated with a mouse event and which currently calles this method.\n\tthis.removeDragElement();\n};\n\n/**\n * Function: removeDragElement\n * \n * Removes and destroys the <dragElement>.\n */\nmxDragSource.prototype.removeDragElement = function()\n{\n\tif (this.dragElement != null)\n\t{\n\t\tif (this.dragElement.parentNode != null)\n\t\t{\n\t\t\tthis.dragElement.parentNode.removeChild(this.dragElement);\n\t\t}\n\t\t\n\t\tthis.dragElement = null;\n\t}\n};\n\n/**\n * Function: getElementForEvent\n * \n * Returns the topmost element under the given event.\n */\nmxDragSource.prototype.getElementForEvent = function(evt)\n{\n\treturn ((mxEvent.isTouchEvent(evt) || mxEvent.isPenEvent(evt)) ?\n\t\t\tdocument.elementFromPoint(mxEvent.getClientX(evt), mxEvent.getClientY(evt)) :\n\t\t\t\tmxEvent.getSource(evt));\n};\n\n/**\n * Function: graphContainsEvent\n * \n * Returns true if the given graph contains the given event.\n */\nmxDragSource.prototype.graphContainsEvent = function(graph, evt)\n{\n\tvar x = mxEvent.getClientX(evt);\n\tvar y = mxEvent.getClientY(evt);\n\tvar offset = mxUtils.getOffset(graph.container);\n\tvar origin = mxUtils.getScrollOrigin();\n\tvar elt = this.getElementForEvent(evt);\n\t\n\tif (this.checkEventSource)\n\t{\n\t\twhile (elt != null && elt != graph.container)\n\t\t{\n\t\t\telt = elt.parentNode;\n\t\t}\n\t}\n\n\t// Checks if event is inside the bounds of the graph container\n\treturn elt != null && x >= offset.x - origin.x && y >= offset.y - origin.y &&\n\t\tx <= offset.x - origin.x + graph.container.offsetWidth &&\n\t\ty <= offset.y - origin.y + graph.container.offsetHeight;\n};\n\n/**\n * Function: mouseMove\n * \n * Gets the graph for the given event using <getGraphForEvent>, updates the\n * <currentGraph>, calling <dragEnter> and <dragExit> on the new and old graph,\n * respectively, and invokes <dragOver> if <currentGraph> is not null.\n */\nmxDragSource.prototype.mouseMove = function(evt)\n{\n\tvar graph = this.getGraphForEvent(evt);\n\t\n\t// Checks if event is inside the bounds of the graph container\n\tif (graph != null && !this.graphContainsEvent(graph, evt))\n\t{\n\t\tgraph = null;\n\t}\n\n\tif (graph != this.currentGraph)\n\t{\n\t\tif (this.currentGraph != null)\n\t\t{\n\t\t\tthis.dragExit(this.currentGraph, evt);\n\t\t}\n\t\t\n\t\tthis.currentGraph = graph;\n\t\t\n\t\tif (this.currentGraph != null)\n\t\t{\n\t\t\tthis.dragEnter(this.currentGraph, evt);\n\t\t}\n\t}\n\t\n\tif (this.currentGraph != null)\n\t{\n\t\tthis.dragOver(this.currentGraph, evt);\n\t}\n\n\tif (this.dragElement != null && (this.previewElement == null || this.previewElement.style.visibility != 'visible'))\n\t{\n\t\tvar x = mxEvent.getClientX(evt);\n\t\tvar y = mxEvent.getClientY(evt);\n\t\t\n\t\tif (this.dragElement.parentNode == null)\n\t\t{\n\t\t\tdocument.body.appendChild(this.dragElement);\n\t\t}\n\n\t\tthis.dragElement.style.visibility = 'visible';\n\t\t\n\t\tif (this.dragOffset != null)\n\t\t{\n\t\t\tx += this.dragOffset.x;\n\t\t\ty += this.dragOffset.y;\n\t\t}\n\t\t\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(document);\n\t\t\n\t\tthis.dragElement.style.left = (x + offset.x) + 'px';\n\t\tthis.dragElement.style.top = (y + offset.y) + 'px';\n\t}\n\telse if (this.dragElement != null)\n\t{\n\t\tthis.dragElement.style.visibility = 'hidden';\n\t}\n\t\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: mouseUp\n * \n * Processes the mouse up event and invokes <drop>, <dragExit> and <stopDrag>\n * as required.\n */\nmxDragSource.prototype.mouseUp = function(evt)\n{\n\tif (this.currentGraph != null)\n\t{\n\t\tif (this.currentPoint != null && (this.previewElement == null ||\n\t\t\tthis.previewElement.style.visibility != 'hidden'))\n\t\t{\n\t\t\tvar scale = this.currentGraph.view.scale;\n\t\t\tvar tr = this.currentGraph.view.translate;\n\t\t\tvar x = this.currentPoint.x / scale - tr.x;\n\t\t\tvar y = this.currentPoint.y / scale - tr.y;\n\t\t\t\n\t\t\tthis.drop(this.currentGraph, evt, this.currentDropTarget, x, y);\n\t\t}\n\t\t\n\t\tthis.dragExit(this.currentGraph);\n\t\tthis.currentGraph = null;\n\t}\n\n\tthis.stopDrag();\n\tthis.removeListeners();\n\t\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: removeListeners\n * \n * Actives the given graph as a drop target.\n */\nmxDragSource.prototype.removeListeners = function()\n{\n\tif (this.eventSource != null)\n\t{\n\t\tmxEvent.removeGestureListeners(this.eventSource, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\tthis.eventSource = null;\n\t}\n\t\n\tmxEvent.removeGestureListeners(document, null, this.mouseMoveHandler, this.mouseUpHandler);\n\tthis.mouseMoveHandler = null;\n\tthis.mouseUpHandler = null;\n};\n\n/**\n * Function: dragEnter\n * \n * Actives the given graph as a drop target.\n */\nmxDragSource.prototype.dragEnter = function(graph, evt)\n{\n\tgraph.isMouseDown = true;\n\tgraph.isMouseTrigger = mxEvent.isMouseEvent(evt);\n\tthis.previewElement = this.createPreviewElement(graph);\n\t\n\tif (this.previewElement != null && this.checkEventSource && mxClient.IS_SVG)\n\t{\n\t\tthis.previewElement.style.pointerEvents = 'none';\n\t}\n\t\n\t// Guide is only needed if preview element is used\n\tif (this.isGuidesEnabled() && this.previewElement != null)\n\t{\n\t\tthis.currentGuide = new mxGuide(graph, graph.graphHandler.getGuideStates());\n\t}\n\t\n\tif (this.highlightDropTargets)\n\t{\n\t\tthis.currentHighlight = new mxCellHighlight(graph, mxConstants.DROP_TARGET_COLOR);\n\t}\n\t\n\t// Consumes all events in the current graph before they are fired\n\tgraph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.eventConsumer);\n};\n\n/**\n * Function: dragExit\n * \n * Deactivates the given graph as a drop target.\n */\nmxDragSource.prototype.dragExit = function(graph, evt)\n{\n\tthis.currentDropTarget = null;\n\tthis.currentPoint = null;\n\tgraph.isMouseDown = false;\n\t\n\t// Consumes all events in the current graph before they are fired\n\tgraph.removeListener(this.eventConsumer);\n\t\n\tif (this.previewElement != null)\n\t{\n\t\tif (this.previewElement.parentNode != null)\n\t\t{\n\t\t\tthis.previewElement.parentNode.removeChild(this.previewElement);\n\t\t}\n\t\t\n\t\tthis.previewElement = null;\n\t}\n\t\n\tif (this.currentGuide != null)\n\t{\n\t\tthis.currentGuide.destroy();\n\t\tthis.currentGuide = null;\n\t}\n\t\n\tif (this.currentHighlight != null)\n\t{\n\t\tthis.currentHighlight.destroy();\n\t\tthis.currentHighlight = null;\n\t}\n};\n\n/**\n * Function: dragOver\n * \n * Implements autoscroll, updates the <currentPoint>, highlights any drop\n * targets and updates the preview.\n */\nmxDragSource.prototype.dragOver = function(graph, evt)\n{\n\tvar offset = mxUtils.getOffset(graph.container);\n\tvar origin = mxUtils.getScrollOrigin(graph.container);\n\tvar x = mxEvent.getClientX(evt) - offset.x + origin.x - graph.panDx;\n\tvar y = mxEvent.getClientY(evt) - offset.y + origin.y - graph.panDy;\n\n\tif (graph.autoScroll && (this.autoscroll == null || this.autoscroll))\n\t{\n\t\tgraph.scrollPointToVisible(x, y, graph.autoExtend);\n\t}\n\n\t// Highlights the drop target under the mouse\n\tif (this.currentHighlight != null && graph.isDropEnabled())\n\t{\n\t\tthis.currentDropTarget = this.getDropTarget(graph, x, y, evt);\n\t\tvar state = graph.getView().getState(this.currentDropTarget);\n\t\tthis.currentHighlight.highlight(state);\n\t}\n\n\t// Updates the location of the preview\n\tif (this.previewElement != null)\n\t{\n\t\tif (this.previewElement.parentNode == null)\n\t\t{\n\t\t\tgraph.container.appendChild(this.previewElement);\n\t\t\t\n\t\t\tthis.previewElement.style.zIndex = '3';\n\t\t\tthis.previewElement.style.position = 'absolute';\n\t\t}\n\t\t\n\t\tvar gridEnabled = this.isGridEnabled() && graph.isGridEnabledEvent(evt);\n\t\tvar hideGuide = true;\n\n\t\t// Grid and guides\n\t\tif (this.currentGuide != null && this.currentGuide.isEnabledForEvent(evt))\n\t\t{\n\t\t\t// LATER: HTML preview appears smaller than SVG preview\n\t\t\tvar w = parseInt(this.previewElement.style.width);\n\t\t\tvar h = parseInt(this.previewElement.style.height);\n\t\t\tvar bounds = new mxRectangle(0, 0, w, h);\n\t\t\tvar delta = new mxPoint(x, y);\n\t\t\tdelta = this.currentGuide.move(bounds, delta, gridEnabled, true);\n\t\t\thideGuide = false;\n\t\t\tx = delta.x;\n\t\t\ty = delta.y;\n\t\t}\n\t\telse if (gridEnabled)\n\t\t{\n\t\t\tvar scale = graph.view.scale;\n\t\t\tvar tr = graph.view.translate;\n\t\t\tvar off = graph.gridSize / 2;\n\t\t\tx = (graph.snap(x / scale - tr.x - off) + tr.x) * scale;\n\t\t\ty = (graph.snap(y / scale - tr.y - off) + tr.y) * scale;\n\t\t}\n\t\t\n\t\tif (this.currentGuide != null && hideGuide)\n\t\t{\n\t\t\tthis.currentGuide.hide();\n\t\t}\n\t\t\n\t\tif (this.previewOffset != null)\n\t\t{\n\t\t\tx += this.previewOffset.x;\n\t\t\ty += this.previewOffset.y;\n\t\t}\n\n\t\tthis.previewElement.style.left = Math.round(x) + 'px';\n\t\tthis.previewElement.style.top = Math.round(y) + 'px';\n\t\tthis.previewElement.style.visibility = 'visible';\n\t}\n\t\n\tthis.currentPoint = new mxPoint(x, y);\n};\n\n/**\n * Function: drop\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n */\nmxDragSource.prototype.drop = function(graph, evt, dropTarget, x, y)\n{\n\tthis.dropHandler.apply(this, arguments);\n\t\n\t// Had to move this to after the insert because it will\n\t// affect the scrollbars of the window in IE to try and\n\t// make the complete container visible.\n\t// LATER: Should be made optional.\n\tif (graph.container.style.visibility != 'hidden')\n\t{\n\t\tgraph.container.focus();\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxToolbar\n * \n * Creates a toolbar inside a given DOM node. The toolbar may contain icons,\n * buttons and combo boxes.\n * \n * Event: mxEvent.SELECT\n * \n * Fires when an item was selected in the toolbar. The <code>function</code>\n * property contains the function that was selected in <selectMode>.\n * \n * Constructor: mxToolbar\n * \n * Constructs a toolbar in the specified container.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n */\nfunction mxToolbar(container)\n{\n\tthis.container = container;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxToolbar.prototype = new mxEventSource();\nmxToolbar.prototype.constructor = mxToolbar;\n\n/**\n * Variable: container\n * \n * Reference to the DOM nodes that contains the toolbar.\n */\nmxToolbar.prototype.container = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxToolbar.prototype.enabled = true;\n\n/**\n * Variable: noReset\n * \n * Specifies if <resetMode> requires a forced flag of true for resetting\n * the current mode in the toolbar. Default is false. This is set to true\n * if the toolbar item is double clicked to avoid a reset after a single\n * use of the item.\n */\nmxToolbar.prototype.noReset = false;\n\n/**\n * Variable: updateDefaultMode\n * \n * Boolean indicating if the default mode should be the last selected\n * switch mode or the first inserted switch mode. Default is true, that\n * is the last selected switch mode is the default mode. The default mode\n * is the mode to be selected after a reset of the toolbar. If this is\n * false, then the default mode is the first inserted mode item regardless\n * of what was last selected. Otherwise, the selected item after a reset is\n * the previously selected item.\n */\nmxToolbar.prototype.updateDefaultMode = true;\n\n/**\n * Function: addItem\n * \n * Adds the given function as an image with the specified title and icon\n * and returns the new image node.\n * \n * Parameters:\n * \n * title - Optional string that is used as the tooltip.\n * icon - Optional URL of the image to be used. If no URL is given, then a\n * button is created.\n * funct - Function to execute on a mouse click.\n * pressedIcon - Optional URL of the pressed image. Default is a gray\n * background.\n * style - Optional style classname. Default is mxToolbarItem.\n * factoryMethod - Optional factory method for popup menu, eg.\n * function(menu, evt, cell) { menu.addItem('Hello, World!'); }\n */\nmxToolbar.prototype.addItem = function(title, icon, funct, pressedIcon, style, factoryMethod)\n{\n\tvar img = document.createElement((icon != null) ? 'img' : 'button');\n\tvar initialClassName = style || ((factoryMethod != null) ?\n\t\t\t'mxToolbarMode' : 'mxToolbarItem');\n\timg.className = initialClassName;\n\timg.setAttribute('src', icon);\n\t\n\tif (title != null)\n\t{\n\t\tif (icon != null)\n\t\t{\n\t\t\timg.setAttribute('title', title);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.write(img, title);\n\t\t}\n\t}\n\t\n\tthis.container.appendChild(img);\n\n\t// Invokes the function on a click on the toolbar item\n\tif (funct != null)\n\t{\n\t\tmxEvent.addListener(img, 'click', funct);\n\t\t\n\t\tif (mxClient.IS_TOUCH)\n\t\t{\n\t\t\tmxEvent.addListener(img, 'touchend', funct);\n\t\t}\n\t}\n\n\tvar mouseHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (pressedIcon != null)\n\t\t{\n\t\t\timg.setAttribute('src', icon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.style.backgroundColor = '';\n\t\t}\n\t});\n\n\t// Highlights the toolbar item with a gray background\n\t// while it is being clicked with the mouse\n\tmxEvent.addGestureListeners(img, mxUtils.bind(this, function(evt)\n\t{\n\t\tif (pressedIcon != null)\n\t\t{\n\t\t\timg.setAttribute('src', pressedIcon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.style.backgroundColor = 'gray';\n\t\t}\n\t\t\n\t\t// Popup Menu\n\t\tif (factoryMethod != null)\n\t\t{\n\t\t\tif (this.menu == null)\n\t\t\t{\n\t\t\t\tthis.menu = new mxPopupMenu();\n\t\t\t\tthis.menu.init();\n\t\t\t}\n\t\t\t\n\t\t\tvar last = this.currentImg;\n\t\t\t\n\t\t\tif (this.menu.isMenuShowing())\n\t\t\t{\n\t\t\t\tthis.menu.hideMenu();\n\t\t\t}\n\t\t\t\n\t\t\tif (last != img)\n\t\t\t{\n\t\t\t\t// Redirects factory method to local factory method\n\t\t\t\tthis.currentImg = img;\n\t\t\t\tthis.menu.factoryMethod = factoryMethod;\n\t\t\t\t\n\t\t\t\tvar point = new mxPoint(\n\t\t\t\t\timg.offsetLeft,\n\t\t\t\t\timg.offsetTop + img.offsetHeight);\n\t\t\t\tthis.menu.popup(point.x, point.y, null, evt);\n\n\t\t\t\t// Sets and overrides to restore classname\n\t\t\t\tif (this.menu.isMenuShowing())\n\t\t\t\t{\n\t\t\t\t\timg.className = initialClassName + 'Selected';\n\t\t\t\t\t\n\t\t\t\t\tthis.menu.hideMenu = function()\n\t\t\t\t\t{\n\t\t\t\t\t\tmxPopupMenu.prototype.hideMenu.apply(this);\n\t\t\t\t\t\timg.className = initialClassName;\n\t\t\t\t\t\tthis.currentImg = null;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}), null, mouseHandler);\n\n\tmxEvent.addListener(img, 'mouseout', mouseHandler);\n\t\n\treturn img;\n};\n\n/**\n * Function: addCombo\n * \n * Adds and returns a new SELECT element using the given style. The element\n * is placed inside a DIV with the mxToolbarComboContainer style classname.\n * \n * Parameters:\n * \n * style - Optional style classname. Default is mxToolbarCombo.\n */\nmxToolbar.prototype.addCombo = function(style)\n{\n\tvar div = document.createElement('div');\n\tdiv.style.display = 'inline';\n\tdiv.className = 'mxToolbarComboContainer';\n\t\n\tvar select = document.createElement('select');\n\tselect.className = style || 'mxToolbarCombo';\n\tdiv.appendChild(select);\n\t\n\tthis.container.appendChild(div);\n\t\n\treturn select;\n};\n\n/**\n * Function: addCombo\n * \n * Adds and returns a new SELECT element using the given title as the\n * default element. The selection is reset to this element after each\n * change.\n * \n * Parameters:\n * \n * title - String that specifies the title of the default element.\n * style - Optional style classname. Default is mxToolbarCombo.\n */\nmxToolbar.prototype.addActionCombo = function(title, style)\n{\n\tvar select = document.createElement('select');\n\tselect.className = style || 'mxToolbarCombo';\n\tthis.addOption(select, title, null);\n\t\n\tmxEvent.addListener(select, 'change', function(evt)\n\t{\n\t\tvar value = select.options[select.selectedIndex];\n\t\tselect.selectedIndex = 0;\n\t\t\n\t\tif (value.funct != null)\n\t\t{\n\t\t\tvalue.funct(evt);\n\t\t}\n\t});\n\t\n\tthis.container.appendChild(select);\n\t\n\treturn select;\n};\n\n/**\n * Function: addOption\n * \n * Adds and returns a new OPTION element inside the given SELECT element.\n * If the given value is a function then it is stored in the option's funct\n * field.\n * \n * Parameters:\n * \n * combo - SELECT element that will contain the new entry.\n * title - String that specifies the title of the option.\n * value - Specifies the value associated with this option.\n */\nmxToolbar.prototype.addOption = function(combo, title, value)\n{\n\tvar option = document.createElement('option');\n\tmxUtils.writeln(option, title);\n\t\n\tif (typeof(value) == 'function')\n\t{\n\t\toption.funct = value;\n\t}\n\telse\n\t{\n\t\toption.setAttribute('value', value);\n\t}\n\t\n\tcombo.appendChild(option);\n\t\n\treturn option;\n};\n\n/**\n * Function: addSwitchMode\n * \n * Adds a new selectable item to the toolbar. Only one switch mode item may\n * be selected at a time. The currently selected item is the default item\n * after a reset of the toolbar.\n */\nmxToolbar.prototype.addSwitchMode = function(title, icon, funct, pressedIcon, style)\n{\n\tvar img = document.createElement('img');\n\timg.initialClassName = style || 'mxToolbarMode';\n\timg.className = img.initialClassName;\n\timg.setAttribute('src', icon);\n\timg.altIcon = pressedIcon;\n\t\n\tif (title != null)\n\t{\n\t\timg.setAttribute('title', title);\n\t}\n\t\n\tmxEvent.addListener(img, 'click', mxUtils.bind(this, function(evt)\n\t{\n\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName;\n\t\t}\n\t\t\n\t\tif (this.updateDefaultMode)\n\t\t{\n\t\t\tthis.defaultMode = img;\n\t\t}\n\t\t\n\t\tthis.selectedMode = img;\n\t\t\n\t\tvar tmp = img.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\timg.altIcon = img.getAttribute('src');\n\t\t\timg.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.className = img.initialClassName+'Selected';\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SELECT));\n\t\tfunct();\n\t}));\n\t\n\tthis.container.appendChild(img);\n\t\n\tif (this.defaultMode == null)\n\t{\n\t\tthis.defaultMode = img;\n\t\t\n\t\t// Function should fire only once so\n\t\t// do not pass it with the select event\n\t\tthis.selectMode(img);\n\t\tfunct();\n\t}\n\t\n\treturn img;\n};\n\n/**\n * Function: addMode\n * \n * Adds a new item to the toolbar. The selection is typically reset after\n * the item has been consumed, for example by adding a new vertex to the\n * graph. The reset is not carried out if the item is double clicked.\n * \n * The function argument uses the following signature: funct(evt, cell) where\n * evt is the native mouse event and cell is the cell under the mouse.\n */\nmxToolbar.prototype.addMode = function(title, icon, funct, pressedIcon, style, toggle)\n{\n\ttoggle = (toggle != null) ? toggle : true;\n\tvar img = document.createElement((icon != null) ? 'img' : 'button');\n\t\n\timg.initialClassName = style || 'mxToolbarMode';\n\timg.className = img.initialClassName;\n\timg.setAttribute('src', icon);\n\timg.altIcon = pressedIcon;\n\n\tif (title != null)\n\t{\n\t\timg.setAttribute('title', title);\n\t}\n\t\n\tif (this.enabled && toggle)\n\t{\n\t\tmxEvent.addListener(img, 'click', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.selectMode(img, funct);\n\t\t\tthis.noReset = false;\n\t\t}));\n\t\t\n\t\tmxEvent.addListener(img, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.selectMode(img, funct);\n\t\t\tthis.noReset = true;\n\t\t}));\n\t\t\n\t\tif (this.defaultMode == null)\n\t\t{\n\t\t\tthis.defaultMode = img;\n\t\t\tthis.defaultFunction = funct;\n\t\t\tthis.selectMode(img, funct);\n\t\t}\n\t}\n\n\tthis.container.appendChild(img);\t\t\t\t\t\n\n\treturn img;\n};\n\n/**\n * Function: selectMode\n * \n * Resets the state of the previously selected mode and displays the given\n * DOM node as selected. This function fires a select event with the given\n * function as a parameter.\n */\nmxToolbar.prototype.selectMode = function(domNode, funct)\n{\n\tif (this.selectedMode != domNode)\n\t{\n\t\tif (this.selectedMode != null)\n\t\t{\n\t\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.selectedMode = domNode;\n\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName+'Selected';\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SELECT, \"function\", funct));\n\t}\n};\n\n/**\n * Function: resetMode\n * \n * Selects the default mode and resets the state of the previously selected\n * mode.\n */\nmxToolbar.prototype.resetMode = function(forced)\n{\n\tif ((forced || !this.noReset) && this.selectedMode != this.defaultMode)\n\t{\n\t\t// The last selected switch mode will be activated\n\t\t// so the function was already executed and is\n\t\t// no longer required here\n\t\tthis.selectMode(this.defaultMode, this.defaultFunction);\n\t}\n};\n\n/**\n * Function: addSeparator\n * \n * Adds the specifies image as a separator.\n * \n * Parameters:\n * \n * icon - URL of the separator icon.\n */\nmxToolbar.prototype.addSeparator = function(icon)\n{\n\treturn this.addItem(null, icon, null);\n};\n\n/**\n * Function: addBreak\n * \n * Adds a break to the container.\n */\nmxToolbar.prototype.addBreak = function()\n{\n\tmxUtils.br(this.container);\n};\n\n/**\n * Function: addLine\n * \n * Adds a horizontal line to the container.\n */\nmxToolbar.prototype.addLine = function()\n{\n\tvar hr = document.createElement('hr');\n\t\n\thr.style.marginRight = '6px';\n\thr.setAttribute('size', '1');\n\t\n\tthis.container.appendChild(hr);\n};\n\n/**\n * Function: destroy\n * \n * Removes the toolbar and all its associated resources.\n */\nmxToolbar.prototype.destroy = function ()\n{\n\tmxEvent.release(this.container);\n\tthis.container = null;\n\tthis.defaultMode = null;\n\tthis.defaultFunction = null;\n\tthis.selectedMode = null;\n\t\n\tif (this.menu != null)\n\t{\n\t\tthis.menu.destroy();\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxUndoableEdit\n * \n * Implements a composite undoable edit. Here is an example for a custom change\n * which gets executed via the model:\n * \n * (code)\n * function CustomChange(model, name)\n * {\n *   this.model = model;\n *   this.name = name;\n *   this.previous = name;\n * };\n * \n * CustomChange.prototype.execute = function()\n * {\n *   var tmp = this.model.name;\n *   this.model.name = this.previous;\n *   this.previous = tmp;\n * };\n * \n * var name = prompt('Enter name');\n * graph.model.execute(new CustomChange(graph.model, name));\n * (end)\n * \n * Event: mxEvent.EXECUTED\n * \n * Fires between START_EDIT and END_EDIT after an atomic change was executed.\n * The <code>change</code> property contains the change that was executed.\n * \n * Event: mxEvent.START_EDIT\n * \n * Fires before a set of changes will be executed in <undo> or <redo>.\n * This event contains no properties.\n * \n * Event: mxEvent.END_EDIT\n *\n * Fires after a set of changeswas executed in <undo> or <redo>.\n * This event contains no properties.\n * \n * Constructor: mxUndoableEdit\n * \n * Constructs a new undoable edit for the given source.\n */\nfunction mxUndoableEdit(source, significant)\n{\n\tthis.source = source;\n\tthis.changes = [];\n\tthis.significant = (significant != null) ? significant : true;\n};\n\n/**\n * Variable: source\n * \n * Specifies the source of the edit.\n */\nmxUndoableEdit.prototype.source = null;\n\n/**\n * Variable: changes\n * \n * Array that contains the changes that make up this edit. The changes are\n * expected to either have an undo and redo function, or an execute\n * function. Default is an empty array.\n */\nmxUndoableEdit.prototype.changes = null;\n\n/**\n * Variable: significant\n * \n * Specifies if the undoable change is significant.\n * Default is true.\n */\nmxUndoableEdit.prototype.significant = null;\n\n/**\n * Variable: undone\n * \n * Specifies if this edit has been undone. Default is false.\n */\nmxUndoableEdit.prototype.undone = false;\n\n/**\n * Variable: redone\n * \n * Specifies if this edit has been redone. Default is false.\n */\nmxUndoableEdit.prototype.redone = false;\n\n/**\n * Function: isEmpty\n * \n * Returns true if the this edit contains no changes.\n */\nmxUndoableEdit.prototype.isEmpty = function()\n{\n\treturn this.changes.length == 0;\n};\n\n/**\n * Function: isSignificant\n * \n * Returns <significant>.\n */\nmxUndoableEdit.prototype.isSignificant = function()\n{\n\treturn this.significant;\n};\n\n/**\n * Function: add\n * \n * Adds the specified change to this edit. The change is an object that is\n * expected to either have an undo and redo, or an execute function.\n */\nmxUndoableEdit.prototype.add = function(change)\n{\n\tthis.changes.push(change);\n};\n\n/**\n * Function: notify\n * \n * Hook to notify any listeners of the changes after an <undo> or <redo>\n * has been carried out. This implementation is empty.\n */\nmxUndoableEdit.prototype.notify = function() { };\n\n/**\n * Function: die\n * \n * Hook to free resources after the edit has been removed from the command\n * history. This implementation is empty.\n */\nmxUndoableEdit.prototype.die = function() { };\n\n/**\n * Function: undo\n * \n * Undoes all changes in this edit.\n */\nmxUndoableEdit.prototype.undo = function()\n{\n\tif (!this.undone)\n\t{\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t\tvar count = this.changes.length;\n\t\t\n\t\tfor (var i = count - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar change = this.changes[i];\n\t\t\t\n\t\t\tif (change.execute != null)\n\t\t\t{\n\t\t\t\tchange.execute();\n\t\t\t}\n\t\t\telse if (change.undo != null)\n\t\t\t{\n\t\t\t\tchange.undo();\n\t\t\t}\n\t\t\t\n\t\t\t// New global executed event\n\t\t\tthis.source.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\t\t}\n\t\t\n\t\tthis.undone = true;\n\t\tthis.redone = false;\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tthis.notify();\n};\n\n/**\n * Function: redo\n * \n * Redoes all changes in this edit.\n */\nmxUndoableEdit.prototype.redo = function()\n{\n\tif (!this.redone)\n\t{\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t\tvar count = this.changes.length;\n\t\t\n\t\tfor (var i = 0; i < count; i++)\n\t\t{\n\t\t\tvar change = this.changes[i];\n\t\t\t\n\t\t\tif (change.execute != null)\n\t\t\t{\n\t\t\t\tchange.execute();\n\t\t\t}\n\t\t\telse if (change.redo != null)\n\t\t\t{\n\t\t\t\tchange.redo();\n\t\t\t}\n\t\t\t\n\t\t\t// New global executed event\n\t\t\tthis.source.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\t\t}\n\t\t\n\t\tthis.undone = false;\n\t\tthis.redone = true;\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tthis.notify();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxUndoManager\n *\n * Implements a command history. When changing the graph model, an\n * <mxUndoableChange> object is created at the start of the transaction (when\n * model.beginUpdate is called). All atomic changes are then added to this\n * object until the last model.endUpdate call, at which point the\n * <mxUndoableEdit> is dispatched in an event, and added to the history inside\n * <mxUndoManager>. This is done by an event listener in\n * <mxEditor.installUndoHandler>.\n * \n * Each atomic change of the model is represented by an object (eg.\n * <mxRootChange>, <mxChildChange>, <mxTerminalChange> etc) which contains the\n * complete undo information. The <mxUndoManager> also listens to the\n * <mxGraphView> and stores it's changes to the current root as insignificant\n * undoable changes, so that drilling (step into, step up) is undone.\n * \n * This means when you execute an atomic change on the model, then change the\n * current root on the view and click undo, the change of the root will be\n * undone together with the change of the model so that the display represents\n * the state at which the model was changed. However, these changes are not\n * transmitted for sharing as they do not represent a state change.\n *\n * Example:\n * \n * When adding an undo manager to a graph, make sure to add it\n * to the model and the view as well to maintain a consistent\n * display across multiple undo/redo steps.\n *\n * (code)\n * var undoManager = new mxUndoManager();\n * var listener = function(sender, evt)\n * {\n *   undoManager.undoableEditHappened(evt.getProperty('edit'));\n * };\n * graph.getModel().addListener(mxEvent.UNDO, listener);\n * graph.getView().addListener(mxEvent.UNDO, listener);\n * (end)\n * \n * The code creates a function that informs the undoManager\n * of an undoable edit and binds it to the undo event of\n * <mxGraphModel> and <mxGraphView> using\n * <mxEventSource.addListener>.\n * \n * Event: mxEvent.CLEAR\n * \n * Fires after <clear> was invoked. This event has no properties.\n * \n * Event: mxEvent.UNDO\n * \n * Fires afer a significant edit was undone in <undo>. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was undone.\n * \n * Event: mxEvent.REDO\n * \n * Fires afer a significant edit was redone in <redo>. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was redone.\n * \n * Event: mxEvent.ADD\n * \n * Fires after an undoable edit was added to the history. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was added.\n * \n * Constructor: mxUndoManager\n *\n * Constructs a new undo manager with the given history size. If no history\n * size is given, then a default size of 100 steps is used.\n */\nfunction mxUndoManager(size)\n{\n\tthis.size = (size != null) ? size : 100;\n\tthis.clear();\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUndoManager.prototype = new mxEventSource();\nmxUndoManager.prototype.constructor = mxUndoManager;\n\n/**\n * Variable: size\n * \n * Maximum command history size. 0 means unlimited history. Default is\n * 100.\n */\nmxUndoManager.prototype.size = null;\n\n/**\n * Variable: history\n * \n * Array that contains the steps of the command history.\n */\nmxUndoManager.prototype.history = null;\n\n/**\n * Variable: indexOfNextAdd\n * \n * Index of the element to be added next.\n */\nmxUndoManager.prototype.indexOfNextAdd = 0;\n\n/**\n * Function: isEmpty\n * \n * Returns true if the history is empty.\n */\nmxUndoManager.prototype.isEmpty = function()\n{\n\treturn this.history.length == 0;\n};\n\n/**\n * Function: clear\n * \n * Clears the command history.\n */\nmxUndoManager.prototype.clear = function()\n{\n\tthis.history = [];\n\tthis.indexOfNextAdd = 0;\n\tthis.fireEvent(new mxEventObject(mxEvent.CLEAR));\n};\n\n/**\n * Function: canUndo\n * \n * Returns true if an undo is possible.\n */\nmxUndoManager.prototype.canUndo = function()\n{\n\treturn this.indexOfNextAdd > 0;\n};\n\n/**\n * Function: undo\n * \n * Undoes the last change.\n */\nmxUndoManager.prototype.undo = function()\n{\n    while (this.indexOfNextAdd > 0)\n    {\n        var edit = this.history[--this.indexOfNextAdd];\n        edit.undo();\n\n\t\tif (edit.isSignificant())\n        {\n        \tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n            break;\n        }\n    }\n};\n\n/**\n * Function: canRedo\n * \n * Returns true if a redo is possible.\n */\nmxUndoManager.prototype.canRedo = function()\n{\n\treturn this.indexOfNextAdd < this.history.length;\n};\n\n/**\n * Function: redo\n * \n * Redoes the last change.\n */\nmxUndoManager.prototype.redo = function()\n{\n    var n = this.history.length;\n    \n    while (this.indexOfNextAdd < n)\n    {\n        var edit =  this.history[this.indexOfNextAdd++];\n        edit.redo();\n        \n        if (edit.isSignificant())\n        {\n        \tthis.fireEvent(new mxEventObject(mxEvent.REDO, 'edit', edit));\n            break;\n        }\n    }\n};\n\n/**\n * Function: undoableEditHappened\n * \n * Method to be called to add new undoable edits to the <history>.\n */\nmxUndoManager.prototype.undoableEditHappened = function(undoableEdit)\n{\n\tthis.trim();\n\t\n\tif (this.size > 0 &&\n\t\tthis.size == this.history.length)\n\t{\n\t\tthis.history.shift();\n\t}\n\t\n\tthis.history.push(undoableEdit);\n\tthis.indexOfNextAdd = this.history.length;\n\tthis.fireEvent(new mxEventObject(mxEvent.ADD, 'edit', undoableEdit));\n};\n\n/**\n * Function: trim\n * \n * Removes all pending steps after <indexOfNextAdd> from the history,\n * invoking die on each edit. This is called from <undoableEditHappened>.\n */\nmxUndoManager.prototype.trim = function()\n{\n\tif (this.history.length > this.indexOfNextAdd)\n\t{\n\t\tvar edits = this.history.splice(this.indexOfNextAdd,\n\t\t\tthis.history.length - this.indexOfNextAdd);\n\t\t\t\n\t\tfor (var i = 0; i < edits.length; i++)\n\t\t{\n\t\t\tedits[i].die();\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxUrlConverter\n * \n * Converts relative and absolute URLs to absolute URLs with protocol and domain.\n */\nvar mxUrlConverter = function()\n{\n\t// Empty constructor\n};\n\n/**\n * Variable: enabled\n * \n * Specifies if the converter is enabled. Default is true.\n */\nmxUrlConverter.prototype.enabled = true;\n\n/**\n * Variable: baseUrl\n * \n * Specifies the base URL to be used as a prefix for relative URLs.\n */\nmxUrlConverter.prototype.baseUrl = null;\n\n/**\n * Variable: baseDomain\n * \n * Specifies the base domain to be used as a prefix for absolute URLs.\n */\nmxUrlConverter.prototype.baseDomain = null;\n\n/**\n * Function: updateBaseUrl\n * \n * Private helper function to update the base URL.\n */\nmxUrlConverter.prototype.updateBaseUrl = function()\n{\n\tthis.baseDomain = location.protocol + '//' + location.host;\n\tthis.baseUrl = this.baseDomain + location.pathname;\n\tvar tmp = this.baseUrl.lastIndexOf('/');\n\t\n\t// Strips filename etc\n\tif (tmp > 0)\n\t{\n\t\tthis.baseUrl = this.baseUrl.substring(0, tmp + 1);\n\t}\n};\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxUrlConverter.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxUrlConverter.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: getBaseUrl\n * \n * Returns <baseUrl>.\n */\nmxUrlConverter.prototype.getBaseUrl = function()\n{\n\treturn this.baseUrl;\n};\n\n/**\n * Function: setBaseUrl\n * \n * Sets <baseUrl>.\n */\nmxUrlConverter.prototype.setBaseUrl = function(value)\n{\n\tthis.baseUrl = value;\n};\n\n/**\n * Function: getBaseDomain\n * \n * Returns <baseDomain>.\n */\nmxUrlConverter.prototype.getBaseDomain = function()\n{\n\treturn this.baseDomain;\n},\n\n/**\n * Function: setBaseDomain\n * \n * Sets <baseDomain>.\n */\nmxUrlConverter.prototype.setBaseDomain = function(value)\n{\n\tthis.baseDomain = value;\n},\n\n/**\n * Function: isRelativeUrl\n * \n * Returns true if the given URL is relative.\n */\nmxUrlConverter.prototype.isRelativeUrl = function(url)\n{\n\treturn url.substring(0, 2) != '//' && url.substring(0, 7) != 'http://' &&\n\t\turl.substring(0, 8) != 'https://' && url.substring(0, 10) != 'data:image' &&\n\t\turl.substring(0, 7) != 'file://';\n};\n\n/**\n * Function: convert\n * \n * Converts the given URL to an absolute URL with protol and domain.\n * Relative URLs are first converted to absolute URLs.\n */\nmxUrlConverter.prototype.convert = function(url)\n{\n\tif (this.isEnabled() && this.isRelativeUrl(url))\n\t{\n\t\tif (this.getBaseUrl() == null)\n\t\t{\n\t\t\tthis.updateBaseUrl();\n\t\t}\n\t\t\n\t\tif (url.charAt(0) == '/')\n\t\t{\n\t\t\turl = this.getBaseDomain() + url;\n\t\t}\n\t\telse\n\t\t{\n\t\t\turl = this.getBaseUrl() + url;\n\t\t}\n\t}\n\t\n\treturn url;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPanningManager\n *\n * Implements a handler for panning.\n */\nfunction mxPanningManager(graph)\n{\n\tthis.thread = null;\n\tthis.active = false;\n\tthis.tdx = 0;\n\tthis.tdy = 0;\n\tthis.t0x = 0;\n\tthis.t0y = 0;\n\tthis.dx = 0;\n\tthis.dy = 0;\n\tthis.scrollbars = false;\n\tthis.scrollLeft = 0;\n\tthis.scrollTop = 0;\n\t\n\tthis.mouseListener =\n\t{\n\t    mouseDown: function(sender, me) { },\n\t    mouseMove: function(sender, me) { },\n\t    mouseUp: mxUtils.bind(this, function(sender, me)\n\t    {\n\t    \tif (this.active)\n\t    \t{\n\t    \t\tthis.stop();\n\t    \t}\n\t    })\n\t};\n\t\n\tgraph.addMouseListener(this.mouseListener);\n\t\n\tthis.mouseUpListener = mxUtils.bind(this, function()\n\t{\n\t    \tif (this.active)\n\t    \t{\n\t    \t\tthis.stop();\n\t    \t}\n\t});\n\t\n\t// Stops scrolling on every mouseup anywhere in the document\n\tmxEvent.addListener(document, 'mouseup', this.mouseUpListener);\n\t\n\tvar createThread = mxUtils.bind(this, function()\n\t{\n\t    \tthis.scrollbars = mxUtils.hasScrollbars(graph.container);\n\t    \tthis.scrollLeft = graph.container.scrollLeft;\n\t    \tthis.scrollTop = graph.container.scrollTop;\n\t\n\t    \treturn window.setInterval(mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.tdx -= this.dx;\n\t\t\tthis.tdy -= this.dy;\n\n\t\t\tif (this.scrollbars)\n\t\t\t{\n\t\t\t\tvar left = -graph.container.scrollLeft - Math.ceil(this.dx);\n\t\t\t\tvar top = -graph.container.scrollTop - Math.ceil(this.dy);\n\t\t\t\tgraph.panGraph(left, top);\n\t\t\t\tgraph.panDx = this.scrollLeft - graph.container.scrollLeft;\n\t\t\t\tgraph.panDy = this.scrollTop - graph.container.scrollTop;\n\t\t\t\tgraph.fireEvent(new mxEventObject(mxEvent.PAN));\n\t\t\t\t// TODO: Implement graph.autoExtend\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgraph.panGraph(this.getDx(), this.getDy());\n\t\t\t}\n\t\t}), this.delay);\n\t});\n\t\n\tthis.isActive = function()\n\t{\n\t\treturn active;\n\t};\n\t\n\tthis.getDx = function()\n\t{\n\t\treturn Math.round(this.tdx);\n\t};\n\t\n\tthis.getDy = function()\n\t{\n\t\treturn Math.round(this.tdy);\n\t};\n\t\n\tthis.start = function()\n\t{\n\t\tthis.t0x = graph.view.translate.x;\n\t\tthis.t0y = graph.view.translate.y;\n\t\tthis.active = true;\n\t};\n\t\n\tthis.panTo = function(x, y, w, h)\n\t{\n\t\tif (!this.active)\n\t\t{\n\t\t\tthis.start();\n\t\t}\n\t\t\n    \tthis.scrollLeft = graph.container.scrollLeft;\n    \tthis.scrollTop = graph.container.scrollTop;\n\t\t\n\t\tw = (w != null) ? w : 0;\n\t\th = (h != null) ? h : 0;\n\t\t\n\t\tvar c = graph.container;\n\t\tthis.dx = x + w - c.scrollLeft - c.clientWidth;\n\t\t\n\t\tif (this.dx < 0 && Math.abs(this.dx) < this.border)\n\t\t{\n\t\t\tthis.dx = this.border + this.dx;\n\t\t}\n\t\telse if (this.handleMouseOut)\n\t\t{\n\t\t\tthis.dx = Math.max(this.dx, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dx = 0;\n\t\t}\n\t\t\n\t\tif (this.dx == 0)\n\t\t{\n\t\t\tthis.dx = x - c.scrollLeft;\n\t\t\t\n\t\t\tif (this.dx > 0 && this.dx < this.border)\n\t\t\t{\n\t\t\t\tthis.dx = this.dx - this.border;\n\t\t\t}\n\t\t\telse if (this.handleMouseOut)\n\t\t\t{\n\t\t\t\tthis.dx = Math.min(0, this.dx);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.dx = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.dy = y + h - c.scrollTop - c.clientHeight;\n\n\t\tif (this.dy < 0 && Math.abs(this.dy) < this.border)\n\t\t{\n\t\t\tthis.dy = this.border + this.dy;\n\t\t}\n\t\telse if (this.handleMouseOut)\n\t\t{\n\t\t\tthis.dy = Math.max(this.dy, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dy = 0;\n\t\t}\n\t\t\n\t\tif (this.dy == 0)\n\t\t{\n\t\t\tthis.dy = y - c.scrollTop;\n\t\t\t\n\t\t\tif (this.dy > 0 && this.dy < this.border)\n\t\t\t{\n\t\t\t\tthis.dy = this.dy - this.border;\n\t\t\t}\n\t\t\telse if (this.handleMouseOut)\n\t\t\t{\n\t\t\t\tthis.dy = Math.min(0, this.dy);\n\t\t\t} \n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.dy = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.dx != 0 || this.dy != 0)\n\t\t{\n\t\t\tthis.dx *= this.damper;\n\t\t\tthis.dy *= this.damper;\n\t\t\t\n\t\t\tif (this.thread == null)\n\t\t\t{\n\t\t\t\tthis.thread = createThread();\n\t\t\t}\n\t\t}\n\t\telse if (this.thread != null)\n\t\t{\n\t\t\twindow.clearInterval(this.thread);\n\t\t\tthis.thread = null;\n\t\t}\n\t};\n\t\n\tthis.stop = function()\n\t{\n\t\tif (this.active)\n\t\t{\n\t\t\tthis.active = false;\n\t\t\n\t\t\tif (this.thread != null)\n\t    \t{\n\t\t\t\twindow.clearInterval(this.thread);\n\t\t\t\tthis.thread = null;\n\t    \t}\n\t\t\t\n\t\t\tthis.tdx = 0;\n\t\t\tthis.tdy = 0;\n\t\t\t\n\t\t\tif (!this.scrollbars)\n\t\t\t{\n\t\t\t\tvar px = graph.panDx;\n\t\t\t\tvar py = graph.panDy;\n\t\t    \t\n\t\t    \tif (px != 0 || py != 0)\n\t\t    \t{\n\t\t    \t\tgraph.panGraph(0, 0);\n\t\t\t    \tgraph.view.setTranslate(this.t0x + px / graph.view.scale, this.t0y + py / graph.view.scale);\n\t\t    \t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgraph.panDx = 0;\n\t\t\t\tgraph.panDy = 0;\n\t\t\t\tgraph.fireEvent(new mxEventObject(mxEvent.PAN));\n\t\t\t}\n\t\t}\n\t};\n\t\n\tthis.destroy = function()\n\t{\n\t\tgraph.removeMouseListener(this.mouseListener);\n\t\tmxEvent.removeListener(document, 'mouseup', this.mouseUpListener);\n\t};\n};\n\n/**\n * Variable: damper\n * \n * Damper value for the panning. Default is 1/6.\n */\nmxPanningManager.prototype.damper = 1/6;\n\n/**\n * Variable: delay\n * \n * Delay in milliseconds for the panning. Default is 10.\n */\nmxPanningManager.prototype.delay = 10;\n\n/**\n * Variable: handleMouseOut\n * \n * Specifies if mouse events outside of the component should be handled. Default is true. \n */\nmxPanningManager.prototype.handleMouseOut = true;\n\n/**\n * Variable: border\n * \n * Border to handle automatic panning inside the component. Default is 0 (disabled).\n */\nmxPanningManager.prototype.border = 0;\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPopupMenu\n * \n * Basic popup menu. To add a vertical scrollbar to a given submenu, the\n * following code can be used.\n * \n * (code)\n * var mxPopupMenuShowMenu = mxPopupMenu.prototype.showMenu;\n * mxPopupMenu.prototype.showMenu = function()\n * {\n *   mxPopupMenuShowMenu.apply(this, arguments);\n *   \n *   this.div.style.overflowY = 'auto';\n *   this.div.style.overflowX = 'hidden';\n *   this.div.style.maxHeight = '160px';\n * };\n * (end)\n * \n * Constructor: mxPopupMenu\n * \n * Constructs a popupmenu.\n * \n * Event: mxEvent.SHOW\n *\n * Fires after the menu has been shown in <popup>.\n */\nfunction mxPopupMenu(factoryMethod)\n{\n\tthis.factoryMethod = factoryMethod;\n\t\n\tif (factoryMethod != null)\n\t{\n\t\tthis.init();\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxPopupMenu.prototype = new mxEventSource();\nmxPopupMenu.prototype.constructor = mxPopupMenu;\n\n/**\n * Variable: submenuImage\n * \n * URL of the image to be used for the submenu icon.\n */\nmxPopupMenu.prototype.submenuImage = mxClient.imageBasePath + '/submenu.gif';\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the popupmenu and its shadow. Default is 10006.\n */\nmxPopupMenu.prototype.zIndex = 10006;\n\n/**\n * Variable: factoryMethod\n * \n * Function that is used to create the popup menu. The function takes the\n * current panning handler, the <mxCell> under the mouse and the mouse\n * event that triggered the call as arguments.\n */\nmxPopupMenu.prototype.factoryMethod = null;\n\n/**\n * Variable: useLeftButtonForPopup\n * \n * Specifies if popupmenus should be activated by clicking the left mouse\n * button. Default is false.\n */\nmxPopupMenu.prototype.useLeftButtonForPopup = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxPopupMenu.prototype.enabled = true;\n\n/**\n * Variable: itemCount\n * \n * Contains the number of times <addItem> has been called for a new menu.\n */\nmxPopupMenu.prototype.itemCount = 0;\n\n/**\n * Variable: autoExpand\n * \n * Specifies if submenus should be expanded on mouseover. Default is false.\n */\nmxPopupMenu.prototype.autoExpand = false;\n\n/**\n * Variable: smartSeparators\n * \n * Specifies if separators should only be added if a menu item follows them.\n * Default is false.\n */\nmxPopupMenu.prototype.smartSeparators = false;\n\n/**\n * Variable: labels\n * \n * Specifies if any labels should be visible. Default is true.\n */\nmxPopupMenu.prototype.labels = true;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxPopupMenu.prototype.init = function()\n{\n\t// Adds the inner table\n\tthis.table = document.createElement('table');\n\tthis.table.className = 'mxPopupMenu';\n\t\n\tthis.tbody = document.createElement('tbody');\n\tthis.table.appendChild(this.tbody);\n\n\t// Adds the outer div\n\tthis.div = document.createElement('div');\n\tthis.div.className = 'mxPopupMenu';\n\tthis.div.style.display = 'inline';\n\tthis.div.style.zIndex = this.zIndex;\n\tthis.div.appendChild(this.table);\n\n\t// Disables the context menu on the outer div\n\tmxEvent.disableContextMenu(this.div);\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxPopupMenu.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n */\nmxPopupMenu.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isPopupTrigger\n * \n * Returns true if the given event is a popupmenu trigger for the optional\n * given cell.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the mouse event.\n */\nmxPopupMenu.prototype.isPopupTrigger = function(me)\n{\n\treturn me.isPopupTrigger() || (this.useLeftButtonForPopup && mxEvent.isLeftMouseButton(me.getEvent()));\n};\n\n/**\n * Function: addItem\n * \n * Adds the given item to the given parent item. If no parent item is specified\n * then the item is added to the top-level menu. The return value may be used\n * as the parent argument, ie. as a submenu item. The return value is the table\n * row that represents the item.\n * \n * Paramters:\n * \n * title - String that represents the title of the menu item.\n * image - Optional URL for the image icon.\n * funct - Function associated that takes a mouseup or touchend event.\n * parent - Optional item returned by <addItem>.\n * iconCls - Optional string that represents the CSS class for the image icon.\n * IconsCls is ignored if image is given.\n * enabled - Optional boolean indicating if the item is enabled. Default is true.\n * active - Optional boolean indicating if the menu should implement any event handling.\n * Default is true.\n */\nmxPopupMenu.prototype.addItem = function(title, image, funct, parent, iconCls, enabled, active)\n{\n\tparent = parent || this;\n\tthis.itemCount++;\n\t\n\t// Smart separators only added if element contains items\n\tif (parent.willAddSeparator)\n\t{\n\t\tif (parent.containsItems)\n\t\t{\n\t\t\tthis.addSeparator(parent, true);\n\t\t}\n\n\t\tparent.willAddSeparator = false;\n\t}\n\n\tparent.containsItems = true;\n\tvar tr = document.createElement('tr');\n\ttr.className = 'mxPopupMenuItem';\n\tvar col1 = document.createElement('td');\n\tcol1.className = 'mxPopupMenuIcon';\n\n\t// Adds the given image into the first column\n\tif (image != null)\n\t{\n\t\tvar img = document.createElement('img');\n\t\timg.src = image;\n\t\tcol1.appendChild(img);\n\t}\n\telse if (iconCls != null)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.className = iconCls;\n\t\tcol1.appendChild(div);\n\t}\n\t\n\ttr.appendChild(col1);\n\t\n\tif (this.labels)\n\t{\n\t\tvar col2 = document.createElement('td');\n\t\tcol2.className = 'mxPopupMenuItem' +\n\t\t\t((enabled != null && !enabled) ? ' mxDisabled' : '');\n\t\t\n\t\tmxUtils.write(col2, title);\n\t\tcol2.align = 'left';\n\t\ttr.appendChild(col2);\n\t\n\t\tvar col3 = document.createElement('td');\n\t\tcol3.className = 'mxPopupMenuItem' +\n\t\t\t((enabled != null && !enabled) ? ' mxDisabled' : '');\n\t\tcol3.style.paddingRight = '6px';\n\t\tcol3.style.textAlign = 'right';\n\t\t\n\t\ttr.appendChild(col3);\n\t\t\n\t\tif (parent.div == null)\n\t\t{\n\t\t\tthis.createSubmenu(parent);\n\t\t}\n\t}\n\t\n\tparent.tbody.appendChild(tr);\n\n\tif (active != false && enabled != false)\n\t{\n\t\tvar currentSelection = null;\n\t\t\n\t\tmxEvent.addGestureListeners(tr,\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tthis.eventReceiver = tr;\n\t\t\t\t\n\t\t\t\tif (parent.activeRow != tr && parent.activeRow != parent)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != null && parent.activeRow.div.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideSubmenu(parent);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (tr.div != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.showSubmenu(parent, tr);\n\t\t\t\t\t\tparent.activeRow = tr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Workaround for lost current selection in page because of focus in IE\n\t\t\t\tif (document.selection != null && (mxClient.IS_QUIRKS || document.documentMode == 8))\n\t\t\t\t{\n\t\t\t\t\tcurrentSelection = document.selection.createRange();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (parent.activeRow != tr && parent.activeRow != parent)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != null && parent.activeRow.div.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideSubmenu(parent);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.autoExpand && tr.div != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.showSubmenu(parent, tr);\n\t\t\t\t\t\tparent.activeRow = tr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// Sets hover style because TR in IE doesn't have hover\n\t\t\t\ttr.className = 'mxPopupMenuItemHover';\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\t// EventReceiver avoids clicks on a submenu item\n\t\t\t\t// which has just been shown in the mousedown\n\t\t\t\tif (this.eventReceiver == tr)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != tr)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideMenu();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for lost current selection in page because of focus in IE\n\t\t\t\t\tif (currentSelection != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Workaround for \"unspecified error\" in IE8 standards\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentSelection.select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (e)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentSelection = null;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (funct != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfunct(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.eventReceiver = null;\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t})\n\t\t);\n\t\n\t\t// Resets hover style because TR in IE doesn't have hover\n\t\tmxEvent.addListener(tr, 'mouseout',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\ttr.className = 'mxPopupMenuItem';\n\t\t\t})\n\t\t);\n\t}\n\t\n\treturn tr;\n};\n\n/**\n * Adds a checkmark to the given menuitem.\n */\nmxPopupMenu.prototype.addCheckmark = function(item, img)\n{\n\tvar td = item.firstChild.nextSibling;\n\ttd.style.backgroundImage = 'url(\\'' + img + '\\')';\n\ttd.style.backgroundRepeat = 'no-repeat';\n\ttd.style.backgroundPosition = '2px 50%';\n};\n\n/**\n * Function: createSubmenu\n * \n * Creates the nodes required to add submenu items inside the given parent\n * item. This is called in <addItem> if a parent item is used for the first\n * time. This adds various DOM nodes and a <submenuImage> to the parent.\n * \n * Parameters:\n * \n * parent - An item returned by <addItem>.\n */\nmxPopupMenu.prototype.createSubmenu = function(parent)\n{\n\tparent.table = document.createElement('table');\n\tparent.table.className = 'mxPopupMenu';\n\n\tparent.tbody = document.createElement('tbody');\n\tparent.table.appendChild(parent.tbody);\n\n\tparent.div = document.createElement('div');\n\tparent.div.className = 'mxPopupMenu';\n\n\tparent.div.style.position = 'absolute';\n\tparent.div.style.display = 'inline';\n\tparent.div.style.zIndex = this.zIndex;\n\t\n\tparent.div.appendChild(parent.table);\n\t\n\tvar img = document.createElement('img');\n\timg.setAttribute('src', this.submenuImage);\n\t\n\t// Last column of the submenu item in the parent menu\n\ttd = parent.firstChild.nextSibling.nextSibling;\n\ttd.appendChild(img);\n};\n\n/**\n * Function: showSubmenu\n * \n * Shows the submenu inside the given parent row.\n */\nmxPopupMenu.prototype.showSubmenu = function(parent, row)\n{\n\tif (row.div != null)\n\t{\n\t\trow.div.style.left = (parent.div.offsetLeft +\n\t\t\trow.offsetLeft+row.offsetWidth - 1) + 'px';\n\t\trow.div.style.top = (parent.div.offsetTop+row.offsetTop) + 'px';\n\t\tdocument.body.appendChild(row.div);\n\t\t\n\t\t// Moves the submenu to the left side if there is no space\n\t\tvar left = parseInt(row.div.offsetLeft);\n\t\tvar width = parseInt(row.div.offsetWidth);\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(document);\n\t\t\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\t\n\t\tvar right = offset.x + (b.clientWidth || d.clientWidth);\n\t\t\n\t\tif (left + width > right)\n\t\t{\n\t\t\trow.div.style.left = Math.max(0, (parent.div.offsetLeft - width + ((mxClient.IS_IE) ? 6 : -6))) + 'px';\n\t\t}\n\t\t\n\t\tmxUtils.fit(row.div);\n\t}\n};\n\n/**\n * Function: addSeparator\n * \n * Adds a horizontal separator in the given parent item or the top-level menu\n * if no parent is specified.\n * \n * Parameters:\n * \n * parent - Optional item returned by <addItem>.\n * force - Optional boolean to ignore <smartSeparators>. Default is false.\n */\nmxPopupMenu.prototype.addSeparator = function(parent, force)\n{\n\tparent = parent || this;\n\t\n\tif (this.smartSeparators && !force)\n\t{\n\t\tparent.willAddSeparator = true;\n\t}\n\telse if (parent.tbody != null)\n\t{\n\t\tparent.willAddSeparator = false;\n\t\tvar tr = document.createElement('tr');\n\t\t\n\t\tvar col1 = document.createElement('td');\n\t\tcol1.className = 'mxPopupMenuIcon';\n\t\tcol1.style.padding = '0 0 0 0px';\n\t\t\n\t\ttr.appendChild(col1);\n\t\t\n\t\tvar col2 = document.createElement('td');\n\t\tcol2.style.padding = '0 0 0 0px';\n\t\tcol2.setAttribute('colSpan', '2');\n\t\n\t\tvar hr = document.createElement('hr');\n\t\thr.setAttribute('size', '1');\n\t\tcol2.appendChild(hr);\n\t\t\n\t\ttr.appendChild(col2);\n\t\t\n\t\tparent.tbody.appendChild(tr);\n\t}\n};\n\n/**\n * Function: popup\n * \n * Shows the popup menu for the given event and cell.\n * \n * Example:\n * \n * (code)\n * graph.panningHandler.popup = function(x, y, cell, evt)\n * {\n *   mxUtils.alert('Hello, World!');\n * }\n * (end)\n */\nmxPopupMenu.prototype.popup = function(x, y, cell, evt)\n{\n\tif (this.div != null && this.tbody != null && this.factoryMethod != null)\n\t{\n\t\tthis.div.style.left = x + 'px';\n\t\tthis.div.style.top = y + 'px';\n\t\t\n\t\t// Removes all child nodes from the existing menu\n\t\twhile (this.tbody.firstChild != null)\n\t\t{\n\t\t\tmxEvent.release(this.tbody.firstChild);\n\t\t\tthis.tbody.removeChild(this.tbody.firstChild);\n\t\t}\n\t\t\n\t\tthis.itemCount = 0;\n\t\tthis.factoryMethod(this, cell, evt);\n\t\t\n\t\tif (this.itemCount > 0)\n\t\t{\n\t\t\tthis.showMenu();\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.SHOW));\n\t\t}\n\t}\n};\n\n/**\n * Function: isMenuShowing\n * \n * Returns true if the menu is showing.\n */\nmxPopupMenu.prototype.isMenuShowing = function()\n{\n\treturn this.div != null && this.div.parentNode == document.body;\n};\n\n/**\n * Function: showMenu\n * \n * Shows the menu.\n */\nmxPopupMenu.prototype.showMenu = function()\n{\n\t// Disables filter-based shadow in IE9 standards mode\n\tif (document.documentMode >= 9)\n\t{\n\t\tthis.div.style.filter = 'none';\n\t}\n\t\n\t// Fits the div inside the viewport\n\tdocument.body.appendChild(this.div);\n\tmxUtils.fit(this.div);\n};\n\n/**\n * Function: hideMenu\n * \n * Removes the menu and all submenus.\n */\nmxPopupMenu.prototype.hideMenu = function()\n{\n\tif (this.div != null)\n\t{\n\t\tif (this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.hideSubmenu(this);\n\t\tthis.containsItems = false;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.HIDE));\n\t}\n};\n\n/**\n * Function: hideSubmenu\n * \n * Removes all submenus inside the given parent.\n * \n * Parameters:\n * \n * parent - An item returned by <addItem>.\n */\nmxPopupMenu.prototype.hideSubmenu = function(parent)\n{\n\tif (parent.activeRow != null)\n\t{\n\t\tthis.hideSubmenu(parent.activeRow);\n\t\t\n\t\tif (parent.activeRow.div.parentNode != null)\n\t\t{\n\t\t\tparent.activeRow.div.parentNode.removeChild(parent.activeRow.div);\n\t\t}\n\t\t\n\t\tparent.activeRow = null;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPopupMenu.prototype.destroy = function()\n{\n\tif (this.div != null)\n\t{\n\t\tmxEvent.release(this.div);\n\t\t\n\t\tif (this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.div = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxAutoSaveManager\n * \n * Manager for automatically saving diagrams. The <save> hook must be\n * implemented.\n * \n * Example:\n * \n * (code)\n * var mgr = new mxAutoSaveManager(editor.graph);\n * mgr.save = function()\n * {\n *   mxLog.show();\n *   mxLog.debug('save');\n * };\n * (end)\n * \n * Constructor: mxAutoSaveManager\n *\n * Constructs a new automatic layout for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxAutoSaveManager(graph)\n{\n\t// Notifies the manager of a change\n\tthis.changeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.graphModelChanged(evt.getProperty('edit').changes);\n\t\t}\n\t});\n\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxAutoSaveManager.prototype = new mxEventSource();\nmxAutoSaveManager.prototype.constructor = mxAutoSaveManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxAutoSaveManager.prototype.graph = null;\n\n/**\n * Variable: autoSaveDelay\n * \n * Minimum amount of seconds between two consecutive autosaves. Eg. a\n * value of 1 (s) means the graph is not stored more than once per second.\n * Default is 10.\n */\nmxAutoSaveManager.prototype.autoSaveDelay = 10;\n\n/**\n * Variable: autoSaveThrottle\n * \n * Minimum amount of seconds between two consecutive autosaves triggered by\n * more than <autoSaveThreshhold> changes within a timespan of less than\n * <autoSaveDelay> seconds. Eg. a value of 1 (s) means the graph is not\n * stored more than once per second even if there are more than\n * <autoSaveThreshold> changes within that timespan. Default is 2.\n */\nmxAutoSaveManager.prototype.autoSaveThrottle = 2;\n\n/**\n * Variable: autoSaveThreshold\n * \n * Minimum amount of ignored changes before an autosave. Eg. a value of 2\n * means after 2 change of the graph model the autosave will trigger if the\n * condition below is true. Default is 5.\n */\nmxAutoSaveManager.prototype.autoSaveThreshold = 5;\n\n/**\n * Variable: ignoredChanges\n * \n * Counter for ignored changes in autosave.\n */\nmxAutoSaveManager.prototype.ignoredChanges = 0;\n\n/**\n * Variable: lastSnapshot\n * \n * Used for autosaving. See <autosave>.\n */\nmxAutoSaveManager.prototype.lastSnapshot = 0;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxAutoSaveManager.prototype.enabled = true;\n\n/**\n * Variable: changeHandler\n * \n * Holds the function that handles graph model changes.\n */\nmxAutoSaveManager.prototype.changeHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxAutoSaveManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxAutoSaveManager.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the layouts operate on.\n */\nmxAutoSaveManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n\t}\n};\n\n/**\n * Function: save\n * \n * Empty hook that is called if the graph should be saved.\n */\nmxAutoSaveManager.prototype.save = function()\n{\n\t// empty\n};\n\n/**\n * Function: graphModelChanged\n * \n * Invoked when the graph model has changed.\n */\nmxAutoSaveManager.prototype.graphModelChanged = function(changes)\n{\n\tvar now = new Date().getTime();\n\tvar dt = (now - this.lastSnapshot) / 1000;\n\t\n\tif (dt > this.autoSaveDelay ||\n\t\t(this.ignoredChanges >= this.autoSaveThreshold &&\n\t\t dt > this.autoSaveThrottle))\n\t{\n\t\tthis.save();\n\t\tthis.reset();\n\t}\n\telse\n\t{\n\t\t// Increments the number of ignored changes\n\t\tthis.ignoredChanges++;\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets all counters.\n */\nmxAutoSaveManager.prototype.reset = function()\n{\n\tthis.lastSnapshot = new Date().getTime();\n\tthis.ignoredChanges = 0;\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxAutoSaveManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxAnimation\n * \n * Implements a basic animation in JavaScript.\n * \n * Constructor: mxAnimation\n * \n * Constructs an animation.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxAnimation(delay)\n{\n\tthis.delay = (delay != null) ? delay : 20;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxAnimation.prototype = new mxEventSource();\nmxAnimation.prototype.constructor = mxAnimation;\n\n/**\n * Variable: delay\n * \n * Specifies the delay between the animation steps. Defaul is 30ms.\n */\nmxAnimation.prototype.delay = null;\n\n/**\n * Variable: thread\n * \n * Reference to the thread while the animation is running.\n */\nmxAnimation.prototype.thread = null;\n\n/**\n * Function: isRunning\n * \n * Returns true if the animation is running.\n */\nmxAnimation.prototype.isRunning = function()\n{\n\treturn this.thread != null;\n};\n\n/**\n * Function: startAnimation\n *\n * Starts the animation by repeatedly invoking updateAnimation.\n */\nmxAnimation.prototype.startAnimation = function()\n{\n\tif (this.thread == null)\n\t{\n\t\tthis.thread = window.setInterval(mxUtils.bind(this, this.updateAnimation), this.delay);\n\t}\n};\n\n/**\n * Function: updateAnimation\n *\n * Hook for subclassers to implement the animation. Invoke stopAnimation\n * when finished, startAnimation to resume. This is called whenever the\n * timer fires and fires an mxEvent.EXECUTE event with no properties.\n */\nmxAnimation.prototype.updateAnimation = function()\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTE));\n};\n\n/**\n * Function: stopAnimation\n *\n * Stops the animation by deleting the timer and fires an <mxEvent.DONE>.\n */\nmxAnimation.prototype.stopAnimation = function()\n{\n\tif (this.thread != null)\n\t{\n\t\twindow.clearInterval(this.thread);\n\t\tthis.thread = null;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.DONE));\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxMorphing\n * \n * Implements animation for morphing cells. Here is an example of\n * using this class for animating the result of a layout algorithm:\n * \n * (code)\n * graph.getModel().beginUpdate();\n * try\n * {\n *   var circleLayout = new mxCircleLayout(graph);\n *   circleLayout.execute(graph.getDefaultParent());\n * }\n * finally\n * {\n *   var morph = new mxMorphing(graph);\n *   morph.addListener(mxEvent.DONE, function()\n *   {\n *     graph.getModel().endUpdate();\n *   });\n *   \n *   morph.startAnimation();\n * }\n * (end)\n * \n * Constructor: mxMorphing\n * \n * Constructs an animation.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * steps - Optional number of steps in the morphing animation. Default is 6.\n * ease - Optional easing constant for the animation. Default is 1.5.\n * delay - Optional delay between the animation steps. Passed to <mxAnimation>.\n */\nfunction mxMorphing(graph, steps, ease, delay)\n{\n\tmxAnimation.call(this, delay);\n\tthis.graph = graph;\n\tthis.steps = (steps != null) ? steps : 6;\n\tthis.ease = (ease != null) ? ease : 1.5;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxMorphing.prototype = new mxAnimation();\nmxMorphing.prototype.constructor = mxMorphing;\n\n/**\n * Variable: graph\n * \n * Specifies the delay between the animation steps. Defaul is 30ms.\n */\nmxMorphing.prototype.graph = null;\n\n/**\n * Variable: steps\n * \n * Specifies the maximum number of steps for the morphing.\n */\nmxMorphing.prototype.steps = null;\n\n/**\n * Variable: step\n * \n * Contains the current step.\n */\nmxMorphing.prototype.step = 0;\n\n/**\n * Variable: ease\n * \n * Ease-off for movement towards the given vector. Larger values are\n * slower and smoother. Default is 4.\n */\nmxMorphing.prototype.ease = null;\n\n/**\n * Variable: cells\n * \n * Optional array of cells to be animated. If this is not specified\n * then all cells are checked and animated if they have been moved\n * in the current transaction.\n */\nmxMorphing.prototype.cells = null;\n\n/**\n * Function: updateAnimation\n *\n * Animation step.\n */\nmxMorphing.prototype.updateAnimation = function()\n{\n\tmxAnimation.prototype.updateAnimation.apply(this, arguments);\n\tvar move = new mxCellStatePreview(this.graph);\n\n\tif (this.cells != null)\n\t{\n\t\t// Animates the given cells individually without recursion\n\t\tfor (var i = 0; i < this.cells.length; i++)\n\t\t{\n\t\t\tthis.animateCell(this.cells[i], move, false);\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Animates all changed cells by using recursion to find\n\t\t// the changed cells but not for the animation itself\n\t\tthis.animateCell(this.graph.getModel().getRoot(), move, true);\n\t}\n\t\n\tthis.show(move);\n\t\n\tif (move.isEmpty() || this.step++ >= this.steps)\n\t{\n\t\tthis.stopAnimation();\n\t}\n};\n\n/**\n * Function: show\n *\n * Shows the changes in the given <mxCellStatePreview>.\n */\nmxMorphing.prototype.show = function(move)\n{\n\tmove.show();\n};\n\n/**\n * Function: animateCell\n *\n * Animates the given cell state using <mxCellStatePreview.moveState>.\n */\nmxMorphing.prototype.animateCell = function(cell, move, recurse)\n{\n\tvar state = this.graph.getView().getState(cell);\n\tvar delta = null;\n\n\tif (state != null)\n\t{\n\t\t// Moves the animated state from where it will be after the model\n\t\t// change by subtracting the given delta vector from that location\n\t\tdelta = this.getDelta(state);\n\n\t\tif (this.graph.getModel().isVertex(cell) && (delta.x != 0 || delta.y != 0))\n\t\t{\n\t\t\tvar translate = this.graph.view.getTranslate();\n\t\t\tvar scale = this.graph.view.getScale();\n\t\t\t\n\t\t\tdelta.x += translate.x * scale;\n\t\t\tdelta.y += translate.y * scale;\n\t\t\t\n\t\t\tmove.moveState(state, -delta.x / this.ease, -delta.y / this.ease);\n\t\t}\n\t}\n\t\n\tif (recurse && !this.stopRecursion(state, delta))\n\t{\n\t\tvar childCount = this.graph.getModel().getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.animateCell(this.graph.getModel().getChildAt(cell, i), move, recurse);\n\t\t}\n\t}\n};\n\n/**\n * Function: stopRecursion\n *\n * Returns true if the animation should not recursively find more\n * deltas for children if the given parent state has been animated.\n */\nmxMorphing.prototype.stopRecursion = function(state, delta)\n{\n\treturn delta != null && (delta.x != 0 || delta.y != 0);\n};\n\n/**\n * Function: getDelta\n *\n * Returns the vector between the current rendered state and the future\n * location of the state after the display will be updated.\n */\nmxMorphing.prototype.getDelta = function(state)\n{\n\tvar origin = this.getOriginForCell(state.cell);\n\tvar translate = this.graph.getView().getTranslate();\n\tvar scale = this.graph.getView().getScale();\n\tvar x = state.x / scale - translate.x;\n\tvar y = state.y / scale - translate.y;\n\n\treturn new mxPoint((origin.x - x) * scale, (origin.y - y) * scale);\n};\n\n/**\n * Function: getOriginForCell\n *\n * Returns the top, left corner of the given cell. TODO: Improve performance\n * by using caching inside this method as the result per cell never changes\n * during the lifecycle of this object.\n */\nmxMorphing.prototype.getOriginForCell = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\tvar geo = this.graph.getCellGeometry(cell);\n\t\tresult = this.getOriginForCell(parent);\n\t\t\n\t\t// TODO: Handle offsets\n\t\tif (geo != null)\n\t\t{\n\t\t\tif (geo.relative)\n\t\t\t{\n\t\t\t\tvar pgeo = this.graph.getCellGeometry(parent);\n\t\t\t\t\n\t\t\t\tif (pgeo != null)\n\t\t\t\t{\n\t\t\t\t\tresult.x += geo.x * pgeo.width;\n\t\t\t\t\tresult.y += geo.y * pgeo.height;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.x += geo.x;\n\t\t\t\tresult.y += geo.y;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (result == null)\n\t{\n\t\tvar t = this.graph.view.getTranslate();\n\t\tresult = new mxPoint(-t.x, -t.y);\n\t}\n\t\n\treturn result;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageBundle\n *\n * Maps from keys to base64 encoded images or file locations. All values must\n * be URLs or use the format data:image/format followed by a comma and the base64\n * encoded image data, eg. \"data:image/gif,XYZ\", where XYZ is the base64 encoded\n * image data.\n * \n * To add a new image bundle to an existing graph, the following code is used:\n * \n * (code)\n * var bundle = new mxImageBundle(alt);\n * bundle.putImage('myImage', 'data:image/gif,R0lGODlhEAAQAMIGAAAAAICAAICAgP' +\n *   '//AOzp2O3r2////////yH+FUNyZWF0ZWQgd2l0aCBUaGUgR0lNUAAh+QQBCgAHACwAAAAA' +\n *   'EAAQAAADTXi63AowynnAMDfjPUDlnAAJhmeBFxAEloliKltWmiYCQvfVr6lBPB1ggxN1hi' +\n *   'laSSASFQpIV5HJBDyHpqK2ejVRm2AAgZCdmCGO9CIBADs=', fallback);\n * bundle.putImage('mySvgImage', 'data:image/svg+xml,' + encodeURIComponent(\n *   '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">' +\n *   '<linearGradient id=\"gradient\"><stop offset=\"10%\" stop-color=\"#F00\"/>' +\n *   '<stop offset=\"90%\" stop-color=\"#fcc\"/></linearGradient>' +\n *   '<rect fill=\"url(#gradient)\" width=\"100%\" height=\"100%\"/></svg>'), fallback);\n * graph.addImageBundle(bundle);\n * (end);\n * \n * Alt is an optional boolean (default is false) that specifies if the value\n * or the fallback should be returned in <getImage>.\n * \n * The image can then be referenced in any cell style using image=myImage.\n * If you are using mxOutline, you should use the same image bundles in the\n * graph that renders the outline.\n * \n * The keys for images are resolved in <mxGraph.postProcessCellStyle> and\n * turned into a data URI if the returned value has a short data URI format\n * as specified above.\n * \n * A typical value for the fallback is a MTHML link as defined in RFC 2557.\n * Note that this format requires a file to be dynamically created on the\n * server-side, or the page that contains the graph to be modified to contain\n * the resources, this can be done by adding a comment that contains the\n * resource in the HEAD section of the page after the title tag.\n * \n * This type of fallback mechanism should be used in IE6 and IE7. IE8 does\n * support data URIs, but the maximum size is limited to 32 KB, which means\n * all data URIs should be limited to 32 KB.\n */\nfunction mxImageBundle(alt)\n{\n\tthis.images = [];\n\tthis.alt = (alt != null) ? alt : false;\n};\n\n/**\n * Variable: images\n * \n * Maps from keys to images.\n */\nmxImageBundle.prototype.images = null;\n\n/**\n * Variable: alt\n * \n * Specifies if the fallback representation should be returned.\n */\nmxImageBundle.prototype.images = null;\n\n/**\n * Function: putImage\n * \n * Adds the specified entry to the map. The entry is an object with a value and\n * fallback property as specified in the arguments.\n */\nmxImageBundle.prototype.putImage = function(key, value, fallback)\n{\n\tthis.images[key] = {value: value, fallback: fallback};\n};\n\n/**\n * Function: getImage\n * \n * Returns the value for the given key. This returns the value\n * or fallback, depending on <alt>. The fallback is returned if\n * <alt> is true, the value is returned otherwise.\n */\nmxImageBundle.prototype.getImage = function(key)\n{\n\tvar result = null;\n\t\n\tif (key != null)\n\t{\n\t\tvar img = this.images[key];\n\t\t\n\t\tif (img != null)\n\t\t{\n\t\t\tresult = (this.alt) ? img.fallback : img.value;\n\t\t}\n\t}\n\t\n\treturn result;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageExport\n * \n * Creates a new image export instance to be used with an export canvas. Here\n * is an example that uses this class to create an image via a backend using\n * <mxXmlExportCanvas>.\n * \n * (code)\n * var xmlDoc = mxUtils.createXmlDocument();\n * var root = xmlDoc.createElement('output');\n * xmlDoc.appendChild(root);\n * \n * var xmlCanvas = new mxXmlCanvas2D(root);\n * var imgExport = new mxImageExport();\n * imgExport.drawState(graph.getView().getState(graph.model.root), xmlCanvas);\n * \n * var bounds = graph.getGraphBounds();\n * var w = Math.ceil(bounds.x + bounds.width);\n * var h = Math.ceil(bounds.y + bounds.height);\n * \n * var xml = mxUtils.getXml(root);\n * new mxXmlRequest('export', 'format=png&w=' + w +\n * \t\t'&h=' + h + '&bg=#F9F7ED&xml=' + encodeURIComponent(xml))\n * \t\t.simulate(document, '_blank');\n * (end)\n * \n * Constructor: mxImageExport\n * \n * Constructs a new image export.\n */\nfunction mxImageExport() { };\n\n/**\n * Variable: includeOverlays\n * \n * Specifies if overlays should be included in the export. Default is false.\n */\nmxImageExport.prototype.includeOverlays = false;\n\n/**\n * Function: drawState\n * \n * Draws the given state and all its descendants to the given canvas.\n */\nmxImageExport.prototype.drawState = function(state, canvas)\n{\n\tif (state != null)\n\t{\n\t\tthis.visitStatesRecursive(state, canvas, mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.drawCellState.apply(this, arguments);\n\t\t}));\n\t\t\t\t\n\t\t// Paints the overlays\n\t\tif (this.includeOverlays)\n\t\t{\n\t\t\tthis.visitStatesRecursive(state, canvas, mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.drawOverlays.apply(this, arguments);\n\t\t\t}));\n\t\t}\n\t}\n};\n\n/**\n * Function: drawState\n * \n * Draws the given state and all its descendants to the given canvas.\n */\nmxImageExport.prototype.visitStatesRecursive = function(state, canvas, visitor)\n{\n\tif (state != null)\n\t{\n\t\tvisitor(state, canvas);\n\t\t\n\t\tvar graph = state.view.graph;\n\t\tvar childCount = graph.model.getChildCount(state.cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar childState = graph.view.getState(graph.model.getChildAt(state.cell, i));\n\t\t\tthis.visitStatesRecursive(childState, canvas, visitor);\n\t\t}\n\t}\n};\n\n/**\n * Function: getLinkForCellState\n * \n * Returns the link for the given cell state and canvas. This returns null.\n */\nmxImageExport.prototype.getLinkForCellState = function(state, canvas)\n{\n\treturn null;\n};\n\n/**\n * Function: drawCellState\n * \n * Draws the given state to the given canvas.\n */\nmxImageExport.prototype.drawCellState = function(state, canvas)\n{\n\t// Experimental feature\n\tvar link = this.getLinkForCellState(state, canvas);\n\t\n\tif (link != null)\n\t{\n\t\tcanvas.setLink(link);\n\t}\n\t\n\t// Paints the shape and text\n\tthis.drawShape(state, canvas);\n\tthis.drawText(state, canvas);\n\n\tif (link != null)\n\t{\n\t\tcanvas.setLink(null);\n\t}\n};\n\n/**\n * Function: drawShape\n * \n * Draws the shape of the given state.\n */\nmxImageExport.prototype.drawShape = function(state, canvas)\n{\n\tif (state.shape instanceof mxShape && state.shape.checkBounds())\n\t{\n\t\tcanvas.save();\n\t\tstate.shape.paint(canvas);\n\t\tcanvas.restore();\n\t}\n};\n\n/**\n * Function: drawText\n * \n * Draws the text of the given state.\n */\nmxImageExport.prototype.drawText = function(state, canvas)\n{\n\tif (state.text != null && state.text.checkBounds())\n\t{\n\t\tcanvas.save();\n\t\tstate.text.paint(canvas);\n\t\tcanvas.restore();\n\t}\n};\n\n/**\n * Function: drawOverlays\n * \n * Draws the overlays for the given state. This is called if <includeOverlays>\n * is true.\n */\nmxImageExport.prototype.drawOverlays = function(state, canvas)\n{\n\tif (state.overlays != null)\n\t{\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tif (shape instanceof mxShape)\n\t\t\t{\n\t\t\t\tshape.paint(canvas);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxAbstractCanvas2D\n *\n * Base class for all canvases. A description of the public API is available in <mxXmlCanvas2D>.\n * All color values of <mxConstants.NONE> will be converted to null in the state.\n * \n * Constructor: mxAbstractCanvas2D\n *\n * Constructs a new abstract canvas.\n */\nfunction mxAbstractCanvas2D()\n{\n\t/**\n\t * Variable: converter\n\t * \n\t * Holds the <mxUrlConverter> to convert image URLs.\n\t */\n\tthis.converter = this.createUrlConverter();\n\t\n\tthis.reset();\n};\n\n/**\n * Variable: state\n * \n * Holds the current state.\n */\nmxAbstractCanvas2D.prototype.state = null;\n\n/**\n * Variable: states\n * \n * Stack of states.\n */\nmxAbstractCanvas2D.prototype.states = null;\n\n/**\n * Variable: path\n * \n * Holds the current path as an array.\n */\nmxAbstractCanvas2D.prototype.path = null;\n\n/**\n * Variable: rotateHtml\n * \n * Switch for rotation of HTML. Default is false.\n */\nmxAbstractCanvas2D.prototype.rotateHtml = true;\n\n/**\n * Variable: lastX\n * \n * Holds the last x coordinate.\n */\nmxAbstractCanvas2D.prototype.lastX = 0;\n\n/**\n * Variable: lastY\n * \n * Holds the last y coordinate.\n */\nmxAbstractCanvas2D.prototype.lastY = 0;\n\n/**\n * Variable: moveOp\n * \n * Contains the string used for moving in paths. Default is 'M'.\n */\nmxAbstractCanvas2D.prototype.moveOp = 'M';\n\n/**\n * Variable: lineOp\n * \n * Contains the string used for moving in paths. Default is 'L'.\n */\nmxAbstractCanvas2D.prototype.lineOp = 'L';\n\n/**\n * Variable: quadOp\n * \n * Contains the string used for quadratic paths. Default is 'Q'.\n */\nmxAbstractCanvas2D.prototype.quadOp = 'Q';\n\n/**\n * Variable: curveOp\n * \n * Contains the string used for bezier curves. Default is 'C'.\n */\nmxAbstractCanvas2D.prototype.curveOp = 'C';\n\n/**\n * Variable: closeOp\n * \n * Holds the operator for closing curves. Default is 'Z'.\n */\nmxAbstractCanvas2D.prototype.closeOp = 'Z';\n\n/**\n * Variable: pointerEvents\n * \n * Boolean value that specifies if events should be handled. Default is false.\n */\nmxAbstractCanvas2D.prototype.pointerEvents = false;\n\n/**\n * Function: createUrlConverter\n * \n * Create a new <mxUrlConverter> and returns it.\n */\nmxAbstractCanvas2D.prototype.createUrlConverter = function()\n{\n\treturn new mxUrlConverter();\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this canvas.\n */\nmxAbstractCanvas2D.prototype.reset = function()\n{\n\tthis.state = this.createState();\n\tthis.states = [];\n};\n\n/**\n * Function: createState\n * \n * Creates the state of the this canvas.\n */\nmxAbstractCanvas2D.prototype.createState = function()\n{\n\treturn {\n\t\tdx: 0,\n\t\tdy: 0,\n\t\tscale: 1,\n\t\talpha: 1,\n\t\tfillAlpha: 1,\n\t\tstrokeAlpha: 1,\n\t\tfillColor: null,\n\t\tgradientFillAlpha: 1,\n\t\tgradientColor: null,\n\t\tgradientAlpha: 1,\n\t\tgradientDirection: null,\n\t\tstrokeColor: null,\n\t\tstrokeWidth: 1,\n\t\tdashed: false,\n\t\tdashPattern: '3 3',\n\t\tfixDash: false,\n\t\tlineCap: 'flat',\n\t\tlineJoin: 'miter',\n\t\tmiterLimit: 10,\n\t\tfontColor: '#000000',\n\t\tfontBackgroundColor: null,\n\t\tfontBorderColor: null,\n\t\tfontSize: mxConstants.DEFAULT_FONTSIZE,\n\t\tfontFamily: mxConstants.DEFAULT_FONTFAMILY,\n\t\tfontStyle: 0,\n\t\tshadow: false,\n\t\tshadowColor: mxConstants.SHADOWCOLOR,\n\t\tshadowAlpha: mxConstants.SHADOW_OPACITY,\n\t\tshadowDx: mxConstants.SHADOW_OFFSET_X,\n\t\tshadowDy: mxConstants.SHADOW_OFFSET_Y,\n\t\trotation: 0,\n\t\trotationCx: 0,\n\t\trotationCy: 0\n\t};\n};\n\n/**\n * Function: format\n * \n * Rounds all numbers to integers.\n */\nmxAbstractCanvas2D.prototype.format = function(value)\n{\n\treturn Math.round(parseFloat(value));\n};\n\n/**\n * Function: addOp\n * \n * Adds the given operation to the path.\n */\nmxAbstractCanvas2D.prototype.addOp = function()\n{\n\tif (this.path != null)\n\t{\n\t\tthis.path.push(arguments[0]);\n\t\t\n\t\tif (arguments.length > 2)\n\t\t{\n\t\t\tvar s = this.state;\n\n\t\t\tfor (var i = 2; i < arguments.length; i += 2)\n\t\t\t{\n\t\t\t\tthis.lastX = arguments[i - 1];\n\t\t\t\tthis.lastY = arguments[i];\n\t\t\t\t\n\t\t\t\tthis.path.push(this.format((this.lastX + s.dx) * s.scale));\n\t\t\t\tthis.path.push(this.format((this.lastY + s.dy) * s.scale));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: rotatePoint\n * \n * Rotates the given point and returns the result as an <mxPoint>.\n */\nmxAbstractCanvas2D.prototype.rotatePoint = function(x, y, theta, cx, cy)\n{\n\tvar rad = theta * (Math.PI / 180);\n\t\n\treturn mxUtils.getRotatedPoint(new mxPoint(x, y), Math.cos(rad),\n\t\tMath.sin(rad), new mxPoint(cx, cy));\n};\n\n/**\n * Function: save\n * \n * Saves the current state.\n */\nmxAbstractCanvas2D.prototype.save = function()\n{\n\tthis.states.push(this.state);\n\tthis.state = mxUtils.clone(this.state);\n};\n\n/**\n * Function: restore\n * \n * Restores the current state.\n */\nmxAbstractCanvas2D.prototype.restore = function()\n{\n\tif (this.states.length > 0)\n\t{\n\t\tthis.state = this.states.pop();\n\t}\n};\n\n/**\n * Function: setLink\n * \n * Sets the current link. Hook for subclassers.\n */\nmxAbstractCanvas2D.prototype.setLink = function(link)\n{\n\t// nop\n};\n\n/**\n * Function: scale\n * \n * Scales the current state.\n */\nmxAbstractCanvas2D.prototype.scale = function(value)\n{\n\tthis.state.scale *= value;\n\tthis.state.strokeWidth *= value;\n};\n\n/**\n * Function: translate\n * \n * Translates the current state.\n */\nmxAbstractCanvas2D.prototype.translate = function(dx, dy)\n{\n\tthis.state.dx += dx;\n\tthis.state.dy += dy;\n};\n\n/**\n * Function: rotate\n * \n * Rotates the current state.\n */\nmxAbstractCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\t// nop\n};\n\n/**\n * Function: setAlpha\n * \n * Sets the current alpha.\n */\nmxAbstractCanvas2D.prototype.setAlpha = function(value)\n{\n\tthis.state.alpha = value;\n};\n\n/**\n * Function: setFillAlpha\n * \n * Sets the current solid fill alpha.\n */\nmxAbstractCanvas2D.prototype.setFillAlpha = function(value)\n{\n\tthis.state.fillAlpha = value;\n};\n\n/**\n * Function: setStrokeAlpha\n * \n * Sets the current stroke alpha.\n */\nmxAbstractCanvas2D.prototype.setStrokeAlpha = function(value)\n{\n\tthis.state.strokeAlpha = value;\n};\n\n/**\n * Function: setFillColor\n * \n * Sets the current fill color.\n */\nmxAbstractCanvas2D.prototype.setFillColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fillColor = value;\n\tthis.state.gradientColor = null;\n};\n\n/**\n * Function: setGradient\n * \n * Sets the current gradient.\n */\nmxAbstractCanvas2D.prototype.setGradient = function(color1, color2, x, y, w, h, direction, alpha1, alpha2)\n{\n\tvar s = this.state;\n\ts.fillColor = color1;\n\ts.gradientFillAlpha = (alpha1 != null) ? alpha1 : 1;\n\ts.gradientColor = color2;\n\ts.gradientAlpha = (alpha2 != null) ? alpha2 : 1;\n\ts.gradientDirection = direction;\n};\n\n/**\n * Function: setStrokeColor\n * \n * Sets the current stroke color.\n */\nmxAbstractCanvas2D.prototype.setStrokeColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.strokeColor = value;\n};\n\n/**\n * Function: setStrokeWidth\n * \n * Sets the current stroke width.\n */\nmxAbstractCanvas2D.prototype.setStrokeWidth = function(value)\n{\n\tthis.state.strokeWidth = value;\n};\n\n/**\n * Function: setDashed\n * \n * Enables or disables dashed lines.\n */\nmxAbstractCanvas2D.prototype.setDashed = function(value, fixDash)\n{\n\tthis.state.dashed = value;\n\tthis.state.fixDash = fixDash;\n};\n\n/**\n * Function: setDashPattern\n * \n * Sets the current dash pattern.\n */\nmxAbstractCanvas2D.prototype.setDashPattern = function(value)\n{\n\tthis.state.dashPattern = value;\n};\n\n/**\n * Function: setLineCap\n * \n * Sets the current line cap.\n */\nmxAbstractCanvas2D.prototype.setLineCap = function(value)\n{\n\tthis.state.lineCap = value;\n};\n\n/**\n * Function: setLineJoin\n * \n * Sets the current line join.\n */\nmxAbstractCanvas2D.prototype.setLineJoin = function(value)\n{\n\tthis.state.lineJoin = value;\n};\n\n/**\n * Function: setMiterLimit\n * \n * Sets the current miter limit.\n */\nmxAbstractCanvas2D.prototype.setMiterLimit = function(value)\n{\n\tthis.state.miterLimit = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontColor = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontBackgroundColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontBackgroundColor = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontBorderColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontBorderColor = value;\n};\n\n/**\n * Function: setFontSize\n * \n * Sets the current font size.\n */\nmxAbstractCanvas2D.prototype.setFontSize = function(value)\n{\n\tthis.state.fontSize = parseFloat(value);\n};\n\n/**\n * Function: setFontFamily\n * \n * Sets the current font family.\n */\nmxAbstractCanvas2D.prototype.setFontFamily = function(value)\n{\n\tthis.state.fontFamily = value;\n};\n\n/**\n * Function: setFontStyle\n * \n * Sets the current font style.\n */\nmxAbstractCanvas2D.prototype.setFontStyle = function(value)\n{\n\tif (value == null)\n\t{\n\t\tvalue = 0;\n\t}\n\t\n\tthis.state.fontStyle = value;\n};\n\n/**\n * Function: setShadow\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadow = function(enabled)\n{\n\tthis.state.shadow = enabled;\n};\n\n/**\n * Function: setShadowColor\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.shadowColor = value;\n};\n\n/**\n * Function: setShadowAlpha\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowAlpha = function(value)\n{\n\tthis.state.shadowAlpha = value;\n};\n\n/**\n * Function: setShadowOffset\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowOffset = function(dx, dy)\n{\n\tthis.state.shadowDx = dx;\n\tthis.state.shadowDy = dy;\n};\n\n/**\n * Function: begin\n * \n * Starts a new path.\n */\nmxAbstractCanvas2D.prototype.begin = function()\n{\n\tthis.lastX = 0;\n\tthis.lastY = 0;\n\tthis.path = [];\n};\n\n/**\n * Function: moveTo\n * \n *  Moves the current path the given coordinates.\n */\nmxAbstractCanvas2D.prototype.moveTo = function(x, y)\n{\n\tthis.addOp(this.moveOp, x, y);\n};\n\n/**\n * Function: lineTo\n * \n * Draws a line to the given coordinates. Uses moveTo with the op argument.\n */\nmxAbstractCanvas2D.prototype.lineTo = function(x, y)\n{\n\tthis.addOp(this.lineOp, x, y);\n};\n\n/**\n * Function: quadTo\n * \n * Adds a quadratic curve to the current path.\n */\nmxAbstractCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tthis.addOp(this.quadOp, x1, y1, x2, y2);\n};\n\n/**\n * Function: curveTo\n * \n * Adds a bezier curve to the current path.\n */\nmxAbstractCanvas2D.prototype.curveTo = function(x1, y1, x2, y2, x3, y3)\n{\n\tthis.addOp(this.curveOp, x1, y1, x2, y2, x3, y3);\n};\n\n/**\n * Function: arcTo\n * \n * Adds the given arc to the current path. This is a synthetic operation that\n * is broken down into curves.\n */\nmxAbstractCanvas2D.prototype.arcTo = function(rx, ry, angle, largeArcFlag, sweepFlag, x, y)\n{\n\tvar curves = mxUtils.arcToCurves(this.lastX, this.lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y);\n\t\n\tif (curves != null)\n\t{\n\t\tfor (var i = 0; i < curves.length; i += 6) \n\t\t{\n\t\t\tthis.curveTo(curves[i], curves[i + 1], curves[i + 2],\n\t\t\t\tcurves[i + 3], curves[i + 4], curves[i + 5]);\n\t\t}\n\t}\n};\n\n/**\n * Function: close\n * \n * Closes the current path.\n */\nmxAbstractCanvas2D.prototype.close = function(x1, y1, x2, y2, x3, y3)\n{\n\tthis.addOp(this.closeOp);\n};\n\n/**\n * Function: end\n * \n * Empty implementation for backwards compatibility. This will be removed.\n */\nmxAbstractCanvas2D.prototype.end = function() { };\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxXmlCanvas2D\n *\n * Base class for all canvases. The following methods make up the public\n * interface of the canvas 2D for all painting in mxGraph:\n * \n * - <save>, <restore>\n * - <scale>, <translate>, <rotate>\n * - <setAlpha>, <setFillAlpha>, <setStrokeAlpha>, <setFillColor>, <setGradient>,\n *   <setStrokeColor>, <setStrokeWidth>, <setDashed>, <setDashPattern>, <setLineCap>, \n *   <setLineJoin>, <setMiterLimit>\n * - <setFontColor>, <setFontBackgroundColor>, <setFontBorderColor>, <setFontSize>,\n *   <setFontFamily>, <setFontStyle>\n * - <setShadow>, <setShadowColor>, <setShadowAlpha>, <setShadowOffset>\n * - <rect>, <roundrect>, <ellipse>, <image>, <text>\n * - <begin>, <moveTo>, <lineTo>, <quadTo>, <curveTo>\n * - <stroke>, <fill>, <fillAndStroke>\n * \n * <mxAbstractCanvas2D.arcTo> is an additional method for drawing paths. This is\n * a synthetic method, meaning that it is turned into a sequence of curves by\n * default. Subclassers may add native support for arcs.\n * \n * Constructor: mxXmlCanvas2D\n *\n * Constructs a new abstract canvas.\n */\nfunction mxXmlCanvas2D(root)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n\n\t// Writes default settings;\n\tthis.writeDefaults();\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxXmlCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabled. Default is true.\n */\nmxXmlCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: compressed\n * \n * Specifies if the output should be compressed by removing redundant calls.\n * Default is true.\n */\nmxXmlCanvas2D.prototype.compressed = true;\n\n/**\n * Function: writeDefaults\n * \n * Writes the rendering defaults to <root>:\n */\nmxXmlCanvas2D.prototype.writeDefaults = function()\n{\n\tvar elem;\n\t\n\t// Writes font defaults\n\telem = this.createElement('fontfamily');\n\telem.setAttribute('family', mxConstants.DEFAULT_FONTFAMILY);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('fontsize');\n\telem.setAttribute('size', mxConstants.DEFAULT_FONTSIZE);\n\tthis.root.appendChild(elem);\n\t\n\t// Writes shadow defaults\n\telem = this.createElement('shadowcolor');\n\telem.setAttribute('color', mxConstants.SHADOWCOLOR);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('shadowalpha');\n\telem.setAttribute('alpha', mxConstants.SHADOW_OPACITY);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('shadowoffset');\n\telem.setAttribute('dx', mxConstants.SHADOW_OFFSET_X);\n\telem.setAttribute('dy', mxConstants.SHADOW_OFFSET_Y);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: format\n * \n * Returns a formatted number with 2 decimal places.\n */\nmxXmlCanvas2D.prototype.format = function(value)\n{\n\treturn parseFloat(parseFloat(value).toFixed(2));\n};\n\n/**\n * Function: createElement\n * \n * Creates the given element using the owner document of <root>.\n */\nmxXmlCanvas2D.prototype.createElement = function(name)\n{\n\treturn this.root.ownerDocument.createElement(name);\n};\n\n/**\n * Function: save\n * \n * Saves the drawing state.\n */\nmxXmlCanvas2D.prototype.save = function()\n{\n\tif (this.compressed)\n\t{\n\t\tmxAbstractCanvas2D.prototype.save.apply(this, arguments);\n\t}\n\t\n\tthis.root.appendChild(this.createElement('save'));\n};\n\n/**\n * Function: restore\n * \n * Restores the drawing state.\n */\nmxXmlCanvas2D.prototype.restore = function()\n{\n\tif (this.compressed)\n\t{\n\t\tmxAbstractCanvas2D.prototype.restore.apply(this, arguments);\n\t}\n\t\n\tthis.root.appendChild(this.createElement('restore'));\n};\n\n/**\n * Function: scale\n * \n * Scales the output.\n * \n * Parameters:\n * \n * scale - Number that represents the scale where 1 is equal to 100%.\n */\nmxXmlCanvas2D.prototype.scale = function(value)\n{\n        var elem = this.createElement('scale');\n        elem.setAttribute('scale', value);\n        this.root.appendChild(elem);\n};\n\n/**\n * Function: translate\n * \n * Translates the output.\n * \n * Parameters:\n * \n * dx - Number that specifies the horizontal translation.\n * dy - Number that specifies the vertical translation.\n */\nmxXmlCanvas2D.prototype.translate = function(dx, dy)\n{\n\tvar elem = this.createElement('translate');\n\telem.setAttribute('dx', this.format(dx));\n\telem.setAttribute('dy', this.format(dy));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: rotate\n * \n * Rotates and/or flips the output around a given center. (Note: Due to\n * limitations in VML, the rotation cannot be concatenated.)\n * \n * Parameters:\n * \n * theta - Number that represents the angle of the rotation (in degrees).\n * flipH - Boolean indicating if the output should be flipped horizontally.\n * flipV - Boolean indicating if the output should be flipped vertically.\n * cx - Number that represents the x-coordinate of the rotation center.\n * cy - Number that represents the y-coordinate of the rotation center.\n */\nmxXmlCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tvar elem = this.createElement('rotate');\n\t\n\tif (theta != 0 || flipH || flipV)\n\t{\n\t\telem.setAttribute('theta', this.format(theta));\n\t\telem.setAttribute('flipH', (flipH) ? '1' : '0');\n\t\telem.setAttribute('flipV', (flipV) ? '1' : '0');\n\t\telem.setAttribute('cx', this.format(cx));\n\t\telem.setAttribute('cy', this.format(cy));\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setAlpha\n * \n * Sets the current alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.alpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('alpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFillAlpha\n * \n * Sets the current fill alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new fill alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setFillAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.fillAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setFillAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('fillalpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setStrokeAlpha\n * \n * Sets the current stroke alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new stroke alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setStrokeAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokealpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFillColor\n * \n * Sets the current fill color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFillColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tif (this.compressed)\n\t{\n\t\tif (this.state.fillColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setFillColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('fillcolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setGradient\n * \n * Sets the gradient. Note that the coordinates may be ignored by some implementations.\n * \n * Parameters:\n * \n * color1 - Hexadecimal representation of the start color.\n * color2 - Hexadecimal representation of the end color.\n * x - X-coordinate of the gradient region.\n * y - y-coordinate of the gradient region.\n * w - Width of the gradient region.\n * h - Height of the gradient region.\n * direction - One of <mxConstants.DIRECTION_NORTH>, <mxConstants.DIRECTION_EAST>,\n * <mxConstants.DIRECTION_SOUTH> or <mxConstants.DIRECTION_WEST>.\n * alpha1 - Optional alpha of the start color. Default is 1. Possible values\n * are between 1 (opaque) and 0 (transparent).\n * alpha2 - Optional alpha of the end color. Default is 1. Possible values\n * are between 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setGradient = function(color1, color2, x, y, w, h, direction, alpha1, alpha2)\n{\n\tif (color1 != null && color2 != null)\n\t{\n\t\tmxAbstractCanvas2D.prototype.setGradient.apply(this, arguments);\n\t\t\n\t\tvar elem = this.createElement('gradient');\n\t\telem.setAttribute('c1', color1);\n\t\telem.setAttribute('c2', color2);\n\t\telem.setAttribute('x', this.format(x));\n\t\telem.setAttribute('y', this.format(y));\n\t\telem.setAttribute('w', this.format(w));\n\t\telem.setAttribute('h', this.format(h));\n\t\t\n\t\t// Default direction is south\n\t\tif (direction != null)\n\t\t{\n\t\t\telem.setAttribute('direction', direction);\n\t\t}\n\t\t\n\t\tif (alpha1 != null)\n\t\t{\n\t\t\telem.setAttribute('alpha1', alpha1);\n\t\t}\n\t\t\n\t\tif (alpha2 != null)\n\t\t{\n\t\t\telem.setAttribute('alpha2', alpha2);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setStrokeColor\n * \n * Sets the current stroke color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setStrokeColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokecolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setStrokeWidth\n * \n * Sets the current stroke width.\n * \n * Parameters:\n * \n * value - Numeric representation of the stroke width.\n */\nmxXmlCanvas2D.prototype.setStrokeWidth = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeWidth == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeWidth.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokewidth');\n\telem.setAttribute('width', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setDashed\n * \n * Enables or disables dashed lines.\n * \n * Parameters:\n * \n * value - Boolean that specifies if dashed lines should be enabled.\n * value - Boolean that specifies if the stroke width should be ignored\n * for the dash pattern. Default is false.\n */\nmxXmlCanvas2D.prototype.setDashed = function(value, fixDash)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.dashed == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setDashed.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('dashed');\n\telem.setAttribute('dashed', (value) ? '1' : '0');\n\t\n\tif (fixDash != null)\n\t{\n\t\telem.setAttribute('fixDash', (fixDash) ? '1' : '0');\n\t}\n\t\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setDashPattern\n * \n * Sets the current dash pattern. Default is '3 3'.\n * \n * Parameters:\n * \n * value - String that represents the dash pattern, which is a sequence of\n * numbers defining the length of the dashes and the length of the spaces\n * between the dashes. The lengths are relative to the line width - a length\n * of 1 is equals to the line width.\n */\nmxXmlCanvas2D.prototype.setDashPattern = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.dashPattern == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setDashPattern.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('dashpattern');\n\telem.setAttribute('pattern', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setLineCap\n * \n * Sets the line cap. Default is 'flat' which corresponds to 'butt' in SVG.\n * \n * Parameters:\n * \n * value - String that represents the line cap. Possible values are flat, round\n * and square.\n */\nmxXmlCanvas2D.prototype.setLineCap = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.lineCap == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setLineCap.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('linecap');\n\telem.setAttribute('cap', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setLineJoin\n * \n * Sets the line join. Default is 'miter'.\n * \n * Parameters:\n * \n * value - String that represents the line join. Possible values are miter,\n * round and bevel.\n */\nmxXmlCanvas2D.prototype.setLineJoin = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.lineJoin == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setLineJoin.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('linejoin');\n\telem.setAttribute('join', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setMiterLimit\n * \n * Sets the miter limit. Default is 10.\n * \n * Parameters:\n * \n * value - Number that represents the miter limit.\n */\nmxXmlCanvas2D.prototype.setMiterLimit = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.miterLimit == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setMiterLimit.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('miterlimit');\n\telem.setAttribute('limit', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color. Default is '#000000'.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontColor.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontcolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontBackgroundColor\n * \n * Sets the current font background color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontBackgroundColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontBackgroundColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontBackgroundColor.apply(this, arguments);\n\t\t}\n\n\t\tvar elem = this.createElement('fontbackgroundcolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontBorderColor\n * \n * Sets the current font border color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontBorderColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontBorderColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontBorderColor.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontbordercolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontSize\n * \n * Sets the current font size. Default is <mxConstants.DEFAULT_FONTSIZE>.\n * \n * Parameters:\n * \n * value - Numeric representation of the font size.\n */\nmxXmlCanvas2D.prototype.setFontSize = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontSize == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontSize.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontsize');\n\t\telem.setAttribute('size', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontFamily\n * \n * Sets the current font family. Default is <mxConstants.DEFAULT_FONTFAMILY>.\n * \n * Parameters:\n * \n * value - String representation of the font family. This handles the same\n * values as the CSS font-family property.\n */\nmxXmlCanvas2D.prototype.setFontFamily = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontFamily == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontFamily.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontfamily');\n\t\telem.setAttribute('family', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontStyle\n * \n * Sets the current font style.\n * \n * Parameters:\n * \n * value - Numeric representation of the font family. This is the sum of the\n * font styles from <mxConstants>.\n */\nmxXmlCanvas2D.prototype.setFontStyle = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontStyle == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontStyle.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontstyle');\n\t\telem.setAttribute('style', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setShadow\n * \n * Enables or disables shadows.\n * \n * Parameters:\n * \n * value - Boolean that specifies if shadows should be enabled.\n */\nmxXmlCanvas2D.prototype.setShadow = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadow == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadow.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadow');\n\telem.setAttribute('enabled', (value) ? '1' : '0');\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setShadowColor\n * \n * Sets the current shadow color. Default is <mxConstants.SHADOWCOLOR>.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setShadowColor = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.state.shadowColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowcolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setShadowAlpha\n * \n * Sets the current shadows alpha. Default is <mxConstants.SHADOW_OPACITY>.\n * \n * Parameters:\n * \n * value - Number that represents the new alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setShadowAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadowAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowalpha');\n\telem.setAttribute('alpha', value);\n\tthis.root.appendChild(elem);\n\t\n};\n\n/**\n * Function: setShadowOffset\n * \n * Sets the current shadow offset.\n * \n * Parameters:\n * \n * dx - Number that represents the horizontal offset of the shadow.\n * dy - Number that represents the vertical offset of the shadow.\n */\nmxXmlCanvas2D.prototype.setShadowOffset = function(dx, dy)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadowDx == dx && this.state.shadowDy == dy)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowOffset.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowoffset');\n\telem.setAttribute('dx', dx);\n\telem.setAttribute('dy', dy);\n\tthis.root.appendChild(elem);\n\t\n};\n\n/**\n * Function: rect\n * \n * Puts a rectangle into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the rectangle.\n * y - Number that represents the y-coordinate of the rectangle.\n * w - Number that represents the width of the rectangle.\n * h - Number that represents the height of the rectangle.\n */\nmxXmlCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tvar elem = this.createElement('rect');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: roundrect\n * \n * Puts a rounded rectangle into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the rectangle.\n * y - Number that represents the y-coordinate of the rectangle.\n * w - Number that represents the width of the rectangle.\n * h - Number that represents the height of the rectangle.\n * dx - Number that represents the horizontal rounding.\n * dy - Number that represents the vertical rounding.\n */\nmxXmlCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tvar elem = this.createElement('roundrect');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\telem.setAttribute('dx', this.format(dx));\n\telem.setAttribute('dy', this.format(dy));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: ellipse\n * \n * Puts an ellipse into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the ellipse.\n * y - Number that represents the y-coordinate of the ellipse.\n * w - Number that represents the width of the ellipse.\n * h - Number that represents the height of the ellipse.\n */\nmxXmlCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tvar elem = this.createElement('ellipse');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: image\n * \n * Paints an image.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the image.\n * y - Number that represents the y-coordinate of the image.\n * w - Number that represents the width of the image.\n * h - Number that represents the height of the image.\n * src - String that specifies the URL of the image.\n * aspect - Boolean indicating if the aspect of the image should be preserved.\n * flipH - Boolean indicating if the image should be flipped horizontally.\n * flipV - Boolean indicating if the image should be flipped vertically.\n */\nmxXmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tsrc = this.converter.convert(src);\n\t\n\t// LATER: Add option for embedding images as base64.\n\tvar elem = this.createElement('image');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\telem.setAttribute('src', src);\n\telem.setAttribute('aspect', (aspect) ? '1' : '0');\n\telem.setAttribute('flipH', (flipH) ? '1' : '0');\n\telem.setAttribute('flipV', (flipV) ? '1' : '0');\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: begin\n * \n * Starts a new path and puts it into the drawing buffer.\n */\nmxXmlCanvas2D.prototype.begin = function()\n{\n\tthis.root.appendChild(this.createElement('begin'));\n\tthis.lastX = 0;\n\tthis.lastY = 0;\n};\n\n/**\n * Function: moveTo\n * \n * Moves the current path the given point.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the point.\n * y - Number that represents the y-coordinate of the point.\n */\nmxXmlCanvas2D.prototype.moveTo = function(x, y)\n{\n\tvar elem = this.createElement('move');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x;\n\tthis.lastY = y;\n};\n\n/**\n * Function: lineTo\n * \n * Draws a line to the given coordinates.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the endpoint.\n * y - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.lineTo = function(x, y)\n{\n\tvar elem = this.createElement('line');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x;\n\tthis.lastY = y;\n};\n\n/**\n * Function: quadTo\n * \n * Adds a quadratic curve to the current path.\n * \n * Parameters:\n * \n * x1 - Number that represents the x-coordinate of the control point.\n * y1 - Number that represents the y-coordinate of the control point.\n * x2 - Number that represents the x-coordinate of the endpoint.\n * y2 - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tvar elem = this.createElement('quad');\n\telem.setAttribute('x1', this.format(x1));\n\telem.setAttribute('y1', this.format(y1));\n\telem.setAttribute('x2', this.format(x2));\n\telem.setAttribute('y2', this.format(y2));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x2;\n\tthis.lastY = y2;\n};\n\n/**\n * Function: curveTo\n * \n * Adds a bezier curve to the current path.\n * \n * Parameters:\n * \n * x1 - Number that represents the x-coordinate of the first control point.\n * y1 - Number that represents the y-coordinate of the first control point.\n * x2 - Number that represents the x-coordinate of the second control point.\n * y2 - Number that represents the y-coordinate of the second control point.\n * x3 - Number that represents the x-coordinate of the endpoint.\n * y3 - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.curveTo = function(x1, y1, x2, y2, x3, y3)\n{\n\tvar elem = this.createElement('curve');\n\telem.setAttribute('x1', this.format(x1));\n\telem.setAttribute('y1', this.format(y1));\n\telem.setAttribute('x2', this.format(x2));\n\telem.setAttribute('y2', this.format(y2));\n\telem.setAttribute('x3', this.format(x3));\n\telem.setAttribute('y3', this.format(y3));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x3;\n\tthis.lastY = y3;\n};\n\n/**\n * Function: close\n * \n * Closes the current path.\n */\nmxXmlCanvas2D.prototype.close = function()\n{\n\tthis.root.appendChild(this.createElement('close'));\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for\n * plain text and html for HTML markup. Background and border color as well\n * as clipping is not available in plain text labels for VML. HTML labels\n * are not available as part of shapes with no foreignObject support in SVG\n * (eg. IE9, IE10).\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the text.\n * y - Number that represents the y-coordinate of the text.\n * w - Number that represents the available width for the text or 0 for automatic width.\n * h - Number that represents the available height for the text or 0 for automatic height.\n * str - String that specifies the text to be painted.\n * align - String that represents the horizontal alignment.\n * valign - String that represents the vertical alignment.\n * wrap - Boolean that specifies if word-wrapping is enabled. Requires w > 0.\n * format - Empty string for plain text or 'html' for HTML markup.\n * overflow - Specifies the overflow behaviour of the label. Requires w > 0 and/or h > 0.\n * clip - Boolean that specifies if the label should be clipped. Requires w > 0 and/or h > 0.\n * rotation - Number that specifies the angle of the rotation around the anchor point of the text.\n * dir - Optional string that specifies the text direction. Possible values are rtl and lrt.\n */\nmxXmlCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\tif (mxUtils.isNode(str))\n\t\t{\n\t\t\tstr = mxUtils.getOuterHtml(str);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('text');\n\t\telem.setAttribute('x', this.format(x));\n\t\telem.setAttribute('y', this.format(y));\n\t\telem.setAttribute('w', this.format(w));\n\t\telem.setAttribute('h', this.format(h));\n\t\telem.setAttribute('str', str);\n\t\t\n\t\tif (align != null)\n\t\t{\n\t\t\telem.setAttribute('align', align);\n\t\t}\n\t\t\n\t\tif (valign != null)\n\t\t{\n\t\t\telem.setAttribute('valign', valign);\n\t\t}\n\t\t\n\t\telem.setAttribute('wrap', (wrap) ? '1' : '0');\n\t\t\n\t\tif (format == null)\n\t\t{\n\t\t\tformat = '';\n\t\t}\n\t\t\n\t\telem.setAttribute('format', format);\n\t\t\n\t\tif (overflow != null)\n\t\t{\n\t\t\telem.setAttribute('overflow', overflow);\n\t\t}\n\t\t\n\t\tif (clip != null)\n\t\t{\n\t\t\telem.setAttribute('clip', (clip) ? '1' : '0');\n\t\t}\n\t\t\n\t\tif (rotation != null)\n\t\t{\n\t\t\telem.setAttribute('rotation', rotation);\n\t\t}\n\t\t\n\t\tif (dir != null)\n\t\t{\n\t\t\telem.setAttribute('dir', dir);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current drawing buffer.\n */\nmxXmlCanvas2D.prototype.stroke = function()\n{\n\tthis.root.appendChild(this.createElement('stroke'));\n};\n\n/**\n * Function: fill\n * \n * Fills the current drawing buffer.\n */\nmxXmlCanvas2D.prototype.fill = function()\n{\n\tthis.root.appendChild(this.createElement('fill'));\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills the current drawing buffer and its outline.\n */\nmxXmlCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.root.appendChild(this.createElement('fillstroke'));\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSvgCanvas2D\n *\n * Extends <mxAbstractCanvas2D> to implement a canvas for SVG. This canvas writes all\n * calls as SVG output to the given SVG root node.\n * \n * (code)\n * var svgDoc = mxUtils.createXmlDocument();\n * var root = (svgDoc.createElementNS != null) ?\n * \t\tsvgDoc.createElementNS(mxConstants.NS_SVG, 'svg') : svgDoc.createElement('svg');\n * \n * if (svgDoc.createElementNS == null)\n * {\n *   root.setAttribute('xmlns', mxConstants.NS_SVG);\n *   root.setAttribute('xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * else\n * {\n *   root.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * \n * var bounds = graph.getGraphBounds();\n * root.setAttribute('width', (bounds.x + bounds.width + 4) + 'px');\n * root.setAttribute('height', (bounds.y + bounds.height + 4) + 'px');\n * root.setAttribute('version', '1.1');\n * \n * svgDoc.appendChild(root);\n * \n * var svgCanvas = new mxSvgCanvas2D(root);\n * (end)\n * \n * A description of the public API is available in <mxXmlCanvas2D>.\n * \n * To disable anti-aliasing in the output, use the following code.\n * \n * (code)\n * graph.view.canvas.ownerSVGElement.setAttribute('shape-rendering', 'crispEdges');\n * (end)\n * \n * Or set the respective attribute in the SVG element directly.\n * \n * Constructor: mxSvgCanvas2D\n *\n * Constructs a new SVG canvas.\n * \n * Parameters:\n * \n * root - SVG container for the output.\n * styleEnabled - Optional boolean that specifies if a style section should be\n * added. The style section sets the default font-size, font-family and\n * stroke-miterlimit globally. Default is false.\n */\nfunction mxSvgCanvas2D(root, styleEnabled)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n\n\t/**\n\t * Variable: gradients\n\t * \n\t * Local cache of gradients for quick lookups.\n\t */\n\tthis.gradients = [];\n\n\t/**\n\t * Variable: defs\n\t * \n\t * Reference to the defs section of the SVG document. Only for export.\n\t */\n\tthis.defs = null;\n\t\n\t/**\n\t * Variable: styleEnabled\n\t * \n\t * Stores the value of styleEnabled passed to the constructor.\n\t */\n\tthis.styleEnabled = (styleEnabled != null) ? styleEnabled : false;\n\t\n\tvar svg = null;\n\t\n\t// Adds optional defs section for export\n\tif (root.ownerDocument != document)\n\t{\n\t\tvar node = root;\n\n\t\t// Finds owner SVG element in XML DOM\n\t\twhile (node != null && node.nodeName != 'svg')\n\t\t{\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\t\n\t\tsvg = node;\n\t}\n\n\tif (svg != null)\n\t{\n\t\t// Tries to get existing defs section\n\t\tvar tmp = svg.getElementsByTagName('defs');\n\t\t\n\t\tif (tmp.length > 0)\n\t\t{\n\t\t\tthis.defs = svg.getElementsByTagName('defs')[0];\n\t\t}\n\t\t\n\t\t// Adds defs section if none exists\n\t\tif (this.defs == null)\n\t\t{\n\t\t\tthis.defs = this.createElement('defs');\n\t\t\t\n\t\t\tif (svg.firstChild != null)\n\t\t\t{\n\t\t\t\tsvg.insertBefore(this.defs, svg.firstChild);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsvg.appendChild(this.defs);\n\t\t\t}\n\t\t}\n\n\t\t// Adds stylesheet\n\t\tif (this.styleEnabled)\n\t\t{\n\t\t\tthis.defs.appendChild(this.createStyle());\n\t\t}\n\t}\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxSvgCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Capability check for DOM parser.\n */\n(function()\n{\n\tmxSvgCanvas2D.prototype.useDomParser = !mxClient.IS_IE && typeof DOMParser === 'function' && typeof XMLSerializer === 'function';\n\t\n\tif (mxSvgCanvas2D.prototype.useDomParser)\n\t{\n\t\t// Checks using a generic test text if the parsing actually works. This is a workaround\n\t\t// for older browsers where the capability check returns true but the parsing fails.\n\t\ttry\n\t\t{\n\t\t\tvar doc = new DOMParser().parseFromString('test text', 'text/html');\n\t\t\tmxSvgCanvas2D.prototype.useDomParser = doc != null;\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxSvgCanvas2D.prototype.useDomParser = false;\n\t\t}\n\t}\n})();\n\n/**\n * Variable: path\n * \n * Holds the current DOM node.\n */\nmxSvgCanvas2D.prototype.node = null;\n\n/**\n * Variable: matchHtmlAlignment\n * \n * Specifies if plain text output should match the vertical HTML alignment.\n * Defaul is true.\n */\nmxSvgCanvas2D.prototype.matchHtmlAlignment = true;\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabled. Default is true.\n */\nmxSvgCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: foEnabled\n * \n * Specifies if use of foreignObject for HTML markup is allowed. Default is true.\n */\nmxSvgCanvas2D.prototype.foEnabled = true;\n\n/**\n * Variable: foAltText\n * \n * Specifies the fallback text for unsupported foreignObjects in exported\n * documents. Default is '[Object]'. If this is set to null then no fallback\n * text is added to the exported document.\n */\nmxSvgCanvas2D.prototype.foAltText = '[Object]';\n\n/**\n * Variable: foOffset\n * \n * Offset to be used for foreignObjects.\n */\nmxSvgCanvas2D.prototype.foOffset = 0;\n\n/**\n * Variable: textOffset\n * \n * Offset to be used for text elements.\n */\nmxSvgCanvas2D.prototype.textOffset = 0;\n\n/**\n * Variable: imageOffset\n * \n * Offset to be used for image elements.\n */\nmxSvgCanvas2D.prototype.imageOffset = 0;\n\n/**\n * Variable: strokeTolerance\n * \n * Adds transparent paths for strokes.\n */\nmxSvgCanvas2D.prototype.strokeTolerance = 0;\n\n/**\n * Variable: minStrokeWidth\n * \n * Minimum stroke width for output.\n */\nmxSvgCanvas2D.prototype.minStrokeWidth = 1;\n\n/**\n * Variable: refCount\n * \n * Local counter for references in SVG export.\n */\nmxSvgCanvas2D.prototype.refCount = 0;\n\n/**\n * Variable: blockImagePointerEvents\n * \n * Specifies if a transparent rectangle should be added on top of images to absorb\n * all pointer events. Default is false. This is only needed in Firefox to disable\n * control-clicks on images.\n */\nmxSvgCanvas2D.prototype.blockImagePointerEvents = false;\n\n/**\n * Variable: lineHeightCorrection\n * \n * Correction factor for <mxConstants.LINE_HEIGHT> in HTML output. Default is 1.\n */\nmxSvgCanvas2D.prototype.lineHeightCorrection = 1;\n\n/**\n * Variable: pointerEventsValue\n * \n * Default value for active pointer events. Default is all.\n */\nmxSvgCanvas2D.prototype.pointerEventsValue = 'all';\n\n/**\n * Variable: fontMetricsPadding\n * \n * Padding to be added for text that is not wrapped to account for differences\n * in font metrics on different platforms in pixels. Default is 10.\n */\nmxSvgCanvas2D.prototype.fontMetricsPadding = 10;\n\n/**\n * Variable: cacheOffsetSize\n * \n * Specifies if offsetWidth and offsetHeight should be cached. Default is true.\n * This is used to speed up repaint of text in <updateText>.\n */\nmxSvgCanvas2D.prototype.cacheOffsetSize = true;\n\n/**\n * Function: format\n * \n * Rounds all numbers to 2 decimal points.\n */\nmxSvgCanvas2D.prototype.format = function(value)\n{\n\treturn parseFloat(parseFloat(value).toFixed(2));\n};\n\n/**\n * Function: getBaseUrl\n * \n * Returns the URL of the page without the hash part. This needs to use href to\n * include any search part with no params (ie question mark alone). This is a\n * workaround for the fact that window.location.search is empty if there is\n * no search string behind the question mark.\n */\nmxSvgCanvas2D.prototype.getBaseUrl = function()\n{\n\tvar href = window.location.href;\n\tvar hash = href.lastIndexOf('#');\n\t\n\tif (hash > 0)\n\t{\n\t\thref = href.substring(0, hash);\n\t}\n\t\n\treturn href;\n};\n\n/**\n * Function: reset\n * \n * Returns any offsets for rendering pixels.\n */\nmxSvgCanvas2D.prototype.reset = function()\n{\n\tmxAbstractCanvas2D.prototype.reset.apply(this, arguments);\n\tthis.gradients = [];\n};\n\n/**\n * Function: createStyle\n * \n * Creates the optional style section.\n */\nmxSvgCanvas2D.prototype.createStyle = function(x)\n{\n\tvar style = this.createElement('style');\n\tstyle.setAttribute('type', 'text/css');\n\tmxUtils.write(style, 'svg{font-family:' + mxConstants.DEFAULT_FONTFAMILY +\n\t\t\t';font-size:' + mxConstants.DEFAULT_FONTSIZE +\n\t\t\t';fill:none;stroke-miterlimit:10}');\n\t\n\treturn style;\n};\n\n/**\n * Function: createElement\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createElement = function(tagName, namespace)\n{\n\tif (this.root.ownerDocument.createElementNS != null)\n\t{\n\t\treturn this.root.ownerDocument.createElementNS(namespace || mxConstants.NS_SVG, tagName);\n\t}\n\telse\n\t{\n\t\tvar elt = this.root.ownerDocument.createElement(tagName);\n\t\t\n\t\tif (namespace != null)\n\t\t{\n\t\t\telt.setAttribute('xmlns', namespace);\n\t\t}\n\t\t\n\t\treturn elt;\n\t}\n};\n\n/**\n * Function: getAlternateContent\n * \n * Returns the alternate content for the given foreignObject.\n */\nmxSvgCanvas2D.prototype.createAlternateContent = function(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation)\n{\n\tif (this.foAltText != null)\n\t{\n\t\tvar s = this.state;\n\t\tvar alt = this.createElement('text');\n\t\talt.setAttribute('x', Math.round(w / 2));\n\t\talt.setAttribute('y', Math.round((h + s.fontSize) / 2));\n\t\talt.setAttribute('fill', s.fontColor || 'black');\n\t\talt.setAttribute('text-anchor', 'middle');\n\t\talt.setAttribute('font-size', s.fontSize + 'px');\n\t\talt.setAttribute('font-family', s.fontFamily);\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t\t{\n\t\t\talt.setAttribute('font-weight', 'bold');\n\t\t}\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t\t{\n\t\t\talt.setAttribute('font-style', 'italic');\n\t\t}\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t\t{\n\t\t\talt.setAttribute('text-decoration', 'underline');\n\t\t}\n\t\t\n\t\tmxUtils.write(alt, this.foAltText);\n\t\t\n\t\treturn alt;\n\t}\n\telse\n\t{\n\t\treturn null;\n\t}\n};\n\n/**\n * Function: createGradientId\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createGradientId = function(start, end, alpha1, alpha2, direction)\n{\n\t// Removes illegal characters from gradient ID\n\tif (start.charAt(0) == '#')\n\t{\n\t\tstart = start.substring(1);\n\t}\n\t\n\tif (end.charAt(0) == '#')\n\t{\n\t\tend = end.substring(1);\n\t}\n\t\n\t// Workaround for gradient IDs not working in Safari 5 / Chrome 6\n\t// if they contain uppercase characters\n\tstart = start.toLowerCase() + '-' + alpha1;\n\tend = end.toLowerCase() + '-' + alpha2;\n\n\t// Wrong gradient directions possible?\n\tvar dir = null;\n\t\n\tif (direction == null || direction == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tdir = 's';\n\t}\n\telse if (direction == mxConstants.DIRECTION_EAST)\n\t{\n\t\tdir = 'e';\n\t}\n\telse\n\t{\n\t\tvar tmp = start;\n\t\tstart = end;\n\t\tend = tmp;\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tdir = 's';\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tdir = 'e';\n\t\t}\n\t}\n\t\n\treturn 'mx-gradient-' + start + '-' + end + '-' + dir;\n};\n\n/**\n * Function: getSvgGradient\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.getSvgGradient = function(start, end, alpha1, alpha2, direction)\n{\n\tvar id = this.createGradientId(start, end, alpha1, alpha2, direction);\n\tvar gradient = this.gradients[id];\n\t\n\tif (gradient == null)\n\t{\n\t\tvar svg = this.root.ownerSVGElement;\n\n\t\tvar counter = 0;\n\t\tvar tmpId = id + '-' + counter;\n\n\t\tif (svg != null)\n\t\t{\n\t\t\tgradient = svg.ownerDocument.getElementById(tmpId);\n\t\t\t\n\t\t\twhile (gradient != null && gradient.ownerSVGElement != svg)\n\t\t\t{\n\t\t\t\ttmpId = id + '-' + counter++;\n\t\t\t\tgradient = svg.ownerDocument.getElementById(tmpId);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Uses shorter IDs for export\n\t\t\ttmpId = 'id' + (++this.refCount);\n\t\t}\n\t\t\n\t\tif (gradient == null)\n\t\t{\n\t\t\tgradient = this.createSvgGradient(start, end, alpha1, alpha2, direction);\n\t\t\tgradient.setAttribute('id', tmpId);\n\t\t\t\n\t\t\tif (this.defs != null)\n\t\t\t{\n\t\t\t\tthis.defs.appendChild(gradient);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsvg.appendChild(gradient);\n\t\t\t}\n\t\t}\n\n\t\tthis.gradients[id] = gradient;\n\t}\n\n\treturn gradient.getAttribute('id');\n};\n\n/**\n * Function: createSvgGradient\n * \n * Creates the given SVG gradient.\n */\nmxSvgCanvas2D.prototype.createSvgGradient = function(start, end, alpha1, alpha2, direction)\n{\n\tvar gradient = this.createElement('linearGradient');\n\tgradient.setAttribute('x1', '0%');\n\tgradient.setAttribute('y1', '0%');\n\tgradient.setAttribute('x2', '0%');\n\tgradient.setAttribute('y2', '0%');\n\t\n\tif (direction == null || direction == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tgradient.setAttribute('y2', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_EAST)\n\t{\n\t\tgradient.setAttribute('x2', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_NORTH)\n\t{\n\t\tgradient.setAttribute('y1', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_WEST)\n\t{\n\t\tgradient.setAttribute('x1', '100%');\n\t}\n\t\n\tvar op = (alpha1 < 1) ? ';stop-opacity:' + alpha1 : '';\n\t\n\tvar stop = this.createElement('stop');\n\tstop.setAttribute('offset', '0%');\n\tstop.setAttribute('style', 'stop-color:' + start + op);\n\tgradient.appendChild(stop);\n\t\n\top = (alpha2 < 1) ? ';stop-opacity:' + alpha2 : '';\n\t\n\tstop = this.createElement('stop');\n\tstop.setAttribute('offset', '100%');\n\tstop.setAttribute('style', 'stop-color:' + end + op);\n\tgradient.appendChild(stop);\n\t\n\treturn gradient;\n};\n\n/**\n * Function: addNode\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.addNode = function(filled, stroked)\n{\n\tvar node = this.node;\n\tvar s = this.state;\n\n\tif (node != null)\n\t{\n\t\tif (node.nodeName == 'path')\n\t\t{\n\t\t\t// Checks if the path is not empty\n\t\t\tif (this.path != null && this.path.length > 0)\n\t\t\t{\n\t\t\t\tnode.setAttribute('d', this.path.join(' '));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (filled && s.fillColor != null)\n\t\t{\n\t\t\tthis.updateFill();\n\t\t}\n\t\telse if (!this.styleEnabled)\n\t\t{\n\t\t\t// Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=814952\n\t\t\tif (node.nodeName == 'ellipse' && mxClient.IS_FF)\n\t\t\t{\n\t\t\t\tnode.setAttribute('fill', 'transparent');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode.setAttribute('fill', 'none');\n\t\t\t}\n\t\t\t\n\t\t\t// Sets the actual filled state for stroke tolerance\n\t\t\tfilled = false;\n\t\t}\n\t\t\n\t\tif (stroked && s.strokeColor != null)\n\t\t{\n\t\t\tthis.updateStroke();\n\t\t}\n\t\telse if (!this.styleEnabled)\n\t\t{\n\t\t\tnode.setAttribute('stroke', 'none');\n\t\t}\n\t\t\n\t\tif (s.transform != null && s.transform.length > 0)\n\t\t{\n\t\t\tnode.setAttribute('transform', s.transform);\n\t\t}\n\t\t\n\t\tif (s.shadow)\n\t\t{\n\t\t\tthis.root.appendChild(this.createShadow(node));\n\t\t}\n\t\n\t\t// Adds stroke tolerance\n\t\tif (this.strokeTolerance > 0 && !filled)\n\t\t{\n\t\t\tthis.root.appendChild(this.createTolerance(node));\n\t\t}\n\n\t\t// Adds pointer events\n\t\tif (this.pointerEvents)\n\t\t{\n\t\t\tnode.setAttribute('pointer-events', this.pointerEventsValue);\n\t\t}\n\t\t// Enables clicks for nodes inside a link element\n\t\telse if (!this.pointerEvents && this.originalRoot == null)\n\t\t{\n\t\t\tnode.setAttribute('pointer-events', 'none');\n\t\t}\n\t\t\n\t\t// Removes invisible nodes from output if they don't handle events\n\t\tif ((node.nodeName != 'rect' && node.nodeName != 'path' && node.nodeName != 'ellipse') ||\n\t\t\t(node.getAttribute('fill') != 'none' && node.getAttribute('fill') != 'transparent') ||\n\t\t\tnode.getAttribute('stroke') != 'none' || node.getAttribute('pointer-events') != 'none')\n\t\t{\n\t\t\t// LATER: Update existing DOM for performance\t\t\n\t\t\tthis.root.appendChild(node);\n\t\t}\n\t\t\n\t\tthis.node = null;\n\t}\n};\n\n/**\n * Function: updateFill\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateFill = function()\n{\n\tvar s = this.state;\n\t\n\tif (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tthis.node.setAttribute('fill-opacity', s.alpha * s.fillAlpha);\n\t}\n\t\n\tif (s.fillColor != null)\n\t{\n\t\tif (s.gradientColor != null)\n\t\t{\n\t\t\tvar id = this.getSvgGradient(String(s.fillColor), String(s.gradientColor),\n\t\t\t\ts.gradientFillAlpha, s.gradientAlpha, s.gradientDirection);\n\t\t\t\n\t\t\tif (!mxClient.IS_CHROMEAPP && !mxClient.IS_IE && !mxClient.IS_IE11 &&\n\t\t\t\t!mxClient.IS_EDGE && this.root.ownerDocument == document)\n\t\t\t{\n\t\t\t\t// Workaround for potential base tag and brackets must be escaped\n\t\t\t\tvar base = this.getBaseUrl().replace(/([\\(\\)])/g, '\\\\$1');\n\t\t\t\tthis.node.setAttribute('fill', 'url(' + base + '#' + id + ')');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.node.setAttribute('fill', 'url(#' + id + ')');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.node.setAttribute('fill', String(s.fillColor).toLowerCase());\n\t\t}\n\t}\n};\n\n/**\n * Function: getCurrentStrokeWidth\n * \n * Returns the current stroke width (>= 1), ie. max(1, this.format(this.state.strokeWidth * this.state.scale)).\n */\nmxSvgCanvas2D.prototype.getCurrentStrokeWidth = function()\n{\n\treturn Math.max(this.minStrokeWidth, Math.max(0.01, this.format(this.state.strokeWidth * this.state.scale)));\n};\n\n/**\n * Function: updateStroke\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateStroke = function()\n{\n\tvar s = this.state;\n\n\tthis.node.setAttribute('stroke', String(s.strokeColor).toLowerCase());\n\t\n\tif (s.alpha < 1 || s.strokeAlpha < 1)\n\t{\n\t\tthis.node.setAttribute('stroke-opacity', s.alpha * s.strokeAlpha);\n\t}\n\t\n\tvar sw = this.getCurrentStrokeWidth();\n\t\n\tif (sw != 1)\n\t{\n\t\tthis.node.setAttribute('stroke-width', sw);\n\t}\n\t\n\tif (this.node.nodeName == 'path')\n\t{\n\t\tthis.updateStrokeAttributes();\n\t}\n\t\n\tif (s.dashed)\n\t{\n\t\tthis.node.setAttribute('stroke-dasharray', this.createDashPattern(\n\t\t\t((s.fixDash) ? 1 : s.strokeWidth) * s.scale));\n\t}\n};\n\n/**\n * Function: updateStrokeAttributes\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateStrokeAttributes = function()\n{\n\tvar s = this.state;\n\t\n\t// Linejoin miter is default in SVG\n\tif (s.lineJoin != null && s.lineJoin != 'miter')\n\t{\n\t\tthis.node.setAttribute('stroke-linejoin', s.lineJoin);\n\t}\n\t\n\tif (s.lineCap != null)\n\t{\n\t\t// flat is called butt in SVG\n\t\tvar value = s.lineCap;\n\t\t\n\t\tif (value == 'flat')\n\t\t{\n\t\t\tvalue = 'butt';\n\t\t}\n\t\t\n\t\t// Linecap butt is default in SVG\n\t\tif (value != 'butt')\n\t\t{\n\t\t\tthis.node.setAttribute('stroke-linecap', value);\n\t\t}\n\t}\n\t\n\t// Miterlimit 10 is default in our document\n\tif (s.miterLimit != null && (!this.styleEnabled || s.miterLimit != 10))\n\t{\n\t\tthis.node.setAttribute('stroke-miterlimit', s.miterLimit);\n\t}\n};\n\n/**\n * Function: createDashPattern\n * \n * Creates the SVG dash pattern for the given state.\n */\nmxSvgCanvas2D.prototype.createDashPattern = function(scale)\n{\n\tvar pat = [];\n\t\n\tif (typeof(this.state.dashPattern) === 'string')\n\t{\n\t\tvar dash = this.state.dashPattern.split(' ');\n\t\t\n\t\tif (dash.length > 0)\n\t\t{\n\t\t\tfor (var i = 0; i < dash.length; i++)\n\t\t\t{\n\t\t\t\tpat[i] = Number(dash[i]) * scale;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn pat.join(' ');\n};\n\n/**\n * Function: createTolerance\n * \n * Creates a hit detection tolerance shape for the given node.\n */\nmxSvgCanvas2D.prototype.createTolerance = function(node)\n{\n\tvar tol = node.cloneNode(true);\n\tvar sw = parseFloat(tol.getAttribute('stroke-width') || 1) + this.strokeTolerance;\n\ttol.setAttribute('pointer-events', 'stroke');\n\ttol.setAttribute('visibility', 'hidden');\n\ttol.removeAttribute('stroke-dasharray');\n\ttol.setAttribute('stroke-width', sw);\n\ttol.setAttribute('fill', 'none');\n\t\n\t// Workaround for Opera ignoring the visiblity attribute above while\n\t// other browsers need a stroke color to perform the hit-detection but\n\t// do not ignore the visibility attribute. Side-effect is that Opera's\n\t// hit detection for horizontal/vertical edges seems to ignore the tol.\n\ttol.setAttribute('stroke', (mxClient.IS_OT) ? 'none' : 'white');\n\t\n\treturn tol;\n};\n\n/**\n * Function: createShadow\n * \n * Creates a shadow for the given node.\n */\nmxSvgCanvas2D.prototype.createShadow = function(node)\n{\n\tvar shadow = node.cloneNode(true);\n\tvar s = this.state;\n\n\t// Firefox uses transparent for no fill in ellipses\n\tif (shadow.getAttribute('fill') != 'none' && (!mxClient.IS_FF || shadow.getAttribute('fill') != 'transparent'))\n\t{\n\t\tshadow.setAttribute('fill', s.shadowColor);\n\t}\n\t\n\tif (shadow.getAttribute('stroke') != 'none')\n\t{\n\t\tshadow.setAttribute('stroke', s.shadowColor);\n\t}\n\n\tshadow.setAttribute('transform', 'translate(' + this.format(s.shadowDx * s.scale) +\n\t\t',' + this.format(s.shadowDy * s.scale) + ')' + (s.transform || ''));\n\tshadow.setAttribute('opacity', s.shadowAlpha);\n\t\n\treturn shadow;\n};\n\n/**\n * Function: setLink\n * \n * Experimental implementation for hyperlinks.\n */\nmxSvgCanvas2D.prototype.setLink = function(link)\n{\n\tif (link == null)\n\t{\n\t\tthis.root = this.originalRoot;\n\t}\n\telse\n\t{\n\t\tthis.originalRoot = this.root;\n\t\t\n\t\tvar node = this.createElement('a');\n\t\t\n\t\t// Workaround for implicit namespace handling in HTML5 export, IE adds NS1 namespace so use code below\n\t\t// in all IE versions except quirks mode. KNOWN: Adds xlink namespace to each image tag in output.\n\t\tif (node.setAttributeNS == null || (this.root.ownerDocument != document && document.documentMode == null))\n\t\t{\n\t\t\tnode.setAttribute('xlink:href', link);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.setAttributeNS(mxConstants.NS_XLINK, 'xlink:href', link);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(node);\n\t\tthis.root = node;\n\t}\n};\n\n/**\n * Function: rotate\n * \n * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n */\nmxSvgCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tif (theta != 0 || flipH || flipV)\n\t{\n\t\tvar s = this.state;\n\t\tcx += s.dx;\n\t\tcy += s.dy;\n\t\n\t\tcx *= s.scale;\n\t\tcy *= s.scale;\n\n\t\ts.transform = s.transform || '';\n\t\t\n\t\t// This implementation uses custom scale/translate and built-in rotation\n\t\t// Rotation state is part of the AffineTransform in state.transform\n\t\tif (flipH && flipV)\n\t\t{\n\t\t\ttheta += 180;\n\t\t}\n\t\telse if (flipH != flipV)\n\t\t{\n\t\t\tvar tx = (flipH) ? cx : 0;\n\t\t\tvar sx = (flipH) ? -1 : 1;\n\t\n\t\t\tvar ty = (flipV) ? cy : 0;\n\t\t\tvar sy = (flipV) ? -1 : 1;\n\n\t\t\ts.transform += 'translate(' + this.format(tx) + ',' + this.format(ty) + ')' +\n\t\t\t\t'scale(' + this.format(sx) + ',' + this.format(sy) + ')' +\n\t\t\t\t'translate(' + this.format(-tx) + ',' + this.format(-ty) + ')';\n\t\t}\n\t\t\n\t\tif (flipH ? !flipV : flipV)\n\t\t{\n\t\t\ttheta *= -1;\n\t\t}\n\t\t\n\t\tif (theta != 0)\n\t\t{\n\t\t\ts.transform += 'rotate(' + this.format(theta) + ',' + this.format(cx) + ',' + this.format(cy) + ')';\n\t\t}\n\t\t\n\t\ts.rotation = s.rotation + theta;\n\t\ts.rotationCx = cx;\n\t\ts.rotationCy = cy;\n\t}\n};\n\n/**\n * Function: begin\n * \n * Extends superclass to create path.\n */\nmxSvgCanvas2D.prototype.begin = function()\n{\n\tmxAbstractCanvas2D.prototype.begin.apply(this, arguments);\n\tthis.node = this.createElement('path');\n};\n\n/**\n * Function: rect\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createElement('rect');\n\tn.setAttribute('x', this.format((x + s.dx) * s.scale));\n\tn.setAttribute('y', this.format((y + s.dy) * s.scale));\n\tn.setAttribute('width', this.format(w * s.scale));\n\tn.setAttribute('height', this.format(h * s.scale));\n\t\n\tthis.node = n;\n};\n\n/**\n * Function: roundrect\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tthis.rect(x, y, w, h);\n\t\n\tif (dx > 0)\n\t{\n\t\tthis.node.setAttribute('rx', this.format(dx * this.state.scale));\n\t}\n\t\n\tif (dy > 0)\n\t{\n\t\tthis.node.setAttribute('ry', this.format(dy * this.state.scale));\n\t}\n};\n\n/**\n * Function: ellipse\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createElement('ellipse');\n\t// No rounding for consistent output with 1.x\n\tn.setAttribute('cx', this.format((x + w / 2 + s.dx) * s.scale));\n\tn.setAttribute('cy', this.format((y + h / 2 + s.dy) * s.scale));\n\tn.setAttribute('rx', w / 2 * s.scale);\n\tn.setAttribute('ry', h / 2 * s.scale);\n\tthis.node = n;\n};\n\n/**\n * Function: image\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tsrc = this.converter.convert(src);\n\t\n\t// LATER: Add option for embedding images as base64.\n\taspect = (aspect != null) ? aspect : true;\n\tflipH = (flipH != null) ? flipH : false;\n\tflipV = (flipV != null) ? flipV : false;\n\t\n\tvar s = this.state;\n\tx += s.dx;\n\ty += s.dy;\n\t\n\tvar node = this.createElement('image');\n\tnode.setAttribute('x', this.format(x * s.scale) + this.imageOffset);\n\tnode.setAttribute('y', this.format(y * s.scale) + this.imageOffset);\n\tnode.setAttribute('width', this.format(w * s.scale));\n\tnode.setAttribute('height', this.format(h * s.scale));\n\t\n\t// Workaround for missing namespace support\n\tif (node.setAttributeNS == null)\n\t{\n\t\tnode.setAttribute('xlink:href', src);\n\t}\n\telse\n\t{\n\t\tnode.setAttributeNS(mxConstants.NS_XLINK, 'xlink:href', src);\n\t}\n\t\n\tif (!aspect)\n\t{\n\t\tnode.setAttribute('preserveAspectRatio', 'none');\n\t}\n\n\tif (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tnode.setAttribute('opacity', s.alpha * s.fillAlpha);\n\t}\n\t\n\tvar tr = this.state.transform || '';\n\t\n\tif (flipH || flipV)\n\t{\n\t\tvar sx = 1;\n\t\tvar sy = 1;\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\tif (flipH)\n\t\t{\n\t\t\tsx = -1;\n\t\t\tdx = -w - 2 * x;\n\t\t}\n\t\t\n\t\tif (flipV)\n\t\t{\n\t\t\tsy = -1;\n\t\t\tdy = -h - 2 * y;\n\t\t}\n\t\t\n\t\t// Adds image tansformation to existing transform\n\t\ttr += 'scale(' + sx + ',' + sy + ')translate(' + (dx * s.scale) + ',' + (dy * s.scale) + ')';\n\t}\n\n\tif (tr.length > 0)\n\t{\n\t\tnode.setAttribute('transform', tr);\n\t}\n\t\n\tif (!this.pointerEvents)\n\t{\n\t\tnode.setAttribute('pointer-events', 'none');\n\t}\n\t\n\tthis.root.appendChild(node);\n\t\n\t// Disables control-clicks on images in Firefox to open in new tab\n\t// by putting a rect in the foreground that absorbs all events and\n\t// disabling all pointer-events on the original image tag.\n\tif (this.blockImagePointerEvents)\n\t{\n\t\tnode.setAttribute('style', 'pointer-events:none');\n\t\t\n\t\tnode = this.createElement('rect');\n\t\tnode.setAttribute('visibility', 'hidden');\n\t\tnode.setAttribute('pointer-events', 'fill');\n\t\tnode.setAttribute('x', this.format(x * s.scale));\n\t\tnode.setAttribute('y', this.format(y * s.scale));\n\t\tnode.setAttribute('width', this.format(w * s.scale));\n\t\tnode.setAttribute('height', this.format(h * s.scale));\n\t\tthis.root.appendChild(node);\n\t}\n};\n\n/**\n * Function: convertHtml\n * \n * Converts the given HTML string to XHTML.\n */\nmxSvgCanvas2D.prototype.convertHtml = function(val)\n{\n\tif (this.useDomParser)\n\t{\n\t\tvar doc = new DOMParser().parseFromString(val, 'text/html');\n\n\t\tif (doc != null)\n\t\t{\n\t\t\tval = new XMLSerializer().serializeToString(doc.body);\n\t\t\t\n\t\t\t// Extracts body content from DOM\n\t\t\tif (val.substring(0, 5) == '<body')\n\t\t\t{\n\t\t\t\tval = val.substring(val.indexOf('>', 5) + 1);\n\t\t\t}\n\t\t\t\n\t\t\tif (val.substring(val.length - 7, val.length) == '</body>')\n\t\t\t{\n\t\t\t\tval = val.substring(0, val.length - 7);\n\t\t\t}\n\t\t}\n\t}\n\telse if (document.implementation != null && document.implementation.createDocument != null)\n\t{\n\t\tvar xd = document.implementation.createDocument('http://www.w3.org/1999/xhtml', 'html', null);\n\t\tvar xb = xd.createElement('body');\n\t\txd.documentElement.appendChild(xb);\n\t\t\n\t\tvar div = document.createElement('div');\n\t\tdiv.innerHTML = val;\n\t\tvar child = div.firstChild;\n\t\t\n\t\twhile (child != null)\n\t\t{\n\t\t\tvar next = child.nextSibling;\n\t\t\txb.appendChild(xd.adoptNode(child));\n\t\t\tchild = next;\n\t\t}\n\t\t\n\t\treturn xb.innerHTML;\n\t}\n\telse\n\t{\n\t\tvar ta = document.createElement('textarea');\n\t\t\n\t\t// Handles special HTML entities < and > and double escaping\n\t\t// and converts unclosed br, hr and img tags to XHTML\n\t\t// LATER: Convert all unclosed tags\n\t\tta.innerHTML = val.replace(/&amp;/g, '&amp;amp;').\n\t\t\treplace(/&#60;/g, '&amp;lt;').replace(/&#62;/g, '&amp;gt;').\n\t\t\treplace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;').\n\t\t\treplace(/</g, '&lt;').replace(/>/g, '&gt;');\n\t\tval = ta.value.replace(/&/g, '&amp;').replace(/&amp;lt;/g, '&lt;').\n\t\t\treplace(/&amp;gt;/g, '&gt;').replace(/&amp;amp;/g, '&amp;').\n\t\t\treplace(/<br>/g, '<br />').replace(/<hr>/g, '<hr />').\n\t\t\treplace(/(<img[^>]+)>/gm, \"$1 />\");\n\t}\n\t\n\treturn val;\n};\n\n/**\n * Function: createDiv\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createDiv = function(str, align, valign, style, overflow, whiteSpace)\n{\n\tvar s = this.state;\n\n\t// Inline block for rendering HTML background over SVG in Safari\n\tvar lh = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (s.fontSize * mxConstants.LINE_HEIGHT) + 'px' :\n\t\t(mxConstants.LINE_HEIGHT * this.lineHeightCorrection);\n\t\n\tstyle = 'display:inline-block;font-size:' + s.fontSize + 'px;font-family:' + s.fontFamily +\n\t\t';color:' + s.fontColor + ';line-height:' + lh + ';' + style;\n\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle += 'font-weight:bold;';\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle += 'font-style:italic;';\n\t}\n\t\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle += 'text-decoration:underline;';\n\t}\n\t\n\tif (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tstyle += 'text-align:center;';\n\t}\n\telse if (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstyle += 'text-align:right;';\n\t}\n\telse\n\t{\n\t\tstyle += 'text-align:left;';\n\t}\n\n\tvar css = '';\n\t\n\tif (s.fontBackgroundColor != null)\n\t{\n\t\tcss += 'background-color:' + mxUtils.htmlEntities(s.fontBackgroundColor) + ';';\n\t}\n\t\n\tif (s.fontBorderColor != null)\n\t{\n\t\tcss += 'border:1px solid ' + mxUtils.htmlEntities(s.fontBorderColor) + ';';\n\t}\n\t\n\tvar val = str;\n\t\n\tif (!mxUtils.isNode(val))\n\t{\n\t\tval = this.convertHtml(val);\n\t\t\n\t\tif (overflow != 'fill' && overflow != 'width')\n\t\t{\n\t\t\t// Workaround for no wrapping in HTML canvas for image\n\t\t\t// export if the inner HTML contains a DIV with width\n\t\t\tif (whiteSpace != null)\n\t\t\t{\n\t\t\t\tcss += 'white-space:' + whiteSpace + ';';\n\t\t\t}\n\t\t\t\n\t\t\t// Inner div always needed to measure wrapped text\n\t\t\tval = '<div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display:inline-block;text-align:inherit;text-decoration:inherit;' + css + '\">' + val + '</div>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle += css;\n\t\t}\n\t}\n\n\t// Uses DOM API where available. This cannot be used in IE to avoid\n\t// an opening and two (!) closing TBODY tags being added to tables.\n\tif (!mxClient.IS_IE && document.createElementNS)\n\t{\n\t\tvar div = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n\t\tdiv.setAttribute('style', style);\n\t\t\n\t\tif (mxUtils.isNode(val))\n\t\t{\n\t\t\t// Creates a copy for export\n\t\t\tif (this.root.ownerDocument != document)\n\t\t\t{\n\t\t\t\tdiv.appendChild(val.cloneNode(true));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.appendChild(val);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.innerHTML = val;\n\t\t}\n\t\t\n\t\treturn div;\n\t}\n\telse\n\t{\n\t\t// Serializes for export\n\t\tif (mxUtils.isNode(val) && this.root.ownerDocument != document)\n\t\t{\n\t\t\tval = val.outerHTML;\n\t\t}\n\n\t\t// NOTE: FF 3.6 crashes if content CSS contains \"height:100%\"\n\t\treturn mxUtils.parseXml('<div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"' + style + \n\t\t\t'\">' + val + '</div>').documentElement;\n\t}\n};\n\n/**\n * Invalidates the cached offset size for the given node.\n */\nmxSvgCanvas2D.prototype.invalidateCachedOffsetSize = function(node)\n{\n\tdelete node.firstChild.mxCachedOffsetWidth;\n\tdelete node.firstChild.mxCachedFinalOffsetWidth;\n\tdelete node.firstChild.mxCachedFinalOffsetHeight;\n};\n\n/**\n * Updates existing DOM nodes for text rendering. LATER: Merge common parts with text function below.\n */\nmxSvgCanvas2D.prototype.updateText = function(x, y, w, h, align, valign, wrap, overflow, clip, rotation, node)\n{\n\tif (node != null && node.firstChild != null && node.firstChild.firstChild != null &&\n\t\tnode.firstChild.firstChild.firstChild != null)\n\t{\n\t\t// Uses outer group for opacity and transforms to\n\t\t// fix rendering order in Chrome\n\t\tvar group = node.firstChild;\n\t\tvar fo = group.firstChild;\n\t\tvar div = fo.firstChild;\n\n\t\trotation = (rotation != null) ? rotation : 0;\n\t\t\n\t\tvar s = this.state;\n\t\tx += s.dx;\n\t\ty += s.dy;\n\t\t\n\t\tif (clip)\n\t\t{\n\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\tdiv.style.maxWidth = Math.round(w) + 'px';\n\t\t}\n\t\telse if (overflow == 'fill')\n\t\t{\n\t\t\tdiv.style.width = Math.round(w + 1) + 'px';\n\t\t\tdiv.style.height = Math.round(h + 1) + 'px';\n\t\t}\n\t\telse if (overflow == 'width')\n\t\t{\n\t\t\tdiv.style.width = Math.round(w + 1) + 'px';\n\t\t\t\n\t\t\tif (h > 0)\n\t\t\t{\n\t\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\t}\n\t\t}\n\n\t\tif (wrap && w > 0)\n\t\t{\n\t\t\tdiv.style.width = Math.round(w + 1) + 'px';\n\t\t}\n\t\t\n\t\t// Code that depends on the size which is computed after\n\t\t// the element was added to the DOM.\n\t\tvar ow = 0;\n\t\tvar oh = 0;\n\t\t\n\t\t// Padding avoids clipping on border and wrapping for differing font metrics on platforms\n\t\tvar padX = 0;\n\t\tvar padY = 2;\n\n\t\tvar sizeDiv = div;\n\t\t\n\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t{\n\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t}\n\t\t\n\t\tvar tmp = (group.mxCachedOffsetWidth != null) ? group.mxCachedOffsetWidth : sizeDiv.offsetWidth;\n\t\tow = tmp + padX;\n\n\t\t// Recomputes the height of the element for wrapped width\n\t\tif (wrap && overflow != 'fill')\n\t\t{\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tow = Math.min(ow, w);\n\t\t\t}\n\t\t\t\n\t\t\tdiv.style.width = Math.round(ow + 1) + 'px';\n\t\t}\n\n\t\tow = (group.mxCachedFinalOffsetWidth != null) ? group.mxCachedFinalOffsetWidth : sizeDiv.offsetWidth;\n\t\toh = (group.mxCachedFinalOffsetHeight != null) ? group.mxCachedFinalOffsetHeight : sizeDiv.offsetHeight;\n\t\t\n\t\tif (this.cacheOffsetSize)\n\t\t{\n\t\t\tgroup.mxCachedOffsetWidth = tmp;\n\t\t\tgroup.mxCachedFinalOffsetWidth = ow;\n\t\t\tgroup.mxCachedFinalOffsetHeight = oh;\n\t\t}\n\t\t\n\t\tow += padX;\n\t\toh -= 2;\n\t\t\n\t\tif (clip)\n\t\t{\n\t\t\toh = Math.min(oh, h);\n\t\t\tow = Math.min(ow, w);\n\t\t}\n\n\t\tif (overflow == 'width')\n\t\t{\n\t\t\th = oh;\n\t\t}\n\t\telse if (overflow != 'fill')\n\t\t{\n\t\t\tw = ow;\n\t\t\th = oh;\n\t\t}\n\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tdx -= w / 2;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tdx -= w;\n\t\t}\n\t\t\n\t\tx += dx;\n\t\t\n\t\t// FIXME: LINE_HEIGHT not ideal for all text sizes, fix for export\n\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tdy -= h / 2;\n\t\t}\n\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy -= h;\n\t\t}\n\t\t\n\t\t// Workaround for rendering offsets\n\t\t// TODO: Check if export needs these fixes, too\n\t\tif (overflow != 'fill' && mxClient.IS_FF && mxClient.IS_WIN)\n\t\t{\n\t\t\tdy -= 2;\n\t\t}\n\t\t\n\t\ty += dy;\n\n\t\tvar tr = (s.scale != 1) ? 'scale(' + s.scale + ')' : '';\n\n\t\tif (s.rotation != 0 && this.rotateHtml)\n\t\t{\n\t\t\ttr += 'rotate(' + (s.rotation) + ',' + (w / 2) + ',' + (h / 2) + ')';\n\t\t\tvar pt = this.rotatePoint((x + w / 2) * s.scale, (y + h / 2) * s.scale,\n\t\t\t\ts.rotation, s.rotationCx, s.rotationCy);\n\t\t\tx = pt.x - w * s.scale / 2;\n\t\t\ty = pt.y - h * s.scale / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx *= s.scale;\n\t\t\ty *= s.scale;\n\t\t}\n\n\t\tif (rotation != 0)\n\t\t{\n\t\t\ttr += 'rotate(' + (rotation) + ',' + (-dx) + ',' + (-dy) + ')';\n\t\t}\n\n\t\tgroup.setAttribute('transform', 'translate(' + Math.round(x) + ',' + Math.round(y) + ')' + tr);\n\t\tfo.setAttribute('width', Math.round(Math.max(1, w)));\n\t\tfo.setAttribute('height', Math.round(Math.max(1, h)));\n\t}\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for plain\n * text and html for HTML markup. Note that HTML markup is only supported if\n * foreignObject is supported and <foEnabled> is true. (This means IE9 and later\n * does currently not support HTML text as part of shapes.)\n */\nmxSvgCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\trotation = (rotation != null) ? rotation : 0;\n\t\t\n\t\tvar s = this.state;\n\t\tx += s.dx;\n\t\ty += s.dy;\n\t\t\n\t\tif (this.foEnabled && format == 'html')\n\t\t{\n\t\t\tvar style = 'vertical-align:top;';\n\t\t\t\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tstyle += 'overflow:hidden;max-height:' + Math.round(h) + 'px;max-width:' + Math.round(w) + 'px;';\n\t\t\t}\n\t\t\telse if (overflow == 'fill')\n\t\t\t{\n\t\t\t\tstyle += 'width:' + Math.round(w + 1) + 'px;height:' + Math.round(h + 1) + 'px;overflow:hidden;';\n\t\t\t}\n\t\t\telse if (overflow == 'width')\n\t\t\t{\n\t\t\t\tstyle += 'width:' + Math.round(w + 1) + 'px;';\n\t\t\t\t\n\t\t\t\tif (h > 0)\n\t\t\t\t{\n\t\t\t\t\tstyle += 'max-height:' + Math.round(h) + 'px;overflow:hidden;';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (wrap && w > 0)\n\t\t\t{\n\t\t\t\tstyle += 'width:' + Math.round(w + 1) + 'px;white-space:normal;word-wrap:' +\n\t\t\t\t\tmxConstants.WORD_WRAP + ';';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstyle += 'white-space:nowrap;';\n\t\t\t}\n\t\t\t\n\t\t\t// Uses outer group for opacity and transforms to\n\t\t\t// fix rendering order in Chrome\n\t\t\tvar group = this.createElement('g');\n\t\t\t\n\t\t\tif (s.alpha < 1)\n\t\t\t{\n\t\t\t\tgroup.setAttribute('opacity', s.alpha);\n\t\t\t}\n\n\t\t\tvar fo = this.createElement('foreignObject');\n\t\t\tfo.setAttribute('style', 'overflow:visible;');\n\t\t\tfo.setAttribute('pointer-events', (this.pointerEvents) ? this.pointerEventsValue : 'none');\n\t\t\t\n\t\t\tvar div = this.createDiv(str, align, valign, style, overflow, (wrap && w > 0) ? 'normal' : null);\n\t\t\t\n\t\t\t// Ignores invalid XHTML labels\n\t\t\tif (div == null)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (dir != null)\n\t\t\t{\n\t\t\t\tdiv.setAttribute('dir', dir);\n\t\t\t}\n\n\t\t\tgroup.appendChild(fo);\n\t\t\tthis.root.appendChild(group);\n\t\t\t\n\t\t\t// Code that depends on the size which is computed after\n\t\t\t// the element was added to the DOM.\n\t\t\tvar ow = 0;\n\t\t\tvar oh = 0;\n\t\t\t\n\t\t\t// Padding avoids clipping on border and wrapping for differing font metrics on platforms\n\t\t\tvar padX = 2;\n\t\t\tvar padY = 2;\n\n\t\t\t// NOTE: IE is always export as it does not support foreign objects\n\t\t\tif (mxClient.IS_IE && (document.documentMode == 9 || !mxClient.IS_SVG))\n\t\t\t{\n\t\t\t\t// Handles non-standard namespace for getting size in IE\n\t\t\t\tvar clone = document.createElement('div');\n\t\t\t\t\n\t\t\t\tclone.style.cssText = div.getAttribute('style');\n\t\t\t\tclone.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\t\tclone.style.position = 'absolute';\n\t\t\t\tclone.style.visibility = 'hidden';\n\n\t\t\t\t// Inner DIV is needed for text measuring\n\t\t\t\tvar div2 = document.createElement('div');\n\t\t\t\tdiv2.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\t\tdiv2.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tdiv2.innerHTML = (mxUtils.isNode(str)) ? str.outerHTML : str;\n\t\t\t\tclone.appendChild(div2);\n\n\t\t\t\tdocument.body.appendChild(clone);\n\n\t\t\t\t// Workaround for different box models\n\t\t\t\tif (document.documentMode != 8 && document.documentMode != 9 && s.fontBorderColor != null)\n\t\t\t\t{\n\t\t\t\t\tpadX += 2;\n\t\t\t\t\tpadY += 2;\n\t\t\t\t}\n\n\t\t\t\tif (wrap && w > 0)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = div2.offsetWidth;\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for adding padding twice in IE8/IE9 standards mode if label is wrapped\n\t\t\t\t\tpadDx = 0;\n\t\t\t\t\t\n\t\t\t\t\t// For export, if no wrapping occurs, we add a large padding to make\n\t\t\t\t\t// sure there is no wrapping even if the text metrics are different.\n\t\t\t\t\t// This adds support for text metrics on different operating systems.\n\t\t\t\t\t// Disables wrapping if text is not wrapped for given width\n\t\t\t\t\tif (!clip && wrap && w > 0 && this.root.ownerDocument != document && overflow != 'fill')\n\t\t\t\t\t{\n\t\t\t\t\t\tvar ws = clone.style.whiteSpace;\n\t\t\t\t\t\tdiv2.style.whiteSpace = 'nowrap';\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (tmp < div2.offsetWidth)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tclone.style.whiteSpace = ws;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (clip)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = Math.min(tmp, w);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tclone.style.width = tmp + 'px';\n\t\n\t\t\t\t\t// Padding avoids clipping on border\n\t\t\t\t\tow = div2.offsetWidth + padX + padDx;\n\t\t\t\t\toh = div2.offsetHeight + padY;\n\t\t\t\t\t\n\t\t\t\t\t// Overrides the width of the DIV via XML DOM by using the\n\t\t\t\t\t// clone DOM style, getting the CSS text for that and\n\t\t\t\t\t// then setting that on the DIV via setAttribute\n\t\t\t\t\tclone.style.display = 'inline-block';\n\t\t\t\t\tclone.style.position = '';\n\t\t\t\t\tclone.style.visibility = '';\n\t\t\t\t\tclone.style.width = ow + 'px';\n\t\t\t\t\t\n\t\t\t\t\tdiv.setAttribute('style', clone.style.cssText);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Padding avoids clipping on border\n\t\t\t\t\tow = div2.offsetWidth + padX;\n\t\t\t\t\toh = div2.offsetHeight + padY;\n\t\t\t\t}\n\n\t\t\t\tclone.parentNode.removeChild(clone);\n\t\t\t\tfo.appendChild(div);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Uses document for text measuring during export\n\t\t\t\tif (this.root.ownerDocument != document)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfo.appendChild(div);\n\t\t\t\t}\n\n\t\t\t\tvar sizeDiv = div;\n\t\t\t\t\n\t\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t\t\n\t\t\t\t\tif (wrap && div.style.wordWrap == 'break-word')\n\t\t\t\t\t{\n\t\t\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar tmp = sizeDiv.offsetWidth;\n\t\t\t\t\n\t\t\t\t// Workaround for text measuring in hidden containers\n\t\t\t\tif (tmp == 0 && div.parentNode == fo)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\t\n\t\t\t\t\ttmp = sizeDiv.offsetWidth;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.cacheOffsetSize)\n\t\t\t\t{\n\t\t\t\t\tgroup.mxCachedOffsetWidth = tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Disables wrapping if text is not wrapped for given width\n\t\t\t\tif (!clip && wrap && w > 0 && this.root.ownerDocument != document &&\n\t\t\t\t\toverflow != 'fill' && overflow != 'width')\n\t\t\t\t{\n\t\t\t\t\tvar ws = div.style.whiteSpace;\n\t\t\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\t\t\t\n\t\t\t\t\tif (tmp < sizeDiv.offsetWidth)\n\t\t\t\t\t{\n\t\t\t\t\t\tdiv.style.whiteSpace = ws;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tow = tmp + padX - 1;\n\n\t\t\t\t// Recomputes the height of the element for wrapped width\n\t\t\t\tif (wrap && overflow != 'fill' && overflow != 'width')\n\t\t\t\t{\n\t\t\t\t\tif (clip)\n\t\t\t\t\t{\n\t\t\t\t\t\tow = Math.min(ow, w);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdiv.style.width = ow + 'px';\n\t\t\t\t}\n\n\t\t\t\tow = sizeDiv.offsetWidth;\n\t\t\t\toh = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tif (this.cacheOffsetSize)\n\t\t\t\t{\n\t\t\t\t\tgroup.mxCachedFinalOffsetWidth = ow;\n\t\t\t\t\tgroup.mxCachedFinalOffsetHeight = oh;\n\t\t\t\t}\n\n\t\t\t\toh -= padY;\n\t\t\t\t\n\t\t\t\tif (div.parentNode != fo)\n\t\t\t\t{\n\t\t\t\t\tfo.appendChild(div);\n\t\t\t\t\tdiv.style.visibility = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\toh = Math.min(oh, h);\n\t\t\t\tow = Math.min(ow, w);\n\t\t\t}\n\n\t\t\tif (overflow == 'width')\n\t\t\t{\n\t\t\t\th = oh;\n\t\t\t}\n\t\t\telse if (overflow != 'fill')\n\t\t\t{\n\t\t\t\tw = ow;\n\t\t\t\th = oh;\n\t\t\t}\n\n\t\t\tif (s.alpha < 1)\n\t\t\t{\n\t\t\t\tgroup.setAttribute('opacity', s.alpha);\n\t\t\t}\n\t\t\t\n\t\t\tvar dx = 0;\n\t\t\tvar dy = 0;\n\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tdx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tdx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tx += dx;\n\t\t\t\n\t\t\t// FIXME: LINE_HEIGHT not ideal for all text sizes, fix for export\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\tdy -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tdy -= h;\n\t\t\t}\n\t\t\t\n\t\t\t// Workaround for rendering offsets\n\t\t\t// TODO: Check if export needs these fixes, too\n\t\t\t//if (this.root.ownerDocument == document)\n\t\t\tif (overflow != 'fill' && mxClient.IS_FF && mxClient.IS_WIN)\n\t\t\t{\n\t\t\t\tdy -= 2;\n\t\t\t}\n\t\t\t\n\t\t\ty += dy;\n\n\t\t\tvar tr = (s.scale != 1) ? 'scale(' + s.scale + ')' : '';\n\n\t\t\tif (s.rotation != 0 && this.rotateHtml)\n\t\t\t{\n\t\t\t\ttr += 'rotate(' + (s.rotation) + ',' + (w / 2) + ',' + (h / 2) + ')';\n\t\t\t\tvar pt = this.rotatePoint((x + w / 2) * s.scale, (y + h / 2) * s.scale,\n\t\t\t\t\ts.rotation, s.rotationCx, s.rotationCy);\n\t\t\t\tx = pt.x - w * s.scale / 2;\n\t\t\t\ty = pt.y - h * s.scale / 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx *= s.scale;\n\t\t\t\ty *= s.scale;\n\t\t\t}\n\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\ttr += 'rotate(' + (rotation) + ',' + (-dx) + ',' + (-dy) + ')';\n\t\t\t}\n\n\t\t\tgroup.setAttribute('transform', 'translate(' + (Math.round(x) + this.foOffset) + ',' +\n\t\t\t\t(Math.round(y) + this.foOffset) + ')' + tr);\n\t\t\tfo.setAttribute('width', Math.round(Math.max(1, w)));\n\t\t\tfo.setAttribute('height', Math.round(Math.max(1, h)));\n\t\t\t\n\t\t\t// Adds alternate content if foreignObject not supported in viewer\n\t\t\tif (this.root.ownerDocument != document)\n\t\t\t{\n\t\t\t\tvar alt = this.createAlternateContent(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation);\n\t\t\t\t\n\t\t\t\tif (alt != null)\n\t\t\t\t{\n\t\t\t\t\tfo.setAttribute('requiredFeatures', 'http://www.w3.org/TR/SVG11/feature#Extensibility');\n\t\t\t\t\tvar sw = this.createElement('switch');\n\t\t\t\t\tsw.appendChild(fo);\n\t\t\t\t\tsw.appendChild(alt);\n\t\t\t\t\tgroup.appendChild(sw);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.plainText(x, y, w, h, str, align, valign, wrap, overflow, clip, rotation, dir);\n\t\t}\n\t}\n};\n\n/**\n * Function: createClip\n * \n * Creates a clip for the given coordinates.\n */\nmxSvgCanvas2D.prototype.createClip = function(x, y, w, h)\n{\n\tx = Math.round(x);\n\ty = Math.round(y);\n\tw = Math.round(w);\n\th = Math.round(h);\n\t\n\tvar id = 'mx-clip-' + x + '-' + y + '-' + w + '-' + h;\n\n\tvar counter = 0;\n\tvar tmp = id + '-' + counter;\n\t\n\t// Resolves ID conflicts\n\twhile (document.getElementById(tmp) != null)\n\t{\n\t\ttmp = id + '-' + (++counter);\n\t}\n\t\n\tclip = this.createElement('clipPath');\n\tclip.setAttribute('id', tmp);\n\t\n\tvar rect = this.createElement('rect');\n\trect.setAttribute('x', x);\n\trect.setAttribute('y', y);\n\trect.setAttribute('width', w);\n\trect.setAttribute('height', h);\n\t\t\n\tclip.appendChild(rect);\n\t\n\treturn clip;\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for\n * plain text and html for HTML markup.\n */\nmxSvgCanvas2D.prototype.plainText = function(x, y, w, h, str, align, valign, wrap, overflow, clip, rotation, dir)\n{\n\trotation = (rotation != null) ? rotation : 0;\n\tvar s = this.state;\n\tvar size = s.fontSize;\n\tvar node = this.createElement('g');\n\tvar tr = s.transform || '';\n\tthis.updateFont(node);\n\t\n\t// Non-rotated text\n\tif (rotation != 0)\n\t{\n\t\ttr += 'rotate(' + rotation  + ',' + this.format(x * s.scale) + ',' + this.format(y * s.scale) + ')';\n\t}\n\t\n\tif (dir != null)\n\t{\n\t\tnode.setAttribute('direction', dir);\n\t}\n\n\tif (clip && w > 0 && h > 0)\n\t{\n\t\tvar cx = x;\n\t\tvar cy = y;\n\t\t\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tcx -= w / 2;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tcx -= w;\n\t\t}\n\t\t\n\t\tif (overflow != 'fill')\n\t\t{\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\tcy -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tcy -= h;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// LATER: Remove spacing from clip rectangle\n\t\tvar c = this.createClip(cx * s.scale - 2, cy * s.scale - 2, w * s.scale + 4, h * s.scale + 4);\n\t\t\n\t\tif (this.defs != null)\n\t\t{\n\t\t\tthis.defs.appendChild(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Makes sure clip is removed with referencing node\n\t\t\tthis.root.appendChild(c);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_CHROMEAPP && !mxClient.IS_IE && !mxClient.IS_IE11 &&\n\t\t\t!mxClient.IS_EDGE && this.root.ownerDocument == document)\n\t\t{\n\t\t\t// Workaround for potential base tag\n\t\t\tvar base = this.getBaseUrl().replace(/([\\(\\)])/g, '\\\\$1');\n\t\t\tnode.setAttribute('clip-path', 'url(' + base + '#' + c.getAttribute('id') + ')');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.setAttribute('clip-path', 'url(#' + c.getAttribute('id') + ')');\n\t\t}\n\t}\n\n\t// Default is left\n\tvar anchor = (align == mxConstants.ALIGN_RIGHT) ? 'end' :\n\t\t\t\t\t(align == mxConstants.ALIGN_CENTER) ? 'middle' :\n\t\t\t\t\t'start';\n\n\t// Text-anchor start is default in SVG\n\tif (anchor != 'start')\n\t{\n\t\tnode.setAttribute('text-anchor', anchor);\n\t}\n\t\n\tif (!this.styleEnabled || size != mxConstants.DEFAULT_FONTSIZE)\n\t{\n\t\tnode.setAttribute('font-size', (size * s.scale) + 'px');\n\t}\n\t\n\tif (tr.length > 0)\n\t{\n\t\tnode.setAttribute('transform', tr);\n\t}\n\t\n\tif (s.alpha < 1)\n\t{\n\t\tnode.setAttribute('opacity', s.alpha);\n\t}\n\t\n\tvar lines = str.split('\\n');\n\tvar lh = Math.round(size * mxConstants.LINE_HEIGHT);\n\tvar textHeight = size + (lines.length - 1) * lh;\n\n\tvar cy = y + size - 1;\n\n\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t{\n\t\tif (overflow == 'fill')\n\t\t{\n\t\t\tcy -= h / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar dy = ((this.matchHtmlAlignment && clip && h > 0) ? Math.min(textHeight, h) : textHeight) / 2;\n\t\t\tcy -= dy + 1;\n\t\t}\n\t}\n\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tif (overflow == 'fill')\n\t\t{\n\t\t\tcy -= h;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar dy = (this.matchHtmlAlignment && clip && h > 0) ? Math.min(textHeight, h) : textHeight;\n\t\t\tcy -= dy + 2;\n\t\t}\n\t}\n\n\tfor (var i = 0; i < lines.length; i++)\n\t{\n\t\t// Workaround for bounding box of empty lines and spaces\n\t\tif (lines[i].length > 0 && mxUtils.trim(lines[i]).length > 0)\n\t\t{\n\t\t\tvar text = this.createElement('text');\n\t\t\t// LATER: Match horizontal HTML alignment\n\t\t\ttext.setAttribute('x', this.format(x * s.scale) + this.textOffset);\n\t\t\ttext.setAttribute('y', this.format(cy * s.scale) + this.textOffset);\n\t\t\t\n\t\t\tmxUtils.write(text, lines[i]);\n\t\t\tnode.appendChild(text);\n\t\t}\n\n\t\tcy += lh;\n\t}\n\n\tthis.root.appendChild(node);\n\tthis.addTextBackground(node, str, x, y, w, (overflow == 'fill') ? h : textHeight, align, valign, overflow);\n};\n\n/**\n * Function: updateFont\n * \n * Updates the text properties for the given node. (NOTE: For this to work in\n * IE, the given node must be a text or tspan element.)\n */\nmxSvgCanvas2D.prototype.updateFont = function(node)\n{\n\tvar s = this.state;\n\n\tnode.setAttribute('fill', s.fontColor);\n\t\n\tif (!this.styleEnabled || s.fontFamily != mxConstants.DEFAULT_FONTFAMILY)\n\t{\n\t\tnode.setAttribute('font-family', s.fontFamily);\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tnode.setAttribute('font-weight', 'bold');\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tnode.setAttribute('font-style', 'italic');\n\t}\n\t\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tnode.setAttribute('text-decoration', 'underline');\n\t}\n};\n\n/**\n * Function: addTextBackground\n * \n * Background color and border\n */\nmxSvgCanvas2D.prototype.addTextBackground = function(node, str, x, y, w, h, align, valign, overflow)\n{\n\tvar s = this.state;\n\n\tif (s.fontBackgroundColor != null || s.fontBorderColor != null)\n\t{\n\t\tvar bbox = null;\n\t\t\n\t\tif (overflow == 'fill' || overflow == 'width')\n\t\t{\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\ty -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\ty -= h;\n\t\t\t}\n\t\t\t\n\t\t\tbbox = new mxRectangle((x + 1) * s.scale, y * s.scale, (w - 2) * s.scale, (h + 2) * s.scale);\n\t\t}\n\t\telse if (node.getBBox != null && this.root.ownerDocument == document)\n\t\t{\n\t\t\t// Uses getBBox only if inside document for correct size\n\t\t\ttry\n\t\t\t{\n\t\t\t\tbbox = node.getBBox();\n\t\t\t\tvar ie = mxClient.IS_IE && mxClient.IS_SVG;\n\t\t\t\tbbox = new mxRectangle(bbox.x, bbox.y + ((ie) ? 0 : 1), bbox.width, bbox.height + ((ie) ? 1 : 0));\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// Ignores NS_ERROR_FAILURE in FF if container display is none.\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Computes size if not in document or no getBBox available\n\t\t\tvar div = document.createElement('div');\n\n\t\t\t// Wrapping and clipping can be ignored here\n\t\t\tdiv.style.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (s.fontSize * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\t\t\tdiv.style.fontSize = s.fontSize + 'px';\n\t\t\tdiv.style.fontFamily = s.fontFamily;\n\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\tdiv.style.position = 'absolute';\n\t\t\tdiv.style.visibility = 'hidden';\n\t\t\tdiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\tdiv.style.zoom = '1';\n\t\t\t\n\t\t\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t\t\t{\n\t\t\t\tdiv.style.fontWeight = 'bold';\n\t\t\t}\n\n\t\t\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t\t\t{\n\t\t\t\tdiv.style.fontStyle = 'italic';\n\t\t\t}\n\t\t\t\n\t\t\tstr = mxUtils.htmlEntities(str, false);\n\t\t\tdiv.innerHTML = str.replace(/\\n/g, '<br/>');\n\t\t\t\n\t\t\tdocument.body.appendChild(div);\n\t\t\tvar w = div.offsetWidth;\n\t\t\tvar h = div.offsetHeight;\n\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\ty -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\ty -= h;\n\t\t\t}\n\t\t\t\n\t\t\tbbox = new mxRectangle((x + 1) * s.scale, (y + 2) * s.scale, w * s.scale, (h + 1) * s.scale);\n\t\t}\n\t\t\n\t\tif (bbox != null)\n\t\t{\n\t\t\tvar n = this.createElement('rect');\n\t\t\tn.setAttribute('fill', s.fontBackgroundColor || 'none');\n\t\t\tn.setAttribute('stroke', s.fontBorderColor || 'none');\n\t\t\tn.setAttribute('x', Math.floor(bbox.x - 1));\n\t\t\tn.setAttribute('y', Math.floor(bbox.y - 1));\n\t\t\tn.setAttribute('width', Math.ceil(bbox.width + 2));\n\t\t\tn.setAttribute('height', Math.ceil(bbox.height));\n\n\t\t\tvar sw = (s.fontBorderColor != null) ? Math.max(1, this.format(s.scale)) : 0;\n\t\t\tn.setAttribute('stroke-width', sw);\n\t\t\t\n\t\t\t// Workaround for crisp rendering - only required if not exporting\n\t\t\tif (this.root.ownerDocument == document && mxUtils.mod(sw, 2) == 1)\n\t\t\t{\n\t\t\t\tn.setAttribute('transform', 'translate(0.5, 0.5)');\n\t\t\t}\n\t\t\t\n\t\t\tnode.insertBefore(n, node.firstChild);\n\t\t}\n\t}\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current path.\n */\nmxSvgCanvas2D.prototype.stroke = function()\n{\n\tthis.addNode(false, true);\n};\n\n/**\n * Function: fill\n * \n * Fills the current path.\n */\nmxSvgCanvas2D.prototype.fill = function()\n{\n\tthis.addNode(true, false);\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills and paints the outline of the current path.\n */\nmxSvgCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.addNode(true, true);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxVmlCanvas2D\n * \n * Implements a canvas to be used for rendering VML. Here is an example of implementing a\n * fallback for SVG images which are not supported in VML-based browsers.\n * \n * (code)\n * var mxVmlCanvas2DImage = mxVmlCanvas2D.prototype.image;\n * mxVmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n * {\n *   if (src.substring(src.length - 4, src.length) == '.svg')\n *   {\n *     src = 'http://www.jgraph.com/images/mxgraph.gif';\n *   }\n *   \n *   mxVmlCanvas2DImage.apply(this, arguments);\n * };\n * (end)\n * \n * To disable anti-aliasing in the output, use the following code.\n * \n * (code)\n * document.createStyleSheet().cssText = mxClient.VML_PREFIX + '\\\\:*{antialias:false;)}';\n * (end)\n * \n * A description of the public API is available in <mxXmlCanvas2D>. Note that\n * there is a known issue in VML where gradients are painted using the outer\n * bounding box of rotated shapes, not the actual bounds of the shape. See\n * also <text> for plain text label restrictions in shapes for VML.\n */\nvar mxVmlCanvas2D = function(root)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxVmlCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Variable: path\n * \n * Holds the current DOM node.\n */\nmxVmlCanvas2D.prototype.node = null;\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabledetB. Default is true.\n */\nmxVmlCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: moveOp\n * \n * Contains the string used for moving in paths. Default is 'm'.\n */\nmxVmlCanvas2D.prototype.moveOp = 'm';\n\n/**\n * Variable: lineOp\n * \n * Contains the string used for moving in paths. Default is 'l'.\n */\nmxVmlCanvas2D.prototype.lineOp = 'l';\n\n/**\n * Variable: curveOp\n * \n * Contains the string used for bezier curves. Default is 'c'.\n */\nmxVmlCanvas2D.prototype.curveOp = 'c';\n\n/**\n * Variable: closeOp\n * \n * Holds the operator for closing curves. Default is 'x e'.\n */\nmxVmlCanvas2D.prototype.closeOp = 'x';\n\n/**\n * Variable: rotatedHtmlBackground\n * \n * Background color for rotated HTML. Default is ''. This can be set to eg.\n * white to improve rendering of rotated text in VML for IE9.\n */\nmxVmlCanvas2D.prototype.rotatedHtmlBackground = '';\n\n/**\n * Variable: vmlScale\n * \n * Specifies the scale used to draw VML shapes.\n */\nmxVmlCanvas2D.prototype.vmlScale = 1;\n\n/**\n * Function: createElement\n * \n * Creates the given element using the document.\n */\nmxVmlCanvas2D.prototype.createElement = function(name)\n{\n\treturn document.createElement(name);\n};\n\n/**\n * Function: createVmlElement\n * \n * Creates a new element using <createElement> and prefixes the given name with\n * <mxClient.VML_PREFIX>.\n */\nmxVmlCanvas2D.prototype.createVmlElement = function(name)\n{\n\treturn this.createElement(mxClient.VML_PREFIX + ':' + name);\n};\n\n/**\n * Function: addNode\n * \n * Adds the current node to the <root>.\n */\nmxVmlCanvas2D.prototype.addNode = function(filled, stroked)\n{\n\tvar node = this.node;\n\tvar s = this.state;\n\t\n\tif (node != null)\n\t{\n\t\tif (node.nodeName == 'shape')\n\t\t{\n\t\t\t// Checks if the path is not empty\n\t\t\tif (this.path != null && this.path.length > 0)\n\t\t\t{\n\t\t\t\tnode.path = this.path.join(' ') + ' e';\n\t\t\t\tnode.style.width = this.root.style.width;\n\t\t\t\tnode.style.height = this.root.style.height;\n\t\t\t\tnode.coordsize = parseInt(node.style.width) + ' ' + parseInt(node.style.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tnode.strokeweight = this.format(Math.max(1, s.strokeWidth * s.scale / this.vmlScale)) + 'px';\n\t\t\n\t\tif (s.shadow)\n\t\t{\n\t\t\tthis.root.appendChild(this.createShadow(node,\n\t\t\t\tfilled && s.fillColor != null,\n\t\t\t\tstroked && s.strokeColor != null));\n\t\t}\n\t\t\n\t\tif (stroked && s.strokeColor != null)\n\t\t{\n\t\t\tnode.stroked = 'true';\n\t\t\tnode.strokecolor = s.strokeColor;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.stroked = 'false';\n\t\t}\n\n\t\tnode.appendChild(this.createStroke());\n\n\t\tif (filled && s.fillColor != null)\n\t\t{\n\t\t\tnode.appendChild(this.createFill());\n\t\t}\n\t\telse if (this.pointerEvents && (node.nodeName != 'shape' ||\n\t\t\tthis.path[this.path.length - 1] == this.closeOp))\n\t\t{\n\t\t\tnode.appendChild(this.createTransparentFill());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.filled = 'false';\n\t\t}\n\n\t\t// LATER: Update existing DOM for performance\n\t\tthis.root.appendChild(node);\n\t}\n};\n\n/**\n * Function: createTransparentFill\n * \n * Creates a transparent fill.\n */\nmxVmlCanvas2D.prototype.createTransparentFill = function()\n{\n\tvar fill = this.createVmlElement('fill');\n\tfill.src = mxClient.imageBasePath + '/transparent.gif';\n\tfill.type = 'tile';\n\t\n\treturn fill;\n};\n\n/**\n * Function: createFill\n * \n * Creates a fill for the current state.\n */\nmxVmlCanvas2D.prototype.createFill = function()\n{\n\tvar s = this.state;\n\t\n\t// Gradients in foregrounds not supported because special gradients\n\t// with bounds must be created for each element in graphics-canvases\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = s.fillColor;\n\n\tif (s.gradientColor != null)\n\t{\n\t\tfill.type = 'gradient';\n\t\tfill.method = 'none';\n\t\tfill.color2 = s.gradientColor;\n\t\tvar angle = 180 - s.rotation;\n\t\t\n\t\tif (s.gradientDirection == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tangle -= 90 + ((this.root.style.flip == 'x') ? 180 : 0);\n\t\t}\n\t\telse if (s.gradientDirection == mxConstants.DIRECTION_EAST)\n\t\t{\n\t\t\tangle += 90 + ((this.root.style.flip == 'x') ? 180 : 0);\n\t\t}\n\t\telse if (s.gradientDirection == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tangle -= 180 + ((this.root.style.flip == 'y') ? -180 : 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t angle += ((this.root.style.flip == 'y') ? -180 : 0);\n\t\t}\n\t\t\n\t\tif (this.root.style.flip == 'x' || this.root.style.flip == 'y')\n\t\t{\n\t\t\tangle *= -1;\n\t\t}\n\n\t\t// LATER: Fix outer bounding box for rotated shapes used in VML.\n\t\tfill.angle = mxUtils.mod(angle, 360);\n\t\tfill.opacity = (s.alpha * s.gradientFillAlpha * 100) + '%';\n\t\tfill.setAttribute(mxClient.OFFICE_PREFIX + ':opacity2', (s.alpha * s.gradientAlpha * 100) + '%');\n\t}\n\telse if (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tfill.opacity = (s.alpha * s.fillAlpha * 100) + '%';\t\t\t\n\t}\n\t\n\treturn fill;\n};\n/**\n * Function: createStroke\n * \n * Creates a fill for the current state.\n */\nmxVmlCanvas2D.prototype.createStroke = function()\n{\n\tvar s = this.state;\n\tvar stroke = this.createVmlElement('stroke');\n\tstroke.endcap = s.lineCap || 'flat';\n\tstroke.joinstyle = s.lineJoin || 'miter';\n\tstroke.miterlimit = s.miterLimit || '10';\n\t\n\tif (s.alpha < 1 || s.strokeAlpha < 1)\n\t{\n\t\tstroke.opacity = (s.alpha * s.strokeAlpha * 100) + '%';\n\t}\n\t\n\tif (s.dashed)\n\t{\n\t\tstroke.dashstyle = this.getVmlDashStyle();\n\t}\n\t\n\treturn stroke;\n};\n\n/**\n * Function: getVmlDashPattern\n * \n * Returns a VML dash pattern for the current dashPattern.\n * See http://msdn.microsoft.com/en-us/library/bb264085(v=vs.85).aspx\n */\nmxVmlCanvas2D.prototype.getVmlDashStyle = function()\n{\n\tvar result = 'dash';\n\t\n\tif (typeof(this.state.dashPattern) === 'string')\n\t{\n\t\tvar tok = this.state.dashPattern.split(' ');\n\t\t\n\t\tif (tok.length > 0 && tok[0] == 1)\n\t\t{\n\t\t\tresult = '0 2';\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createShadow\n * \n * Creates a shadow for the given node.\n */\nmxVmlCanvas2D.prototype.createShadow = function(node, filled, stroked)\n{\n\tvar s = this.state;\n\tvar rad = -s.rotation * (Math.PI / 180);\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(rad);\n\n\tvar dx = s.shadowDx * s.scale;\n\tvar dy = s.shadowDy * s.scale;\n\n\tif (this.root.style.flip == 'x')\n\t{\n\t\tdx *= -1;\n\t}\n\telse if (this.root.style.flip == 'y')\n\t{\n\t\tdy *= -1;\n\t}\n\t\n\tvar shadow = node.cloneNode(true);\n\tshadow.style.marginLeft = Math.round(dx * cos - dy * sin) + 'px';\n\tshadow.style.marginTop = Math.round(dx * sin + dy * cos) + 'px';\n\n\t// Workaround for wrong cloning in IE8 standards mode\n\tif (document.documentMode == 8)\n\t{\n\t\tshadow.strokeweight = node.strokeweight;\n\t\t\n\t\tif (node.nodeName == 'shape')\n\t\t{\n\t\t\tshadow.path = this.path.join(' ') + ' e';\n\t\t\tshadow.style.width = this.root.style.width;\n\t\t\tshadow.style.height = this.root.style.height;\n\t\t\tshadow.coordsize = parseInt(node.style.width) + ' ' + parseInt(node.style.height);\n\t\t}\n\t}\n\t\n\tif (stroked)\n\t{\n\t\tshadow.strokecolor = s.shadowColor;\n\t\tshadow.appendChild(this.createShadowStroke());\n\t}\n\telse\n\t{\n\t\tshadow.stroked = 'false';\n\t}\n\t\n\tif (filled)\n\t{\n\t\tshadow.appendChild(this.createShadowFill());\n\t}\n\telse\n\t{\n\t\tshadow.filled = 'false';\n\t}\n\t\n\treturn shadow;\n};\n\n/**\n * Function: createShadowFill\n * \n * Creates the fill for the shadow.\n */\nmxVmlCanvas2D.prototype.createShadowFill = function()\n{\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = this.state.shadowColor;\n\tfill.opacity = (this.state.alpha * this.state.shadowAlpha * 100) + '%';\n\t\n\treturn fill;\n};\n\n/**\n * Function: createShadowStroke\n * \n * Creates the stroke for the shadow.\n */\nmxVmlCanvas2D.prototype.createShadowStroke = function()\n{\n\tvar stroke = this.createStroke();\n\tstroke.opacity = (this.state.alpha * this.state.shadowAlpha * 100) + '%';\n\t\n\treturn stroke;\n};\n\n/**\n * Function: rotate\n * \n * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n */\nmxVmlCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tif (flipH && flipV)\n\t{\n\t\ttheta += 180;\n\t}\n\telse if (flipH)\n\t{\n\t\tthis.root.style.flip = 'x';\n\t}\n\telse if (flipV)\n\t{\n\t\tthis.root.style.flip = 'y';\n\t}\n\n\tif (flipH ? !flipV : flipV)\n\t{\n\t\ttheta *= -1;\n\t}\n\n\tthis.root.style.rotation = theta;\n\tthis.state.rotation = this.state.rotation + theta;\n\tthis.state.rotationCx = cx;\n\tthis.state.rotationCy = cy;\n};\n\n/**\n * Function: begin\n * \n * Extends superclass to create path.\n */\nmxVmlCanvas2D.prototype.begin = function()\n{\n\tmxAbstractCanvas2D.prototype.begin.apply(this, arguments);\n\tthis.node = this.createVmlElement('shape');\n\tthis.node.style.position = 'absolute';\n};\n\n/**\n * Function: quadTo\n * \n * Replaces quadratic curve with bezier curve in VML.\n */\nmxVmlCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tvar s = this.state;\n\n\tvar cpx0 = (this.lastX + s.dx) * s.scale;\n\tvar cpy0 = (this.lastY + s.dy) * s.scale;\n\tvar qpx1 = (x1 + s.dx) * s.scale;\n\tvar qpy1 = (y1 + s.dy) * s.scale;\n\tvar cpx3 = (x2 + s.dx) * s.scale;\n\tvar cpy3 = (y2 + s.dy) * s.scale;\n\t\n\tvar cpx1 = cpx0 + 2/3 * (qpx1 - cpx0);\n\tvar cpy1 = cpy0 + 2/3 * (qpy1 - cpy0);\n\t\n\tvar cpx2 = cpx3 + 2/3 * (qpx1 - cpx3);\n\tvar cpy2 = cpy3 + 2/3 * (qpy1 - cpy3);\n\t\n\tthis.path.push('c ' + this.format(cpx1) + ' ' + this.format(cpy1) +\n\t\t\t' ' + this.format(cpx2) + ' ' + this.format(cpy2) +\n\t\t\t' ' + this.format(cpx3) + ' ' + this.format(cpy3));\n\tthis.lastX = (cpx3 / s.scale) - s.dx;\n\tthis.lastY = (cpy3 / s.scale) - s.dy;\n\t\n};\n\n/**\n * Function: createRect\n * \n * Sets the glass gradient.\n */\nmxVmlCanvas2D.prototype.createRect = function(nodeName, x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createVmlElement(nodeName);\n\tn.style.position = 'absolute';\n\tn.style.left = this.format((x + s.dx) * s.scale) + 'px';\n\tn.style.top = this.format((y + s.dy) * s.scale) + 'px';\n\tn.style.width = this.format(w * s.scale) + 'px';\n\tn.style.height = this.format(h * s.scale) + 'px';\n\t\n\treturn n;\n};\n\n/**\n * Function: rect\n * \n * Sets the current path to a rectangle.\n */\nmxVmlCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tthis.node = this.createRect('rect', x, y, w, h);\n};\n\n/**\n * Function: roundrect\n * \n * Sets the current path to a rounded rectangle.\n */\nmxVmlCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tthis.node = this.createRect('roundrect', x, y, w, h);\n\t// SetAttribute needed here for IE8\n\tthis.node.setAttribute('arcsize', Math.max(dx * 100 / w, dy * 100 / h) + '%');\n};\n\n/**\n * Function: ellipse\n * \n * Sets the current path to an ellipse.\n */\nmxVmlCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tthis.node = this.createRect('oval', x, y, w, h);\n};\n\n/**\n * Function: image\n * \n * Paints an image.\n */\nmxVmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tvar node = null;\n\t\n\tif (!aspect)\n\t{\n\t\tnode = this.createRect('image', x, y, w, h);\n\t\tnode.src = src;\n\t}\n\telse\n\t{\n\t\t// Uses fill with aspect to avoid asynchronous update of size\n\t\tnode = this.createRect('rect', x, y, w, h);\n\t\tnode.stroked = 'false';\n\t\t\n\t\t// Handles image aspect via fill\n\t\tvar fill = this.createVmlElement('fill');\n\t\tfill.aspect = (aspect) ? 'atmost' : 'ignore';\n\t\tfill.rotate = 'true';\n\t\tfill.type = 'frame';\n\t\tfill.src = src;\n\n\t\tnode.appendChild(fill);\n\t}\n\t\n\tif (flipH && flipV)\n\t{\n\t\tnode.style.rotation = '180';\n\t}\n\telse if (flipH)\n\t{\n\t\tnode.style.flip = 'x';\n\t}\n\telse if (flipV)\n\t{\n\t\tnode.style.flip = 'y';\n\t}\n\t\n\tif (this.state.alpha < 1 || this.state.fillAlpha < 1)\n\t{\n\t\t// KNOWN: Borders around transparent images in IE<9. Using fill.opacity\n\t\t// fixes this problem by adding a white background in all IE versions.\n\t\tnode.style.filter += 'alpha(opacity=' + (this.state.alpha * this.state.fillAlpha * 100) + ')';\n\t}\n\n\tthis.root.appendChild(node);\n};\n\n/**\n * Function: createText\n * \n * Creates the innermost element that contains the HTML text.\n */\nmxVmlCanvas2D.prototype.createDiv = function(str, align, valign, overflow)\n{\n\tvar div = this.createElement('div');\n\tvar state = this.state;\n\n\tvar css = '';\n\t\n\tif (state.fontBackgroundColor != null)\n\t{\n\t\tcss += 'background-color:' + mxUtils.htmlEntities(state.fontBackgroundColor) + ';';\n\t}\n\t\n\tif (state.fontBorderColor != null)\n\t{\n\t\tcss += 'border:1px solid ' + mxUtils.htmlEntities(state.fontBorderColor) + ';';\n\t}\n\t\n\tif (mxUtils.isNode(str))\n\t{\n\t\tdiv.appendChild(str);\n\t}\n\telse\n\t{\n\t\tif (overflow != 'fill' && overflow != 'width')\n\t\t{\n\t\t\tvar div2 = this.createElement('div');\n\t\t\tdiv2.style.cssText = css;\n\t\t\tdiv2.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\tdiv2.style.zoom = '1';\n\t\t\tdiv2.style.textDecoration = 'inherit';\n\t\t\tdiv2.innerHTML = str;\n\t\t\tdiv.appendChild(div2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.style.cssText = css;\n\t\t\tdiv.innerHTML = str;\n\t\t}\n\t}\n\t\n\tvar style = div.style;\n\n\tstyle.fontSize = (state.fontSize / this.vmlScale) + 'px';\n\tstyle.fontFamily = state.fontFamily;\n\tstyle.color = state.fontColor;\n\tstyle.verticalAlign = 'top';\n\tstyle.textAlign = align || 'left';\n\tstyle.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (state.fontSize * mxConstants.LINE_HEIGHT / this.vmlScale) + 'px' : mxConstants.LINE_HEIGHT;\n\n\tif ((state.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle.fontWeight = 'bold';\n\t}\n\n\tif ((state.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle.fontStyle = 'italic';\n\t}\n\t\n\tif ((state.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle.textDecoration = 'underline';\n\t}\n\t\n\treturn div;\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for plain\n * text and html for HTML markup. Clipping, text background and border are not\n * supported for plain text in VML.\n */\nmxVmlCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\tvar s = this.state;\n\t\t\n\t\tif (format == 'html')\n\t\t{\n\t\t\tif (s.rotation != null)\n\t\t\t{\n\t\t\t\tvar pt = this.rotatePoint(x, y, s.rotation, s.rotationCx, s.rotationCy);\n\t\t\t\t\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\n\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tx += s.dx;\n\t\t\t\ty += s.dy;\n\t\t\t\t\n\t\t\t\t// Workaround for rendering offsets\n\t\t\t\tif (overflow != 'fill' && valign == mxConstants.ALIGN_TOP)\n\t\t\t\t{\n\t\t\t\t\ty -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx *= s.scale;\n\t\t\t\ty *= s.scale;\n\t\t\t}\n\n\t\t\t// Adds event transparency in IE8 standards without the transparent background\n\t\t\t// filter which cannot be used due to bugs in the zoomed bounding box (too slow)\n\t\t\t// FIXME: No event transparency if inside v:rect (ie part of shape)\n\t\t\t// KNOWN: Offset wrong for rotated text with word that are longer than the wrapping\n\t\t\t// width in IE8 because real width of text cannot be determined here.\n\t\t\t// This should be fixed in mxText.updateBoundingBox by calling before this and\n\t\t\t// passing the real width to this method if not clipped and wrapped.\n\t\t\tvar abs = (document.documentMode == 8 && !mxClient.IS_EM) ? this.createVmlElement('group') : this.createElement('div');\n\t\t\tabs.style.position = 'absolute';\n\t\t\tabs.style.display = 'inline';\n\t\t\tabs.style.left = this.format(x) + 'px';\n\t\t\tabs.style.top = this.format(y) + 'px';\n\t\t\tabs.style.zoom = s.scale;\n\n\t\t\tvar box = this.createElement('div');\n\t\t\tbox.style.position = 'relative';\n\t\t\tbox.style.display = 'inline';\n\t\t\t\n\t\t\tvar margin = mxUtils.getAlignmentAsPoint(align, valign);\n\t\t\tvar dx = margin.x;\n\t\t\tvar dy = margin.y;\n\n\t\t\tvar div = this.createDiv(str, align, valign, overflow);\n\t\t\tvar inner = this.createElement('div');\n\t\t\t\n\t\t\tif (dir != null)\n\t\t\t{\n\t\t\t\tdiv.setAttribute('dir', dir);\n\t\t\t}\n\n\t\t\tif (wrap && w > 0)\n\t\t\t{\n\t\t\t\tif (!clip)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.width = Math.round(w) + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdiv.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tdiv.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t\t\t// LATER: Check if other cases need to be handled\n\t\t\t\tif (div.style.wordWrap == 'break-word')\n\t\t\t\t{\n\t\t\t\t\tvar tmp = div;\n\t\t\t\t\t\n\t\t\t\t\tif (tmp.firstChild != null && tmp.firstChild.nodeName == 'DIV')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp.firstChild.style.width = '100%';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\t}\n\t\t\t\n\t\t\tvar rot = s.rotation + (rotation || 0);\n\t\t\t\n\t\t\tif (this.rotateHtml && rot != 0)\n\t\t\t{\n\t\t\t\tinner.style.display = 'inline';\n\t\t\t\tinner.style.zoom = '1';\n\t\t\t\tinner.appendChild(div);\n\n\t\t\t\t// Box not needed for rendering in IE8 standards\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM && this.root.nodeName != 'DIV')\n\t\t\t\t{\n\t\t\t\t\tbox.appendChild(inner);\n\t\t\t\t\tabs.appendChild(box);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tabs.appendChild(inner);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tbox.appendChild(div);\n\t\t\t\tabs.appendChild(box);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.style.display = 'inline';\n\t\t\t\tabs.appendChild(div);\n\t\t\t}\n\t\t\t\n\t\t\t// Inserts the node into the DOM\n\t\t\tif (this.root.nodeName != 'DIV')\n\t\t\t{\n\t\t\t\t// Rectangle to fix position in group\n\t\t\t\tvar rect = this.createVmlElement('rect');\n\t\t\t\trect.stroked = 'false';\n\t\t\t\trect.filled = 'false';\n\n\t\t\t\trect.appendChild(abs);\n\t\t\t\tthis.root.appendChild(rect);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.root.appendChild(abs);\n\t\t\t}\n\t\t\t\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = Math.round(w) + 'px';\n\t\t\t\t\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (overflow == 'fill')\n\t\t\t{\n\t\t\t\t// KNOWN: Affects horizontal alignment in quirks\n\t\t\t\t// but fill should only be used with align=left\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = (Math.max(0, w) + 1) + 'px';\n\t\t\t\tdiv.style.height = (Math.max(0, h) + 1) + 'px';\n\t\t\t}\n\t\t\telse if (overflow == 'width')\n\t\t\t{\n\t\t\t\t// KNOWN: Affects horizontal alignment in quirks\n\t\t\t\t// but fill should only be used with align=left\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = (Math.max(0, w) + 1) + 'px';\n\t\t\t\tdiv.style.maxHeight = (Math.max(0, h) + 1) + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (this.rotateHtml && rot != 0)\n\t\t\t{\n\t\t\t\tvar rad = rot * (Math.PI / 180);\n\t\t\t\t\n\t\t\t\t// Precalculate cos and sin for the rotation\n\t\t\t\tvar real_cos = parseFloat(parseFloat(Math.cos(rad)).toFixed(8));\n\t\t\t\tvar real_sin = parseFloat(parseFloat(Math.sin(-rad)).toFixed(8));\n\n\t\t\t\trad %= 2 * Math.PI;\n\t\t\t\tif (rad < 0) rad += 2 * Math.PI;\n\t\t\t\trad %= Math.PI;\n\t\t\t\tif (rad > Math.PI / 2) rad = Math.PI - rad;\n\t\t\t\t\n\t\t\t\tvar cos = Math.cos(rad);\n\t\t\t\tvar sin = Math.sin(rad);\n\n\t\t\t\t// Adds div to document to measure size\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.display = 'inline-block';\n\t\t\t\t\tinner.style.display = 'inline-block';\n\t\t\t\t\tbox.style.display = 'inline-block';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\tdiv.style.position = 'absolute';\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\n\t\t\t\tvar sizeDiv = div;\n\t\t\t\t\n\t\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar tmp = sizeDiv.offsetWidth + 3;\n\t\t\t\tvar oh = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tif (clip)\n\t\t\t\t{\n\t\t\t\t\tw = Math.min(w, tmp);\n\t\t\t\t\toh = Math.min(oh, h);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tw = tmp;\n\t\t\t\t}\n\n\t\t\t\t// Handles words that are longer than the given wrapping width\n\t\t\t\tif (wrap)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.width = w + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Simulates max-height in quirks\n\t\t\t\tif (mxClient.IS_QUIRKS && (clip || overflow == 'width') && oh > h)\n\t\t\t\t{\n\t\t\t\t\toh = h;\n\t\t\t\t\t\n\t\t\t\t\t// Quirks does not support maxHeight\n\t\t\t\t\tdiv.style.height = oh + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\th = oh;\n\n\t\t\t\tvar top_fix = (h - h * cos + w * -sin) / 2 - real_sin * w * (dx + 0.5) + real_cos * h * (dy + 0.5);\n\t\t\t\tvar left_fix = (w - w * cos + h * -sin) / 2 + real_cos * w * (dx + 0.5) + real_sin * h * (dy + 0.5);\n\n\t\t\t\tif (abs.nodeName == 'group' && this.root.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\t// Workaround for bug where group gets moved away if left and top are non-zero in IE8 standards\n\t\t\t\t\tvar pos = this.createElement('div');\n\t\t\t\t\tpos.style.display = 'inline-block';\n\t\t\t\t\tpos.style.position = 'absolute';\n\t\t\t\t\tpos.style.left = this.format(x + (left_fix - w / 2) * s.scale) + 'px';\n\t\t\t\t\tpos.style.top = this.format(y + (top_fix - h / 2) * s.scale) + 'px';\n\t\t\t\t\t\n\t\t\t\t\tabs.parentNode.appendChild(pos);\n\t\t\t\t\tpos.appendChild(abs);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar sc = (document.documentMode == 8 && !mxClient.IS_EM) ? 1 : s.scale;\n\t\t\t\t\t\n\t\t\t\t\tabs.style.left = this.format(x + (left_fix - w / 2) * sc) + 'px';\n\t\t\t\t\tabs.style.top = this.format(y + (top_fix - h / 2) * sc) + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// KNOWN: Rotated text rendering quality is bad for IE9 quirks\n\t\t\t\tinner.style.filter = \"progid:DXImageTransform.Microsoft.Matrix(M11=\"+real_cos+\", M12=\"+\n\t\t\t\t\treal_sin+\", M21=\"+(-real_sin)+\", M22=\"+real_cos+\", sizingMethod='auto expand')\";\n\t\t\t\tinner.style.backgroundColor = this.rotatedHtmlBackground;\n\t\t\t\t\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tinner.style.filter += 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\n\t\t\t\t// Restore parent node for DIV\n\t\t\t\tinner.appendChild(div);\n\t\t\t\tdiv.style.position = '';\n\t\t\t\tdiv.style.visibility = '';\n\t\t\t}\n\t\t\telse if (document.documentMode != 8 || mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tdiv.style.verticalAlign = 'top';\n\t\t\t\t\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tabs.style.filter = 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Adds div to document to measure size\n\t\t\t\tvar divParent = div.parentNode;\n\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\n\t\t\t\tw = div.offsetWidth;\n\t\t\t\tvar oh = div.offsetHeight;\n\t\t\t\t\n\t\t\t\t// Simulates max-height in quirks\n\t\t\t\tif (mxClient.IS_QUIRKS && clip && oh > h)\n\t\t\t\t{\n\t\t\t\t\toh = h;\n\t\t\t\t\t\n\t\t\t\t\t// Quirks does not support maxHeight\n\t\t\t\t\tdiv.style.height = oh + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\th = oh;\n\t\t\t\t\n\t\t\t\tdiv.style.visibility = '';\n\t\t\t\tdivParent.appendChild(div);\n\t\t\t\t\n\t\t\t\tabs.style.left = this.format(x + w * dx * this.state.scale) + 'px';\n\t\t\t\tabs.style.top = this.format(y + h * dy * this.state.scale) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.filter = 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Faster rendering in IE8 without offsetWidth/Height\n\t\t\t\tbox.style.left = (dx * 100) + '%';\n\t\t\t\tbox.style.top = (dy * 100) + '%';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.plainText(x, y, w, h, mxUtils.htmlEntities(str, false), align, valign, wrap, format, overflow, clip, rotation, dir);\n\t\t}\n\t}\n};\n\n/**\n * Function: plainText\n * \n * Paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.plainText = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\t// TextDirection is ignored since this code is not used (format is always HTML in the text function)\n\tvar s = this.state;\n\tx = (x + s.dx) * s.scale;\n\ty = (y + s.dy) * s.scale;\n\t\n\tvar node = this.createVmlElement('shape');\n\tnode.style.width = '1px';\n\tnode.style.height = '1px';\n\tnode.stroked = 'false';\n\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = s.fontColor;\n\tfill.opacity = (s.alpha * 100) + '%';\n\tnode.appendChild(fill);\n\t\n\tvar path = this.createVmlElement('path');\n\tpath.textpathok = 'true';\n\tpath.v = 'm ' + this.format(0) + ' ' + this.format(0) + ' l ' + this.format(1) + ' ' + this.format(0);\n\t\n\tnode.appendChild(path);\n\t\n\t// KNOWN: Font family and text decoration ignored\n\tvar tp = this.createVmlElement('textpath');\n\ttp.style.cssText = 'v-text-align:' + align;\n\ttp.style.align = align;\n\ttp.style.fontFamily = s.fontFamily;\n\ttp.string = str;\n\ttp.on = 'true';\n\t\n\t// Scale via fontsize instead of node.style.zoom for correct offsets in IE8\n\tvar size = s.fontSize * s.scale / this.vmlScale;\n\ttp.style.fontSize = size + 'px';\n\t\n\t// Bold\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\ttp.style.fontWeight = 'bold';\n\t}\n\t\n\t// Italic\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\ttp.style.fontStyle = 'italic';\n\t}\n\n\t// Underline\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\ttp.style.textDecoration = 'underline';\n\t}\n\n\tvar lines = str.split('\\n');\n\tvar textHeight = size + (lines.length - 1) * size * mxConstants.LINE_HEIGHT;\n\tvar dx = 0;\n\tvar dy = 0;\n\n\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tdy = - textHeight / 2;\n\t}\n\telse if (valign != mxConstants.ALIGN_MIDDLE) // top\n\t{\n\t\tdy = textHeight / 2;\n\t}\n\n\tif (rotation != null)\n\t{\n\t\tnode.style.rotation = rotation;\n\t\tvar rad = rotation * (Math.PI / 180);\n\t\tdx = Math.sin(rad) * dy;\n\t\tdy = Math.cos(rad) * dy;\n\t}\n\n\t// FIXME: Clipping is relative to bounding box\n\t/*if (clip)\n\t{\n\t\tnode.style.clip = 'rect(0px ' + this.format(w) + 'px ' + this.format(h) + 'px 0px)';\n\t}*/\n\t\n\tnode.appendChild(tp);\n\tnode.style.left = this.format(x - dx) + 'px';\n\tnode.style.top = this.format(y + dy) + 'px';\n\t\n\tthis.root.appendChild(node);\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.stroke = function()\n{\n\tthis.addNode(false, true);\n};\n\n/**\n * Function: fill\n * \n * Fills the current path.\n */\nmxVmlCanvas2D.prototype.fill = function()\n{\n\tthis.addNode(true, false);\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills and paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.addNode(true, true);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGuide\n *\n * Implements the alignment of selection cells to other cells in the graph.\n * \n * Constructor: mxGuide\n * \n * Constructs a new guide object.\n */\nfunction mxGuide(graph, states)\n{\n\tthis.graph = graph;\n\tthis.setStates(states);\n};\n\n/**\n * Variable: graph\n *\n * Reference to the enclosing <mxGraph> instance.\n */\nmxGuide.prototype.graph = null;\n\n/**\n * Variable: states\n * \n * Contains the <mxCellStates> that are used for alignment.\n */\nmxGuide.prototype.states = null;\n\n/**\n * Variable: horizontal\n *\n * Specifies if horizontal guides are enabled. Default is true.\n */\nmxGuide.prototype.horizontal = true;\n\n/**\n * Variable: vertical\n *\n * Specifies if vertical guides are enabled. Default is true.\n */\nmxGuide.prototype.vertical = true;\n\n/**\n * Variable: vertical\n *\n * Holds the <mxShape> for the horizontal guide.\n */\nmxGuide.prototype.guideX = null;\n\n/**\n * Variable: vertical\n *\n * Holds the <mxShape> for the vertical guide.\n */\nmxGuide.prototype.guideY = null;\n\n/**\n * Variable: rounded\n *\n * Specifies if rounded coordinates should be used. Default is false.\n */\nmxGuide.prototype.rounded = false;\n\n/**\n * Function: setStates\n * \n * Sets the <mxCellStates> that should be used for alignment.\n */\nmxGuide.prototype.setStates = function(states)\n{\n\tthis.states = states;\n};\n\n/**\n * Function: isEnabledForEvent\n * \n * Returns true if the guide should be enabled for the given native event. This\n * implementation always returns true.\n */\nmxGuide.prototype.isEnabledForEvent = function(evt)\n{\n\treturn true;\n};\n\n/**\n * Function: getGuideTolerance\n * \n * Returns the tolerance for the guides. Default value is gridSize / 2.\n */\nmxGuide.prototype.getGuideTolerance = function()\n{\n\treturn this.graph.gridSize / 2;\n};\n\n/**\n * Function: createGuideShape\n * \n * Returns the mxShape to be used for painting the respective guide. This\n * implementation returns a new, dashed and crisp <mxPolyline> using\n * <mxConstants.GUIDE_COLOR> and <mxConstants.GUIDE_STROKEWIDTH> as the format.\n * \n * Parameters:\n * \n * horizontal - Boolean that specifies which guide should be created.\n */\nmxGuide.prototype.createGuideShape = function(horizontal)\n{\n\tvar guide = new mxPolyline([], mxConstants.GUIDE_COLOR, mxConstants.GUIDE_STROKEWIDTH);\n\tguide.isDashed = true;\n\t\n\treturn guide;\n};\n\n/**\n * Function: isStateIgnored\n * \n * Returns true if the given state should be ignored.\n */\nmxGuide.prototype.isStateIgnored = function(state)\n{\n\treturn false;\n};\n\n/**\n * Function: move\n * \n * Moves the <bounds> by the given <mxPoint> and returnt the snapped point.\n */\nmxGuide.prototype.move = function(bounds, delta, gridEnabled, clone)\n{\n\tif (this.states != null && (this.horizontal || this.vertical) && bounds != null && delta != null)\n\t{\n\t\tvar trx = this.graph.getView().translate;\n\t\tvar scale = this.graph.getView().scale;\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\t\n\t\tvar overrideX = false;\n\t\tvar stateX = null;\n\t\tvar valueX = null;\n\t\tvar overrideY = false;\n\t\tvar stateY = null;\n\t\tvar valueY = null;\n\t\t\n\t\tvar tt = this.getGuideTolerance();\n\t\tvar ttX = tt;\n\t\tvar ttY = tt;\n\t\t\n\t\tvar b = bounds.clone();\n\t\tb.x += delta.x;\n\t\tb.y += delta.y;\n\t\t\n\t\tvar left = b.x;\n\t\tvar right = b.x + b.width;\n\t\tvar center = b.getCenterX();\n\t\tvar top = b.y;\n\t\tvar bottom = b.y + b.height;\n\t\tvar middle = b.getCenterY();\n\t\n\t\t// Snaps the left, center and right to the given x-coordinate\n\t\tfunction snapX(x, state)\n\t\t{\n\t\t\tx += this.graph.panDx;\n\t\t\tvar override = false;\n\t\t\t\n\t\t\tif (Math.abs(x - center) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.getCenterX();\n\t\t\t\tttX = Math.abs(x - center);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(x - left) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.x;\n\t\t\t\tttX = Math.abs(x - left);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(x - right) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.x - bounds.width;\n\t\t\t\tttX = Math.abs(x - right);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (override)\n\t\t\t{\n\t\t\t\tstateX = state;\n\t\t\t\tvalueX = Math.round(x - this.graph.panDx);\n\t\t\t\t\n\t\t\t\tif (this.guideX == null)\n\t\t\t\t{\n\t\t\t\t\tthis.guideX = this.createGuideShape(true);\n\t\t\t\t\t\n\t\t\t\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t\t\t\t// event-transparency on the background area of the rectangle since\n\t\t\t\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\t\t\t\tthis.guideX.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.guideX.pointerEvents = false;\n\t\t\t\t\tthis.guideX.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toverrideX = overrideX || override;\n\t\t};\n\t\t\n\t\t// Snaps the top, middle or bottom to the given y-coordinate\n\t\tfunction snapY(y, state)\n\t\t{\n\t\t\ty += this.graph.panDy;\n\t\t\tvar override = false;\n\t\t\t\n\t\t\tif (Math.abs(y - middle) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.getCenterY();\n\t\t\t\tttY = Math.abs(y -  middle);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(y - top) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.y;\n\t\t\t\tttY = Math.abs(y - top);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(y - bottom) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.y - bounds.height;\n\t\t\t\tttY = Math.abs(y - bottom);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (override)\n\t\t\t{\n\t\t\t\tstateY = state;\n\t\t\t\tvalueY = Math.round(y - this.graph.panDy);\n\t\t\t\t\n\t\t\t\tif (this.guideY == null)\n\t\t\t\t{\n\t\t\t\t\tthis.guideY = this.createGuideShape(false);\n\t\t\t\t\t\n\t\t\t\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t\t\t\t// event-transparency on the background area of the rectangle since\n\t\t\t\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\t\t\t\tthis.guideY.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.guideY.pointerEvents = false;\n\t\t\t\t\tthis.guideY.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toverrideY = overrideY || override;\n\t\t};\n\t\t\n\t\tfor (var i = 0; i < this.states.length; i++)\n\t\t{\n\t\t\tvar state =  this.states[i];\n\t\t\t\n\t\t\tif (state != null && !this.isStateIgnored(state))\n\t\t\t{\n\t\t\t\t// Align x\n\t\t\t\tif (this.horizontal)\n\t\t\t\t{\n\t\t\t\t\tsnapX.call(this, state.getCenterX(), state);\n\t\t\t\t\tsnapX.call(this, state.x, state);\n\t\t\t\t\tsnapX.call(this, state.x + state.width, state);\n\t\t\t\t}\n\t\n\t\t\t\t// Align y\n\t\t\t\tif (this.vertical)\n\t\t\t\t{\n\t\t\t\t\tsnapY.call(this, state.getCenterY(), state);\n\t\t\t\t\tsnapY.call(this, state.y, state);\n\t\t\t\t\tsnapY.call(this, state.y + state.height, state);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Moves cells that are off-grid back to the grid on move\n\t\tif (gridEnabled)\n\t\t{\n\t\t\tif (!overrideX)\n\t\t\t{\n\t\t\t\tvar tx = bounds.x - (this.graph.snap(bounds.x /\n\t\t\t\t\tscale - trx.x) + trx.x) * scale;\n\t\t\t\tdx = this.graph.snap(dx / scale) * scale - tx;\n\t\t\t}\n\t\t\t\n\t\t\tif (!overrideY)\n\t\t\t{\n\t\t\t\tvar ty = bounds.y - (this.graph.snap(bounds.y /\n\t\t\t\t\tscale - trx.y) + trx.y) * scale;\n\t\t\t\tdy = this.graph.snap(dy / scale) * scale - ty;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Redraws the guides\n\t\tvar c = this.graph.container;\n\t\t\n\t\tif (!overrideX && this.guideX != null)\n\t\t{\n\t\t\tthis.guideX.node.style.visibility = 'hidden';\n\t\t}\n\t\telse if (this.guideX != null)\n\t\t{\n\t\t\tvar minY = null;\n        \tvar maxY = null;\n        \t\n\t\t\tif (stateX != null && bounds != null)\n\t\t\t{\n\t\t\t\tminY = Math.min(bounds.y + dy - this.graph.panDy, stateX.y);\n\t\t\t\tmaxY = Math.max(bounds.y + bounds.height + dy - this.graph.panDy, stateX.y + stateX.height);\n\t\t\t}\n\t\t\t\n\t\t\tif (minY != null && maxY != null)\n\t\t\t{\n\t\t\t\tthis.guideX.points = [new mxPoint(valueX, minY), new mxPoint(valueX, maxY)];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.guideX.points = [new mxPoint(valueX, -this.graph.panDy), new mxPoint(valueX, c.scrollHeight - 3 - this.graph.panDy)];\n\t\t\t}\n\t\t\t\n\t\t\tthis.guideX.stroke = this.getGuideColor(stateX, true);\n\t\t\tthis.guideX.node.style.visibility = 'visible';\n\t\t\tthis.guideX.redraw();\n\t\t}\n\t\t\n\t\tif (!overrideY && this.guideY != null)\n\t\t{\n\t\t\tthis.guideY.node.style.visibility = 'hidden';\n\t\t}\n\t\telse if (this.guideY != null)\n\t\t{\n\t\t\tvar minX = null;\n        \tvar maxX = null;\n        \t\n\t\t\tif (stateY != null && bounds != null)\n\t\t\t{\n\t\t\t\tminX = Math.min(bounds.x + dx - this.graph.panDx, stateY.x);\n\t\t\t\tmaxX = Math.max(bounds.x + bounds.width + dx - this.graph.panDx, stateY.x + stateY.width);\n\t\t\t}\n\t\t\t\n\t\t\tif (minX != null && maxX != null)\n\t\t\t{\n\t\t\t\tthis.guideY.points = [new mxPoint(minX, valueY), new mxPoint(maxX, valueY)];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.guideY.points = [new mxPoint(-this.graph.panDx, valueY), new mxPoint(c.scrollWidth - 3 - this.graph.panDx, valueY)];\n\t\t\t}\n\t\t\t\n\t\t\tthis.guideY.stroke = this.getGuideColor(stateY, false);\n\t\t\tthis.guideY.node.style.visibility = 'visible';\n\t\t\tthis.guideY.redraw();\n\t\t}\n\n\t\tdelta = this.getDelta(bounds, stateX, dx, stateY, dy)\n\t}\n\t\n\treturn delta;\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.getDelta = function(bounds, stateX, dx, stateY, dy)\n{\n\t// Round to pixels for virtual states (eg. page guides)\n\tif (this.rounded || (stateX != null && stateX.cell == null))\n\t{\n\t\tdx = Math.floor(bounds.x + dx) - bounds.x;\n\t}\n\n\tif (this.rounded || (stateY != null && stateY.cell == null))\n\t{\n\t\tdy = Math.floor(bounds.y + dy) - bounds.y;\n\t}\n\t\n\treturn new mxPoint(dx, dy);\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.getGuideColor = function(state, horizontal)\n{\n\treturn mxConstants.GUIDE_COLOR;\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.hide = function()\n{\n\tthis.setVisible(false);\n};\n\n/**\n * Function: setVisible\n * \n * Shows or hides the current guides.\n */\nmxGuide.prototype.setVisible = function(visible)\n{\n\tif (this.guideX != null)\n\t{\n\t\tthis.guideX.node.style.visibility = (visible) ? 'visible' : 'hidden';\n\t}\n\t\n\tif (this.guideY != null)\n\t{\n\t\tthis.guideY.node.style.visibility = (visible) ? 'visible' : 'hidden';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys all resources that this object uses.\n */\nmxGuide.prototype.destroy = function()\n{\n\tif (this.guideX != null)\n\t{\n\t\tthis.guideX.destroy();\n\t\tthis.guideX = null;\n\t}\n\t\n\tif (this.guideY != null)\n\t{\n\t\tthis.guideY.destroy();\n\t\tthis.guideY = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxShape\n *\n * Base class for all shapes. A shape in mxGraph is a\n * separate implementation for SVG, VML and HTML. Which\n * implementation to use is controlled by the <dialect>\n * property which is assigned from within the <mxCellRenderer>\n * when the shape is created. The dialect must be assigned\n * for a shape, and it does normally depend on the browser and\n * the confiuration of the graph (see <mxGraph> rendering hint).\n *\n * For each supported shape in SVG and VML, a corresponding\n * shape exists in mxGraph, namely for text, image, rectangle,\n * rhombus, ellipse and polyline. The other shapes are a\n * combination of these shapes (eg. label and swimlane)\n * or they consist of one or more (filled) path objects\n * (eg. actor and cylinder). The HTML implementation is\n * optional but may be required for a HTML-only view of\n * the graph.\n *\n * Custom Shapes:\n *\n * To extend from this class, the basic code looks as follows.\n * In the special case where the custom shape consists only of\n * one filled region or one filled region and an additional stroke\n * the <mxActor> and <mxCylinder> should be subclassed,\n * respectively.\n *\n * (code)\n * function CustomShape() { }\n * \n * CustomShape.prototype = new mxShape();\n * CustomShape.prototype.constructor = CustomShape; \n * (end)\n *\n * To register a custom shape in an existing graph instance,\n * one must register the shape under a new name in the graph's\n * cell renderer as follows:\n *\n * (code)\n * mxCellRenderer.registerShape('customShape', CustomShape);\n * (end)\n *\n * The second argument is the name of the constructor.\n *\n * In order to use the shape you can refer to the given name above\n * in a stylesheet. For example, to change the shape for the default\n * vertex style, the following code is used:\n *\n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = 'customShape';\n * (end)\n * \n * Constructor: mxShape\n *\n * Constructs a new shape.\n */\nfunction mxShape(stencil)\n{\n\tthis.stencil = stencil;\n\tthis.initStyles();\n};\n\n/**\n * Variable: dialect\n *\n * Holds the dialect in which the shape is to be painted.\n * This can be one of the DIALECT constants in <mxConstants>.\n */\nmxShape.prototype.dialect = null;\n\n/**\n * Variable: scale\n *\n * Holds the scale in which the shape is being painted.\n */\nmxShape.prototype.scale = 1;\n\n/**\n * Variable: antiAlias\n * \n * Rendering hint for configuring the canvas.\n */\nmxShape.prototype.antiAlias = true;\n\n/**\n * Variable: minSvgStrokeWidth\n * \n * Minimum stroke width for SVG output.\n */\nmxShape.prototype.minSvgStrokeWidth = 1;\n\n/**\n * Variable: bounds\n *\n * Holds the <mxRectangle> that specifies the bounds of this shape.\n */\nmxShape.prototype.bounds = null;\n\n/**\n * Variable: points\n *\n * Holds the array of <mxPoints> that specify the points of this shape.\n */\nmxShape.prototype.points = null;\n\n/**\n * Variable: node\n *\n * Holds the outermost DOM node that represents this shape.\n */\nmxShape.prototype.node = null;\n \n/**\n * Variable: state\n * \n * Optional reference to the corresponding <mxCellState>.\n */\nmxShape.prototype.state = null;\n\n/**\n * Variable: style\n *\n * Optional reference to the style of the corresponding <mxCellState>.\n */\nmxShape.prototype.style = null;\n\n/**\n * Variable: boundingBox\n *\n * Contains the bounding box of the shape, that is, the smallest rectangle\n * that includes all pixels of the shape.\n */\nmxShape.prototype.boundingBox = null;\n\n/**\n * Variable: stencil\n *\n * Holds the <mxStencil> that defines the shape.\n */\nmxShape.prototype.stencil = null;\n\n/**\n * Variable: svgStrokeTolerance\n *\n * Event-tolerance for SVG strokes (in px). Default is 8. This is only passed\n * to the canvas in <createSvgCanvas> if <pointerEvents> is true.\n */\nmxShape.prototype.svgStrokeTolerance = 8;\n\n/**\n * Variable: pointerEvents\n * \n * Specifies if pointer events should be handled. Default is true.\n */\nmxShape.prototype.pointerEvents = true;\n\n/**\n * Variable: svgPointerEvents\n * \n * Specifies if pointer events should be handled. Default is true.\n */\nmxShape.prototype.svgPointerEvents = 'all';\n\n/**\n * Variable: shapePointerEvents\n * \n * Specifies if pointer events outside of shape should be handled. Default\n * is false.\n */\nmxShape.prototype.shapePointerEvents = false;\n\n/**\n * Variable: stencilPointerEvents\n * \n * Specifies if pointer events outside of stencils should be handled. Default\n * is false. Set this to true for backwards compatibility with the 1.x branch.\n */\nmxShape.prototype.stencilPointerEvents = false;\n\n/**\n * Variable: vmlScale\n * \n * Scale for improving the precision of VML rendering. Default is 1.\n */\nmxShape.prototype.vmlScale = 1;\n\n/**\n * Variable: outline\n * \n * Specifies if the shape should be drawn as an outline. This disables all\n * fill colors and can be used to disable other drawing states that should\n * not be painted for outlines. Default is false. This should be set before\n * calling <apply>.\n */\nmxShape.prototype.outline = false;\n\n/**\n * Variable: visible\n * \n * Specifies if the shape is visible. Default is true.\n */\nmxShape.prototype.visible = true;\n\n/**\n * Variable: useSvgBoundingBox\n * \n * Allows to use the SVG bounding box in SVG. Default is false for performance\n * reasons.\n */\nmxShape.prototype.useSvgBoundingBox = false;\n\n/**\n * Function: init\n *\n * Initializes the shape by creaing the DOM node using <create>\n * and adding it into the given container.\n *\n * Parameters:\n *\n * container - DOM node that will contain the shape.\n */\nmxShape.prototype.init = function(container)\n{\n\tif (this.node == null)\n\t{\n\t\tthis.node = this.create(container);\n\t\t\n\t\tif (container != null)\n\t\t{\n\t\t\tcontainer.appendChild(this.node);\n\t\t}\n\t}\n};\n\n/**\n * Function: initStyles\n *\n * Sets the styles to their default values.\n */\nmxShape.prototype.initStyles = function(container)\n{\n\tthis.strokewidth = 1;\n\tthis.rotation = 0;\n\tthis.opacity = 100;\n\tthis.fillOpacity = 100;\n\tthis.strokeOpacity = 100;\n\tthis.flipH = false;\n\tthis.flipV = false;\n};\n\n/**\n * Function: isParseVml\n * \n * Specifies if any VML should be added via insertAdjacentHtml to the DOM. This\n * is only needed in IE8 and only if the shape contains VML markup. This method\n * returns true.\n */\nmxShape.prototype.isParseVml = function()\n{\n\treturn true;\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation always\n * returns false.\n */\nmxShape.prototype.isHtmlAllowed = function()\n{\n\treturn false;\n};\n\n/**\n * Function: getSvgScreenOffset\n * \n * Returns 0, or 0.5 if <strokewidth> % 2 == 1.\n */\nmxShape.prototype.getSvgScreenOffset = function()\n{\n\tvar sw = this.stencil && this.stencil.strokewidth != 'inherit' ? Number(this.stencil.strokewidth) : this.strokewidth;\n\t\n\treturn (mxUtils.mod(Math.max(1, Math.round(sw * this.scale)), 2) == 1) ? 0.5 : 0;\n};\n\n/**\n * Function: create\n *\n * Creates and returns the DOM node(s) for the shape in\n * the given container. This implementation invokes\n * <createSvg>, <createHtml> or <createVml> depending\n * on the <dialect> and style settings.\n *\n * Parameters:\n *\n * container - DOM node that will contain the shape.\n */\nmxShape.prototype.create = function(container)\n{\n\tvar node = null;\n\t\n\tif (container != null && container.ownerSVGElement != null)\n\t{\n\t\tnode = this.createSvg(container);\n\t}\n\telse if (document.documentMode == 8 || !mxClient.IS_VML ||\n\t\t(this.dialect != mxConstants.DIALECT_VML && this.isHtmlAllowed()))\n\t{\n\t\tnode = this.createHtml(container);\n\t}\n\telse\n\t{\n\t\tnode = this.createVml(container);\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: createSvg\n *\n * Creates and returns the SVG node(s) to represent this shape.\n */\nmxShape.prototype.createSvg = function()\n{\n\treturn document.createElementNS(mxConstants.NS_SVG, 'g');\n};\n\n/**\n * Function: createVml\n *\n * Creates and returns the VML node to represent this shape.\n */\nmxShape.prototype.createVml = function()\n{\n\tvar node = document.createElement(mxClient.VML_PREFIX + ':group');\n\tnode.style.position = 'absolute';\n\t\n\treturn node;\n};\n\n/**\n * Function: createHtml\n *\n * Creates and returns the HTML DOM node(s) to represent\n * this shape. This implementation falls back to <createVml>\n * so that the HTML creation is optional.\n */\nmxShape.prototype.createHtml = function()\n{\n\tvar node = document.createElement('div');\n\tnode.style.position = 'absolute';\n\t\n\treturn node;\n};\n\n/**\n * Function: reconfigure\n *\n * Reconfigures this shape. This will update the colors etc in\n * addition to the bounds or points.\n */\nmxShape.prototype.reconfigure = function()\n{\n\tthis.redraw();\n};\n\n/**\n * Function: redraw\n *\n * Creates and returns the SVG node(s) to represent this shape.\n */\nmxShape.prototype.redraw = function()\n{\n\tthis.updateBoundsFromPoints();\n\t\n\tif (this.visible && this.checkBounds())\n\t{\n\t\tthis.node.style.visibility = 'visible';\n\t\tthis.clear();\n\t\t\n\t\tif (this.node.nodeName == 'DIV' && (this.isHtmlAllowed() || !mxClient.IS_VML))\n\t\t{\n\t\t\tthis.redrawHtmlShape();\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tthis.redrawShape();\n\t\t}\n\n\t\tthis.updateBoundingBox();\n\t}\n\telse\n\t{\n\t\tthis.node.style.visibility = 'hidden';\n\t\tthis.boundingBox = null;\n\t}\n};\n\n/**\n * Function: clear\n * \n * Removes all child nodes and resets all CSS.\n */\nmxShape.prototype.clear = function()\n{\n\tif (this.node.ownerSVGElement != null)\n\t{\n\t\twhile (this.node.lastChild != null)\n\t\t{\n\t\t\tthis.node.removeChild(this.node.lastChild);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.node.style.cssText = 'position:absolute;' + ((this.cursor != null) ?\n\t\t\t('cursor:' + this.cursor + ';') : '');\n\t\tthis.node.innerHTML = '';\n\t}\n};\n\n/**\n * Function: updateBoundsFromPoints\n * \n * Updates the bounds based on the points.\n */\nmxShape.prototype.updateBoundsFromPoints = function()\n{\n\tvar pts = this.points;\n\t\n\tif (pts != null && pts.length > 0 && pts[0] != null)\n\t{\n\t\tthis.bounds = new mxRectangle(Number(pts[0].x), Number(pts[0].y), 1, 1);\n\t\t\n\t\tfor (var i = 1; i < this.points.length; i++)\n\t\t{\n\t\t\tif (pts[i] != null)\n\t\t\t{\n\t\t\t\tthis.bounds.add(new mxRectangle(Number(pts[i].x), Number(pts[i].y), 1, 1));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the <mxRectangle> for the label bounds of this shape, based on the\n * given scaled and translated bounds of the shape. This method should not\n * change the rectangle in-place. This implementation returns the given rect.\n */\nmxShape.prototype.getLabelBounds = function(rect)\n{\n\tvar d = mxUtils.getValue(this.style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\tvar bounds = rect;\n\t\n\t// Normalizes argument for getLabelMargins hook\n\tif (d != mxConstants.DIRECTION_SOUTH && d != mxConstants.DIRECTION_NORTH &&\n\t\tthis.state != null && this.state.text != null &&\n\t\tthis.state.text.isPaintBoundsInverted())\n\t{\n\t\tbounds = bounds.clone();\n\t\tvar tmp = bounds.width;\n\t\tbounds.width = bounds.height;\n\t\tbounds.height = tmp;\n\t}\n\t\t\n\tvar m = this.getLabelMargins(bounds);\n\t\n\tif (m != null)\n\t{\n\t\tvar flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, false) == '1';\n\t\tvar flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, false) == '1';\n\t\t\n\t\t// Handles special case for vertical labels\n\t\tif (this.state != null && this.state.text != null &&\n\t\t\tthis.state.text.isPaintBoundsInverted())\n\t\t{\n\t\t\tvar tmp = m.x;\n\t\t\tm.x = m.height;\n\t\t\tm.height = m.width;\n\t\t\tm.width = m.y;\n\t\t\tm.y = tmp;\n\n\t\t\ttmp = flipH;\n\t\t\tflipH = flipV;\n\t\t\tflipV = tmp;\n\t\t}\n\t\t\n\t\treturn mxUtils.getDirectedBounds(rect, m, this.style, flipH, flipV);\n\t}\n\t\n\treturn rect;\n};\n\n/**\n * Function: getLabelMargins\n * \n * Returns the scaled top, left, bottom and right margin to be used for\n * computing the label bounds as an <mxRectangle>, where the bottom and right\n * margin are defined in the width and height of the rectangle, respectively.\n */\nmxShape.prototype.getLabelMargins= function(rect)\n{\n\treturn null;\n};\n\n/**\n * Function: checkBounds\n * \n * Returns true if the bounds are not null and all of its variables are numeric.\n */\nmxShape.prototype.checkBounds = function()\n{\n\treturn (!isNaN(this.scale) && isFinite(this.scale) && this.scale > 0 &&\n\t\t\tthis.bounds != null && !isNaN(this.bounds.x) && !isNaN(this.bounds.y) &&\n\t\t\t!isNaN(this.bounds.width) && !isNaN(this.bounds.height) &&\n\t\t\tthis.bounds.width > 0 && this.bounds.height > 0);\n};\n\n/**\n * Function: createVmlGroup\n *\n * Returns the temporary element used for rendering in IE8 standards mode.\n */\nmxShape.prototype.createVmlGroup = function()\n{\n\tvar node = document.createElement(mxClient.VML_PREFIX + ':group');\n\tnode.style.position = 'absolute';\n\tnode.style.width = this.node.style.width;\n\tnode.style.height = this.node.style.height;\n\t\n\treturn node;\n};\n\n/**\n * Function: redrawShape\n *\n * Updates the SVG or VML shape.\n */\nmxShape.prototype.redrawShape = function()\n{\n\tvar canvas = this.createCanvas();\n\t\n\tif (canvas != null)\n\t{\n\t\t// Specifies if events should be handled\n\t\tcanvas.pointerEvents = this.pointerEvents;\n\t\n\t\tthis.paint(canvas);\n\t\n\t\tif (this.node != canvas.root)\n\t\t{\n\t\t\t// Forces parsing in IE8 standards mode - slow! avoid\n\t\t\tthis.node.insertAdjacentHTML('beforeend', canvas.root.outerHTML);\n\t\t}\n\t\n\t\tif (this.node.nodeName == 'DIV' && document.documentMode == 8)\n\t\t{\n\t\t\t// Makes DIV transparent to events for IE8 in IE8 standards\n\t\t\t// mode (Note: Does not work for IE9 in IE8 standards mode\n\t\t\t// and not for IE11 in enterprise mode)\n\t\t\tthis.node.style.filter = '';\n\t\t\t\n\t\t\t// Adds event transparency in IE8 standards\n\t\t\tmxUtils.addTransparentBackgroundFilter(this.node);\n\t\t}\n\t\t\n\t\tthis.destroyCanvas(canvas);\n\t}\n};\n\n/**\n * Function: createCanvas\n * \n * Creates a new canvas for drawing this shape. May return null.\n */\nmxShape.prototype.createCanvas = function()\n{\n\tvar canvas = null;\n\t\n\t// LATER: Check if reusing existing DOM nodes improves performance\n\tif (this.node.ownerSVGElement != null)\n\t{\n\t\tcanvas = this.createSvgCanvas();\n\t}\n\telse if (mxClient.IS_VML)\n\t{\n\t\tthis.updateVmlContainer();\n\t\tcanvas = this.createVmlCanvas();\n\t}\n\t\n\tif (canvas != null && this.outline)\n\t{\n\t\tcanvas.setStrokeWidth(this.strokewidth);\n\t\tcanvas.setStrokeColor(this.stroke);\n\t\t\n\t\tif (this.isDashed != null)\n\t\t{\n\t\t\tcanvas.setDashed(this.isDashed);\n\t\t}\n\t\t\n\t\tcanvas.setStrokeWidth = function() {};\n\t\tcanvas.setStrokeColor = function() {};\n\t\tcanvas.setFillColor = function() {};\n\t\tcanvas.setGradient = function() {};\n\t\tcanvas.setDashed = function() {};\n\t\tcanvas.text = function() {};\n\t}\n\n\treturn canvas;\n};\n\n/**\n * Function: createSvgCanvas\n * \n * Creates and returns an <mxSvgCanvas2D> for rendering this shape.\n */\nmxShape.prototype.createSvgCanvas = function()\n{\n\tvar canvas = new mxSvgCanvas2D(this.node, false);\n\tcanvas.strokeTolerance = (this.pointerEvents) ? this.svgStrokeTolerance : 0;\n\tcanvas.pointerEventsValue = this.svgPointerEvents;\n\tcanvas.blockImagePointerEvents = mxClient.IS_FF;\n\tvar off = this.getSvgScreenOffset();\n\n\tif (off != 0)\n\t{\n\t\tthis.node.setAttribute('transform', 'translate(' + off + ',' + off + ')');\n\t}\n\telse\n\t{\n\t\tthis.node.removeAttribute('transform');\n\t}\n\n\tcanvas.minStrokeWidth = this.minSvgStrokeWidth;\n\t\n\tif (!this.antiAlias)\n\t{\n\t\t// Rounds all numbers in the SVG output to integers\n\t\tcanvas.format = function(value)\n\t\t{\n\t\t\treturn Math.round(parseFloat(value));\n\t\t};\n\t}\n\t\n\treturn canvas;\n};\n\n/**\n * Function: createVmlCanvas\n * \n * Creates and returns an <mxVmlCanvas2D> for rendering this shape.\n */\nmxShape.prototype.createVmlCanvas = function()\n{\n\t// Workaround for VML rendering bug in IE8 standards mode\n\tvar node = (document.documentMode == 8 && this.isParseVml()) ? this.createVmlGroup() : this.node;\n\tvar canvas = new mxVmlCanvas2D(node, false);\n\t\n\tif (node.tagUrn != '')\n\t{\n\t\tvar w = Math.max(1, Math.round(this.bounds.width));\n\t\tvar h = Math.max(1, Math.round(this.bounds.height));\n\t\tnode.coordsize = (w * this.vmlScale) + ',' + (h * this.vmlScale);\n\t\tcanvas.scale(this.vmlScale);\n\t\tcanvas.vmlScale = this.vmlScale;\n\t}\n\n\t// Painting relative to top, left shape corner\n\tvar s = this.scale;\n\tcanvas.translate(-Math.round(this.bounds.x / s), -Math.round(this.bounds.y / s));\n\t\n\treturn canvas;\n};\n\n/**\n * Function: updateVmlContainer\n * \n * Updates the bounds of the VML container.\n */\nmxShape.prototype.updateVmlContainer = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tvar w = Math.max(1, Math.round(this.bounds.width));\n\tvar h = Math.max(1, Math.round(this.bounds.height));\n\tthis.node.style.width = w + 'px';\n\tthis.node.style.height = h + 'px';\n\tthis.node.style.overflow = 'visible';\n};\n\n/**\n * Function: redrawHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.redrawHtmlShape = function()\n{\n\t// LATER: Refactor methods\n\tthis.updateHtmlBounds(this.node);\n\tthis.updateHtmlFilters(this.node);\n\tthis.updateHtmlColors(this.node);\n};\n\n/**\n * Function: updateHtmlFilters\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlFilters = function(node)\n{\n\tvar f = '';\n\t\n\tif (this.opacity < 100)\n\t{\n\t\tf += 'alpha(opacity=' + (this.opacity) + ')';\n\t}\n\t\n\tif (this.isShadow)\n\t{\n\t\t// FIXME: Cannot implement shadow transparency with filter\n\t\tf += 'progid:DXImageTransform.Microsoft.dropShadow (' +\n\t\t\t'OffX=\\'' + Math.round(mxConstants.SHADOW_OFFSET_X * this.scale) + '\\', ' +\n\t\t\t'OffY=\\'' + Math.round(mxConstants.SHADOW_OFFSET_Y * this.scale) + '\\', ' +\n\t\t\t'Color=\\'' + mxConstants.VML_SHADOWCOLOR + '\\')';\n\t}\n\t\n\tif (this.fill != null && this.fill != mxConstants.NONE && this.gradient && this.gradient != mxConstants.NONE)\n\t{\n\t\tvar start = this.fill;\n\t\tvar end = this.gradient;\n\t\tvar type = '0';\n\t\t\n\t\tvar lookup = {east:0,south:1,west:2,north:3};\n\t\tvar dir = (this.direction != null) ? lookup[this.direction] : 0;\n\t\t\n\t\tif (this.gradientDirection != null)\n\t\t{\n\t\t\tdir = mxUtils.mod(dir + lookup[this.gradientDirection] - 1, 4);\n\t\t}\n\n\t\tif (dir == 1)\n\t\t{\n\t\t\ttype = '1';\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\t\telse if (dir == 2)\n\t\t{\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\t\telse if (dir == 3)\n\t\t{\n\t\t\ttype = '1';\n\t\t}\n\t\t\n\t\tf += 'progid:DXImageTransform.Microsoft.gradient(' +\n\t\t\t'startColorStr=\\'' + start + '\\', endColorStr=\\'' + end +\n\t\t\t'\\', gradientType=\\'' + type + '\\')';\n\t}\n\n\tnode.style.filter = f;\n};\n\n/**\n * Function: mixedModeHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlColors = function(node)\n{\n\tvar color = this.stroke;\n\t\n\tif (color != null && color != mxConstants.NONE)\n\t{\n\t\tnode.style.borderColor = color;\n\n\t\tif (this.isDashed)\n\t\t{\n\t\t\tnode.style.borderStyle = 'dashed';\n\t\t}\n\t\telse if (this.strokewidth > 0)\n\t\t{\n\t\t\tnode.style.borderStyle = 'solid';\n\t\t}\n\n\t\tnode.style.borderWidth = Math.max(1, Math.ceil(this.strokewidth * this.scale)) + 'px';\n\t}\n\telse\n\t{\n\t\tnode.style.borderWidth = '0px';\n\t}\n\n\tcolor = (this.outline) ? null : this.fill;\n\t\n\tif (color != null && color != mxConstants.NONE)\n\t{\n\t\tnode.style.backgroundColor = color;\n\t\tnode.style.backgroundImage = 'none';\n\t}\n\telse if (this.pointerEvents)\n\t{\n\t\t node.style.backgroundColor = 'transparent';\n\t}\n\telse if (document.documentMode == 8)\n\t{\n\t\tmxUtils.addTransparentBackgroundFilter(node);\n\t}\n\telse\n\t{\n\t\tthis.setTransparentBackgroundImage(node);\n\t}\n};\n\n/**\n * Function: mixedModeHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlBounds = function(node)\n{\n\tvar sw = (document.documentMode >= 9) ? 0 : Math.ceil(this.strokewidth * this.scale);\n\tnode.style.borderWidth = Math.max(1, sw) + 'px';\n\tnode.style.overflow = 'hidden';\n\t\n\tnode.style.left = Math.round(this.bounds.x - sw / 2) + 'px';\n\tnode.style.top = Math.round(this.bounds.y - sw / 2) + 'px';\n\n\tif (document.compatMode == 'CSS1Compat')\n\t{\n\t\tsw = -sw;\n\t}\n\t\n\tnode.style.width = Math.round(Math.max(0, this.bounds.width + sw)) + 'px';\n\tnode.style.height = Math.round(Math.max(0, this.bounds.height + sw)) + 'px';\n};\n\n/**\n * Function: destroyCanvas\n * \n * Destroys the given canvas which was used for drawing. This implementation\n * increments the reference counts on all shared gradients used in the canvas.\n */\nmxShape.prototype.destroyCanvas = function(canvas)\n{\n\t// Manages reference counts\n\tif (canvas instanceof mxSvgCanvas2D)\n\t{\n\t\t// Increments ref counts\n\t\tfor (var key in canvas.gradients)\n\t\t{\n\t\t\tvar gradient = canvas.gradients[key];\n\t\t\t\n\t\t\tif (gradient != null)\n\t\t\t{\n\t\t\t\tgradient.mxRefCount = (gradient.mxRefCount || 0) + 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.releaseSvgGradients(this.oldGradients);\n\t\tthis.oldGradients = canvas.gradients;\n\t}\n};\n\n/**\n * Function: paint\n * \n * Generic rendering code.\n */\nmxShape.prototype.paint = function(c)\n{\n\tvar strokeDrawn = false;\n\t\n\tif (c != null && this.outline)\n\t{\n\t\tvar stroke = c.stroke;\n\t\t\n\t\tc.stroke = function()\n\t\t{\n\t\t\tstrokeDrawn = true;\n\t\t\tstroke.apply(this, arguments);\n\t\t};\n\n\t\tvar fillAndStroke = c.fillAndStroke;\n\t\t\n\t\tc.fillAndStroke = function()\n\t\t{\n\t\t\tstrokeDrawn = true;\n\t\t\tfillAndStroke.apply(this, arguments);\n\t\t};\n\t}\n\n\t// Scale is passed-through to canvas\n\tvar s = this.scale;\n\tvar x = this.bounds.x / s;\n\tvar y = this.bounds.y / s;\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\n\tif (this.isPaintBoundsInverted())\n\t{\n\t\tvar t = (w - h) / 2;\n\t\tx += t;\n\t\ty -= t;\n\t\tvar tmp = w;\n\t\tw = h;\n\t\th = tmp;\n\t}\n\t\n\tthis.updateTransform(c, x, y, w, h);\n\tthis.configureCanvas(c, x, y, w, h);\n\n\t// Adds background rectangle to capture events\n\tvar bg = null;\n\t\n\tif ((this.stencil == null && this.points == null && this.shapePointerEvents) ||\n\t\t(this.stencil != null && this.stencilPointerEvents))\n\t{\n\t\tvar bb = this.createBoundingBox();\n\t\t\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tbg = this.createTransparentSvgRectangle(bb.x, bb.y, bb.width, bb.height);\n\t\t\tthis.node.appendChild(bg);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar rect = c.createRect('rect', bb.x / s, bb.y / s, bb.width / s, bb.height / s);\n\t\t\trect.appendChild(c.createTransparentFill());\n\t\t\trect.stroked = 'false';\n\t\t\tc.root.appendChild(rect);\n\t\t}\n\t}\n\n\tif (this.stencil != null)\n\t{\n\t\tthis.stencil.drawShape(c, this, x, y, w, h);\n\t}\n\telse\n\t{\n\t\t// Stencils have separate strokewidth\n\t\tc.setStrokeWidth(this.strokewidth);\n\t\t\n\t\tif (this.points != null)\n\t\t{\n\t\t\t// Paints edge shape\n\t\t\tvar pts = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t\t{\n\t\t\t\tif (this.points[i] != null)\n\t\t\t\t{\n\t\t\t\t\tpts.push(new mxPoint(this.points[i].x / s, this.points[i].y / s));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.paintEdgeShape(c, pts);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Paints vertex shape\n\t\t\tthis.paintVertexShape(c, x, y, w, h);\n\t\t}\n\t}\n\t\n\tif (bg != null && c.state != null && c.state.transform != null)\n\t{\n\t\tbg.setAttribute('transform', c.state.transform);\n\t}\n\t\n\t// Draws highlight rectangle if no stroke was used\n\tif (c != null && this.outline && !strokeDrawn)\n\t{\n\t\tc.rect(x, y, w, h);\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: configureCanvas\n * \n * Sets the state of the canvas for drawing the shape.\n */\nmxShape.prototype.configureCanvas = function(c, x, y, w, h)\n{\n\tvar dash = null;\n\t\n\tif (this.style != null)\n\t{\n\t\tdash = this.style['dashPattern'];\t\t\n\t}\n\n\tc.setAlpha(this.opacity / 100);\n\tc.setFillAlpha(this.fillOpacity / 100);\n\tc.setStrokeAlpha(this.strokeOpacity / 100);\n\n\t// Sets alpha, colors and gradients\n\tif (this.isShadow != null)\n\t{\n\t\tc.setShadow(this.isShadow);\n\t}\n\t\n\t// Dash pattern\n\tif (this.isDashed != null)\n\t{\n\t\tc.setDashed(this.isDashed, (this.style != null) ?\n\t\t\tmxUtils.getValue(this.style, mxConstants.STYLE_FIX_DASH, false) == 1 : false);\n\t}\n\n\tif (dash != null)\n\t{\n\t\tc.setDashPattern(dash);\n\t}\n\n\tif (this.fill != null && this.fill != mxConstants.NONE && this.gradient && this.gradient != mxConstants.NONE)\n\t{\n\t\tvar b = this.getGradientBounds(c, x, y, w, h);\n\t\tc.setGradient(this.fill, this.gradient, b.x, b.y, b.width, b.height, this.gradientDirection);\n\t}\n\telse\n\t{\n\t\tc.setFillColor(this.fill);\n\t}\n\n\tc.setStrokeColor(this.stroke);\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxShape.prototype.getGradientBounds = function(c, x, y, w, h)\n{\n\treturn new mxRectangle(x, y, w, h);\n};\n\n/**\n * Function: updateTransform\n * \n * Sets the scale and rotation on the given canvas.\n */\nmxShape.prototype.updateTransform = function(c, x, y, w, h)\n{\n\t// NOTE: Currently, scale is implemented in state and canvas. This will\n\t// move to canvas in a later version, so that the states are unscaled\n\t// and untranslated and do not need an update after zooming or panning.\n\tc.scale(this.scale);\n\tc.rotate(this.getShapeRotation(), this.flipH, this.flipV, x + w / 2, y + h / 2);\n};\n\n/**\n * Function: paintVertexShape\n * \n * Paints the vertex shape.\n */\nmxShape.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tthis.paintBackground(c, x, y, w, h);\n\t\n\tif (!this.outline || this.style == null || mxUtils.getValue(\n\t\tthis.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0)\n\t{\n\t\tc.setShadow(false);\n\t\tthis.paintForeground(c, x, y, w, h);\n\t}\n};\n\n/**\n * Function: paintBackground\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintBackground = function(c, x, y, w, h) { };\n\n/**\n * Function: paintForeground\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintForeground = function(c, x, y, w, h) { };\n\n/**\n * Function: paintEdgeShape\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintEdgeShape = function(c, pts) { };\n\n/**\n * Function: getArcSize\n * \n * Returns the arc size for the given dimension.\n */\nmxShape.prototype.getArcSize = function(w, h)\n{\n\tvar r = 0;\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ABSOLUTE_ARCSIZE, 0) == '1')\n\t{\n\t\tr = Math.min(w / 2, Math.min(h / 2, mxUtils.getValue(this.style,\n\t\t\tmxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2));\n\t}\n\telse\n\t{\n\t\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE,\n\t\t\tmxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\t\tr = Math.min(w * f, h * f);\n\t}\n\t\n\treturn r;\n};\n\n/**\n * Function: paintGlassEffect\n * \n * Paints the glass gradient effect.\n */\nmxShape.prototype.paintGlassEffect = function(c, x, y, w, h, arc)\n{\n\tvar sw = Math.ceil(this.strokewidth / 2);\n\tvar size = 0.4;\n\t\n\tc.setGradient('#ffffff', '#ffffff', x, y, w, h * 0.6, 'south', 0.9, 0.1);\n\tc.begin();\n\tarc += 2 * sw;\n\t\t\n\tif (this.isRounded)\n\t{\n\t\tc.moveTo(x - sw + arc, y - sw);\n\t\tc.quadTo(x - sw, y - sw, x - sw, y - sw + arc);\n\t\tc.lineTo(x - sw, y + h * size);\n\t\tc.quadTo(x + w * 0.5, y + h * 0.7, x + w + sw, y + h * size);\n\t\tc.lineTo(x + w + sw, y - sw + arc);\n\t\tc.quadTo(x + w + sw, y - sw, x + w + sw - arc, y - sw);\n\t}\n\telse\n\t{\n\t\tc.moveTo(x - sw, y - sw);\n\t\tc.lineTo(x - sw, y + h * size);\n\t\tc.quadTo(x + w * 0.5, y + h * 0.7, x + w + sw, y + h * size);\n\t\tc.lineTo(x + w + sw, y - sw);\n\t}\n\t\n\tc.close();\n\tc.fill();\n};\n\n/**\n * Function: addPoints\n * \n * Paints the given points with rounded corners.\n */\nmxShape.prototype.addPoints = function(c, pts, rounded, arcSize, close, exclude, initialMove)\n{\n\tif (pts != null && pts.length > 0)\n\t{\n\t\tinitialMove = (initialMove != null) ? initialMove : true;\n\t\tvar pe = pts[pts.length - 1];\n\t\t\n\t\t// Adds virtual waypoint in the center between start and end point\n\t\tif (close && rounded)\n\t\t{\n\t\t\tpts = pts.slice();\n\t\t\tvar p0 = pts[0];\n\t\t\tvar wp = new mxPoint(pe.x + (p0.x - pe.x) / 2, pe.y + (p0.y - pe.y) / 2);\n\t\t\tpts.splice(0, 0, wp);\n\t\t}\n\t\n\t\tvar pt = pts[0];\n\t\tvar i = 1;\n\t\n\t\t// Draws the line segments\n\t\tif (initialMove)\n\t\t{\n\t\t\tc.moveTo(pt.x, pt.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.lineTo(pt.x, pt.y);\n\t\t}\n\t\t\n\t\twhile (i < ((close) ? pts.length : pts.length - 1))\n\t\t{\n\t\t\tvar tmp = pts[mxUtils.mod(i, pts.length)];\n\t\t\tvar dx = pt.x - tmp.x;\n\t\t\tvar dy = pt.y - tmp.y;\n\t\n\t\t\tif (rounded && (dx != 0 || dy != 0) && (exclude == null || mxUtils.indexOf(exclude, i - 1) < 0))\n\t\t\t{\n\t\t\t\t// Draws a line from the last point to the current\n\t\t\t\t// point with a spacing of size off the current point\n\t\t\t\t// into direction of the last point\n\t\t\t\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tvar nx1 = dx * Math.min(arcSize, dist / 2) / dist;\n\t\t\t\tvar ny1 = dy * Math.min(arcSize, dist / 2) / dist;\n\t\n\t\t\t\tvar x1 = tmp.x + nx1;\n\t\t\t\tvar y1 = tmp.y + ny1;\n\t\t\t\tc.lineTo(x1, y1);\n\t\n\t\t\t\t// Draws a curve from the last point to the current\n\t\t\t\t// point with a spacing of size off the current point\n\t\t\t\t// into direction of the next point\n\t\t\t\tvar next = pts[mxUtils.mod(i + 1, pts.length)];\n\t\t\t\t\n\t\t\t\t// Uses next non-overlapping point\n\t\t\t\twhile (i < pts.length - 2 && Math.round(next.x - tmp.x) == 0 && Math.round(next.y - tmp.y) == 0)\n\t\t\t\t{\n\t\t\t\t\tnext = pts[mxUtils.mod(i + 2, pts.length)];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdx = next.x - tmp.x;\n\t\t\t\tdy = next.y - tmp.y;\n\t\n\t\t\t\tdist = Math.max(1, Math.sqrt(dx * dx + dy * dy));\n\t\t\t\tvar nx2 = dx * Math.min(arcSize, dist / 2) / dist;\n\t\t\t\tvar ny2 = dy * Math.min(arcSize, dist / 2) / dist;\n\t\n\t\t\t\tvar x2 = tmp.x + nx2;\n\t\t\t\tvar y2 = tmp.y + ny2;\n\t\n\t\t\t\tc.quadTo(tmp.x, tmp.y, x2, y2);\n\t\t\t\ttmp = new mxPoint(x2, y2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.lineTo(tmp.x, tmp.y);\n\t\t\t}\n\t\n\t\t\tpt = tmp;\n\t\t\ti++;\n\t\t}\n\t\n\t\tif (close)\n\t\t{\n\t\t\tc.close();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.lineTo(pe.x, pe.y);\n\t\t}\n\t}\n};\n\n/**\n * Function: resetStyles\n * \n * Resets all styles.\n */\nmxShape.prototype.resetStyles = function()\n{\n\tthis.initStyles();\n\n\tthis.spacing = 0;\n\t\n\tdelete this.fill;\n\tdelete this.gradient;\n\tdelete this.gradientDirection;\n\tdelete this.stroke;\n\tdelete this.startSize;\n\tdelete this.endSize;\n\tdelete this.startArrow;\n\tdelete this.endArrow;\n\tdelete this.direction;\n\tdelete this.isShadow;\n\tdelete this.isDashed;\n\tdelete this.isRounded;\n\tdelete this.glass;\n};\n\n/**\n * Function: apply\n * \n * Applies the style of the given <mxCellState> to the shape. This\n * implementation assigns the following styles to local fields:\n * \n * - <mxConstants.STYLE_FILLCOLOR> => fill\n * - <mxConstants.STYLE_GRADIENTCOLOR> => gradient\n * - <mxConstants.STYLE_GRADIENT_DIRECTION> => gradientDirection\n * - <mxConstants.STYLE_OPACITY> => opacity\n * - <mxConstants.STYLE_FILL_OPACITY> => fillOpacity\n * - <mxConstants.STYLE_STROKE_OPACITY> => strokeOpacity\n * - <mxConstants.STYLE_STROKECOLOR> => stroke\n * - <mxConstants.STYLE_STROKEWIDTH> => strokewidth\n * - <mxConstants.STYLE_SHADOW> => isShadow\n * - <mxConstants.STYLE_DASHED> => isDashed\n * - <mxConstants.STYLE_SPACING> => spacing\n * - <mxConstants.STYLE_STARTSIZE> => startSize\n * - <mxConstants.STYLE_ENDSIZE> => endSize\n * - <mxConstants.STYLE_ROUNDED> => isRounded\n * - <mxConstants.STYLE_STARTARROW> => startArrow\n * - <mxConstants.STYLE_ENDARROW> => endArrow\n * - <mxConstants.STYLE_ROTATION> => rotation\n * - <mxConstants.STYLE_DIRECTION> => direction\n * - <mxConstants.STYLE_GLASS> => glass\n *\n * This keeps a reference to the <style>. If you need to keep a reference to\n * the cell, you can override this method and store a local reference to\n * state.cell or the <mxCellState> itself. If <outline> should be true, make\n * sure to set it before calling this method.\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxShape.prototype.apply = function(state)\n{\n\tthis.state = state;\n\tthis.style = state.style;\n\n\tif (this.style != null)\n\t{\n\t\tthis.fill = mxUtils.getValue(this.style, mxConstants.STYLE_FILLCOLOR, this.fill);\n\t\tthis.gradient = mxUtils.getValue(this.style, mxConstants.STYLE_GRADIENTCOLOR, this.gradient);\n\t\tthis.gradientDirection = mxUtils.getValue(this.style, mxConstants.STYLE_GRADIENT_DIRECTION, this.gradientDirection);\n\t\tthis.opacity = mxUtils.getValue(this.style, mxConstants.STYLE_OPACITY, this.opacity);\n\t\tthis.fillOpacity = mxUtils.getValue(this.style, mxConstants.STYLE_FILL_OPACITY, this.fillOpacity);\n\t\tthis.strokeOpacity = mxUtils.getValue(this.style, mxConstants.STYLE_STROKE_OPACITY, this.strokeOpacity);\n\t\tthis.stroke = mxUtils.getValue(this.style, mxConstants.STYLE_STROKECOLOR, this.stroke);\n\t\tthis.strokewidth = mxUtils.getNumber(this.style, mxConstants.STYLE_STROKEWIDTH, this.strokewidth);\n\t\tthis.spacing = mxUtils.getValue(this.style, mxConstants.STYLE_SPACING, this.spacing);\n\t\tthis.startSize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, this.startSize);\n\t\tthis.endSize = mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, this.endSize);\n\t\tthis.startArrow = mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, this.startArrow);\n\t\tthis.endArrow = mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, this.endArrow);\n\t\tthis.rotation = mxUtils.getValue(this.style, mxConstants.STYLE_ROTATION, this.rotation);\n\t\tthis.direction = mxUtils.getValue(this.style, mxConstants.STYLE_DIRECTION, this.direction);\n\t\tthis.flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\tthis.flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\t\n\t\t// Legacy support for stencilFlipH/V\n\t\tif (this.stencil != null)\n\t\t{\n\t\t\tthis.flipH = mxUtils.getValue(this.style, 'stencilFlipH', 0) == 1 || this.flipH;\n\t\t\tthis.flipV = mxUtils.getValue(this.style, 'stencilFlipV', 0) == 1 || this.flipV;\n\t\t}\n\t\t\n\t\tif (this.direction == mxConstants.DIRECTION_NORTH || this.direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tvar tmp = this.flipH;\n\t\t\tthis.flipH = this.flipV;\n\t\t\tthis.flipV = tmp;\n\t\t}\n\n\t\tthis.isShadow = mxUtils.getValue(this.style, mxConstants.STYLE_SHADOW, this.isShadow) == 1;\n\t\tthis.isDashed = mxUtils.getValue(this.style, mxConstants.STYLE_DASHED, this.isDashed) == 1;\n\t\tthis.isRounded = mxUtils.getValue(this.style, mxConstants.STYLE_ROUNDED, this.isRounded) == 1;\n\t\tthis.glass = mxUtils.getValue(this.style, mxConstants.STYLE_GLASS, this.glass) == 1;\n\t\t\n\t\tif (this.fill == mxConstants.NONE)\n\t\t{\n\t\t\tthis.fill = null;\n\t\t}\n\n\t\tif (this.gradient == mxConstants.NONE)\n\t\t{\n\t\t\tthis.gradient = null;\n\t\t}\n\n\t\tif (this.stroke == mxConstants.NONE)\n\t\t{\n\t\t\tthis.stroke = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: setCursor\n * \n * Sets the cursor on the given shape.\n *\n * Parameters:\n *\n * cursor - The cursor to be used.\n */\nmxShape.prototype.setCursor = function(cursor)\n{\n\tif (cursor == null)\n\t{\n\t\tcursor = '';\n\t}\n\t\n\tthis.cursor = cursor;\n\n\tif (this.node != null)\n\t{\n\t\tthis.node.style.cursor = cursor;\n\t}\n};\n\n/**\n * Function: getCursor\n * \n * Returns the current cursor.\n */\nmxShape.prototype.getCursor = function()\n{\n\treturn this.cursor;\n};\n\n/**\n * Function: isRoundable\n * \n * Hook for subclassers.\n */\nmxShape.prototype.isRoundable = function()\n{\n\treturn false;\n};\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using <createBoundingBox> and\n * <augmentBoundingBox> and stores the result in <boundingBox>.\n */\nmxShape.prototype.updateBoundingBox = function()\n{\n\t// Tries to get bounding box from SVG subsystem\n\t// LATER: Use getBoundingClientRect for fallback in VML\n\tif (this.useSvgBoundingBox && this.node != null && this.node.ownerSVGElement != null)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar b = this.node.getBBox();\n\t\n\t\t\tif (b.width > 0 && b.height > 0)\n\t\t\t{\n\t\t\t\tthis.boundingBox = new mxRectangle(b.x, b.y, b.width, b.height);\n\t\t\t\t\n\t\t\t\t// Adds strokeWidth\n\t\t\t\tthis.boundingBox.grow(this.strokewidth * this.scale / 2);\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tcatch(e)\n\t\t{\n\t\t\t// fallback to code below\n\t\t}\n\t}\n\n\tif (this.bounds != null)\n\t{\n\t\tvar bbox = this.createBoundingBox();\n\t\t\n\t\tif (bbox != null)\n\t\t{\n\t\t\tthis.augmentBoundingBox(bbox);\n\t\t\tvar rot = this.getShapeRotation();\n\t\t\t\n\t\t\tif (rot != 0)\n\t\t\t{\n\t\t\t\tbbox = mxUtils.getBoundingBox(bbox, rot);\n\t\t\t}\n\t\t}\n\n\t\tthis.boundingBox = bbox;\n\t}\n};\n\n/**\n * Function: createBoundingBox\n *\n * Returns a new rectangle that represents the bounding box of the bare shape\n * with no shadows or strokewidths.\n */\nmxShape.prototype.createBoundingBox = function()\n{\n\tvar bb = this.bounds.clone();\n\n\tif ((this.stencil != null && (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\tthis.direction == mxConstants.DIRECTION_SOUTH)) || this.isPaintBoundsInverted())\n\t{\n\t\tbb.rotate90();\n\t}\n\t\n\treturn bb;\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the strokewidth and shadow offsets.\n */\nmxShape.prototype.augmentBoundingBox = function(bbox)\n{\n\tif (this.isShadow)\n\t{\n\t\tbbox.width += Math.ceil(mxConstants.SHADOW_OFFSET_X * this.scale);\n\t\tbbox.height += Math.ceil(mxConstants.SHADOW_OFFSET_Y * this.scale);\n\t}\n\t\n\t// Adds strokeWidth\n\tbbox.grow(this.strokewidth * this.scale / 2);\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Returns true if the bounds should be inverted.\n */\nmxShape.prototype.isPaintBoundsInverted = function()\n{\n\t// Stencil implements inversion via aspect\n\treturn this.stencil == null && (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_SOUTH);\n};\n\n/**\n * Function: getRotation\n * \n * Returns the rotation from the style.\n */\nmxShape.prototype.getRotation = function()\n{\n\treturn (this.rotation != null) ? this.rotation : 0;\n};\n\n/**\n * Function: getTextRotation\n * \n * Returns the rotation for the text label.\n */\nmxShape.prototype.getTextRotation = function()\n{\n\tvar rot = this.getRotation();\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, 1) != 1)\n\t{\n\t\trot += mxText.prototype.verticalTextRotation;\n\t}\n\t\n\treturn rot;\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns the actual rotation of the shape.\n */\nmxShape.prototype.getShapeRotation = function()\n{\n\tvar rot = this.getRotation();\n\t\n\tif (this.direction != null)\n\t{\n\t\tif (this.direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\trot += 270;\n\t\t}\n\t\telse if (this.direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\trot += 180;\n\t\t}\n\t\telse if (this.direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\trot += 90;\n\t\t}\n\t}\n\t\n\treturn rot;\n};\n\n/**\n * Function: createTransparentSvgRectangle\n * \n * Adds a transparent rectangle that catches all events.\n */\nmxShape.prototype.createTransparentSvgRectangle = function(x, y, w, h)\n{\n\tvar rect = document.createElementNS(mxConstants.NS_SVG, 'rect');\n\trect.setAttribute('x', x);\n\trect.setAttribute('y', y);\n\trect.setAttribute('width', w);\n\trect.setAttribute('height', h);\n\trect.setAttribute('fill', 'none');\n\trect.setAttribute('stroke', 'none');\n\trect.setAttribute('pointer-events', 'all');\n\t\n\treturn rect;\n};\n\n/**\n * Function: setTransparentBackgroundImage\n * \n * Sets a transparent background CSS style to catch all events.\n * \n * Paints the line shape.\n */\nmxShape.prototype.setTransparentBackgroundImage = function(node)\n{\n\tnode.style.backgroundImage = 'url(\\'' + mxClient.imageBasePath + '/transparent.gif\\')';\n};\n\n/**\n * Function: releaseSvgGradients\n * \n * Paints the line shape.\n */\nmxShape.prototype.releaseSvgGradients = function(grads)\n{\n\tif (grads != null)\n\t{\n\t\tfor (var key in grads)\n\t\t{\n\t\t\tvar gradient = grads[key];\n\t\t\t\n\t\t\tif (gradient != null)\n\t\t\t{\n\t\t\t\tgradient.mxRefCount = (gradient.mxRefCount || 0) - 1;\n\t\t\t\t\n\t\t\t\tif (gradient.mxRefCount == 0 && gradient.parentNode != null)\n\t\t\t\t{\n\t\t\t\t\tgradient.parentNode.removeChild(gradient);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: destroy\n *\n * Destroys the shape by removing it from the DOM and releasing the DOM\n * node associated with the shape using <mxEvent.release>.\n */\nmxShape.prototype.destroy = function()\n{\n\tif (this.node != null)\n\t{\n\t\tmxEvent.release(this.node);\n\t\t\n\t\tif (this.node.parentNode != null)\n\t\t{\n\t\t\tthis.node.parentNode.removeChild(this.node);\n\t\t}\n\t\t\n\t\tthis.node = null;\n\t}\n\t\n\t// Decrements refCount and removes unused\n\tthis.releaseSvgGradients(this.oldGradients);\n\tthis.oldGradients = null;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStencil\n *\n * Implements a generic shape which is based on a XML node as a description.\n * \n * shape:\n * \n * The outer element is *shape*, that has attributes:\n * \n * - \"name\", string, required. The stencil name that uniquely identifies the shape.\n * - \"w\" and \"h\" are optional decimal view bounds. This defines your co-ordinate\n * system for the graphics operations in the shape. The default is 100,100.\n * - \"aspect\", optional string. Either \"variable\", the default, or \"fixed\". Fixed\n * means always render the shape with the aspect ratio defined by the ratio w/h.\n * Variable causes the ratio to match that of the geometry of the current vertex.\n * - \"strokewidth\", optional string. Either an integer or the string \"inherit\".\n * \"inherit\" indicates that the strokeWidth of the cell is only changed on scaling,\n * not on resizing. Default is \"1\".\n * If numeric values are used, the strokeWidth of the cell is changed on both\n * scaling and resizing and the value defines the multiple that is applied to\n * the width.\n * \n * connections:\n * \n * If you want to define specific fixed connection points on the shape use the\n * *connections* element. Each *constraint* element within connections defines\n * a fixed connection point on the shape. Constraints have attributes:\n * \n * - \"perimeter\", required. 1 or 0. 0 sets the connection point where specified\n * by x,y. 1 Causes the position of the connection point to be extrapolated from\n * the center of the shape, through x,y to the point of intersection with the\n * perimeter of the shape.\n * - \"x\" and \"y\" are the position of the fixed point relative to the bounds of\n * the shape. They can be automatically adjusted if perimeter=1. So, (0,0) is top\n * left, (0.5,0.5) the center, (1,0.5) the center of the right hand edge of the\n * bounds, etc. Values may be less than 0 or greater than 1 to be positioned\n * outside of the shape.\n * - \"name\", optional string. A unique identifier for the port on the shape.\n * \n * background and foreground:\n * \n * The path of the graphics drawing is split into two elements, *foreground* and\n * *background*. The split is to define which part any shadow applied to the shape\n * is derived from (the background). This, generally, means the background is the\n * line tracing of the outside of the shape, but not always.\n * \n * Any stroke, fill or fillstroke of a background must be the first element of the\n * foreground element, they must not be used within *background*. If the background\n * is empty, this is not required.\n * \n * Because the background cannot have any fill or stroke, it can contain only one\n * *path*, *rect*, *roundrect* or *ellipse* element (or none). It can also not\n * include *image*, *text* or *include-shape*.\n * \n * Note that the state, styling and drawing in mxGraph stencils is very close in\n * design to that of HTML 5 canvas. Tutorials on this subject, if you're not\n * familiar with the topic, will give a good high-level introduction to the\n * concepts used.\n * \n * State:\n * \n * Rendering within the foreground and background elements has the concept of\n * state. There are two types of operations other than state save/load, styling\n * and drawing. The styling operations change the current state, so you can save\n * the current state with <save/> and pull the last saved state from the state\n * stack using <restore/>.\n * \n * Styling:\n * \n * The elements that change colors within the current state all take a hash\n * prefixed hex color code (\"#FFEA80\").\n * \n * - *strokecolor*, this sets the color that drawing paths will be rendered in\n * when a stroke or fillstroke command is issued.\n * - *fillcolor*, this sets the color that the inside of closed paths will be\n * rendered in when a fill or fillstroke command is issued.\n * - *fontcolor*, this sets the color that fonts are rendered in when text is drawn.\n * \n * *alpha* defines the degree of transparency used between 1.0 for fully opaque\n * and 0.0 for fully transparent.\n * \n * *fillalpha* defines the degree of fill transparency used between 1.0 for fully\n * opaque and 0.0 for fully transparent.\n * \n * *strokealpha* defines the degree of stroke transparency used between 1.0 for\n * fully opaque and 0.0 for fully transparent.\n * \n * *strokewidth* defines the integer thickness of drawing elements rendered by\n * stroking. Use fixed=\"1\" to apply the value as-is, without scaling.\n * \n * *dashed* is \"1\" for dashing enabled and \"0\" for disabled.\n * \n * When *dashed* is enabled the current dash pattern, defined by *dashpattern*,\n * is used on strokes. dashpattern is a sequence of space separated \"on, off\"\n * lengths that define what distance to paint the stroke for, then what distance\n * to paint nothing for, repeat... The default is \"3 3\". You could define a more\n * complex pattern with \"5 3 2 6\", for example. Generally, it makes sense to have\n * an even number of elements in the dashpattern, but that's not required.\n * \n * *linejoin*, *linecap* and *miterlimit* are best explained by the Mozilla page\n * on Canvas styling (about halfway down). The values are all the same except we\n * use \"flat\" for linecap, instead of Canvas' \"butt\".\n * \n * For font styling there are.\n * \n * - *fontsize*, an integer,\n * - *fontstyle*, an ORed bit pattern of bold (1), italic (2) and underline (4),\n * i.e bold underline is \"5\".\n * - *fontfamily*, is a string defining the typeface to be used.\n * \n * Drawing:\n * \n * Most drawing is contained within a *path* element. Again, the graphic\n * primitives are very similar to that of HTML 5 canvas.\n * \n * - *move* to attributes required decimals (x,y).\n * - *line* to attributes required decimals (x,y).\n * - *quad* to required decimals (x2,y2) via control point required decimals\n * (x1,y1).\n * - *curve* to required decimals (x3,y3), via control points required decimals\n * (x1,y1) and (x2,y2).\n * - *arc*, this doesn't follow the HTML Canvas signatures, instead it's a copy\n * of the SVG arc command. The SVG specification documentation gives the best\n * description of its behaviors. The attributes are named identically, they are\n * decimals and all required.\n * - *close* ends the current subpath and causes an automatic straight line to\n * be drawn from the current point to the initial point of the current subpath.\n * \n * Complex drawing:\n * \n * In addition to the graphics primitive operations there are non-primitive\n * operations. These provide an easy method to draw some basic shapes.\n * \n * - *rect*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals\n * - *roundrect*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals. Also\n * \"arcsize\" an optional decimal attribute defining how large, the corner curves\n * are.\n * - *ellipse*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals.\n * \n * Note that these 3 shapes and all paths must be followed by either a fill,\n * stroke, or fillstroke.\n * \n * Text:\n * \n * *text* elements have the following attributes.\n * \n * - \"str\", the text string to display, required.\n * - \"x\" and \"y\", the decimal location (x,y) of the text element, required.\n * - \"align\", the horizontal alignment of the text element, either \"left\",\n * \"center\" or \"right\". Optional, default is \"left\".\n * - \"valign\", the vertical alignment of the text element, either \"top\", \"middle\"\n * or \"bottom\". Optional, default is \"top\".\n * - \"localized\", 0 or 1, if 1 then the \"str\" actually contains a key to use to\n * fetch the value out of mxResources. Optional, default is\n * <mxStencil.defaultLocalized>.\n * - \"vertical\", 0 or 1, if 1 the label is rendered vertically (rotated by 90\n * degrees). Optional, default is 0.\n * - \"rotation\", angle in degrees (0 to 360). The angle to rotate the text by.\n * Optional, default is 0.\n * - \"align-shape\", 0 or 1, if 0 ignore the rotation of the shape when setting\n * the text rotation. Optional, default is 1.\n * \n * If <allowEval> is true, then the text content of the this element can define\n * a function which is invoked with the shape as the only argument and returns\n * the value for the text element (ignored if the str attribute is not null).\n * \n * Images:\n * \n * *image* elements can either be external URLs, or data URIs, where supported\n * (not in IE 7-). Attributes are:\n * \n * - \"src\", required string. Either a data URI or URL.\n * - \"x\", \"y\", required decimals. The (x,y) position of the image.\n * - \"w\", \"h\", required decimals. The width and height of the image.\n * - \"flipH\" and \"flipV\", optional 0 or 1. Whether to flip the image along the\n * horizontal/vertical axis. Default is 0 for both.\n * \n * If <allowEval> is true, then the text content of the this element can define\n * a function which is invoked with the shape as the only argument and returns\n * the value for the image source (ignored if the src attribute is not null).\n * \n * Sub-shapes:\n * \n * *include-shape* allow stencils to be rendered within the current stencil by\n * referencing the sub-stencil by name. Attributes are:\n * \n * - \"name\", required string. The unique shape name of the stencil.\n * - \"x\", \"y\", \"w\", \"h\", required decimals. The (x,y) position of the sub-shape\n * and its width and height.\n * \n * Constructor: mxStencil\n * \n * Constructs a new generic shape by setting <desc> to the given XML node and\n * invoking <parseDescription> and <parseConstraints>.\n * \n * Parameters:\n * \n * desc - XML node that contains the stencil description.\n */\nfunction mxStencil(desc)\n{\n\tthis.desc = desc;\n\tthis.parseDescription();\n\tthis.parseConstraints();\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxStencil, mxShape);\n\n/**\n * Variable: defaultLocalized\n * \n * Static global variable that specifies the default value for the localized\n * attribute of the text element. Default is false.\n */\nmxStencil.defaultLocalized = false;\n\n/**\n * Function: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content and images. Default is false. Set this to true\n * if stencils can not contain user input.\n */\nmxStencil.allowEval = false;\n\n/**\n * Variable: desc\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.desc = null;\n\n/**\n * Variable: constraints\n * \n * Holds an array of <mxConnectionConstraints> as defined in the shape.\n */\nmxStencil.prototype.constraints = null;\n\n/**\n * Variable: aspect\n *\n * Holds the aspect of the shape. Default is 'auto'.\n */\nmxStencil.prototype.aspect = null;\n\n/**\n * Variable: w0\n *\n * Holds the width of the shape. Default is 100.\n */\nmxStencil.prototype.w0 = null;\n\n/**\n * Variable: h0\n *\n * Holds the height of the shape. Default is 100.\n */\nmxStencil.prototype.h0 = null;\n\n/**\n * Variable: bgNodes\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.bgNode = null;\n\n/**\n * Variable: fgNodes\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.fgNode = null;\n\n/**\n * Variable: strokewidth\n *\n * Holds the strokewidth direction from the description.\n */\nmxStencil.prototype.strokewidth = null;\n\n/**\n * Function: parseDescription\n *\n * Reads <w0>, <h0>, <aspect>, <bgNodes> and <fgNodes> from <desc>.\n */\nmxStencil.prototype.parseDescription = function()\n{\n\t// LATER: Preprocess nodes for faster painting\n\tthis.fgNode = this.desc.getElementsByTagName('foreground')[0];\n\tthis.bgNode = this.desc.getElementsByTagName('background')[0];\n\tthis.w0 = Number(this.desc.getAttribute('w') || 100);\n\tthis.h0 = Number(this.desc.getAttribute('h') || 100);\n\t\n\t// Possible values for aspect are: variable and fixed where\n\t// variable means fill the available space and fixed means\n\t// use w0 and h0 to compute the aspect.\n\tvar aspect = this.desc.getAttribute('aspect');\n\tthis.aspect = (aspect != null) ? aspect : 'variable';\n\t\n\t// Possible values for strokewidth are all numbers and \"inherit\"\n\t// where the inherit means take the value from the style (ie. the\n\t// user-defined stroke-width). Note that the strokewidth is scaled\n\t// by the minimum scaling that is used to draw the shape (sx, sy).\n\tvar sw = this.desc.getAttribute('strokewidth');\n\tthis.strokewidth = (sw != null) ? sw : '1';\n};\n\n/**\n * Function: parseConstraints\n *\n * Reads the constraints from <desc> into <constraints> using\n * <parseConstraint>.\n */\nmxStencil.prototype.parseConstraints = function()\n{\n\tvar conns = this.desc.getElementsByTagName('connections')[0];\n\t\n\tif (conns != null)\n\t{\n\t\tvar tmp = mxUtils.getChildNodes(conns);\n\t\t\n\t\tif (tmp != null && tmp.length > 0)\n\t\t{\n\t\t\tthis.constraints = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < tmp.length; i++)\n\t\t\t{\n\t\t\t\tthis.constraints.push(this.parseConstraint(tmp[i]));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: parseConstraint\n *\n * Parses the given XML node and returns its <mxConnectionConstraint>.\n */\nmxStencil.prototype.parseConstraint = function(node)\n{\n\tvar x = Number(node.getAttribute('x'));\n\tvar y = Number(node.getAttribute('y'));\n\tvar perimeter = node.getAttribute('perimeter') == '1';\n\tvar name = node.getAttribute('name');\n\t\n\treturn new mxConnectionConstraint(new mxPoint(x, y), perimeter, name);\n};\n\n/**\n * Function: evaluateTextAttribute\n * \n * Gets the given attribute as a text. The return value from <evaluateAttribute>\n * is used as a key to <mxResources.get> if the localized attribute in the text\n * node is 1 or if <defaultLocalized> is true.\n */\nmxStencil.prototype.evaluateTextAttribute = function(node, attribute, shape)\n{\n\tvar result = this.evaluateAttribute(node, attribute, shape);\n\tvar loc = node.getAttribute('localized');\n\t\n\tif ((mxStencil.defaultLocalized && loc == null) || loc == '1')\n\t{\n\t\tresult = mxResources.get(result);\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: evaluateAttribute\n *\n * Gets the attribute for the given name from the given node. If the attribute\n * does not exist then the text content of the node is evaluated and if it is\n * a function it is invoked with <shape> as the only argument and the return\n * value is used as the attribute value to be returned.\n */\nmxStencil.prototype.evaluateAttribute = function(node, attribute, shape)\n{\n\tvar result = node.getAttribute(attribute);\n\t\n\tif (result == null)\n\t{\n\t\tvar text = mxUtils.getTextContent(node);\n\t\t\n\t\tif (text != null && mxStencil.allowEval)\n\t\t{\n\t\t\tvar funct = mxUtils.eval(text);\n\t\t\t\n\t\t\tif (typeof(funct) == 'function')\n\t\t\t{\n\t\t\t\tresult = funct(shape);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: drawShape\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawShape = function(canvas, shape, x, y, w, h)\n{\n\t// TODO: Internal structure (array of special structs?), relative and absolute\n\t// coordinates (eg. note shape, process vs star, actor etc.), text rendering\n\t// and non-proportional scaling, how to implement pluggable edge shapes\n\t// (start, segment, end blocks), pluggable markers, how to implement\n\t// swimlanes (title area) with this API, add icon, horizontal/vertical\n\t// label, indicator for all shapes, rotation\n\tvar direction = mxUtils.getValue(shape.style, mxConstants.STYLE_DIRECTION, null);\n\tvar aspect = this.computeAspect(shape.style, x, y, w, h, direction);\n\tvar minScale = Math.min(aspect.width, aspect.height);\n\tvar sw = (this.strokewidth == 'inherit') ?\n\t\t\tNumber(mxUtils.getNumber(shape.style, mxConstants.STYLE_STROKEWIDTH, 1)) :\n\t\t\tNumber(this.strokewidth) * minScale;\n\tcanvas.setStrokeWidth(sw);\n\n\t// Draws a transparent rectangle for catching events\n\tif (shape.style != null && mxUtils.getValue(shape.style, mxConstants.STYLE_POINTER_EVENTS, '0') == '1')\n\t{\n\t\tcanvas.setStrokeColor(mxConstants.NONE);\n\t\tcanvas.rect(x, y, w, h);\n\t\tcanvas.stroke();\n\t\tcanvas.setStrokeColor(shape.stroke);\n\t}\n\n\tthis.drawChildren(canvas, shape, x, y, w, h, this.bgNode, aspect, false, true);\n\tthis.drawChildren(canvas, shape, x, y, w, h, this.fgNode, aspect, true,\n\t\t!shape.outline || shape.style == null || mxUtils.getValue(\n\t\tshape.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0);\n};\n\n/**\n * Function: drawChildren\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawChildren = function(canvas, shape, x, y, w, h, node, aspect, disableShadow, paint)\n{\n\tif (node != null && w > 0 && h > 0)\n\t{\n\t\tvar tmp = node.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t{\n\t\t\t\tthis.drawNode(canvas, shape, tmp, aspect, disableShadow, paint);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\t}\n};\n\n/**\n * Function: computeAspect\n *\n * Returns a rectangle that contains the offset in x and y and the horizontal\n * and vertical scale in width and height used to draw this shape inside the\n * given <mxRectangle>.\n * \n * Parameters:\n * \n * shape - <mxShape> to be drawn.\n * bounds - <mxRectangle> that should contain the stencil.\n * direction - Optional direction of the shape to be darwn.\n */\nmxStencil.prototype.computeAspect = function(shape, x, y, w, h, direction)\n{\n\tvar x0 = x;\n\tvar y0 = y;\n\tvar sx = w / this.w0;\n\tvar sy = h / this.h0;\n\t\n\tvar inverse = (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH);\n\n\tif (inverse)\n\t{\n\t\tsy = w / this.h0;\n\t\tsx = h / this.w0;\n\t\t\n\t\tvar delta = (w - h) / 2;\n\n\t\tx0 += delta;\n\t\ty0 -= delta;\n\t}\n\n\tif (this.aspect == 'fixed')\n\t{\n\t\tsy = Math.min(sx, sy);\n\t\tsx = sy;\n\t\t\n\t\t// Centers the shape inside the available space\n\t\tif (inverse)\n\t\t{\n\t\t\tx0 += (h - this.w0 * sx) / 2;\n\t\t\ty0 += (w - this.h0 * sy) / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx0 += (w - this.w0 * sx) / 2;\n\t\t\ty0 += (h - this.h0 * sy) / 2;\n\t\t}\n\t}\n\n\treturn new mxRectangle(x0, y0, sx, sy);\n};\n\n/**\n * Function: drawNode\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawNode = function(canvas, shape, node, aspect, disableShadow, paint)\n{\n\tvar name = node.nodeName;\n\tvar x0 = aspect.x;\n\tvar y0 = aspect.y;\n\tvar sx = aspect.width;\n\tvar sy = aspect.height;\n\tvar minScale = Math.min(sx, sy);\n\t\n\tif (name == 'save')\n\t{\n\t\tcanvas.save();\n\t}\n\telse if (name == 'restore')\n\t{\n\t\tcanvas.restore();\n\t}\n\telse if (paint)\n\t{\n\t\tif (name == 'path')\n\t\t{\n\t\t\tcanvas.begin();\n\t\t\t\n\t\t\tvar parseRegularly = true;\n\t\t\t\n\t\t\tif (node.getAttribute('rounded') == '1')\n\t\t\t{\n\t\t\t\tparseRegularly = false;\n\t\t\t\t\n\t\t\t\tvar arcSize = Number(node.getAttribute('arcSize'));\n\t\t\t\tvar pointCount = 0;\n\t\t\t\tvar segs = [];\n\t\t\t\t\n\t\t\t\t// Renders the elements inside the given path\n\t\t\t\tvar childNode = node.firstChild;\n\t\t\t\t\n\t\t\t\twhile (childNode != null)\n\t\t\t\t{\n\t\t\t\t\tif (childNode.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar childName = childNode.nodeName;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (childName == 'move' || childName == 'line')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (childName == 'move' || segs.length == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsegs.push([]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsegs[segs.length - 1].push(new mxPoint(x0 + Number(childNode.getAttribute('x')) * sx,\n\t\t\t\t\t\t\t\ty0 + Number(childNode.getAttribute('y')) * sy));\n\t\t\t\t\t\t\tpointCount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//We only support move and line for rounded corners\n\t\t\t\t\t\t\tparseRegularly = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tchildNode = childNode.nextSibling;\n\t\t\t\t}\n\n\t\t\t\tif (!parseRegularly && pointCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < segs.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar close = false, ps = segs[i][0], pe = segs[i][segs[i].length - 1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (ps.x == pe.x && ps.y == pe.y) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsegs[i].pop();\n\t\t\t\t\t\t\tclose = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.addPoints(canvas, segs[i], true, arcSize, close);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tparseRegularly = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (parseRegularly)\n\t\t\t{\n\t\t\t\t// Renders the elements inside the given path\n\t\t\t\tvar childNode = node.firstChild;\n\t\t\t\t\n\t\t\t\twhile (childNode != null)\n\t\t\t\t{\n\t\t\t\t\tif (childNode.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.drawNode(canvas, shape, childNode, aspect, disableShadow, paint);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tchildNode = childNode.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (name == 'close')\n\t\t{\n\t\t\tcanvas.close();\n\t\t}\n\t\telse if (name == 'move')\n\t\t{\n\t\t\tcanvas.moveTo(x0 + Number(node.getAttribute('x')) * sx, y0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'line')\n\t\t{\n\t\t\tcanvas.lineTo(x0 + Number(node.getAttribute('x')) * sx, y0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'quad')\n\t\t{\n\t\t\tcanvas.quadTo(x0 + Number(node.getAttribute('x1')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y1')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x2')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y2')) * sy);\n\t\t}\n\t\telse if (name == 'curve')\n\t\t{\n\t\t\tcanvas.curveTo(x0 + Number(node.getAttribute('x1')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y1')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x2')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y2')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x3')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y3')) * sy);\n\t\t}\n\t\telse if (name == 'arc')\n\t\t{\n\t\t\tcanvas.arcTo(Number(node.getAttribute('rx')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('ry')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('x-axis-rotation')),\n\t\t\t\t\tNumber(node.getAttribute('large-arc-flag')),\n\t\t\t\t\tNumber(node.getAttribute('sweep-flag')),\n\t\t\t\t\tx0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'rect')\n\t\t{\n\t\t\tcanvas.rect(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('h')) * sy);\n\t\t}\n\t\telse if (name == 'roundrect')\n\t\t{\n\t\t\tvar arcsize = Number(node.getAttribute('arcsize'));\n\t\n\t\t\tif (arcsize == 0)\n\t\t\t{\n\t\t\t\tarcsize = mxConstants.RECTANGLE_ROUNDING_FACTOR * 100;\n\t\t\t}\n\t\t\t\n\t\t\tvar w = Number(node.getAttribute('w')) * sx;\n\t\t\tvar h = Number(node.getAttribute('h')) * sy;\n\t\t\tvar factor = Number(arcsize) / 100;\n\t\t\tvar r = Math.min(w * factor, h * factor);\n\t\t\t\n\t\t\tcanvas.roundrect(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tw, h, r, r);\n\t\t}\n\t\telse if (name == 'ellipse')\n\t\t{\n\t\t\tcanvas.ellipse(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\tNumber(node.getAttribute('h')) * sy);\n\t\t}\n\t\telse if (name == 'image')\n\t\t{\n\t\t\tif (!shape.outline)\n\t\t\t{\n\t\t\t\tvar src = this.evaluateAttribute(node, 'src', shape);\n\t\t\t\t\n\t\t\t\tcanvas.image(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('h')) * sy,\n\t\t\t\t\tsrc, false, node.getAttribute('flipH') == '1',\n\t\t\t\t\tnode.getAttribute('flipV') == '1');\n\t\t\t}\n\t\t}\n\t\telse if (name == 'text')\n\t\t{\n\t\t\tif (!shape.outline)\n\t\t\t{\n\t\t\t\tvar str = this.evaluateTextAttribute(node, 'str', shape);\n\t\t\t\tvar rotation = node.getAttribute('vertical') == '1' ? -90 : 0;\n\t\t\t\t\n\t\t\t\tif (node.getAttribute('align-shape') == '0')\n\t\t\t\t{\n\t\t\t\t\tvar dr = shape.rotation;\n\t\t\n\t\t\t\t\t// Depends on flipping\n\t\t\t\t\tvar flipH = mxUtils.getValue(shape.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tvar flipV = mxUtils.getValue(shape.style, mxConstants.STYLE_FLIPV, 0) == 1;\n\t\t\t\t\t\n\t\t\t\t\tif (flipH && flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\trotation -= dr;\n\t\t\t\t\t}\n\t\t\t\t\telse if (flipH || flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\trotation += dr;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\trotation -= dr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\trotation -= node.getAttribute('rotation');\n\t\t\n\t\t\t\tcanvas.text(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\t\t0, 0, str, node.getAttribute('align') || 'left',\n\t\t\t\t\t\tnode.getAttribute('valign') || 'top', false, '',\n\t\t\t\t\t\tnull, false, rotation);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'include-shape')\n\t\t{\n\t\t\tvar stencil = mxStencilRegistry.getStencil(node.getAttribute('name'));\n\t\t\t\n\t\t\tif (stencil != null)\n\t\t\t{\n\t\t\t\tvar x = x0 + Number(node.getAttribute('x')) * sx;\n\t\t\t\tvar y = y0 + Number(node.getAttribute('y')) * sy;\n\t\t\t\tvar w = Number(node.getAttribute('w')) * sx;\n\t\t\t\tvar h = Number(node.getAttribute('h')) * sy;\n\t\t\t\t\n\t\t\t\tstencil.drawShape(canvas, shape, x, y, w, h);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'fillstroke')\n\t\t{\n\t\t\tcanvas.fillAndStroke();\n\t\t}\n\t\telse if (name == 'fill')\n\t\t{\n\t\t\tcanvas.fill();\n\t\t}\n\t\telse if (name == 'stroke')\n\t\t{\n\t\t\tcanvas.stroke();\n\t\t}\n\t\telse if (name == 'strokewidth')\n\t\t{\n\t\t\tvar s = (node.getAttribute('fixed') == '1') ? 1 : minScale;\n\t\t\tcanvas.setStrokeWidth(Number(node.getAttribute('width')) * s);\n\t\t}\n\t\telse if (name == 'dashed')\n\t\t{\n\t\t\tcanvas.setDashed(node.getAttribute('dashed') == '1');\n\t\t}\n\t\telse if (name == 'dashpattern')\n\t\t{\n\t\t\tvar value = node.getAttribute('pattern');\n\t\t\t\n\t\t\tif (value != null)\n\t\t\t{\n\t\t\t\tvar tmp = value.split(' ');\n\t\t\t\tvar pat = [];\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < tmp.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (tmp[i].length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tpat.push(Number(tmp[i]) * minScale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue = pat.join(' ');\n\t\t\t\tcanvas.setDashPattern(value);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'strokecolor')\n\t\t{\n\t\t\tcanvas.setStrokeColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'linecap')\n\t\t{\n\t\t\tcanvas.setLineCap(node.getAttribute('cap'));\n\t\t}\n\t\telse if (name == 'linejoin')\n\t\t{\n\t\t\tcanvas.setLineJoin(node.getAttribute('join'));\n\t\t}\n\t\telse if (name == 'miterlimit')\n\t\t{\n\t\t\tcanvas.setMiterLimit(Number(node.getAttribute('limit')));\n\t\t}\n\t\telse if (name == 'fillcolor')\n\t\t{\n\t\t\tcanvas.setFillColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'alpha')\n\t\t{\n\t\t\tcanvas.setAlpha(node.getAttribute('alpha'));\n\t\t}\n\t\telse if (name == 'fillalpha')\n\t\t{\n\t\t\tcanvas.setAlpha(node.getAttribute('alpha'));\n\t\t}\n\t\telse if (name == 'strokealpha')\n\t\t{\n\t\t\tcanvas.setAlpha(node.getAttribute('alpha'));\n\t\t}\n\t\telse if (name == 'fontcolor')\n\t\t{\n\t\t\tcanvas.setFontColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'fontstyle')\n\t\t{\n\t\t\tcanvas.setFontStyle(node.getAttribute('style'));\n\t\t}\n\t\telse if (name == 'fontfamily')\n\t\t{\n\t\t\tcanvas.setFontFamily(node.getAttribute('family'));\n\t\t}\n\t\telse if (name == 'fontsize')\n\t\t{\n\t\t\tcanvas.setFontSize(Number(node.getAttribute('size')) * minScale);\n\t\t}\n\t\t\n\t\tif (disableShadow && (name == 'fillstroke' || name == 'fill' || name == 'stroke'))\n\t\t{\n\t\t\tdisableShadow = false;\n\t\t\tcanvas.setShadow(false);\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n * \n * Code to add stencils.\n * \n * (code)\n * var req = mxUtils.load('test/stencils.xml');\n * var root = req.getDocumentElement();\n * var shape = root.firstChild;\n * \n * while (shape != null)\n * {\n * \t if (shape.nodeType == mxConstants.NODETYPE_ELEMENT)\n *   {\n *     mxStencilRegistry.addStencil(shape.getAttribute('name'), new mxStencil(shape));\n *   }\n *   \n *   shape = shape.nextSibling;\n * }\n * (end)\n */\nvar mxStencilRegistry =\n{\n\t/**\n\t * Class: mxStencilRegistry\n\t * \n\t * A singleton class that provides a registry for stencils and the methods\n\t * for painting those stencils onto a canvas or into a DOM.\n\t */\n\tstencils: {},\n\t\n\t/**\n\t * Function: addStencil\n\t * \n\t * Adds the given <mxStencil>.\n\t */\n\taddStencil: function(name, stencil)\n\t{\n\t\tmxStencilRegistry.stencils[name] = stencil;\n\t},\n\t\n\t/**\n\t * Function: getStencil\n\t * \n\t * Returns the <mxStencil> for the given name.\n\t */\n\tgetStencil: function(name)\n\t{\n\t\treturn mxStencilRegistry.stencils[name];\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxMarker =\n{\n\t/**\n\t * Class: mxMarker\n\t * \n\t * A static class that implements all markers for VML and SVG using a\n\t * registry. NOTE: The signatures in this class will change.\n\t * \n\t * Variable: markers\n\t * \n\t * Maps from markers names to functions to paint the markers.\n\t */\n\tmarkers: [],\n\t\n\t/**\n\t * Function: addMarker\n\t * \n\t * Adds a factory method that updates a given endpoint and returns a\n\t * function to paint the marker onto the given canvas.\n\t */\n\taddMarker: function(type, funct)\n\t{\n\t\tmxMarker.markers[type] = funct;\n\t},\n\t\n\t/**\n\t * Function: createMarker\n\t * \n\t * Returns a function to paint the given marker.\n\t */\n\tcreateMarker: function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\tvar funct = mxMarker.markers[type];\n\t\t\n\t\treturn (funct != null) ? funct(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled) : null;\n\t}\n\n};\n\n/**\n * Adds the classic and block marker factory method.\n */\n(function()\n{\n\tfunction createArrow(widthFactor)\n\t{\n\t\twidthFactor = (widthFactor != null) ? widthFactor : 2;\n\t\t\n\t\treturn function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t\t{\n\t\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t\t// 26.565 degrees, 1/sin(26.565) = 2.236 / 2 = 1.118 ( / 2 allows for\n\t\t\t// only half the strokewidth is processed ).\n\t\t\tvar endOffsetX = unitX * sw * 1.118;\n\t\t\tvar endOffsetY = unitY * sw * 1.118;\n\t\t\t\n\t\t\tunitX = unitX * (size + sw);\n\t\t\tunitY = unitY * (size + sw);\n\t\n\t\t\tvar pt = pe.clone();\n\t\t\tpt.x -= endOffsetX;\n\t\t\tpt.y -= endOffsetY;\n\t\t\t\n\t\t\tvar f = (type != mxConstants.ARROW_CLASSIC && type != mxConstants.ARROW_CLASSIC_THIN) ? 1 : 3 / 4;\n\t\t\tpe.x += -unitX * f - endOffsetX;\n\t\t\tpe.y += -unitY * f - endOffsetY;\n\t\t\t\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tcanvas.begin();\n\t\t\t\tcanvas.moveTo(pt.x, pt.y);\n\t\t\t\tcanvas.lineTo(pt.x - unitX - unitY / widthFactor, pt.y - unitY + unitX / widthFactor);\n\t\t\t\n\t\t\t\tif (type == mxConstants.ARROW_CLASSIC || type == mxConstants.ARROW_CLASSIC_THIN)\n\t\t\t\t{\n\t\t\t\t\tcanvas.lineTo(pt.x - unitX * 3 / 4, pt.y - unitY * 3 / 4);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tcanvas.lineTo(pt.x + unitY / widthFactor - unitX, pt.y - unitY - unitX / widthFactor);\n\t\t\t\tcanvas.close();\n\t\n\t\t\t\tif (filled)\n\t\t\t\t{\n\t\t\t\t\tcanvas.fillAndStroke();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcanvas.stroke();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\t\n\tmxMarker.addMarker('classic', createArrow(2));\n\tmxMarker.addMarker('classicThin', createArrow(3));\n\tmxMarker.addMarker('block', createArrow(2));\n\tmxMarker.addMarker('blockThin', createArrow(3));\n\t\n\tfunction createOpenArrow(widthFactor)\n\t{\n\t\twidthFactor = (widthFactor != null) ? widthFactor : 2;\n\t\t\n\t\treturn function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t\t{\n\t\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t\t// 26.565 degrees, 1/sin(26.565) = 2.236 / 2 = 1.118 ( / 2 allows for\n\t\t\t// only half the strokewidth is processed ).\n\t\t\tvar endOffsetX = unitX * sw * 1.118;\n\t\t\tvar endOffsetY = unitY * sw * 1.118;\n\t\t\t\n\t\t\tunitX = unitX * (size + sw);\n\t\t\tunitY = unitY * (size + sw);\n\t\t\t\n\t\t\tvar pt = pe.clone();\n\t\t\tpt.x -= endOffsetX;\n\t\t\tpt.y -= endOffsetY;\n\t\t\t\n\t\t\tpe.x += -endOffsetX * 2;\n\t\t\tpe.y += -endOffsetY * 2;\n\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tcanvas.begin();\n\t\t\t\tcanvas.moveTo(pt.x - unitX - unitY / widthFactor, pt.y - unitY + unitX / widthFactor);\n\t\t\t\tcanvas.lineTo(pt.x, pt.y);\n\t\t\t\tcanvas.lineTo(pt.x + unitY / widthFactor - unitX, pt.y - unitY - unitX / widthFactor);\n\t\t\t\tcanvas.stroke();\n\t\t\t};\n\t\t}\n\t};\n\t\n\tmxMarker.addMarker('open', createOpenArrow(2));\n\tmxMarker.addMarker('openThin', createOpenArrow(3));\n\t\n\tmxMarker.addMarker('oval', function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\tvar a = size / 2;\n\t\t\n\t\tvar pt = pe.clone();\n\t\tpe.x -= unitX * a;\n\t\tpe.y -= unitY * a;\n\n\t\treturn function()\n\t\t{\n\t\t\tcanvas.ellipse(pt.x - a, pt.y - a, size, size);\n\t\t\t\t\t\t\n\t\t\tif (filled)\n\t\t\t{\n\t\t\t\tcanvas.fillAndStroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.stroke();\n\t\t\t}\n\t\t};\n\t});\n\n\tfunction diamond(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t// 45 degrees, 1/sin(45) = 1.4142 / 2 = 0.7071 ( / 2 allows for\n\t\t// only half the strokewidth is processed ). Or 0.9862 for thin diamond.\n\t\t// Note these values and the tk variable below are dependent, update\n\t\t// both together (saves trig hard coding it).\n\t\tvar swFactor = (type == mxConstants.ARROW_DIAMOND) ?  0.7071 : 0.9862;\n\t\tvar endOffsetX = unitX * sw * swFactor;\n\t\tvar endOffsetY = unitY * sw * swFactor;\n\t\t\n\t\tunitX = unitX * (size + sw);\n\t\tunitY = unitY * (size + sw);\n\t\t\n\t\tvar pt = pe.clone();\n\t\tpt.x -= endOffsetX;\n\t\tpt.y -= endOffsetY;\n\t\t\n\t\tpe.x += -unitX - endOffsetX;\n\t\tpe.y += -unitY - endOffsetY;\n\t\t\n\t\t// thickness factor for diamond\n\t\tvar tk = ((type == mxConstants.ARROW_DIAMOND) ?  2 : 3.4);\n\t\t\n\t\treturn function()\n\t\t{\n\t\t\tcanvas.begin();\n\t\t\tcanvas.moveTo(pt.x, pt.y);\n\t\t\tcanvas.lineTo(pt.x - unitX / 2 - unitY / tk, pt.y + unitX / tk - unitY / 2);\n\t\t\tcanvas.lineTo(pt.x - unitX, pt.y - unitY);\n\t\t\tcanvas.lineTo(pt.x - unitX / 2 + unitY / tk, pt.y - unitY / 2 - unitX / tk);\n\t\t\tcanvas.close();\n\t\t\t\n\t\t\tif (filled)\n\t\t\t{\n\t\t\t\tcanvas.fillAndStroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.stroke();\n\t\t\t}\n\t\t};\n\t};\n\n\tmxMarker.addMarker('diamond', diamond);\n\tmxMarker.addMarker('diamondThin', diamond);\n})();\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxActor\n *\n * Extends <mxShape> to implement an actor shape. If a custom shape with one\n * filled area is needed, then this shape's <redrawPath> should be overridden.\n * \n * Example:\n * \n * (code)\n * function SampleShape() { }\n * \n * SampleShape.prototype = new mxActor();\n * SampleShape.prototype.constructor = vsAseShape;\n * \n * mxCellRenderer.registerShape('sample', SampleShape);\n * SampleShape.prototype.redrawPath = function(path, x, y, w, h)\n * {\n *   path.moveTo(0, 0);\n *   path.lineTo(w, h);\n *   // ...\n *   path.close();\n * }\n * (end)\n * \n * This shape is registered under <mxConstants.SHAPE_ACTOR> in\n * <mxCellRenderer>.\n * \n * Constructor: mxActor\n *\n * Constructs a new actor shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxActor(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxActor, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxActor.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.translate(x, y);\n\tc.begin();\n\tthis.redrawPath(c, x, y, w, h);\n\tc.fillAndStroke();\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxActor.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar width = w/3;\n\tc.moveTo(0, h);\n\tc.curveTo(0, 3 * h / 5, 0, 2 * h / 5, w / 2, 2 * h / 5);\n\tc.curveTo(w / 2 - width, 2 * h / 5, w / 2 - width, 0, w / 2, 0);\n\tc.curveTo(w / 2 + width, 0, w / 2 + width, 2 * h / 5, w / 2, 2 * h / 5);\n\tc.curveTo(w, 2 * h / 5, w, 3 * h / 5, w, h);\n\tc.close();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCloud\n *\n * Extends <mxActor> to implement a cloud shape.\n * \n * This shape is registered under <mxConstants.SHAPE_CLOUD> in\n * <mxCellRenderer>.\n * \n * Constructor: mxCloud\n *\n * Constructs a new cloud shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxCloud(bounds, fill, stroke, strokewidth)\n{\n\tmxActor.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxCloud, mxActor);\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCloud.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tc.moveTo(0.25 * w, 0.25 * h);\n\tc.curveTo(0.05 * w, 0.25 * h, 0, 0.5 * h, 0.16 * w, 0.55 * h);\n\tc.curveTo(0, 0.66 * h, 0.18 * w, 0.9 * h, 0.31 * w, 0.8 * h);\n\tc.curveTo(0.4 * w, h, 0.7 * w, h, 0.8 * w, 0.8 * h);\n\tc.curveTo(w, 0.8 * h, w, 0.6 * h, 0.875 * w, 0.5 * h);\n\tc.curveTo(w, 0.3 * h, 0.8 * w, 0.1 * h, 0.625 * w, 0.2 * h);\n\tc.curveTo(0.5 * w, 0.05 * h, 0.3 * w, 0.05 * h, 0.25 * w, 0.25 * h);\n\tc.close();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRectangleShape\n *\n * Extends <mxShape> to implement a rectangle shape.\n * This shape is registered under <mxConstants.SHAPE_RECTANGLE>\n * in <mxCellRenderer>.\n * \n * Constructor: mxRectangleShape\n *\n * Constructs a new rectangle shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxRectangleShape(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxRectangleShape, mxShape);\n\n/**\n * Function: isHtmlAllowed\n *\n * Returns true for non-rounded, non-rotated shapes with no glass gradient.\n */\nmxRectangleShape.prototype.isHtmlAllowed = function()\n{\n\tvar events = true;\n\t\n\tif (this.style != null)\n\t{\n\t\tevents = mxUtils.getValue(this.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1';\t\t\n\t}\n\t\n\treturn !this.isRounded && !this.glass && this.rotation == 0 && (events ||\n\t\t(this.fill != null && this.fill != mxConstants.NONE));\n};\n\n/**\n * Function: paintBackground\n * \n * Generic background painting implementation.\n */\nmxRectangleShape.prototype.paintBackground = function(c, x, y, w, h)\n{\n\tvar events = true;\n\t\n\tif (this.style != null)\n\t{\n\t\tevents = mxUtils.getValue(this.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1';\n\t}\n\t\n\tif (events || (this.fill != null && this.fill != mxConstants.NONE) ||\n\t\t(this.stroke != null && this.stroke != mxConstants.NONE))\n\t{\n\t\tif (!events && (this.fill == null || this.fill == mxConstants.NONE))\n\t\t{\n\t\t\tc.pointerEvents = false;\n\t\t}\n\t\t\n\t\tif (this.isRounded)\n\t\t{\n\t\t\tvar r = 0;\n\t\t\t\n\t\t\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ABSOLUTE_ARCSIZE, 0) == '1')\n\t\t\t{\n\t\t\t\tr = Math.min(w / 2, Math.min(h / 2, mxUtils.getValue(this.style,\n\t\t\t\t\tmxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE,\n\t\t\t\t\tmxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\t\t\t\tr = Math.min(w * f, h * f);\n\t\t\t}\n\t\t\t\n\t\t\tc.roundrect(x, y, w, h, r, r);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.rect(x, y, w, h);\n\t\t}\n\t\t\t\n\t\tc.fillAndStroke();\n\t}\n};\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxRectangleShape.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn true;\n};\n\n/**\n * Function: paintForeground\n * \n * Generic background painting implementation.\n */\nmxRectangleShape.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tif (this.glass && !this.outline && this.fill != null && this.fill != mxConstants.NONE)\n\t{\n\t\tthis.paintGlassEffect(c, x, y, w, h, this.getArcSize(w + this.strokewidth, h + this.strokewidth));\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEllipse\n *\n * Extends <mxShape> to implement an ellipse shape.\n * This shape is registered under <mxConstants.SHAPE_ELLIPSE>\n * in <mxCellRenderer>.\n * \n * Constructor: mxEllipse\n *\n * Constructs a new ellipse shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxEllipse(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxEllipse, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Paints the ellipse shape.\n */\nmxEllipse.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.ellipse(x, y, w, h);\n\tc.fillAndStroke();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDoubleEllipse\n *\n * Extends <mxShape> to implement a double ellipse shape. This shape is\n * registered under <mxConstants.SHAPE_DOUBLE_ELLIPSE> in <mxCellRenderer>.\n * Use the following override to only fill the inner ellipse in this shape:\n * \n * (code)\n * mxDoubleEllipse.prototype.paintVertexShape = function(c, x, y, w, h)\n * {\n *   c.ellipse(x, y, w, h);\n *   c.stroke();\n *   \n *   var inset = mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth, Math.min(w / 5, h / 5)));\n *   x += inset;\n *   y += inset;\n *   w -= 2 * inset;\n *   h -= 2 * inset;\n *   \n *   if (w > 0 && h > 0)\n *   {\n *     c.ellipse(x, y, w, h);\n *   }\n *   \n *   c.fillAndStroke();\n * };\n * (end)\n * \n * Constructor: mxDoubleEllipse\n *\n * Constructs a new ellipse shape.\n *\n * Parameters:\n *\n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxDoubleEllipse(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxDoubleEllipse, mxShape);\n\n/**\n * Variable: vmlScale\n * \n * Scale for improving the precision of VML rendering. Default is 10.\n */\nmxDoubleEllipse.prototype.vmlScale = 10;\n\n/**\n * Function: paintBackground\n * \n * Paints the background.\n */\nmxDoubleEllipse.prototype.paintBackground = function(c, x, y, w, h)\n{\n\tc.ellipse(x, y, w, h);\n\tc.fillAndStroke();\n};\n\n/**\n * Function: paintForeground\n * \n * Paints the foreground.\n */\nmxDoubleEllipse.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tif (!this.outline)\n\t{\n\t\tvar margin = mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth, Math.min(w / 5, h / 5)));\n\t\tx += margin;\n\t\ty += margin;\n\t\tw -= 2 * margin;\n\t\th -= 2 * margin;\n\t\t\n\t\t// FIXME: Rounding issues in IE8 standards mode (not in 1.x)\n\t\tif (w > 0 && h > 0)\n\t\t{\n\t\t\tc.ellipse(x, y, w, h);\n\t\t}\n\t\t\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the bounds for the label.\n */\nmxDoubleEllipse.prototype.getLabelBounds = function(rect)\n{\n\tvar margin = (mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth,\n\t\t\tMath.min(rect.width / 5 / this.scale, rect.height / 5 / this.scale)))) * this.scale;\n\n\treturn new mxRectangle(rect.x + margin, rect.y + margin, rect.width - 2 * margin, rect.height - 2 * margin);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRhombus\n *\n * Extends <mxShape> to implement a rhombus (aka diamond) shape.\n * This shape is registered under <mxConstants.SHAPE_RHOMBUS>\n * in <mxCellRenderer>.\n * \n * Constructor: mxRhombus\n *\n * Constructs a new rhombus shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxRhombus(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxRhombus, mxShape);\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxRhombus.prototype.isRoundable = function()\n{\n\treturn true;\n};\n\n/**\n * Function: paintVertexShape\n * \n * Generic painting implementation.\n */\nmxRhombus.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar hw = w / 2;\n\tvar hh = h / 2;\n\t\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tc.begin();\n\tthis.addPoints(c, [new mxPoint(x + hw, y), new mxPoint(x + w, y + hh), new mxPoint(x + hw, y + h),\n\t     new mxPoint(x, y + hh)], this.isRounded, arcSize, true);\n\tc.fillAndStroke();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPolyline\n *\n * Extends <mxShape> to implement a polyline (a line with multiple points).\n * This shape is registered under <mxConstants.SHAPE_POLYLINE> in\n * <mxCellRenderer>.\n * \n * Constructor: mxPolyline\n *\n * Constructs a new polyline shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * stroke - String that defines the stroke color. Default is 'black'. This is\n * stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxPolyline(points, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxPolyline, mxShape);\n\n/**\n * Function: getRotation\n * \n * Returns 0.\n */\nmxPolyline.prototype.getRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns 0.\n */\nmxPolyline.prototype.getShapeRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Returns false.\n */\nmxPolyline.prototype.isPaintBoundsInverted = function()\n{\n\treturn false;\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintEdgeShape = function(c, pts)\n{\n\tvar prev = c.pointerEventsValue;\n\tc.pointerEventsValue = 'stroke';\n\t\n\tif (this.style == null || this.style[mxConstants.STYLE_CURVED] != 1)\n\t{\n\t\tthis.paintLine(c, pts, this.isRounded);\n\t}\n\telse\n\t{\n\t\tthis.paintCurvedLine(c, pts);\n\t}\n\t\n\tc.pointerEventsValue = prev;\n};\n\n/**\n * Function: paintLine\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintLine = function(c, pts, rounded)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tc.begin();\n\tthis.addPoints(c, pts, rounded, arcSize, false);\n\tc.stroke();\n};\n\n/**\n * Function: paintLine\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintCurvedLine = function(c, pts)\n{\n\tc.begin();\n\t\n\tvar pt = pts[0];\n\tvar n = pts.length;\n\t\n\tc.moveTo(pt.x, pt.y);\n\t\n\tfor (var i = 1; i < n - 2; i++)\n\t{\n\t\tvar p0 = pts[i];\n\t\tvar p1 = pts[i + 1];\n\t\tvar ix = (p0.x + p1.x) / 2;\n\t\tvar iy = (p0.y + p1.y) / 2;\n\t\t\n\t\tc.quadTo(p0.x, p0.y, ix, iy);\n\t}\n\t\n\tvar p0 = pts[n - 2];\n\tvar p1 = pts[n - 1];\n\t\n\tc.quadTo(p0.x, p0.y, p1.x, p1.y);\n\tc.stroke();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxArrow\n *\n * Extends <mxShape> to implement an arrow shape. (The shape\n * is used to represent edges, not vertices.)\n * This shape is registered under <mxConstants.SHAPE_ARROW>\n * in <mxCellRenderer>.\n * \n * Constructor: mxArrow\n *\n * Constructs a new arrow shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n * arrowWidth - Optional integer that defines the arrow width. Default is\n * <mxConstants.ARROW_WIDTH>. This is stored in <arrowWidth>.\n * spacing - Optional integer that defines the spacing between the arrow shape\n * and its endpoints. Default is <mxConstants.ARROW_SPACING>. This is stored in\n * <spacing>.\n * endSize - Optional integer that defines the size of the arrowhead. Default\n * is <mxConstants.ARROW_SIZE>. This is stored in <endSize>.\n */\nfunction mxArrow(points, fill, stroke, strokewidth, arrowWidth, spacing, endSize)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.arrowWidth = (arrowWidth != null) ? arrowWidth : mxConstants.ARROW_WIDTH;\n\tthis.spacing = (spacing != null) ? spacing : mxConstants.ARROW_SPACING;\n\tthis.endSize = (endSize != null) ? endSize : mxConstants.ARROW_SIZE;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxArrow, mxShape);\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the edge width and markers.\n */\nmxArrow.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\tvar w = Math.max(this.arrowWidth, this.endSize);\n\tbbox.grow((w / 2 + this.strokewidth) * this.scale);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrow.prototype.paintEdgeShape = function(c, pts)\n{\n\t// Geometry of arrow\n\tvar spacing =  mxConstants.ARROW_SPACING;\n\tvar width = mxConstants.ARROW_WIDTH;\n\tvar arrow = mxConstants.ARROW_SIZE;\n\n\t// Base vector (between end points)\n\tvar p0 = pts[0];\n\tvar pe = pts[pts.length - 1];\n\tvar dx = pe.x - p0.x;\n\tvar dy = pe.y - p0.y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\tvar length = dist - 2 * spacing - arrow;\n\t\n\t// Computes the norm and the inverse norm\n\tvar nx = dx / dist;\n\tvar ny = dy / dist;\n\tvar basex = length * nx;\n\tvar basey = length * ny;\n\tvar floorx = width * ny/3;\n\tvar floory = -width * nx/3;\n\t\n\t// Computes points\n\tvar p0x = p0.x - floorx / 2 + spacing * nx;\n\tvar p0y = p0.y - floory / 2 + spacing * ny;\n\tvar p1x = p0x + floorx;\n\tvar p1y = p0y + floory;\n\tvar p2x = p1x + basex;\n\tvar p2y = p1y + basey;\n\tvar p3x = p2x + floorx;\n\tvar p3y = p2y + floory;\n\t// p4 not necessary\n\tvar p5x = p3x - 3 * floorx;\n\tvar p5y = p3y - 3 * floory;\n\t\n\tc.begin();\n\tc.moveTo(p0x, p0y);\n\tc.lineTo(p1x, p1y);\n\tc.lineTo(p2x, p2y);\n\tc.lineTo(p3x, p3y);\n\tc.lineTo(pe.x - spacing * nx, pe.y - spacing * ny);\n\tc.lineTo(p5x, p5y);\n\tc.lineTo(p5x + floorx, p5y + floory);\n\tc.close();\n\n\tc.fillAndStroke();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxArrowConnector\n *\n * Extends <mxShape> to implement an new rounded arrow shape with support for\n * waypoints and double arrows. (The shape is used to represent edges, not\n * vertices.) This shape is registered under <mxConstants.SHAPE_ARROW_CONNECTOR>\n * in <mxCellRenderer>.\n * \n * Constructor: mxArrowConnector\n *\n * Constructs a new arrow shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n * arrowWidth - Optional integer that defines the arrow width. Default is\n * <mxConstants.ARROW_WIDTH>. This is stored in <arrowWidth>.\n * spacing - Optional integer that defines the spacing between the arrow shape\n * and its endpoints. Default is <mxConstants.ARROW_SPACING>. This is stored in\n * <spacing>.\n * endSize - Optional integer that defines the size of the arrowhead. Default\n * is <mxConstants.ARROW_SIZE>. This is stored in <endSize>.\n */\nfunction mxArrowConnector(points, fill, stroke, strokewidth, arrowWidth, spacing, endSize)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.arrowWidth = (arrowWidth != null) ? arrowWidth : mxConstants.ARROW_WIDTH;\n\tthis.arrowSpacing = (spacing != null) ? spacing : mxConstants.ARROW_SPACING;\n\tthis.startSize = mxConstants.ARROW_SIZE / 5;\n\tthis.endSize = mxConstants.ARROW_SIZE / 5;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxArrowConnector, mxShape);\n\n/**\n * Variable: useSvgBoundingBox\n * \n * Allows to use the SVG bounding box in SVG. Default is false for performance\n * reasons.\n */\nmxArrowConnector.prototype.useSvgBoundingBox = true;\n\n/**\n * Variable: resetStyles\n * \n * Overrides mxShape to reset spacing.\n */\nmxArrowConnector.prototype.resetStyles = function()\n{\n\tmxShape.prototype.resetStyles.apply(this, arguments);\n\t\n\tthis.arrowSpacing = mxConstants.ARROW_SPACING;\n};\n\n/**\n * Overrides apply to get smooth transition from default start- and endsize.\n */\nmxArrowConnector.prototype.apply = function(state)\n{\n\tmxShape.prototype.apply.apply(this, arguments);\n\n\tif (this.style != null)\n\t{\n\t\tthis.startSize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.ARROW_SIZE / 5) * 3;\n\t\tthis.endSize = mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, mxConstants.ARROW_SIZE / 5) * 3;\n\t}\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the edge width and markers.\n */\nmxArrowConnector.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\tvar w = this.getEdgeWidth();\n\t\n\tif (this.isMarkerStart())\n\t{\n\t\tw = Math.max(w, this.getStartArrowWidth());\n\t}\n\t\n\tif (this.isMarkerEnd())\n\t{\n\t\tw = Math.max(w, this.getEndArrowWidth());\n\t}\n\t\n\tbbox.grow((w / 2 + this.strokewidth) * this.scale);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrowConnector.prototype.paintEdgeShape = function(c, pts)\n{\n\t// Geometry of arrow\n\tvar strokeWidth = this.strokewidth;\n\t\n\tif (this.outline)\n\t{\n\t\tstrokeWidth = Math.max(1, mxUtils.getNumber(this.style, mxConstants.STYLE_STROKEWIDTH, this.strokewidth));\n\t}\n\t\n\tvar startWidth = this.getStartArrowWidth() + strokeWidth;\n\tvar endWidth = this.getEndArrowWidth() + strokeWidth;\n\tvar edgeWidth = this.outline ? this.getEdgeWidth() + strokeWidth : this.getEdgeWidth();\n\tvar openEnded = this.isOpenEnded();\n\tvar markerStart = this.isMarkerStart();\n\tvar markerEnd = this.isMarkerEnd();\n\tvar spacing = (openEnded) ? 0 : this.arrowSpacing + strokeWidth / 2;\n\tvar startSize = this.startSize + strokeWidth;\n\tvar endSize = this.endSize + strokeWidth;\n\tvar isRounded = this.isArrowRounded();\n\t\n\t// Base vector (between first points)\n\tvar pe = pts[pts.length - 1];\n\n\t// Finds first non-overlapping point\n\tvar i0 = 1;\n\t\n\twhile (i0 < pts.length - 1 && pts[i0].x == pts[0].x && pts[i0].y == pts[0].y)\n\t{\n\t\ti0++;\n\t}\n\t\n\tvar dx = pts[i0].x - pts[0].x;\n\tvar dy = pts[i0].y - pts[0].y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\n\tif (dist == 0)\n\t{\n\t\treturn;\n\t}\n\t\n\t// Computes the norm and the inverse norm\n\tvar nx = dx / dist;\n\tvar nx2, nx1 = nx;\n\tvar ny = dy / dist;\n\tvar ny2, ny1 = ny;\n\tvar orthx = edgeWidth * ny;\n\tvar orthy = -edgeWidth * nx;\n\t\n\t// Stores the inbound function calls in reverse order in fns\n\tvar fns = [];\n\t\n\tif (isRounded)\n\t{\n\t\tc.setLineJoin('round');\n\t}\n\telse if (pts.length > 2)\n\t{\n\t\t// Only mitre if there are waypoints\n\t\tc.setMiterLimit(1.42);\n\t}\n\n\tc.begin();\n\n\tvar startNx = nx;\n\tvar startNy = ny;\n\n\tif (markerStart && !openEnded)\n\t{\n\t\tthis.paintMarker(c, pts[0].x, pts[0].y, nx, ny, startSize, startWidth, edgeWidth, spacing, true);\n\t}\n\telse\n\t{\n\t\tvar outStartX = pts[0].x + orthx / 2 + spacing * nx;\n\t\tvar outStartY = pts[0].y + orthy / 2 + spacing * ny;\n\t\tvar inEndX = pts[0].x - orthx / 2 + spacing * nx;\n\t\tvar inEndY = pts[0].y - orthy / 2 + spacing * ny;\n\t\t\n\t\tif (openEnded)\n\t\t{\n\t\t\tc.moveTo(outStartX, outStartY);\n\t\t\t\n\t\t\tfns.push(function()\n\t\t\t{\n\t\t\t\tc.lineTo(inEndX, inEndY);\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(inEndX, inEndY);\n\t\t\tc.lineTo(outStartX, outStartY);\n\t\t}\n\t}\n\t\n\tvar dx1 = 0;\n\tvar dy1 = 0;\n\tvar dist1 = 0;\n\n\tfor (var i = 0; i < pts.length - 2; i++)\n\t{\n\t\t// Work out in which direction the line is bending\n\t\tvar pos = mxUtils.relativeCcw(pts[i].x, pts[i].y, pts[i+1].x, pts[i+1].y, pts[i+2].x, pts[i+2].y);\n\n\t\tdx1 = pts[i+2].x - pts[i+1].x;\n\t\tdy1 = pts[i+2].y - pts[i+1].y;\n\n\t\tdist1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n\t\t\n\t\tif (dist1 != 0)\n\t\t{\n\t\t\tnx1 = dx1 / dist1;\n\t\t\tny1 = dy1 / dist1;\n\t\t\t\n\t\t\tvar tmp1 = nx * nx1 + ny * ny1;\n\t\t\tvar tmp = Math.max(Math.sqrt((tmp1 + 1) / 2), 0.04);\n\t\t\t\n\t\t\t// Work out the normal orthogonal to the line through the control point and the edge sides intersection\n\t\t\tnx2 = (nx + nx1);\n\t\t\tny2 = (ny + ny1);\n\t\n\t\t\tvar dist2 = Math.sqrt(nx2 * nx2 + ny2 * ny2);\n\t\t\t\n\t\t\tif (dist2 != 0)\n\t\t\t{\n\t\t\t\tnx2 = nx2 / dist2;\n\t\t\t\tny2 = ny2 / dist2;\n\t\t\t\t\n\t\t\t\t// Higher strokewidths require a larger minimum bend, 0.35 covers all but the most extreme cases\n\t\t\t\tvar strokeWidthFactor = Math.max(tmp, Math.min(this.strokewidth / 200 + 0.04, 0.35));\n\t\t\t\tvar angleFactor = (pos != 0 && isRounded) ? Math.max(0.1, strokeWidthFactor) : Math.max(tmp, 0.06);\n\n\t\t\t\tvar outX = pts[i+1].x + ny2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar outY = pts[i+1].y - nx2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar inX = pts[i+1].x - ny2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar inY = pts[i+1].y + nx2 * edgeWidth / 2 / angleFactor;\n\t\t\t\t\n\t\t\t\tif (pos == 0 || !isRounded)\n\t\t\t\t{\n\t\t\t\t\t// If the two segments are aligned, or if we're not drawing curved sections between segments\n\t\t\t\t\t// just draw straight to the intersection point\n\t\t\t\t\tc.lineTo(outX, outY);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(x, y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\telse if (pos == -1)\n\t\t\t\t{\n\t\t\t\t\tvar c1x = inX + ny * edgeWidth;\n\t\t\t\t\tvar c1y = inY - nx * edgeWidth;\n\t\t\t\t\tvar c2x = inX + ny1 * edgeWidth;\n\t\t\t\t\tvar c2y = inY - nx1 * edgeWidth;\n\t\t\t\t\tc.lineTo(c1x, c1y);\n\t\t\t\t\tc.quadTo(outX, outY, c2x, c2y);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(x, y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tc.lineTo(outX, outY);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c1x = outX - ny * edgeWidth;\n\t\t\t\t\t\tvar c1y = outY + nx * edgeWidth;\n\t\t\t\t\t\tvar c2x = outX - ny1 * edgeWidth;\n\t\t\t\t\t\tvar c2y = outY + nx1 * edgeWidth;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.quadTo(x, y, c1x, c1y);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(c2x, c2y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnx = nx1;\n\t\t\t\tny = ny1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\torthx = edgeWidth * ny1;\n\torthy = - edgeWidth * nx1;\n\n\tif (markerEnd && !openEnded)\n\t{\n\t\tthis.paintMarker(c, pe.x, pe.y, -nx, -ny, endSize, endWidth, edgeWidth, spacing, false);\n\t}\n\telse\n\t{\n\t\tc.lineTo(pe.x - spacing * nx1 + orthx / 2, pe.y - spacing * ny1 + orthy / 2);\n\t\t\n\t\tvar inStartX = pe.x - spacing * nx1 - orthx / 2;\n\t\tvar inStartY = pe.y - spacing * ny1 - orthy / 2;\n\n\t\tif (!openEnded)\n\t\t{\n\t\t\tc.lineTo(inStartX, inStartY);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(inStartX, inStartY);\n\t\t\t\n\t\t\tfns.splice(0, 0, function()\n\t\t\t{\n\t\t\t\tc.moveTo(inStartX, inStartY);\n\t\t\t});\n\t\t}\n\t}\n\t\n\tfor (var i = fns.length - 1; i >= 0; i--)\n\t{\n\t\tfns[i]();\n\t}\n\n\tif (openEnded)\n\t{\n\t\tc.end();\n\t\tc.stroke();\n\t}\n\telse\n\t{\n\t\tc.close();\n\t\tc.fillAndStroke();\n\t}\n\t\n\t// Workaround for shadow on top of base arrow\n\tc.setShadow(false);\n\t\n\t// Need to redraw the markers without the low miter limit\n\tc.setMiterLimit(4);\n\t\n\tif (isRounded)\n\t{\n\t\tc.setLineJoin('flat');\n\t}\n\n\tif (pts.length > 2)\n\t{\n\t\t// Only to repaint markers if no waypoints\n\t\t// Need to redraw the markers without the low miter limit\n\t\tc.setMiterLimit(4);\n\t\tif (markerStart && !openEnded)\n\t\t{\n\t\t\tc.begin();\n\t\t\tthis.paintMarker(c, pts[0].x, pts[0].y, startNx, startNy, startSize, startWidth, edgeWidth, spacing, true);\n\t\t\tc.stroke();\n\t\t\tc.end();\n\t\t}\n\t\t\n\t\tif (markerEnd && !openEnded)\n\t\t{\n\t\t\tc.begin();\n\t\t\tthis.paintMarker(c, pe.x, pe.y, -nx, -ny, endSize, endWidth, edgeWidth, spacing, true);\n\t\t\tc.stroke();\n\t\t\tc.end();\n\t\t}\n\t}\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrowConnector.prototype.paintMarker = function(c, ptX, ptY, nx, ny, size, arrowWidth, edgeWidth, spacing, initialMove)\n{\n\tvar widthArrowRatio = edgeWidth / arrowWidth;\n\tvar orthx = edgeWidth * ny / 2;\n\tvar orthy = -edgeWidth * nx / 2;\n\n\tvar spaceX = (spacing + size) * nx;\n\tvar spaceY = (spacing + size) * ny;\n\n\tif (initialMove)\n\t{\n\t\tc.moveTo(ptX - orthx + spaceX, ptY - orthy + spaceY);\n\t}\n\telse\n\t{\n\t\tc.lineTo(ptX - orthx + spaceX, ptY - orthy + spaceY);\n\t}\n\n\tc.lineTo(ptX - orthx / widthArrowRatio + spaceX, ptY - orthy / widthArrowRatio + spaceY);\n\tc.lineTo(ptX + spacing * nx, ptY + spacing * ny);\n\tc.lineTo(ptX + orthx / widthArrowRatio + spaceX, ptY + orthy / widthArrowRatio + spaceY);\n\tc.lineTo(ptX + orthx + spaceX, ptY + orthy + spaceY);\n}\n\n/**\n * Function: isArrowRounded\n * \n * Returns wether the arrow is rounded\n */\nmxArrowConnector.prototype.isArrowRounded = function()\n{\n\treturn this.isRounded;\n};\n\n/**\n * Function: getStartArrowWidth\n * \n * Returns the width of the start arrow\n */\nmxArrowConnector.prototype.getStartArrowWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH;\n};\n\n/**\n * Function: getEndArrowWidth\n * \n * Returns the width of the end arrow\n */\nmxArrowConnector.prototype.getEndArrowWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH;\n};\n\n/**\n * Function: getEdgeWidth\n * \n * Returns the width of the body of the edge\n */\nmxArrowConnector.prototype.getEdgeWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH / 3;\n};\n\n/**\n * Function: isOpenEnded\n * \n * Returns whether the ends of the shape are drawn\n */\nmxArrowConnector.prototype.isOpenEnded = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isMarkerStart\n * \n * Returns whether the start marker is drawn\n */\nmxArrowConnector.prototype.isMarkerStart = function()\n{\n\treturn (mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, mxConstants.NONE) != mxConstants.NONE);\n};\n\n/**\n * Function: isMarkerEnd\n * \n * Returns whether the end marker is drawn\n */\nmxArrowConnector.prototype.isMarkerEnd = function()\n{\n\treturn (mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, mxConstants.NONE) != mxConstants.NONE);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxText\n *\n * Extends <mxShape> to implement a text shape. To change vertical text from\n * bottom to top to top to bottom, the following code can be used:\n * \n * (code)\n * mxText.prototype.verticalTextRotation = 90;\n * (end)\n * \n * Constructor: mxText\n *\n * Constructs a new text shape.\n * \n * Parameters:\n * \n * value - String that represents the text to be displayed. This is stored in\n * <value>.\n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * align - Specifies the horizontal alignment. Default is ''. This is stored in\n * <align>.\n * valign - Specifies the vertical alignment. Default is ''. This is stored in\n * <valign>.\n * color - String that specifies the text color. Default is 'black'. This is\n * stored in <color>.\n * family - String that specifies the font family. Default is\n * <mxConstants.DEFAULT_FONTFAMILY>. This is stored in <family>.\n * size - Integer that specifies the font size. Default is\n * <mxConstants.DEFAULT_FONTSIZE>. This is stored in <size>.\n * fontStyle - Specifies the font style. Default is 0. This is stored in\n * <fontStyle>.\n * spacing - Integer that specifies the global spacing. Default is 2. This is\n * stored in <spacing>.\n * spacingTop - Integer that specifies the top spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingTop>.\n * spacingRight - Integer that specifies the right spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingRight>.\n * spacingBottom - Integer that specifies the bottom spacing. Default is 0.The\n * sum of the spacing and this is stored in <spacingBottom>.\n * spacingLeft - Integer that specifies the left spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingLeft>.\n * horizontal - Boolean that specifies if the label is horizontal. Default is\n * true. This is stored in <horizontal>.\n * background - String that specifies the background color. Default is null.\n * This is stored in <background>.\n * border - String that specifies the label border color. Default is null.\n * This is stored in <border>.\n * wrap - Specifies if word-wrapping should be enabled. Default is false.\n * This is stored in <wrap>.\n * clipped - Specifies if the label should be clipped. Default is false.\n * This is stored in <clipped>.\n * overflow - Value of the overflow style. Default is 'visible'.\n */\nfunction mxText(value, bounds, align, valign, color,\n\tfamily,\tsize, fontStyle, spacing, spacingTop, spacingRight,\n\tspacingBottom, spacingLeft, horizontal, background, border,\n\twrap, clipped, overflow, labelPadding, textDirection)\n{\n\tmxShape.call(this);\n\tthis.value = value;\n\tthis.bounds = bounds;\n\tthis.color = (color != null) ? color : 'black';\n\tthis.align = (align != null) ? align : mxConstants.ALIGN_CENTER;\n\tthis.valign = (valign != null) ? valign : mxConstants.ALIGN_MIDDLE;\n\tthis.family = (family != null) ? family : mxConstants.DEFAULT_FONTFAMILY;\n\tthis.size = (size != null) ? size : mxConstants.DEFAULT_FONTSIZE;\n\tthis.fontStyle = (fontStyle != null) ? fontStyle : mxConstants.DEFAULT_FONTSTYLE;\n\tthis.spacing = parseInt(spacing || 2);\n\tthis.spacingTop = this.spacing + parseInt(spacingTop || 0);\n\tthis.spacingRight = this.spacing + parseInt(spacingRight || 0);\n\tthis.spacingBottom = this.spacing + parseInt(spacingBottom || 0);\n\tthis.spacingLeft = this.spacing + parseInt(spacingLeft || 0);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.background = background;\n\tthis.border = border;\n\tthis.wrap = (wrap != null) ? wrap : false;\n\tthis.clipped = (clipped != null) ? clipped : false;\n\tthis.overflow = (overflow != null) ? overflow : 'visible';\n\tthis.labelPadding = (labelPadding != null) ? labelPadding : 0;\n\tthis.textDirection = textDirection;\n\tthis.rotation = 0;\n\tthis.updateMargin();\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxText, mxShape);\n\n/**\n * Variable: baseSpacingTop\n * \n * Specifies the spacing to be added to the top spacing. Default is 0. Use the\n * value 5 here to get the same label positions as in mxGraph 1.x.\n */\nmxText.prototype.baseSpacingTop = 0;\n\n/**\n * Variable: baseSpacingBottom\n * \n * Specifies the spacing to be added to the bottom spacing. Default is 0. Use the\n * value 1 here to get the same label positions as in mxGraph 1.x.\n */\nmxText.prototype.baseSpacingBottom = 0;\n\n/**\n * Variable: baseSpacingLeft\n * \n * Specifies the spacing to be added to the left spacing. Default is 0.\n */\nmxText.prototype.baseSpacingLeft = 0;\n\n/**\n * Variable: baseSpacingRight\n * \n * Specifies the spacing to be added to the right spacing. Default is 0.\n */\nmxText.prototype.baseSpacingRight = 0;\n\n/**\n * Variable: replaceLinefeeds\n * \n * Specifies if linefeeds in HTML labels should be replaced with BR tags.\n * Default is true.\n */\nmxText.prototype.replaceLinefeeds = true;\n\n/**\n * Variable: verticalTextRotation\n * \n * Rotation for vertical text. Default is -90 (bottom to top).\n */\nmxText.prototype.verticalTextRotation = -90;\n\n/**\n * Variable: ignoreClippedStringSize\n * \n * Specifies if the string size should be measured in <updateBoundingBox> if\n * the label is clipped and the label position is center and middle. If this is\n * true, then the bounding box will be set to <bounds>. Default is true.\n * <ignoreStringSize> has precedence over this switch.\n */\nmxText.prototype.ignoreClippedStringSize = true;\n\n/**\n * Variable: ignoreStringSize\n * \n * Specifies if the actual string size should be measured. If disabled the\n * boundingBox will not ignore the actual size of the string, otherwise\n * <bounds> will be used instead. Default is false.\n */\nmxText.prototype.ignoreStringSize = false;\n\n/**\n * Variable: textWidthPadding\n * \n * Specifies the padding to be added to the text width for the bounding box.\n * This is needed to make sure no clipping is applied to borders. Default is 4\n * for IE 8 standards mode and 3 for all others.\n */\nmxText.prototype.textWidthPadding = (document.documentMode == 8 && !mxClient.IS_EM) ? 4 : 3;\n\n/**\n * Variable: lastValue\n * \n * Contains the last rendered text value. Used for caching.\n */\nmxText.prototype.lastValue = null;\n\n/**\n * Variable: cacheEnabled\n * \n * Specifies if caching for HTML labels should be enabled. Default is true.\n */\nmxText.prototype.cacheEnabled = true;\n\n/**\n * Function: isParseVml\n * \n * Text shapes do not contain VML markup and do not need to be parsed. This\n * method returns false to speed up rendering in IE8.\n */\nmxText.prototype.isParseVml = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation returns\n * true if the browser is not in IE8 standards mode.\n */\nmxText.prototype.isHtmlAllowed = function()\n{\n\treturn document.documentMode != 8 || mxClient.IS_EM;\n};\n\n/**\n * Function: getSvgScreenOffset\n * \n * Disables offset in IE9 for crisper image output.\n */\nmxText.prototype.getSvgScreenOffset = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: checkBounds\n * \n * Returns true if the bounds are not null and all of its variables are numeric.\n */\nmxText.prototype.checkBounds = function()\n{\n\treturn (!isNaN(this.scale) && isFinite(this.scale) && this.scale > 0 &&\n\t\t\tthis.bounds != null && !isNaN(this.bounds.x) && !isNaN(this.bounds.y) &&\n\t\t\t!isNaN(this.bounds.width) && !isNaN(this.bounds.height));\n};\n\n/**\n * Function: paint\n * \n * Generic rendering code.\n */\nmxText.prototype.paint = function(c, update)\n{\n\t// Scale is passed-through to canvas\n\tvar s = this.scale;\n\tvar x = this.bounds.x / s;\n\tvar y = this.bounds.y / s;\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\t\n\tthis.updateTransform(c, x, y, w, h);\n\tthis.configureCanvas(c, x, y, w, h);\n\n\tvar unscaledWidth = (this.state != null) ? this.state.unscaledWidth : null;\n\n\tif (update)\n\t{\n\t\tif (this.node.firstChild != null && (unscaledWidth == null ||\n\t\t\tthis.lastUnscaledWidth != unscaledWidth))\n\t\t{\n\t\t\tc.invalidateCachedOffsetSize(this.node);\n\t\t}\n\n\t\tc.updateText(x, y, w, h, this.align, this.valign, this.wrap, this.overflow,\n\t\t\t\tthis.clipped, this.getTextRotation(), this.node);\n\t}\n\telse\n\t{\n\t\t// Checks if text contains HTML markup\n\t\tvar realHtml = mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML;\n\t\t\n\t\t// Always renders labels as HTML in VML\n\t\tvar fmt = (realHtml || c instanceof mxVmlCanvas2D) ? 'html' : '';\n\t\tvar val = this.value;\n\t\t\n\t\tif (!realHtml && fmt == 'html')\n\t\t{\n\t\t\tval =  mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\tif (fmt == 'html' && !mxUtils.isNode(this.value))\n\t\t{\n\t\t\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\t\t\t\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = (!mxUtils.isNode(this.value) && this.replaceLinefeeds && fmt == 'html') ?\n\t\t\tval.replace(/\\n/g, '<br/>') : val;\n\t\t\t\n\t\tvar dir = this.textDirection;\n\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO && !realHtml)\n\t\t{\n\t\t\tdir = this.getAutoDirection();\n\t\t}\n\t\t\n\t\tif (dir != mxConstants.TEXT_DIRECTION_LTR && dir != mxConstants.TEXT_DIRECTION_RTL)\n\t\t{\n\t\t\tdir = null;\n\t\t}\n\t\n\t\tc.text(x, y, w, h, val, this.align, this.valign, this.wrap, fmt, this.overflow,\n\t\t\tthis.clipped, this.getTextRotation(), dir);\n\t}\n\t\n\t// Needs to invalidate the cached offset widths if the geometry changes\n\tthis.lastUnscaledWidth = unscaledWidth;\n};\n\n/**\n * Function: redraw\n * \n * Renders the text using the given DOM nodes.\n */\nmxText.prototype.redraw = function()\n{\n\tif (this.visible && this.checkBounds() && this.cacheEnabled && this.lastValue == this.value &&\n\t\t(mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML))\n\t{\n\t\tif (this.node.nodeName == 'DIV' && (this.isHtmlAllowed() || !mxClient.IS_VML))\n\t\t{\n\t\t\tthis.updateSize(this.node, (this.state == null || this.state.view.textDiv == null));\n\n\t\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode <= 8))\n\t\t\t{\n\t\t\t\tthis.updateHtmlFilter();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.updateHtmlTransform();\n\t\t\t}\n\t\t\t\n\t\t\tthis.updateBoundingBox();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar canvas = this.createCanvas();\n\n\t\t\tif (canvas != null && canvas.updateText != null &&\n\t\t\t\tcanvas.invalidateCachedOffsetSize != null)\n\t\t\t{\n\t\t\t\tthis.paint(canvas, true);\n\t\t\t\tthis.destroyCanvas(canvas);\n\t\t\t\tthis.updateBoundingBox();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Fallback if canvas does not support updateText (VML)\n\t\t\t\tmxShape.prototype.redraw.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxShape.prototype.redraw.apply(this, arguments);\n\t\t\n\t\tif (mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\tthis.lastValue = this.value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.lastValue = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: resetStyles\n * \n * Resets all styles.\n */\nmxText.prototype.resetStyles = function()\n{\n\tmxShape.prototype.resetStyles.apply(this, arguments);\n\t\n\tthis.color = 'black';\n\tthis.align = mxConstants.ALIGN_CENTER;\n\tthis.valign = mxConstants.ALIGN_MIDDLE;\n\tthis.family = mxConstants.DEFAULT_FONTFAMILY;\n\tthis.size = mxConstants.DEFAULT_FONTSIZE;\n\tthis.fontStyle = mxConstants.DEFAULT_FONTSTYLE;\n\tthis.spacing = 2;\n\tthis.spacingTop = 2;\n\tthis.spacingRight = 2;\n\tthis.spacingBottom = 2;\n\tthis.spacingLeft = 2;\n\tthis.horizontal = true;\n\tdelete this.background;\n\tdelete this.border;\n\tthis.textDirection = mxConstants.DEFAULT_TEXT_DIRECTION;\n\tdelete this.margin;\n};\n\n/**\n * Function: apply\n * \n * Extends mxShape to update the text styles.\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxText.prototype.apply = function(state)\n{\n\tvar old = this.spacing;\n\tmxShape.prototype.apply.apply(this, arguments);\n\t\n\tif (this.style != null)\n\t{\n\t\tthis.fontStyle = mxUtils.getValue(this.style, mxConstants.STYLE_FONTSTYLE, this.fontStyle);\n\t\tthis.family = mxUtils.getValue(this.style, mxConstants.STYLE_FONTFAMILY, this.family);\n\t\tthis.size = mxUtils.getValue(this.style, mxConstants.STYLE_FONTSIZE, this.size);\n\t\tthis.color = mxUtils.getValue(this.style, mxConstants.STYLE_FONTCOLOR, this.color);\n\t\tthis.align = mxUtils.getValue(this.style, mxConstants.STYLE_ALIGN, this.align);\n\t\tthis.valign = mxUtils.getValue(this.style, mxConstants.STYLE_VERTICAL_ALIGN, this.valign);\n\t\tthis.spacing = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING, this.spacing));\n\t\tthis.spacingTop = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_TOP, this.spacingTop - old)) + this.spacing;\n\t\tthis.spacingRight = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_RIGHT, this.spacingRight - old)) + this.spacing;\n\t\tthis.spacingBottom = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_BOTTOM, this.spacingBottom - old)) + this.spacing;\n\t\tthis.spacingLeft = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_LEFT, this.spacingLeft - old)) + this.spacing;\n\t\tthis.horizontal = mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, this.horizontal);\n\t\tthis.background = mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_BACKGROUNDCOLOR, this.background);\n\t\tthis.border = mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_BORDERCOLOR, this.border);\n\t\tthis.textDirection = mxUtils.getValue(this.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n\t\tthis.opacity = mxUtils.getValue(this.style, mxConstants.STYLE_TEXT_OPACITY, 100);\n\t\tthis.updateMargin();\n\t}\n\t\n\tthis.flipV = null;\n\tthis.flipH = null;\n};\n\n/**\n * Function: getAutoDirection\n * \n * Used to determine the automatic text direction. Returns\n * <mxConstants.TEXT_DIRECTION_LTR> or <mxConstants.TEXT_DIRECTION_RTL>\n * depending on the contents of <value>. This is not invoked for HTML, wrapped\n * content or if <value> is a DOM node.\n */\nmxText.prototype.getAutoDirection = function()\n{\n\t// Looks for strong (directional) characters\n\tvar tmp = /[A-Za-z\\u05d0-\\u065f\\u066a-\\u06ef\\u06fa-\\u07ff\\ufb1d-\\ufdff\\ufe70-\\ufefc]/.exec(this.value);\n\t\n\t// Returns the direction defined by the character\n\treturn (tmp != null && tmp.length > 0 && tmp[0] > 'z') ?\n\t\tmxConstants.TEXT_DIRECTION_RTL : mxConstants.TEXT_DIRECTION_LTR;\n};\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using the given node and position.\n */\nmxText.prototype.updateBoundingBox = function()\n{\n\tvar node = this.node;\n\tthis.boundingBox = this.bounds.clone();\n\tvar rot = this.getTextRotation();\n\t\n\tvar h = (this.style != null) ? mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER) : null;\n\tvar v = (this.style != null) ? mxUtils.getValue(this.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE) : null;\n\n\tif (!this.ignoreStringSize && node != null && this.overflow != 'fill' && (!this.clipped ||\n\t\t!this.ignoreClippedStringSize || h != mxConstants.ALIGN_CENTER || v != mxConstants.ALIGN_MIDDLE))\n\t{\n\t\tvar ow = null;\n\t\tvar oh = null;\n\t\t\n\t\tif (node.ownerSVGElement != null)\n\t\t{\n\t\t\tif (node.firstChild != null && node.firstChild.firstChild != null &&\n\t\t\t\tnode.firstChild.firstChild.nodeName == 'foreignObject')\n\t\t\t{\n\t\t\t\tnode = node.firstChild.firstChild;\n\t\t\t\tow = parseInt(node.getAttribute('width')) * this.scale;\n\t\t\t\toh = parseInt(node.getAttribute('height')) * this.scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tvar b = node.getBBox();\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for bounding box of empty string\n\t\t\t\t\tif (typeof(this.value) == 'string' && mxUtils.trim(this.value) == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = null;\n\t\t\t\t\t}\n\t\t\t\t\telse if (b.width == 0 && b.height == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = new mxRectangle(b.x, b.y, b.width, b.height);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// Ignores NS_ERROR_FAILURE in FF if container display is none.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar td = (this.state != null) ? this.state.view.textDiv : null;\n\n\t\t\t// Use cached offset size\n\t\t\tif (this.offsetWidth != null && this.offsetHeight != null)\n\t\t\t{\n\t\t\t\tow = this.offsetWidth * this.scale;\n\t\t\t\toh = this.offsetHeight * this.scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Cannot get node size while container hidden so a\n\t\t\t\t// shared temporary DIV is used for text measuring\n\t\t\t\tif (td != null)\n\t\t\t\t{\n\t\t\t\t\tthis.updateFont(td);\n\t\t\t\t\tthis.updateSize(td, false);\n\t\t\t\t\tthis.updateInnerHtml(td);\n\n\t\t\t\t\tnode = td;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar sizeDiv = node;\n\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t\t{\n\t\t\t\t\tvar w = Math.round(this.bounds.width / this.scale);\n\t\n\t\t\t\t\tif (this.wrap && w > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\t\t\tnode.style.whiteSpace = 'normal';\n\n\t\t\t\t\t\tif (node.style.wordWrap != 'break-word')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Innermost DIV is used for measuring text\n\t\t\t\t\t\t\tvar divs = sizeDiv.getElementsByTagName('div');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (divs.length > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsizeDiv = divs[divs.length - 1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tow = sizeDiv.offsetWidth + 2;\n\t\t\t\t\t\t\tdivs = this.node.getElementsByTagName('div');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.clipped)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tow = Math.min(w, ow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Second last DIV width must be updated in DOM tree\n\t\t\t\t\t\t\tif (divs.length > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdivs[divs.length - 2].style.width = ow + 'px';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.whiteSpace = 'nowrap';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t}\n\n\t\t\t\tthis.offsetWidth = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\t\t\tthis.offsetHeight = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tow = this.offsetWidth * this.scale;\n\t\t\t\toh = this.offsetHeight * this.scale;\n\t\t\t}\n\t\t}\n\n\t\tif (ow != null && oh != null)\n\t\t{\t\n\t\t\tthis.boundingBox = new mxRectangle(this.bounds.x,\n\t\t\t\tthis.bounds.y, ow, oh);\n\t\t}\n\t}\n\n\tif (this.boundingBox != null)\n\t{\n\t\tif (rot != 0)\n\t\t{\n\t\t\t// Accounts for pre-rotated x and y\n\t\t\tvar bbox = mxUtils.getBoundingBox(new mxRectangle(\n\t\t\t\tthis.margin.x * this.boundingBox.width,\n\t\t\t\tthis.margin.y * this.boundingBox.height,\n\t\t\t\tthis.boundingBox.width, this.boundingBox.height),\n\t\t\t\trot, new mxPoint(0, 0));\n\t\t\t\n\t\t\tthis.unrotatedBoundingBox = mxRectangle.fromRectangle(this.boundingBox);\n\t\t\tthis.unrotatedBoundingBox.x += this.margin.x * this.unrotatedBoundingBox.width;\n\t\t\tthis.unrotatedBoundingBox.y += this.margin.y * this.unrotatedBoundingBox.height;\n\t\t\t\n\t\t\tthis.boundingBox.x += bbox.x;\n\t\t\tthis.boundingBox.y += bbox.y;\n\t\t\tthis.boundingBox.width = bbox.width;\n\t\t\tthis.boundingBox.height = bbox.height;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.boundingBox.x += this.margin.x * this.boundingBox.width;\n\t\t\tthis.boundingBox.y += this.margin.y * this.boundingBox.height;\n\t\t\tthis.unrotatedBoundingBox = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns 0 to avoid using rotation in the canvas via updateTransform.\n */\nmxText.prototype.getShapeRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: getTextRotation\n * \n * Returns the rotation for the text label of the corresponding shape.\n */\nmxText.prototype.getTextRotation = function()\n{\n\treturn (this.state != null && this.state.shape != null) ? this.state.shape.getTextRotation() : 0;\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Inverts the bounds if <mxShape.isBoundsInverted> returns true or if the\n * horizontal style is false.\n */\nmxText.prototype.isPaintBoundsInverted = function()\n{\n\treturn !this.horizontal && this.state != null && this.state.view.graph.model.isVertex(this.state.cell);\n};\n\n/**\n * Function: configureCanvas\n * \n * Sets the state of the canvas for drawing the shape.\n */\nmxText.prototype.configureCanvas = function(c, x, y, w, h)\n{\n\tmxShape.prototype.configureCanvas.apply(this, arguments);\n\t\n\tc.setFontColor(this.color);\n\tc.setFontBackgroundColor(this.background);\n\tc.setFontBorderColor(this.border);\n\tc.setFontFamily(this.family);\n\tc.setFontSize(this.size);\n\tc.setFontStyle(this.fontStyle);\n};\n\n/**\n * Function: updateVmlContainer\n * \n * Sets the width and height of the container to 1px.\n */\nmxText.prototype.updateVmlContainer = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tthis.node.style.width = '1px';\n\tthis.node.style.height = '1px';\n\tthis.node.style.overflow = 'visible';\n};\n\n/**\n * Function: redrawHtmlShape\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.redrawHtmlShape = function()\n{\n\tvar style = this.node.style;\n\n\t// Resets CSS styles\n\tstyle.whiteSpace = 'normal';\n\tstyle.overflow = '';\n\tstyle.width = '';\n\tstyle.height = '';\n\t\n\tthis.updateValue();\n\tthis.updateFont(this.node);\n\tthis.updateSize(this.node, (this.state == null || this.state.view.textDiv == null));\n\t\n\tthis.offsetWidth = null;\n\tthis.offsetHeight = null;\n\n\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode <= 8))\n\t{\n\t\tthis.updateHtmlFilter();\n\t}\n\telse\n\t{\n\t\tthis.updateHtmlTransform();\n\t}\n};\n\n/**\n * Function: updateHtmlTransform\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.updateHtmlTransform = function()\n{\n\tvar theta = this.getTextRotation();\n\tvar style = this.node.style;\n\tvar dx = this.margin.x;\n\tvar dy = this.margin.y;\n\t\n\tif (theta != 0)\n\t{\n\t\tmxUtils.setPrefixedStyle(style, 'transformOrigin', (-dx * 100) + '%' + ' ' + (-dy * 100) + '%');\n\t\tmxUtils.setPrefixedStyle(style, 'transform', 'translate(' + (dx * 100) + '%' + ',' + (dy * 100) + '%)' +\n\t\t\t'scale(' + this.scale + ') rotate(' + theta + 'deg)');\n\t}\n\telse\n\t{\n\t\tmxUtils.setPrefixedStyle(style, 'transformOrigin', '0% 0%');\n\t\tmxUtils.setPrefixedStyle(style, 'transform', 'scale(' + this.scale + ')' +\n\t\t\t'translate(' + (dx * 100) + '%' + ',' + (dy * 100) + '%)');\n\t}\n\n\tstyle.left = Math.round(this.bounds.x - Math.ceil(dx * ((this.overflow != 'fill' &&\n\t\tthis.overflow != 'width') ? 3 : 1))) + 'px';\n\tstyle.top = Math.round(this.bounds.y - dy * ((this.overflow != 'fill') ? 3 : 1)) + 'px';\n\t\n\tif (this.opacity < 100)\n\t{\n\t\tstyle.opacity = this.opacity / 100;\n\t}\n\telse\n\t{\n\t\tstyle.opacity = '';\n\t}\n};\n\n/**\n * Function: setInnerHtml\n * \n * Sets the inner HTML of the given element to the <value>.\n */\nmxText.prototype.updateInnerHtml = function(elt)\n{\n\tif (mxUtils.isNode(this.value))\n\t{\n\t\telt.innerHTML = this.value.outerHTML;\n\t}\n\telse\n\t{\n\t\tvar val = this.value;\n\t\t\n\t\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\t// LATER: Can be cached in updateValue\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = mxUtils.replaceTrailingNewlines(val, '<div>&nbsp;</div>');\n\t\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\tval = '<div style=\"display:inline-block;_display:inline;\">' + val + '</div>';\n\t\t\n\t\telt.innerHTML = val;\n\t}\n};\n\n/**\n * Function: updateHtmlFilter\n *\n * Rotated text rendering quality is bad for IE9 quirks/IE8 standards\n */\nmxText.prototype.updateHtmlFilter = function()\n{\n\tvar style = this.node.style;\n\tvar dx = this.margin.x;\n\tvar dy = this.margin.y;\n\tvar s = this.scale;\n\t\n\t// Resets filter before getting offsetWidth\n\tmxUtils.setOpacity(this.node, this.opacity);\n\t\n\t// Adds 1 to match table height in 1.x\n\tvar ow = 0;\n\tvar oh = 0;\n\tvar td = (this.state != null) ? this.state.view.textDiv : null;\n\tvar sizeDiv = this.node;\n\t\n\t// Fallback for hidden text rendering in IE quirks mode\n\tif (td != null)\n\t{\n\t\ttd.style.overflow = '';\n\t\ttd.style.height = '';\n\t\ttd.style.width = '';\n\t\t\n\t\tthis.updateFont(td);\n\t\tthis.updateSize(td, false);\n\t\tthis.updateInnerHtml(td);\n\t\t\n\t\tvar w = Math.round(this.bounds.width / this.scale);\n\n\t\tif (this.wrap && w > 0)\n\t\t{\n\t\t\ttd.style.whiteSpace = 'normal';\n\t\t\ttd.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\tow = w;\n\t\t\t\n\t\t\tif (this.clipped)\n\t\t\t{\n\t\t\t\tow = Math.min(ow, this.bounds.width);\n\t\t\t}\n\n\t\t\ttd.style.width = ow + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttd.style.whiteSpace = 'nowrap';\n\t\t}\n\t\t\n\t\tsizeDiv = td;\n\t\t\n\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t{\n\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\n\t\t\tif (this.wrap && td.style.wordWrap == 'break-word')\n\t\t\t{\n\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t}\n\t\t}\n\n\t\t// Required to update the height of the text box after wrapping width is known \n\t\tif (!this.clipped && this.wrap && w > 0)\n\t\t{\n\t\t\tow = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\t\ttd.style.width = ow + 'px';\n\t\t}\n\t\t\n\t\toh = sizeDiv.offsetHeight + 2;\n\t\t\n\t\tif (mxClient.IS_QUIRKS && this.border != null && this.border != mxConstants.NONE)\n\t\t{\n\t\t\toh += 3;\n\t\t}\n\t}\n\telse if (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t{\n\t\tsizeDiv = sizeDiv.firstChild;\n\t\toh = sizeDiv.offsetHeight;\n\t}\n\n\tow = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\n\tif (this.clipped)\n\t{\n\t\toh = Math.min(oh, this.bounds.height);\n\t}\n\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\n\t// Handles special case for live preview with no wrapper DIV and no textDiv\n\tif (this.overflow == 'fill')\n\t{\n\t\toh = h;\n\t\tow = w;\n\t}\n\telse if (this.overflow == 'width')\n\t{\n\t\toh = sizeDiv.scrollHeight;\n\t\tow = w;\n\t}\n\t\n\t// Stores for later use\n\tthis.offsetWidth = ow;\n\tthis.offsetHeight = oh;\n\t\n\t// Simulates max-height CSS in quirks mode\n\tif (mxClient.IS_QUIRKS && (this.clipped || (this.overflow == 'width' && h > 0)))\n\t{\n\t\th = Math.min(h, oh);\n\t\tstyle.height = Math.round(h) + 'px';\n\t}\n\telse\n\t{\n\t\th = oh;\n\t}\n\n\tif (this.overflow != 'fill' && this.overflow != 'width')\n\t{\n\t\tif (this.clipped)\n\t\t{\n\t\t\tow = Math.min(w, ow);\n\t\t}\n\t\t\n\t\tw = ow;\n\n\t\t// Simulates max-width CSS in quirks mode\n\t\tif ((mxClient.IS_QUIRKS && this.clipped) || this.wrap)\n\t\t{\n\t\t\tstyle.width = Math.round(w) + 'px';\n\t\t}\n\t}\n\n\th *= s;\n\tw *= s;\n\t\n\t// Rotation case is handled via VML canvas\n\tvar rad = this.getTextRotation() * (Math.PI / 180);\n\t\n\t// Precalculate cos and sin for the rotation\n\tvar real_cos = parseFloat(parseFloat(Math.cos(rad)).toFixed(8));\n\tvar real_sin = parseFloat(parseFloat(Math.sin(-rad)).toFixed(8));\n\n\trad %= 2 * Math.PI;\n\t\n\tif (rad < 0)\n\t{\n\t\trad += 2 * Math.PI;\n\t}\n\t\n\trad %= Math.PI;\n\t\n\tif (rad > Math.PI / 2)\n\t{\n\t\trad = Math.PI - rad;\n\t}\n\t\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(-rad);\n\n\tvar tx = w * -(dx + 0.5);\n\tvar ty = h * -(dy + 0.5);\n\n\tvar top_fix = (h - h * cos + w * sin) / 2 + real_sin * tx - real_cos * ty;\n\tvar left_fix = (w - w * cos + h * sin) / 2 - real_cos * tx - real_sin * ty;\n\t\n\tif (rad != 0)\n\t{\n\t\tvar f = 'progid:DXImageTransform.Microsoft.Matrix(M11=' + real_cos + ', M12='+\n\t\t\treal_sin + ', M21=' + (-real_sin) + ', M22=' + real_cos + ', sizingMethod=\\'auto expand\\')';\n\t\t\n\t\tif (style.filter != null && style.filter.length > 0)\n\t\t{\n\t\t\tstyle.filter += ' ' + f;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle.filter = f;\n\t\t}\n\t}\n\t\n\t// Workaround for rendering offsets\n\tvar dy = 0;\n\t\n\tif (this.overflow != 'fill' && mxClient.IS_QUIRKS)\n\t{\n\t\tif (this.valign == mxConstants.ALIGN_TOP)\n\t\t{\n\t\t\tdy -= 1;\n\t\t}\n\t\telse if (this.valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy += 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdy += 1;\n\t\t}\n\t}\n\n\tstyle.zoom = s;\n\tstyle.left = Math.round(this.bounds.x + left_fix - w / 2) + 'px';\n\tstyle.top = Math.round(this.bounds.y + top_fix - h / 2 + dy) + 'px';\n};\n\n/**\n * Function: updateValue\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateValue = function()\n{\n\tif (mxUtils.isNode(this.value))\n\t{\n\t\tthis.node.innerHTML = '';\n\t\tthis.node.appendChild(this.value);\n\t}\n\telse\n\t{\n\t\tvar val = this.value;\n\t\t\n\t\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\n\t\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\tvar bg = (this.background != null && this.background != mxConstants.NONE) ? this.background : null;\n\t\tvar bd = (this.border != null && this.border != mxConstants.NONE) ? this.border : null;\n\n\t\tif (this.overflow == 'fill' || this.overflow == 'width')\n\t\t{\n\t\t\tif (bg != null)\n\t\t\t{\n\t\t\t\tthis.node.style.backgroundColor = bg;\n\t\t\t}\n\t\t\t\n\t\t\tif (bd != null)\n\t\t\t{\n\t\t\t\tthis.node.style.border = '1px solid ' + bd;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar css = '';\n\t\t\t\n\t\t\tif (bg != null)\n\t\t\t{\n\t\t\t\tcss += 'background-color:' + mxUtils.htmlEntities(bg) + ';';\n\t\t\t}\n\t\t\t\n\t\t\tif (bd != null)\n\t\t\t{\n\t\t\t\tcss += 'border:1px solid ' + mxUtils.htmlEntities(bd) + ';';\n\t\t\t}\n\t\t\t\n\t\t\t// Wrapper DIV for background, zoom needed for inline in quirks\n\t\t\t// and to measure wrapped font sizes in all browsers\n\t\t\t// FIXME: Background size in quirks mode for wrapped text\n\t\t\tvar lh = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' :\n\t\t\t\tmxConstants.LINE_HEIGHT;\n\t\t\tval = '<div style=\"zoom:1;' + css + 'display:inline-block;_display:inline;text-decoration:inherit;' +\n\t\t\t\t'padding-bottom:1px;padding-right:1px;line-height:' + lh + '\">' + val + '</div>';\n\t\t}\n\n\t\tthis.node.innerHTML = val;\n\t\t\n\t\t// Sets text direction\n\t\tvar divs = this.node.getElementsByTagName('div');\n\t\t\n\t\tif (divs.length > 0)\n\t\t{\n\t\t\tvar dir = this.textDirection;\n\n\t\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO && this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t\t{\n\t\t\t\tdir = this.getAutoDirection();\n\t\t\t}\n\t\t\t\n\t\t\tif (dir == mxConstants.TEXT_DIRECTION_LTR || dir == mxConstants.TEXT_DIRECTION_RTL)\n\t\t\t{\n\t\t\t\tdivs[divs.length - 1].setAttribute('dir', dir);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdivs[divs.length - 1].removeAttribute('dir');\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: updateFont\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateFont = function(node)\n{\n\tvar style = node.style;\n\t\n\tstyle.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\tstyle.fontSize = this.size + 'px';\n\tstyle.fontFamily = this.family;\n\tstyle.verticalAlign = 'top';\n\tstyle.color = this.color;\n\t\n\tif ((this.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle.fontWeight = 'bold';\n\t}\n\telse\n\t{\n\t\tstyle.fontWeight = '';\n\t}\n\n\tif ((this.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle.fontStyle = 'italic';\n\t}\n\telse\n\t{\n\t\tstyle.fontStyle = '';\n\t}\n\t\n\tif ((this.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle.textDecoration = 'underline';\n\t}\n\telse\n\t{\n\t\tstyle.textDecoration = '';\n\t}\n\t\n\tif (this.align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tstyle.textAlign = 'center';\n\t}\n\telse if (this.align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstyle.textAlign = 'right';\n\t}\n\telse\n\t{\n\t\tstyle.textAlign = 'left';\n\t}\n};\n\n/**\n * Function: updateSize\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateSize = function(node, enableWrap)\n{\n\tvar w = Math.max(0, Math.round(this.bounds.width / this.scale));\n\tvar h = Math.max(0, Math.round(this.bounds.height / this.scale));\n\tvar style = node.style;\n\t\n\t// NOTE: Do not use maxWidth here because wrapping will\n\t// go wrong if the cell is outside of the viewable area\n\tif (this.clipped)\n\t{\n\t\tstyle.overflow = 'hidden';\n\t\t\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tstyle.maxHeight = h + 'px';\n\t\t\tstyle.maxWidth = w + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle.width = w + 'px';\n\t\t}\n\t}\n\telse if (this.overflow == 'fill')\n\t{\n\t\tstyle.width = (w + 1) + 'px';\n\t\tstyle.height = (h + 1) + 'px';\n\t\tstyle.overflow = 'hidden';\n\t}\n\telse if (this.overflow == 'width')\n\t{\n\t\tstyle.width = (w + 1) + 'px';\n\t\tstyle.maxHeight = (h + 1) + 'px';\n\t\tstyle.overflow = 'hidden';\n\t}\n\t\n\tif (this.wrap && w > 0)\n\t{\n\t\tstyle.wordWrap = mxConstants.WORD_WRAP;\n\t\tstyle.whiteSpace = 'normal';\n\t\tstyle.width = w + 'px';\n\n\t\tif (enableWrap && this.overflow != 'fill' && this.overflow != 'width')\n\t\t{\n\t\t\tvar sizeDiv = node;\n\t\t\t\n\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t{\n\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t\n\t\t\t\tif (node.style.wordWrap == 'break-word')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar tmp = sizeDiv.offsetWidth;\n\t\t\t\n\t\t\t// Workaround for text measuring in hidden containers\n\t\t\tif (tmp == 0)\n\t\t\t{\n\t\t\t\tvar prev = node.parentNode;\n\t\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\tdocument.body.appendChild(node);\n\t\t\t\ttmp = sizeDiv.offsetWidth;\n\t\t\t\tnode.style.visibility = '';\n\t\t\t\tprev.appendChild(node);\n\t\t\t}\n\n\t\t\ttmp += 3;\n\t\t\t\n\t\t\tif (this.clipped)\n\t\t\t{\n\t\t\t\ttmp = Math.min(tmp, w);\n\t\t\t}\n\t\t\t\n\t\t\tstyle.width = tmp + 'px';\n\t\t}\n\t}\n\telse\n\t{\n\t\tstyle.whiteSpace = 'nowrap';\n\t}\n};\n\n/**\n * Function: getMargin\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.updateMargin = function()\n{\n\tthis.margin = mxUtils.getAlignmentAsPoint(this.align, this.valign);\n};\n\n/**\n * Function: getSpacing\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.getSpacing = function()\n{\n\tvar dx = 0;\n\tvar dy = 0;\n\n\tif (this.align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tdx = (this.spacingLeft - this.spacingRight) / 2;\n\t}\n\telse if (this.align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tdx = -this.spacingRight - this.baseSpacingRight;\n\t}\n\telse\n\t{\n\t\tdx = this.spacingLeft + this.baseSpacingLeft;\n\t}\n\n\tif (this.valign == mxConstants.ALIGN_MIDDLE)\n\t{\n\t\tdy = (this.spacingTop - this.spacingBottom) / 2;\n\t}\n\telse if (this.valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tdy = -this.spacingBottom - this.baseSpacingBottom;;\n\t}\n\telse\n\t{\n\t\tdy = this.spacingTop + this.baseSpacingTop;\n\t}\n\t\n\treturn new mxPoint(dx, dy);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxTriangle\n * \n * Implementation of the triangle shape.\n * \n * Constructor: mxTriangle\n *\n * Constructs a new triangle shape.\n */\nfunction mxTriangle()\n{\n\tmxActor.call(this);\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxTriangle, mxActor);\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxTriangle.prototype.isRoundable = function()\n{\n\treturn true;\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxTriangle.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tthis.addPoints(c, [new mxPoint(0, 0), new mxPoint(w, 0.5 * h), new mxPoint(0, h)], this.isRounded, arcSize, true);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHexagon\n * \n * Implementation of the hexagon shape.\n * \n * Constructor: mxHexagon\n *\n * Constructs a new hexagon shape.\n */\nfunction mxHexagon()\n{\n\tmxActor.call(this);\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxHexagon, mxActor);\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxHexagon.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tthis.addPoints(c, [new mxPoint(0.25 * w, 0), new mxPoint(0.75 * w, 0), new mxPoint(w, 0.5 * h), new mxPoint(0.75 * w, h),\n\t                   new mxPoint(0.25 * w, h), new mxPoint(0, 0.5 * h)], this.isRounded, arcSize, true);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLine\n *\n * Extends <mxShape> to implement a horizontal line shape.\n * This shape is registered under <mxConstants.SHAPE_LINE> in\n * <mxCellRenderer>.\n * \n * Constructor: mxLine\n *\n * Constructs a new line shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * stroke - String that defines the stroke color. Default is 'black'. This is\n * stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxLine(bounds, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxLine, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxLine.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar mid = y + h / 2;\n\n\tc.begin();\n\tc.moveTo(x, mid);\n\tc.lineTo(x + w, mid);\n\tc.stroke();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageShape\n *\n * Extends <mxShape> to implement an image shape. This shape is registered\n * under <mxConstants.SHAPE_IMAGE> in <mxCellRenderer>.\n * \n * Constructor: mxImageShape\n * \n * Constructs a new image shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * image - String that specifies the URL of the image. This is stored in\n * <image>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 0. This is stored in <strokewidth>.\n */\nfunction mxImageShape(bounds, image, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.image = image;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.shadow = false;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxImageShape, mxRectangleShape);\n\n/**\n * Variable: preserveImageAspect\n *\n * Switch to preserve image aspect. Default is true.\n */\nmxImageShape.prototype.preserveImageAspect = true;\n\n/**\n * Function: getSvgScreenOffset\n * \n * Disables offset in IE9 for crisper image output.\n */\nmxImageShape.prototype.getSvgScreenOffset = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: apply\n * \n * Overrides <mxShape.apply> to replace the fill and stroke colors with the\n * respective values from <mxConstants.STYLE_IMAGE_BACKGROUND> and\n * <mxConstants.STYLE_IMAGE_BORDER>.\n * \n * Applies the style of the given <mxCellState> to the shape. This\n * implementation assigns the following styles to local fields:\n * \n * - <mxConstants.STYLE_IMAGE_BACKGROUND> => fill\n * - <mxConstants.STYLE_IMAGE_BORDER> => stroke\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxImageShape.prototype.apply = function(state)\n{\n\tmxShape.prototype.apply.apply(this, arguments);\n\t\n\tthis.fill = null;\n\tthis.stroke = null;\n\tthis.gradient = null;\n\t\n\tif (this.style != null)\n\t{\n\t\tthis.preserveImageAspect = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_ASPECT, 1) == 1;\n\t\t\n\t\t// Legacy support for imageFlipH/V\n\t\tthis.flipH = this.flipH || mxUtils.getValue(this.style, 'imageFlipH', 0) == 1;\n\t\tthis.flipV = this.flipV || mxUtils.getValue(this.style, 'imageFlipV', 0) == 1;\n\t}\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation always\n * returns false.\n */\nmxImageShape.prototype.isHtmlAllowed = function()\n{\n\treturn !this.preserveImageAspect;\n};\n\n/**\n * Function: createHtml\n *\n * Creates and returns the HTML DOM node(s) to represent\n * this shape. This implementation falls back to <createVml>\n * so that the HTML creation is optional.\n */\nmxImageShape.prototype.createHtml = function()\n{\n\tvar node = document.createElement('div');\n\tnode.style.position = 'absolute';\n\n\treturn node;\n};\n\n/**\n * Function: isRoundable\n * \n * Disables inherited roundable support.\n */\nmxImageShape.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn false;\n};\n\n/**\n * Function: paintVertexShape\n * \n * Generic background painting implementation.\n */\nmxImageShape.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tif (this.image != null)\n\t{\n\t\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BACKGROUND, null);\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, null);\n\t\t\n\t\tif (fill != null)\n\t\t{\n\t\t\t// Stroke rendering required for shadow\n\t\t\tc.setFillColor(fill);\n\t\t\tc.setStrokeColor(stroke);\n\t\t\tc.rect(x, y, w, h);\n\t\t\tc.fillAndStroke();\n\t\t}\n\n\t\t// FlipH/V are implicit via mxShape.updateTransform\n\t\tc.image(x, y, w, h, this.image, this.preserveImageAspect, false, false);\n\t\t\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, null);\n\t\t\n\t\tif (stroke != null)\n\t\t{\n\t\t\tc.setShadow(false);\n\t\t\tc.setStrokeColor(stroke);\n\t\t\tc.rect(x, y, w, h);\n\t\t\tc.stroke();\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxRectangleShape.prototype.paintBackground.apply(this, arguments);\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Overrides <mxShape.redraw> to preserve the aspect ratio of images.\n */\nmxImageShape.prototype.redrawHtmlShape = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tthis.node.style.width = Math.max(0, Math.round(this.bounds.width)) + 'px';\n\tthis.node.style.height = Math.max(0, Math.round(this.bounds.height)) + 'px';\n\tthis.node.innerHTML = '';\n\n\tif (this.image != null)\n\t{\n\t\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BACKGROUND, '');\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, '');\n\t\tthis.node.style.backgroundColor = fill;\n\t\tthis.node.style.borderColor = stroke;\n\t\t\n\t\t// VML image supports PNG in IE6\n\t\tvar useVml = mxClient.IS_IE6 || ((document.documentMode == null || document.documentMode <= 8) && this.rotation != 0);\n\t\tvar img = document.createElement((useVml) ? mxClient.VML_PREFIX + ':image' : 'img');\n\t\timg.setAttribute('border', '0');\n\t\timg.style.position = 'absolute';\n\t\timg.src = this.image;\n\n\t\tvar filter = (this.opacity < 100) ? 'alpha(opacity=' + this.opacity + ')' : '';\n\t\tthis.node.style.filter = filter;\n\t\t\n\t\tif (this.flipH && this.flipV)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(rotation=2)';\n\t\t}\n\t\telse if (this.flipH)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(mirror=1)';\n\t\t}\n\t\telse if (this.flipV)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)';\n\t\t}\n\n\t\tif (img.style.filter != filter)\n\t\t{\n\t\t\timg.style.filter = filter;\n\t\t}\n\n\t\tif (img.nodeName == 'image')\n\t\t{\n\t\t\timg.style.rotation = this.rotation;\n\t\t}\n\t\telse if (this.rotation != 0)\n\t\t{\n\t\t\t// LATER: Add flipV/H support\n\t\t\tmxUtils.setPrefixedStyle(img.style, 'transform', 'rotate(' + this.rotation + 'deg)');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.setPrefixedStyle(img.style, 'transform', '');\n\t\t}\n\n\t\t// Known problem: IE clips top line of image for certain angles\n\t\timg.style.width = this.node.style.width;\n\t\timg.style.height = this.node.style.height;\n\t\t\n\t\tthis.node.style.backgroundImage = '';\n\t\tthis.node.appendChild(img);\n\t}\n\telse\n\t{\n\t\tthis.setTransparentBackgroundImage(this.node);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLabel\n *\n * Extends <mxShape> to implement an image shape with a label.\n * This shape is registered under <mxConstants.SHAPE_LABEL> in\n * <mxCellRenderer>.\n * \n * Constructor: mxLabel\n *\n * Constructs a new label shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxLabel(bounds, fill, stroke, strokewidth)\n{\n\tmxRectangleShape.call(this, bounds, fill, stroke, strokewidth);\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxLabel, mxRectangleShape);\n\n/**\n * Variable: imageSize\n *\n * Default width and height for the image. Default is\n * <mxConstants.DEFAULT_IMAGESIZE>.\n */\nmxLabel.prototype.imageSize = mxConstants.DEFAULT_IMAGESIZE;\n\n/**\n * Variable: spacing\n *\n * Default value for image spacing. Default is 2.\n */\nmxLabel.prototype.spacing = 2;\n\n/**\n * Variable: indicatorSize\n *\n * Default width and height for the indicicator. Default is 10.\n */\nmxLabel.prototype.indicatorSize = 10;\n\n/**\n * Variable: indicatorSpacing\n *\n * Default spacing between image and indicator. Default is 2.\n */\nmxLabel.prototype.indicatorSpacing = 2;\n\n/**\n * Function: init\n *\n * Initializes the shape and the <indicator>.\n */\nmxLabel.prototype.init = function(container)\n{\n\tmxShape.prototype.init.apply(this, arguments);\n\n\tif (this.indicatorShape != null)\n\t{\n\t\tthis.indicator = new this.indicatorShape();\n\t\tthis.indicator.dialect = this.dialect;\n\t\tthis.indicator.init(this.node);\n\t}\n};\n\n/**\n * Function: redraw\n *\n * Reconfigures this shape. This will update the colors of the indicator\n * and reconfigure it if required.\n */\nmxLabel.prototype.redraw = function()\n{\n\tif (this.indicator != null)\n\t{\n\t\tthis.indicator.fill = this.indicatorColor;\n\t\tthis.indicator.stroke = this.indicatorStrokeColor;\n\t\tthis.indicator.gradient = this.indicatorGradientColor;\n\t\tthis.indicator.direction = this.indicatorDirection;\n\t}\n\t\n\tmxShape.prototype.redraw.apply(this, arguments);\n};\n\n/**\n * Function: isHtmlAllowed\n *\n * Returns true for non-rounded, non-rotated shapes with no glass gradient and\n * no indicator shape.\n */\nmxLabel.prototype.isHtmlAllowed = function()\n{\n\treturn mxRectangleShape.prototype.isHtmlAllowed.apply(this, arguments) &&\n\t\tthis.indicatorColor == null && this.indicatorShape == null;\n};\n\n/**\n * Function: paintForeground\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tthis.paintImage(c, x, y, w, h);\n\tthis.paintIndicator(c, x, y, w, h);\n\t\n\tmxRectangleShape.prototype.paintForeground.apply(this, arguments);\n};\n\n/**\n * Function: paintImage\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintImage = function(c, x, y, w, h)\n{\n\tif (this.image != null)\n\t{\n\t\tvar bounds = this.getImageBounds(x, y, w, h);\n\t\tc.image(bounds.x, bounds.y, bounds.width, bounds.height, this.image, false, false, false);\n\t}\n};\n\n/**\n * Function: getImageBounds\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.getImageBounds = function(x, y, w, h)\n{\n\tvar align = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_ALIGN, mxConstants.ALIGN_LEFT);\n\tvar valign = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE);\n\tvar width = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_WIDTH, mxConstants.DEFAULT_IMAGESIZE);\n\tvar height = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_HEIGHT, mxConstants.DEFAULT_IMAGESIZE);\n\tvar spacing = mxUtils.getNumber(this.style, mxConstants.STYLE_SPACING, this.spacing) + 5;\n\n\tif (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tx += (w - width) / 2;\n\t}\n\telse if (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tx += w - width - spacing;\n\t}\n\telse // default is left\n\t{\n\t\tx += spacing;\n\t}\n\n\tif (valign == mxConstants.ALIGN_TOP)\n\t{\n\t\ty += spacing;\n\t}\n\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\ty += h - height - spacing;\n\t}\n\telse // default is middle\n\t{\n\t\ty += (h - height) / 2;\n\t}\n\t\n\treturn new mxRectangle(x, y, width, height);\n};\n\n/**\n * Function: paintIndicator\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintIndicator = function(c, x, y, w, h)\n{\n\tif (this.indicator != null)\n\t{\n\t\tthis.indicator.bounds = this.getIndicatorBounds(x, y, w, h);\n\t\tthis.indicator.paint(c);\n\t}\n\telse if (this.indicatorImage != null)\n\t{\n\t\tvar bounds = this.getIndicatorBounds(x, y, w, h);\n\t\tc.image(bounds.x, bounds.y, bounds.width, bounds.height, this.indicatorImage, false, false, false);\n\t}\n};\n\n/**\n * Function: getIndicatorBounds\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.getIndicatorBounds = function(x, y, w, h)\n{\n\tvar align = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_ALIGN, mxConstants.ALIGN_LEFT);\n\tvar valign = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE);\n\tvar width = mxUtils.getNumber(this.style, mxConstants.STYLE_INDICATOR_WIDTH, this.indicatorSize);\n\tvar height = mxUtils.getNumber(this.style, mxConstants.STYLE_INDICATOR_HEIGHT, this.indicatorSize);\n\tvar spacing = this.spacing + 5;\t\t\n\t\n\tif (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tx += w - width - spacing;\n\t}\n\telse if (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tx += (w - width) / 2;\n\t}\n\telse // default is left\n\t{\n\t\tx += spacing;\n\t}\n\t\n\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\ty += h - height - spacing;\n\t}\n\telse if (valign == mxConstants.ALIGN_TOP)\n\t{\n\t\ty += spacing;\n\t}\n\telse // default is middle\n\t{\n\t\ty += (h - height) / 2;\n\t}\n\t\n\treturn new mxRectangle(x, y, width, height);\n};\n/**\n * Function: redrawHtmlShape\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.redrawHtmlShape = function()\n{\n\tmxRectangleShape.prototype.redrawHtmlShape.apply(this, arguments);\n\t\n\t// Removes all children\n\twhile(this.node.hasChildNodes())\n\t{\n\t\tthis.node.removeChild(this.node.lastChild);\n\t}\n\t\n\tif (this.image != null)\n\t{\n\t\tvar node = document.createElement('img');\n\t\tnode.style.position = 'relative';\n\t\tnode.setAttribute('border', '0');\n\t\t\n\t\tvar bounds = this.getImageBounds(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height);\n\t\tbounds.x -= this.bounds.x;\n\t\tbounds.y -= this.bounds.y;\n\n\t\tnode.style.left = Math.round(bounds.x) + 'px';\n\t\tnode.style.top = Math.round(bounds.y) + 'px';\n\t\tnode.style.width = Math.round(bounds.width) + 'px';\n\t\tnode.style.height = Math.round(bounds.height) + 'px';\n\t\t\n\t\tnode.src = this.image;\n\t\t\n\t\tthis.node.appendChild(node);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCylinder\n *\n * Extends <mxShape> to implement an cylinder shape. If a\n * custom shape with one filled area and an overlay path is\n * needed, then this shape's <redrawPath> should be overridden.\n * This shape is registered under <mxConstants.SHAPE_CYLINDER>\n * in <mxCellRenderer>.\n * \n * Constructor: mxCylinder\n *\n * Constructs a new cylinder shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxCylinder(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxCylinder, mxShape);\n\n/**\n * Variable: maxHeight\n *\n * Defines the maximum height of the top and bottom part\n * of the cylinder shape.\n */\nmxCylinder.prototype.maxHeight = 40;\n\n/**\n * Variable: svgStrokeTolerance\n *\n * Sets stroke tolerance to 0 for SVG.\n */\nmxCylinder.prototype.svgStrokeTolerance = 0;\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxCylinder.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.translate(x, y);\n\tc.begin();\n\tthis.redrawPath(c, x, y, w, h, false);\n\tc.fillAndStroke();\n\t\n\tif (!this.outline || this.style == null || mxUtils.getValue(\n\t\tthis.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0)\n\t{\n\t\tc.setShadow(false);\n\t\tc.begin();\n\t\tthis.redrawPath(c, x, y, w, h, true);\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCylinder.prototype.getCylinderSize = function(x, y, w, h)\n{\n\treturn Math.min(this.maxHeight, Math.round(h / 5));\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCylinder.prototype.redrawPath = function(c, x, y, w, h, isForeground)\n{\n\tvar dy = this.getCylinderSize(x, y, w, h);\n\t\n\tif ((isForeground && this.fill != null) || (!isForeground && this.fill == null))\n\t{\n\t\tc.moveTo(0, dy);\n\t\tc.curveTo(0, 2 * dy, w, 2 * dy, w, dy);\n\t\t\n\t\t// Needs separate shapes for correct hit-detection\n\t\tif (!isForeground)\n\t\t{\n\t\t\tc.stroke();\n\t\t\tc.begin();\n\t\t}\n\t}\n\t\n\tif (!isForeground)\n\t{\n\t\tc.moveTo(0, dy);\n\t\tc.curveTo(0, -dy / 3, w, -dy / 3, w, dy);\n\t\tc.lineTo(w, h - dy);\n\t\tc.curveTo(w, h + dy / 3, 0, h + dy / 3, 0, h - dy);\n\t\tc.close();\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConnector\n * \n * Extends <mxShape> to implement a connector shape. The connector\n * shape allows for arrow heads on either side.\n * \n * This shape is registered under <mxConstants.SHAPE_CONNECTOR> in\n * <mxCellRenderer>.\n * \n * Constructor: mxConnector\n * \n * Constructs a new connector shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * Default is 'black'.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxConnector(points, stroke, strokewidth)\n{\n\tmxPolyline.call(this, points, stroke, strokewidth);\n};\n\n/**\n * Extends mxPolyline.\n */\nmxUtils.extend(mxConnector, mxPolyline);\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using <createBoundingBox> and\n * <augmentBoundingBox> and stores the result in <boundingBox>.\n */\nmxConnector.prototype.updateBoundingBox = function()\n{\n\tthis.useSvgBoundingBox = this.style != null && this.style[mxConstants.STYLE_CURVED] == 1;\n\tmxShape.prototype.updateBoundingBox.apply(this, arguments);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxConnector.prototype.paintEdgeShape = function(c, pts)\n{\n\t// The indirection via functions for markers is needed in\n\t// order to apply the offsets before painting the line and\n\t// paint the markers after painting the line.\n\tvar sourceMarker = this.createMarker(c, pts, true);\n\tvar targetMarker = this.createMarker(c, pts, false);\n\n\tmxPolyline.prototype.paintEdgeShape.apply(this, arguments);\n\t\n\t// Disables shadows, dashed styles and fixes fill color for markers\n\tc.setFillColor(this.stroke);\n\tc.setShadow(false);\n\tc.setDashed(false);\n\t\n\tif (sourceMarker != null)\n\t{\n\t\tsourceMarker();\n\t}\n\t\n\tif (targetMarker != null)\n\t{\n\t\ttargetMarker();\n\t}\n};\n\n/**\n * Function: createMarker\n * \n * Prepares the marker by adding offsets in pts and returning a function to\n * paint the marker.\n */\nmxConnector.prototype.createMarker = function(c, pts, source)\n{\n\tvar result = null;\n\tvar n = pts.length;\n\tvar type = mxUtils.getValue(this.style, (source) ? mxConstants.STYLE_STARTARROW : mxConstants.STYLE_ENDARROW);\n\tvar p0 = (source) ? pts[1] : pts[n - 2];\n\tvar pe = (source) ? pts[0] : pts[n - 1];\n\t\n\tif (type != null && p0 != null && pe != null)\n\t{\n\t\tvar count = 1;\n\t\t\n\t\t// Uses next non-overlapping point\n\t\twhile (count < n - 1 && Math.round(p0.x - pe.x) == 0 && Math.round(p0.y - pe.y) == 0)\n\t\t{\n\t\t\tp0 = (source) ? pts[1 + count] : pts[n - 2 - count];\n\t\t\tcount++;\n\t\t}\n\t\n\t\t// Computes the norm and the inverse norm\n\t\tvar dx = pe.x - p0.x;\n\t\tvar dy = pe.y - p0.y;\n\t\n\t\tvar dist = Math.max(1, Math.sqrt(dx * dx + dy * dy));\n\t\t\n\t\tvar unitX = dx / dist;\n\t\tvar unitY = dy / dist;\n\t\n\t\tvar size = mxUtils.getNumber(this.style, (source) ? mxConstants.STYLE_STARTSIZE : mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE);\n\t\t\n\t\t// Allow for stroke width in the end point used and the \n\t\t// orthogonal vectors describing the direction of the marker\n\t\tvar filled = this.style[(source) ? mxConstants.STYLE_STARTFILL : mxConstants.STYLE_ENDFILL] != 0;\n\t\t\n\t\tresult = mxMarker.createMarker(c, this, type, pe, unitX, unitY, size, source, this.strokewidth, filled);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the strokewidth and shadow offsets.\n */\nmxConnector.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\t// Adds marker sizes\n\tvar size = 0;\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, mxConstants.NONE) != mxConstants.NONE)\n\t{\n\t\tsize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_MARKERSIZE) + 1;\n\t}\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, mxConstants.NONE) != mxConstants.NONE)\n\t{\n\t\tsize = Math.max(size, mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE)) + 1;\n\t}\n\t\n\tbbox.grow(size * this.scale);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlane\n *\n * Extends <mxShape> to implement a swimlane shape. This shape is registered\n * under <mxConstants.SHAPE_SWIMLANE> in <mxCellRenderer>. Use the\n * <mxConstants.STYLE_STYLE_STARTSIZE> to define the size of the title\n * region, <mxConstants.STYLE_SWIMLANE_FILLCOLOR> for the content area fill,\n * <mxConstants.STYLE_SEPARATORCOLOR> to draw an additional vertical separator\n * and <mxConstants.STYLE_SWIMLANE_LINE> to hide the line between the title\n * region and the content area. The <mxConstants.STYLE_HORIZONTAL> affects\n * the orientation of this shape, not only its label.\n * \n * Constructor: mxSwimlane\n *\n * Constructs a new swimlane shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxSwimlane(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxSwimlane, mxShape);\n\n/**\n * Variable: imageSize\n *\n * Default imagewidth and imageheight if an image but no imagewidth\n * and imageheight are defined in the style. Value is 16.\n */\nmxSwimlane.prototype.imageSize = 16;\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxSwimlane.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn true;\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getTitleSize = function()\n{\n\treturn Math.max(0, mxUtils.getValue(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE));\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getLabelBounds = function(rect)\n{\n\tvar start = this.getTitleSize();\n\tvar bounds = new mxRectangle(rect.x, rect.y, rect.width, rect.height);\n\tvar horizontal = this.isHorizontal();\n\t\n\tvar flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\tvar flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\n\t// East is default\n\tvar shapeVertical = (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_SOUTH);\n\tvar realHorizontal = horizontal == !shapeVertical;\n\t\n\tvar realFlipH = !realHorizontal && flipH != (this.direction == mxConstants.DIRECTION_SOUTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_WEST);\n\tvar realFlipV = realHorizontal && flipV != (this.direction == mxConstants.DIRECTION_SOUTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_WEST);\n\n\t// Shape is horizontal\n\tif (!shapeVertical)\n\t{\n\t\tvar tmp = Math.min(bounds.height, start * this.scale);\n\n\t\tif (realFlipH || realFlipV)\n\t\t{\n\t\t\tbounds.y += bounds.height - tmp;\n\t\t}\n\n\t\tbounds.height = tmp;\n\t}\n\telse\n\t{\n\t\tvar tmp = Math.min(bounds.width, start * this.scale);\n\t\t\n\t\tif (realFlipH || realFlipV)\n\t\t{\n\t\t\tbounds.x += bounds.width - tmp;\t\n\t\t}\n\n\t\tbounds.width = tmp;\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getGradientBounds = function(c, x, y, w, h)\n{\n\tvar start = this.getTitleSize();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tstart = Math.min(start, h);\n\t\treturn new mxRectangle(x, y, w, start);\n\t}\n\telse\n\t{\n\t\tstart = Math.min(start, w);\n\t\treturn new mxRectangle(x, y, start, h);\n\t}\n};\n\n/**\n * Function: getArcSize\n * \n * Returns the arcsize for the swimlane.\n */\nmxSwimlane.prototype.getArcSize = function(w, h, start)\n{\n\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\n\treturn start * f * 3; \n};\n\n/**\n * Function: paintVertexShape\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.isHorizontal = function()\n{\n\treturn mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, 1) == 1;\n};\n\n/**\n * Function: paintVertexShape\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar start = this.getTitleSize();\n\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_SWIMLANE_FILLCOLOR, mxConstants.NONE);\n\tvar swimlaneLine = mxUtils.getValue(this.style, mxConstants.STYLE_SWIMLANE_LINE, 1) == 1;\n\tvar r = 0;\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tstart = Math.min(start, h);\n\t}\n\telse\n\t{\n\t\tstart = Math.min(start, w);\n\t}\n\t\n\tc.translate(x, y);\n\t\n\tif (!this.isRounded)\n\t{\n\t\tthis.paintSwimlane(c, x, y, w, h, start, fill, swimlaneLine);\n\t}\n\telse\n\t{\n\t\tr = this.getArcSize(w, h, start);\n\t\tr = Math.min(((this.isHorizontal()) ? h : w) - start, Math.min(start, r));\n\t\tthis.paintRoundedSwimlane(c, x, y, w, h, start, r, fill, swimlaneLine);\n\t}\n\t\n\tvar sep = mxUtils.getValue(this.style, mxConstants.STYLE_SEPARATORCOLOR, mxConstants.NONE);\n\tthis.paintSeparator(c, x, y, w, h, start, sep);\n\n\tif (this.image != null)\n\t{\n\t\tvar bounds = this.getImageBounds(x, y, w, h);\n\t\tc.image(bounds.x - x, bounds.y - y, bounds.width, bounds.height,\n\t\t\t\tthis.image, false, false, false);\n\t}\n\t\n\tif (this.glass)\n\t{\n\t\tc.setShadow(false);\n\t\tthis.paintGlassEffect(c, 0, 0, w, start, r);\n\t}\n};\n\n/**\n * Function: paintSwimlane\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintSwimlane = function(c, x, y, w, h, start, fill, swimlaneLine)\n{\n\tc.begin();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(0, start);\n\t\tc.lineTo(0, 0);\n\t\tc.lineTo(w, 0);\n\t\tc.lineTo(w, start);\n\t\tc.fillAndStroke();\n\n\t\tif (start < h)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(0, start);\n\t\t\tc.lineTo(0, h);\n\t\t\tc.lineTo(w, h);\n\t\t\tc.lineTo(w, start);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(0, 0);\n\t\tc.lineTo(0, h);\n\t\tc.lineTo(start, h);\n\t\tc.fillAndStroke();\n\t\t\n\t\tif (start < w)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(start, 0);\n\t\t\tc.lineTo(w, 0);\n\t\t\tc.lineTo(w, h);\n\t\t\tc.lineTo(start, h);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (swimlaneLine)\n\t{\n\t\tthis.paintDivider(c, x, y, w, h, start, fill == mxConstants.NONE);\n\t}\n};\n\n/**\n * Function: paintRoundedSwimlane\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintRoundedSwimlane = function(c, x, y, w, h, start, r, fill, swimlaneLine)\n{\n\tc.begin();\n\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(w, start);\n\t\tc.lineTo(w, r);\n\t\tc.quadTo(w, 0, w - Math.min(w / 2, r), 0);\n\t\tc.lineTo(Math.min(w / 2, r), 0);\n\t\tc.quadTo(0, 0, 0, r);\n\t\tc.lineTo(0, start);\n\t\tc.fillAndStroke();\n\t\t\n\t\tif (start < h)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(0, start);\n\t\t\tc.lineTo(0, h - r);\n\t\t\tc.quadTo(0, h, Math.min(w / 2, r), h);\n\t\t\tc.lineTo(w - Math.min(w / 2, r), h);\n\t\t\tc.quadTo(w, h, w, h - r);\n\t\t\tc.lineTo(w, start);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(r, 0);\n\t\tc.quadTo(0, 0, 0, Math.min(h / 2, r));\n\t\tc.lineTo(0, h - Math.min(h / 2, r));\n\t\tc.quadTo(0, h, r, h);\n\t\tc.lineTo(start, h);\n\t\tc.fillAndStroke();\n\n\t\tif (start < w)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(start, h);\n\t\t\tc.lineTo(w - r, h);\n\t\t\tc.quadTo(w, h, w, h - Math.min(h / 2, r));\n\t\t\tc.lineTo(w, Math.min(h / 2, r));\n\t\t\tc.quadTo(w, 0, w - r, 0);\n\t\t\tc.lineTo(start, 0);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\n\tif (swimlaneLine)\n\t{\n\t\tthis.paintDivider(c, x, y, w, h, start, fill == mxConstants.NONE);\n\t}\n};\n\n/**\n * Function: paintDivider\n *\n * Paints the divider between swimlane title and content area.\n */\nmxSwimlane.prototype.paintDivider = function(c, x, y, w, h, start, shadow)\n{\n\tif (!shadow)\n\t{\n\t\tc.setShadow(false);\n\t}\n\n\tc.begin();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(0, start);\n\t\tc.lineTo(w, start);\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(start, h);\n\t}\n\n\tc.stroke();\n};\n\n/**\n * Function: paintSeparator\n *\n * Paints the vertical or horizontal separator line between swimlanes.\n */\nmxSwimlane.prototype.paintSeparator = function(c, x, y, w, h, start, color)\n{\n\tif (color != mxConstants.NONE)\n\t{\n\t\tc.setStrokeColor(color);\n\t\tc.setDashed(true);\n\t\tc.begin();\n\t\t\n\t\tif (this.isHorizontal())\n\t\t{\n\t\t\tc.moveTo(w, start);\n\t\t\tc.lineTo(w, h);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(start, 0);\n\t\t\tc.lineTo(w, 0);\n\t\t}\n\t\t\n\t\tc.stroke();\n\t\tc.setDashed(false);\n\t}\n};\n\n/**\n * Function: getImageBounds\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.getImageBounds = function(x, y, w, h)\n{\n\tif (this.isHorizontal())\n\t{\n\t\treturn new mxRectangle(x + w - this.imageSize, y, this.imageSize, this.imageSize);\n\t}\n\telse\n\t{\n\t\treturn new mxRectangle(x, y, this.imageSize, this.imageSize);\n\t}\n};\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxGraphLayout\n * \n * Base class for all layout algorithms in mxGraph. Main public functions are\n * <moveCell> for handling a moved cell within a layouted parent, and <execute> for\n * running the layout on a given parent cell.\n *\n * Known Subclasses:\n *\n * <mxCircleLayout>, <mxCompactTreeLayout>, <mxCompositeLayout>,\n * <mxFastOrganicLayout>, <mxParallelEdgeLayout>, <mxPartitionLayout>,\n * <mxStackLayout>\n * \n * Constructor: mxGraphLayout\n *\n * Constructs a new layout using the given layouts.\n *\n * Arguments:\n * \n * graph - Enclosing \n */\nfunction mxGraphLayout(graph)\n{\n\tthis.graph = graph;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphLayout.prototype.graph = null;\n\n/**\n * Variable: useBoundingBox\n *\n * Boolean indicating if the bounding box of the label should be used if\n * its available. Default is true.\n */\nmxGraphLayout.prototype.useBoundingBox = true;\n\n/**\n * Variable: parent\n *\n * The parent cell of the layout, if any\n */\nmxGraphLayout.prototype.parent = null;\n\n/**\n * Function: moveCell\n * \n * Notified when a cell is being moved in a parent that has automatic\n * layout to update the cell state (eg. index) so that the outcome of the\n * layout will position the vertex as close to the point (x, y) as\n * possible.\n * \n * Empty implementation.\n * \n * Parameters:\n * \n * cell - <mxCell> which has been moved.\n * x - X-coordinate of the new cell location.\n * y - Y-coordinate of the new cell location.\n */\nmxGraphLayout.prototype.moveCell = function(cell, x, y) { };\n\n/**\n * Function: execute\n * \n * Executes the layout algorithm for the children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be layed out.\n */\nmxGraphLayout.prototype.execute = function(parent) { };\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this layout operates on.\n */\nmxGraphLayout.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: getConstraint\n * \n * Returns the constraint for the given key and cell. The optional edge and\n * source arguments are used to return inbound and outgoing routing-\n * constraints for the given edge and vertex. This implementation always\n * returns the value for the given key in the style of the given cell.\n * \n * Parameters:\n * \n * key - Key of the constraint to be returned.\n * cell - <mxCell> whose constraint should be returned.\n * edge - Optional <mxCell> that represents the connection whose constraint\n * should be returned. Default is null.\n * source - Optional boolean that specifies if the connection is incoming\n * or outgoing. Default is null.\n */\nmxGraphLayout.prototype.getConstraint = function(key, cell, edge, source)\n{\n\tvar state = this.graph.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.graph.getCellStyle(cell);\n\t\n\treturn (style != null) ? style[key] : null;\n};\n\n/**\n * Function: traverse\n * \n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Example:\n * \n * (code)\n * mxLog.show();\n * var cell = graph.getSelectionCell();\n * graph.traverse(cell, false, function(vertex, edge)\n * {\n *   mxLog.debug(graph.getLabel(vertex));\n * });\n * (end)\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - Optional boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * func - Visitor function that takes the current vertex and the incoming\n * edge as arguments. The traversal stops if the function returns false.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * visited - Optional <mxDictionary> of cell paths for the visited cells.\n */\nmxGraphLayout.traverse = function(vertex, directed, func, edge, visited)\n{\n\tif (func != null && vertex != null)\n\t{\n\t\tdirected = (directed != null) ? directed : true;\n\t\tvisited = visited || new mxDictionary();\n\t\t\n\t\tif (!visited.get(vertex))\n\t\t{\n\t\t\tvisited.put(vertex, true);\n\t\t\tvar result = func(vertex, edge);\n\t\t\t\n\t\t\tif (result == null || result)\n\t\t\t{\n\t\t\t\tvar edgeCount = this.graph.model.getEdgeCount(vertex);\n\t\t\t\t\n\t\t\t\tif (edgeCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar e = this.graph.model.getEdgeAt(vertex, i);\n\t\t\t\t\t\tvar isSource = this.graph.model.getTerminal(e, true) == vertex;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif (!directed || isSource)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar next = this.graph.view.getVisibleTerminal(e, !isSource);\n\t\t\t\t\t\t\tthis.traverse(next, directed, func, e, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isAncestor\n * \n * Returns true if the given parent is an ancestor of the given child.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent.\n * child - <mxCell> that specifies the child.\n * traverseAncestors - boolean whether to \n */\nmxGraphLayout.prototype.isAncestor = function(parent, child, traverseAncestors)\n{\n\tif (!traverseAncestors)\n\t{\n\t\treturn (this.graph.model.getParent(child) == parent);\n\t}\t\n\t\n\tif (child == parent)\n\t{\n\t\treturn false;\n\t}\n\n\twhile (child != null && child != parent)\n\t{\n\t\tchild = this.graph.model.getParent(child);\n\t}\n\t\n\treturn child == parent;\n};\n\n/**\n * Function: isVertexMovable\n * \n * Returns a boolean indicating if the given <mxCell> is movable or\n * bendable by the algorithm. This implementation returns true if the given\n * cell is movable in the graph.\n * \n * Parameters:\n * \n * cell - <mxCell> whose movable state should be returned.\n */\nmxGraphLayout.prototype.isVertexMovable = function(cell)\n{\n\treturn this.graph.isCellMovable(cell);\n};\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored by\n * the algorithm. This implementation returns false for all vertices.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxGraphLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn !this.graph.getModel().isVertex(vertex) ||\n\t\t!this.graph.isCellVisible(vertex);\n};\n\n/**\n * Function: isEdgeIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored by\n * the algorithm. This implementation returns false for all vertices.\n * \n * Parameters:\n * \n * cell - <mxCell> whose ignored state should be returned.\n */\nmxGraphLayout.prototype.isEdgeIgnored = function(edge)\n{\n\tvar model = this.graph.getModel();\n\t\n\treturn !model.isEdge(edge) ||\n\t\t!this.graph.isCellVisible(edge) ||\n\t\tmodel.getTerminal(edge, true) == null ||\n\t\tmodel.getTerminal(edge, false) == null;\n};\n\n/**\n * Function: setEdgeStyleEnabled\n * \n * Disables or enables the edge style of the given edge.\n */\nmxGraphLayout.prototype.setEdgeStyleEnabled = function(edge, value)\n{\n\tthis.graph.setCellStyles(mxConstants.STYLE_NOEDGESTYLE,\n\t\t\t(value) ? '0' : '1', [edge]);\n};\n\n/**\n * Function: setOrthogonalEdge\n * \n * Disables or enables orthogonal end segments of the given edge.\n */\nmxGraphLayout.prototype.setOrthogonalEdge = function(edge, value)\n{\n\tthis.graph.setCellStyles(mxConstants.STYLE_ORTHOGONAL,\n\t\t\t(value) ? '1' : '0', [edge]);\n};\n\n/**\n * Function: getParentOffset\n * \n * Determines the offset of the given parent to the parent\n * of the layout\n */\nmxGraphLayout.prototype.getParentOffset = function(parent)\n{\n\tvar result = new mxPoint();\n\n\tif (parent != null && parent != this.parent)\n\t{\n\t\tvar model = this.graph.getModel();\n\n\t\tif (model.isAncestor(this.parent, parent))\n\t\t{\n\t\t\tvar parentGeo = model.getGeometry(parent);\n\n\t\t\twhile (parent != this.parent)\n\t\t\t{\n\t\t\t\tresult.x = result.x + parentGeo.x;\n\t\t\t\tresult.y = result.y + parentGeo.y;\n\n\t\t\t\tparent = model.getParent(parent);;\n\t\t\t\tparentGeo = model.getGeometry(parent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: setEdgePoints\n * \n * Replaces the array of mxPoints in the geometry of the given edge\n * with the given array of mxPoints.\n */\nmxGraphLayout.prototype.setEdgePoints = function(edge, points)\n{\n\tif (edge != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar geometry = model.getGeometry(edge);\n\n\t\tif (geometry == null)\n\t\t{\n\t\t\tgeometry = new mxGeometry();\n\t\t\tgeometry.setRelative(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeometry = geometry.clone();\n\t\t}\n\n\t\tif (this.parent != null && points != null)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\n\t\t\tvar parentOffset = this.getParentOffset(parent);\n\n\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t{\n\t\t\t\tpoints[i].x = points[i].x - parentOffset.x;\n\t\t\t\tpoints[i].y = points[i].y - parentOffset.y;\n\t\t\t}\n\t\t}\n\n\t\tgeometry.points = points;\n\t\tmodel.setGeometry(edge, geometry);\n\t}\n};\n\n/**\n * Function: setVertexLocation\n * \n * Sets the new position of the given cell taking into account the size of\n * the bounding box if <useBoundingBox> is true. The change is only carried\n * out if the new location is not equal to the existing location, otherwise\n * the geometry is not replaced with an updated instance. The new or old\n * bounds are returned (including overlapping labels).\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry is to be set.\n * x - Integer that defines the x-coordinate of the new location.\n * y - Integer that defines the y-coordinate of the new location.\n */\nmxGraphLayout.prototype.setVertexLocation = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(cell);\n\tvar result = null;\n\t\n\tif (geometry != null)\n\t{\n\t\tresult = new mxRectangle(x, y, geometry.width, geometry.height);\n\t\t\n\t\t// Checks for oversize labels and shifts the result\n\t\t// TODO: Use mxUtils.getStringSize for label bounds\n\t\tif (this.useBoundingBox)\n\t\t{\n\t\t\tvar state = this.graph.getView().getState(cell);\n\t\t\t\n\t\t\tif (state != null && state.text != null && state.text.boundingBox != null)\n\t\t\t{\n\t\t\t\tvar scale = this.graph.getView().scale;\n\t\t\t\tvar box = state.text.boundingBox;\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.x < state.x)\n\t\t\t\t{\n\t\t\t\t\tx += (state.x - box.x) / scale;\n\t\t\t\t\tresult.width = box.width;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.y < state.y)\n\t\t\t\t{\n\t\t\t\t\ty += (state.y - box.y) / scale;\n\t\t\t\t\tresult.height = box.height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.parent != null)\n\t\t{\n\t\t\tvar parent = model.getParent(cell);\n\n\t\t\tif (parent != null && parent != this.parent)\n\t\t\t{\n\t\t\t\tvar parentOffset = this.getParentOffset(parent);\n\n\t\t\t\tx = x - parentOffset.x;\n\t\t\t\ty = y - parentOffset.y;\n\t\t\t}\n\t\t}\n\n\t\tif (geometry.x != x || geometry.y != y)\n\t\t{\n\t\t\tgeometry = geometry.clone();\n\t\t\tgeometry.x = x;\n\t\t\tgeometry.y = y;\n\t\t\t\n\t\t\tmodel.setGeometry(cell, geometry);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getVertexBounds\n * \n * Returns an <mxRectangle> that defines the bounds of the given cell or\n * the bounding box if <useBoundingBox> is true.\n */\nmxGraphLayout.prototype.getVertexBounds = function(cell)\n{\n\tvar geo = this.graph.getModel().getGeometry(cell);\n\n\t// Checks for oversize label bounding box and corrects\n\t// the return value accordingly\n\t// TODO: Use mxUtils.getStringSize for label bounds\n\tif (this.useBoundingBox)\n\t{\n\t\tvar state = this.graph.getView().getState(cell);\n\n\t\tif (state != null && state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tvar scale = this.graph.getView().scale;\n\t\t\tvar tmp = state.text.boundingBox;\n\n\t\t\tvar dx0 = Math.max(state.x - tmp.x, 0) / scale;\n\t\t\tvar dy0 = Math.max(state.y - tmp.y, 0) / scale;\n\t\t\tvar dx1 = Math.max((tmp.x + tmp.width) - (state.x + state.width), 0) / scale;\n  \t\t\tvar dy1 = Math.max((tmp.y + tmp.height) - (state.y + state.height), 0) / scale;\n\n\t\t\tgeo = new mxRectangle(geo.x - dx0, geo.y - dy0, geo.width + dx0 + dx1, geo.height + dy0 + dy1);\n\t\t}\n\t}\n\n\tif (this.parent != null)\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\tgeo = geo.clone();\n\n\t\tif (parent != null && parent != this.parent)\n\t\t{\n\t\t\tvar parentOffset = this.getParentOffset(parent);\n\t\t\tgeo.x = geo.x + parentOffset.x;\n\t\t\tgeo.y = geo.y + parentOffset.y;\n\t\t}\n\t}\n\n\treturn new mxRectangle(geo.x, geo.y, geo.width, geo.height);\n};\n\n/**\n * Function: arrangeGroups\n * \n * Shortcut to <mxGraph.updateGroupBounds> with moveGroup set to true.\n */\nmxGraphLayout.prototype.arrangeGroups = function(cells, border, topBorder, rightBorder, bottomBorder, leftBorder)\n{\n\treturn this.graph.updateGroupBounds(cells, border, true, topBorder, rightBorder, bottomBorder, leftBorder);\n};\n\n/**\n * Class: WeightedCellSorter\n * \n * A utility class used to track cells whilst sorting occurs on the weighted\n * sum of their connected edges. Does not violate (x.compareTo(y)==0) ==\n * (x.equals(y))\n *\n * Constructor: WeightedCellSorter\n * \n * Constructs a new weighted cell sorted for the given cell and weight.\n */\nfunction WeightedCellSorter(cell, weightedValue)\n{\n\tthis.cell = cell;\n\tthis.weightedValue = weightedValue;\n};\n\n/**\n * Variable: weightedValue\n * \n * The weighted value of the cell stored.\n */\nWeightedCellSorter.prototype.weightedValue = 0;\n\n/**\n * Variable: nudge\n * \n * Whether or not to flip equal weight values.\n */\nWeightedCellSorter.prototype.nudge = false;\n\n/**\n * Variable: visited\n * \n * Whether or not this cell has been visited in the current assignment.\n */\nWeightedCellSorter.prototype.visited = false;\n\n/**\n * Variable: rankIndex\n * \n * The index this cell is in the model rank.\n */\nWeightedCellSorter.prototype.rankIndex = null;\n\n/**\n * Variable: cell\n * \n * The cell whose median value is being calculated.\n */\nWeightedCellSorter.prototype.cell = null;\n\n/**\n * Function: compare\n * \n * Compares two WeightedCellSorters.\n */\nWeightedCellSorter.prototype.compare = function(a, b)\n{\n\tif (a != null && b != null)\n\t{\n\t\tif (b.weightedValue > a.weightedValue)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t\telse if (b.weightedValue < a.weightedValue)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (b.nudge)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStackLayout\n * \n * Extends <mxGraphLayout> to create a horizontal or vertical stack of the\n * child vertices. The children do not need to be connected for this layout\n * to work.\n * \n * Example:\n * \n * (code)\n * var layout = new mxStackLayout(graph, true);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxStackLayout\n * \n * Constructs a new stack layout layout for the specified graph,\n * spacing, orientation and offset.\n */\nfunction mxStackLayout(graph, horizontal, spacing, x0, y0, border)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.spacing = (spacing != null) ? spacing : 0;\n\tthis.x0 = (x0 != null) ? x0 : 0;\n\tthis.y0 = (y0 != null) ? y0 : 0;\n\tthis.border = (border != null) ? border : 0;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxStackLayout.prototype = new mxGraphLayout();\nmxStackLayout.prototype.constructor = mxStackLayout;\n\n/**\n * Variable: horizontal\n *\n * Specifies the orientation of the layout. Default is true.\n */\nmxStackLayout.prototype.horizontal = null;\n\n/**\n * Variable: spacing\n *\n * Specifies the spacing between the cells. Default is 0.\n */\nmxStackLayout.prototype.spacing = null;\n\n/**\n * Variable: x0\n *\n * Specifies the horizontal origin of the layout. Default is 0.\n */\nmxStackLayout.prototype.x0 = null;\n\n/**\n * Variable: y0\n *\n * Specifies the vertical origin of the layout. Default is 0.\n */\nmxStackLayout.prototype.y0 = null;\n\n/**\n * Variable: border\n *\n * Border to be added if fill is true. Default is 0.\n */\nmxStackLayout.prototype.border = 0;\n\n/**\n * Variable: marginTop\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginTop = 0;\n\n/**\n * Variable: marginLeft\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginLeft = 0;\n\n/**\n * Variable: marginRight\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginRight = 0;\n\n/**\n * Variable: marginBottom\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginBottom = 0;\n\n/**\n * Variable: keepFirstLocation\n * \n * Boolean indicating if the location of the first cell should be\n * kept, that is, it will not be moved to x0 or y0. Default is false.\n */\nmxStackLayout.prototype.keepFirstLocation = false;\n\n/**\n * Variable: fill\n * \n * Boolean indicating if dimension should be changed to fill out the parent\n * cell. Default is false.\n */\nmxStackLayout.prototype.fill = false;\n\t\n/**\n * Variable: resizeParent\n * \n * If the parent should be resized to match the width/height of the\n * stack. Default is false.\n */\nmxStackLayout.prototype.resizeParent = false;\n\n/**\n * Variable: resizeParentMax\n * \n * Use maximum of existing value and new value for resize of parent.\n * Default is false.\n */\nmxStackLayout.prototype.resizeParentMax = false;\n\n/**\n * Variable: resizeLast\n * \n * If the last element should be resized to fill out the parent. Default is\n * false. If <resizeParent> is true then this is ignored.\n */\nmxStackLayout.prototype.resizeLast = false;\n\n/**\n * Variable: wrap\n * \n * Value at which a new column or row should be created. Default is null.\n */\nmxStackLayout.prototype.wrap = null;\n\n/**\n * Variable: borderCollapse\n * \n * If the strokeWidth should be ignored. Default is true.\n */\nmxStackLayout.prototype.borderCollapse = true;\n\n/**\n * Variable: allowGaps\n * \n * If gaps should be allowed in the stack. Default is false.\n */\nmxStackLayout.prototype.allowGaps = false;\n\n/**\n * Variable: gridSize\n * \n * Grid size for alignment of position and size. Default is 0.\n */\nmxStackLayout.prototype.gridSize = 0;\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxStackLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell>.\n */\nmxStackLayout.prototype.moveCell = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(cell);\n\tvar horizontal = this.isHorizontal();\n\t\n\tif (cell != null && parent != null)\n\t{\n\t\tvar i = 0;\n\t\tvar last = 0;\n\t\tvar childCount = model.getChildCount(parent);\n\t\tvar value = (horizontal) ? x : y;\n\t\tvar pstate = this.graph.getView().getState(parent);\n\n\t\tif (pstate != null)\n\t\t{\n\t\t\tvalue -= (horizontal) ? pstate.x : pstate.y;\n\t\t}\n\t\t\n\t\tvalue /= this.graph.view.scale;\n\t\t\n\t\tfor (i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (child != cell)\n\t\t\t{\n\t\t\t\tvar bounds = model.getGeometry(child);\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = (horizontal) ?\n\t\t\t\t\t\tbounds.x + bounds.width / 2 :\n\t\t\t\t\t\tbounds.y + bounds.height / 2;\n\t\t\t\t\t\n\t\t\t\t\tif (last <= value && tmp > value)\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlast = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Changes child order in parent\n\t\tvar idx = parent.getIndex(cell);\n\t\tidx = Math.max(0, i - ((i > idx) ? 1 : 0));\n\n\t\tmodel.add(parent, cell, idx);\n\t}\n};\n\n/**\n * Function: getParentSize\n * \n * Returns the size for the parent container or the size of the graph\n * container if the parent is a layer or the root of the model.\n */\nmxStackLayout.prototype.getParentSize = function(parent)\n{\n\tvar model = this.graph.getModel();\t\t\t\n\tvar pgeo = model.getGeometry(parent);\n\t\n\t// Handles special case where the parent is either a layer with no\n\t// geometry or the current root of the view in which case the size\n\t// of the graph's container will be used.\n\tif (this.graph.container != null && ((pgeo == null &&\n\t\tmodel.isLayer(parent)) || parent == this.graph.getView().currentRoot))\n\t{\n\t\tvar width = this.graph.container.offsetWidth - 1;\n\t\tvar height = this.graph.container.offsetHeight - 1;\n\t\tpgeo = new mxRectangle(0, 0, width, height);\n\t}\n\t\n\treturn pgeo;\n};\n\n/**\n * Function: getLayoutCells\n * \n * Returns the cells to be layouted.\n */\nmxStackLayout.prototype.getLayoutCells = function(parent)\n{\n\tvar model = this.graph.getModel();\n\tvar childCount = model.getChildCount(parent);\n\tvar cells = [];\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (!this.isVertexIgnored(child) && this.isVertexMovable(child))\n\t\t{\n\t\t\tcells.push(child);\n\t\t}\n\t}\n\t\n\tif (this.allowGaps)\n\t{\n\t\tcells.sort(mxUtils.bind(this, function(c1, c2)\n\t\t{\n\t\t\tvar geo1 = this.graph.getCellGeometry(c1);\n\t\t\tvar geo2 = this.graph.getCellGeometry(c2);\n\t\t\t\n\t\t\treturn (geo1.y == geo2.y) ? 0 : ((geo1.y > geo2.y > 0) ? 1 : -1);\n\t\t}));\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: snap\n * \n * Snaps the given value to the grid size.\n */\nmxStackLayout.prototype.snap = function(value)\n{\n\tif (this.gridSize != null && this.gridSize > 0)\n\t{\n\t\tvalue = Math.max(value, this.gridSize);\n\t\t\n\t\tif (value / this.gridSize > 1)\n\t\t{\n\t\t\tvar mod = value % this.gridSize;\n\t\t\tvalue += mod > this.gridSize / 2 ? (this.gridSize - mod) : -mod;\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.execute = function(parent)\n{\n\tif (parent != null)\n\t{\n\t\tvar pgeo = this.getParentSize(parent);\n\t\tvar horizontal = this.isHorizontal();\n\t\tvar model = this.graph.getModel();\t\n\t\tvar fillValue = null;\n\t\t\n\t\tif (pgeo != null)\n\t\t{\n\t\t\tfillValue = (horizontal) ? pgeo.height - this.marginTop - this.marginBottom :\n\t\t\t\tpgeo.width - this.marginLeft - this.marginRight;\n\t\t}\n\t\t\n\t\tfillValue -= 2 * this.border;\n\t\tvar x0 = this.x0 + this.border + this.marginLeft;\n\t\tvar y0 = this.y0 + this.border + this.marginTop;\n\t\t\n\t\t// Handles swimlane start size\n\t\tif (this.graph.isSwimlane(parent))\n\t\t{\n\t\t\t// Uses computed style to get latest \n\t\t\tvar style = this.graph.getCellStyle(parent);\n\t\t\tvar start = mxUtils.getNumber(style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE);\n\t\t\tvar horz = mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true) == 1;\n\n\t\t\tif (pgeo != null)\n\t\t\t{\n\t\t\t\tif (horz)\n\t\t\t\t{\n\t\t\t\t\tstart = Math.min(start, pgeo.height);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstart = Math.min(start, pgeo.width);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (horizontal == horz)\n\t\t\t{\n\t\t\t\tfillValue -= start;\n\t\t\t}\n\n\t\t\tif (horz)\n\t\t\t{\n\t\t\t\ty0 += start;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx0 += start;\n\t\t\t}\n\t\t}\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar tmp = 0;\n\t\t\tvar last = null;\n\t\t\tvar lastValue = 0;\n\t\t\tvar lastChild = null;\n\t\t\tvar cells = this.getLayoutCells(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar child = cells[i];\n\t\t\t\tvar geo = model.getGeometry(child);\n\t\t\t\t\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\tif (this.wrap != null && last != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ((horizontal && last.x + last.width +\n\t\t\t\t\t\t\tgeo.width + 2 * this.spacing > this.wrap) ||\n\t\t\t\t\t\t\t(!horizontal && last.y + last.height +\n\t\t\t\t\t\t\tgeo.height + 2 * this.spacing > this.wrap))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ty0 += tmp + this.spacing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tx0 += tmp + this.spacing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttmp = 0;\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttmp = Math.max(tmp, (horizontal) ? geo.height : geo.width);\n\t\t\t\t\tvar sw = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (!this.borderCollapse)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar childStyle = this.graph.getCellStyle(child);\n\t\t\t\t\t\tsw = mxUtils.getNumber(childStyle, mxConstants.STYLE_STROKEWIDTH, 1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (last != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar temp = lastValue + this.spacing + Math.floor(sw / 2);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = this.snap(((this.allowGaps) ? Math.max(temp, geo.x) :\n\t\t\t\t\t\t\t\ttemp) - this.marginLeft) + this.marginLeft;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.y = this.snap(((this.allowGaps) ? Math.max(temp, geo.y) :\n\t\t\t\t\t\t\t\ttemp) - this.marginTop) + this.marginTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (!this.keepFirstLocation)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = (this.allowGaps && geo.x > x0) ? Math.max(this.snap(geo.x -\n\t\t\t\t\t\t\t\tthis.marginLeft) + this.marginLeft, x0) : x0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.y = (this.allowGaps && geo.y > y0) ? Math.max(this.snap(geo.y -\n\t\t\t\t\t\t\t\tthis.marginTop) + this.marginTop, y0) : y0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (horizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.y = y0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.x = x0;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.fill && fillValue != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.height = fillValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.width = fillValue;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (horizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.width = this.snap(geo.width);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.height = this.snap(geo.height);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.setChildGeometry(child, geo);\n\t\t\t\t\tlastChild = child;\n\t\t\t\t\tlast = geo;\n\t\t\t\t\t\n\t\t\t\t\tif (horizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tlastValue = last.x + last.width + Math.floor(sw / 2);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlastValue = last.y + last.height + Math.floor(sw / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.resizeParent && pgeo != null && last != null && !this.graph.isCellCollapsed(parent))\n\t\t\t{\n\t\t\t\tthis.updateParentGeometry(parent, pgeo, last);\n\t\t\t}\n\t\t\telse if (this.resizeLast && pgeo != null && last != null && lastChild != null)\n\t\t\t{\n\t\t\t\tif (horizontal)\n\t\t\t\t{\n\t\t\t\t\tlast.width = pgeo.width - last.x - this.spacing - this.marginRight - this.marginLeft;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlast.height = pgeo.height - last.y - this.spacing - this.marginBottom;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.setChildGeometry(lastChild, last);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.setChildGeometry = function(child, geo)\n{\n\tvar geo2 = this.graph.getCellGeometry(child);\n\t\n\tif (geo2 == null || geo.x != geo2.x || geo.y != geo2.y ||\n\t\tgeo.width != geo2.width || geo.height != geo2.height)\n\t{\n\t\tthis.graph.getModel().setGeometry(child, geo);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.updateParentGeometry = function(parent, pgeo, last)\n{\n\tvar horizontal = this.isHorizontal();\n\tvar model = this.graph.getModel();\t\n\n\tvar pgeo2 = pgeo.clone();\n\t\n\tif (horizontal)\n\t{\n\t\tvar tmp = last.x + last.width + this.marginRight + this.border;\n\t\t\n\t\tif (this.resizeParentMax)\n\t\t{\n\t\t\tpgeo2.width = Math.max(pgeo2.width, tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpgeo2.width = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tvar tmp = last.y + last.height + this.marginBottom + this.border;\n\t\t\n\t\tif (this.resizeParentMax)\n\t\t{\n\t\t\tpgeo2.height = Math.max(pgeo2.height, tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpgeo2.height = tmp;\n\t\t}\n\t}\n\t\n\tif (pgeo.x != pgeo2.x || pgeo.y != pgeo2.y ||\n\t\tpgeo.width != pgeo2.width || pgeo.height != pgeo2.height)\n\t{\n\t\tmodel.setGeometry(parent, pgeo2);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPartitionLayout\n * \n * Extends <mxGraphLayout> for partitioning the parent cell vertically or\n * horizontally by filling the complete area with the child cells. A horizontal\n * layout partitions the height of the given parent whereas a a non-horizontal\n * layout partitions the width. If the parent is a layer (that is, a child of\n * the root node), then the current graph size is partitioned. The children do\n * not need to be connected for this layout to work.\n * \n * Example:\n * \n * (code)\n * var layout = new mxPartitionLayout(graph, true, 10, 20);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxPartitionLayout\n * \n * Constructs a new stack layout layout for the specified graph,\n * spacing, orientation and offset.\n */\nfunction mxPartitionLayout(graph, horizontal, spacing, border)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.spacing = spacing || 0;\n\tthis.border = border || 0;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxPartitionLayout.prototype = new mxGraphLayout();\nmxPartitionLayout.prototype.constructor = mxPartitionLayout;\n\n/**\n * Variable: horizontal\n * \n * Boolean indicating the direction in which the space is partitioned.\n * Default is true.\n */\nmxPartitionLayout.prototype.horizontal = null;\n\n/**\n * Variable: spacing\n * \n * Integer that specifies the absolute spacing in pixels between the\n * children. Default is 0.\n */\nmxPartitionLayout.prototype.spacing = null;\n\n/**\n * Variable: border\n * \n * Integer that specifies the absolute inset in pixels for the parent that\n * contains the children. Default is 0.\n */\nmxPartitionLayout.prototype.border = null;\n\n/**\n * Variable: resizeVertices\n * \n * Boolean that specifies if vertices should be resized. Default is true.\n */\nmxPartitionLayout.prototype.resizeVertices = true;\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxPartitionLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell>.\n */\nmxPartitionLayout.prototype.moveCell = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(cell);\n\t\n\tif (cell != null &&\n\t\tparent != null)\n\t{\n\t\tvar i = 0;\n\t\tvar last = 0;\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\t// Finds index of the closest swimlane\n\t\t// TODO: Take into account the orientation\n\t\tfor (i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\tvar bounds = this.getVertexBounds(child);\n\t\t\t\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tvar tmp = bounds.x + bounds.width / 2;\n\t\t\t\t\n\t\t\t\tif (last < x && tmp > x)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlast = tmp;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Changes child order in parent\n\t\tvar idx = parent.getIndex(cell);\n\t\tidx = Math.max(0, i - ((i > idx) ? 1 : 0));\n\t\t\n\t\tmodel.add(parent, cell, idx);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>. All children where <isVertexIgnored>\n * returns false and <isVertexMovable> returns true are modified.\n */\nmxPartitionLayout.prototype.execute = function(parent)\n{\n\tvar horizontal = this.isHorizontal();\n\tvar model = this.graph.getModel();\n\tvar pgeo = model.getGeometry(parent);\n\t\n\t// Handles special case where the parent is either a layer with no\n\t// geometry or the current root of the view in which case the size\n\t// of the graph's container will be used.\n\tif (this.graph.container != null &&\n\t\t((pgeo == null &&\n\t\tmodel.isLayer(parent)) ||\n\t\tparent == this.graph.getView().currentRoot))\n\t{\n\t\tvar width = this.graph.container.offsetWidth - 1;\n\t\tvar height = this.graph.container.offsetHeight - 1;\n\t\tpgeo = new mxRectangle(0, 0, width, height);\n\t}\n\n\tif (pgeo != null)\n\t{\n\t\tvar children = [];\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (!this.isVertexIgnored(child) &&\n\t\t\t\tthis.isVertexMovable(child))\n\t\t\t{\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar n = children.length;\n\n\t\tif (n > 0)\n\t\t{\n\t\t\tvar x0 = this.border;\n\t\t\tvar y0 = this.border;\n\t\t\tvar other = (horizontal) ? pgeo.height : pgeo.width;\n\t\t\tother -= 2 * this.border;\n\n\t\t\tvar size = (this.graph.isSwimlane(parent)) ?\n\t\t\t\tthis.graph.getStartSize(parent) :\n\t\t\t\tnew mxRectangle();\n\n\t\t\tother -= (horizontal) ? size.height : size.width;\n\t\t\tx0 = x0 + size.width;\n\t\t\ty0 = y0 + size.height;\n\n\t\t\tvar tmp = this.border + (n - 1) * this.spacing;\n\t\t\tvar value = (horizontal) ?\n\t\t\t\t((pgeo.width - x0 - tmp) / n) :\n\t\t\t\t((pgeo.height - y0 - tmp) / n);\n\t\t\t\n\t\t\t// Avoids negative values, that is values where the sum of the\n\t\t\t// spacing plus the border is larger then the available space\n\t\t\tif (value > 0)\n\t\t\t{\n\t\t\t\tmodel.beginUpdate();\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < n; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\tvar geo = model.getGeometry(child);\n\t\t\t\t\t\n\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tgeo.x = x0;\n\t\t\t\t\t\t\tgeo.y = y0;\n\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (this.resizeVertices)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.width = value;\n\t\t\t\t\t\t\t\t\tgeo.height = other;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tx0 += value + this.spacing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (this.resizeVertices)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.height = value;\n\t\t\t\t\t\t\t\t\tgeo.width = other;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ty0 += value + this.spacing;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmodel.setGeometry(child, geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfinally\n\t\t\t\t{\n\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxCompactTreeLayout\n * \n * Extends <mxGraphLayout> to implement a compact tree (Moen) algorithm. This\n * layout is suitable for graphs that have no cycles (trees). Vertices that are\n * not connected to the tree will be ignored by this layout.\n * \n * Example:\n * \n * (code)\n * var layout = new mxCompactTreeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompactTreeLayout\n * \n * Constructs a new compact tree layout for the specified graph\n * and orientation.\n */\nfunction mxCompactTreeLayout(graph, horizontal, invert)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.invert = (invert != null) ? invert : false;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCompactTreeLayout.prototype = new mxGraphLayout();\nmxCompactTreeLayout.prototype.constructor = mxCompactTreeLayout;\n\n/**\n * Variable: horizontal\n *\n * Specifies the orientation of the layout. Default is true.\n */\nmxCompactTreeLayout.prototype.horizontal = null;\t \n\n/**\n * Variable: invert\n *\n * Specifies if edge directions should be inverted. Default is false.\n */\nmxCompactTreeLayout.prototype.invert = null;\t \n\n/**\n * Variable: resizeParent\n * \n * If the parents should be resized to match the width/height of the\n * children. Default is true.\n */\nmxCompactTreeLayout.prototype.resizeParent = true;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxCompactTreeLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: groupPadding\n * \n * Padding added to resized parents. Default is 10.\n */\nmxCompactTreeLayout.prototype.groupPadding = 10;\n\n/**\n * Variable: groupPaddingTop\n * \n * Top padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingTop = 0;\n\n/**\n * Variable: groupPaddingRight\n * \n * Right padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingRight = 0;\n\n/**\n * Variable: groupPaddingBottom\n * \n * Bottom padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingBottom = 0;\n\n/**\n * Variable: groupPaddingLeft\n * \n * Left padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingLeft = 0;\n\n/**\n * Variable: parentsChanged\n *\n * A set of the parents that need updating based on children\n * process as part of the layout.\n */\nmxCompactTreeLayout.prototype.parentsChanged = null;\n\n/**\n * Variable: moveTree\n * \n * Specifies if the tree should be moved to the top, left corner\n * if it is inside a top-level layer. Default is false.\n */\nmxCompactTreeLayout.prototype.moveTree = false;\n\n/**\n * Variable: visited\n * \n * Specifies if the tree should be moved to the top, left corner\n * if it is inside a top-level layer. Default is false.\n */\nmxCompactTreeLayout.prototype.visited = null;\n\n/**\n * Variable: levelDistance\n *\n * Holds the levelDistance. Default is 10.\n */\nmxCompactTreeLayout.prototype.levelDistance = 10;\n\n/**\n * Variable: nodeDistance\n *\n * Holds the nodeDistance. Default is 20.\n */\nmxCompactTreeLayout.prototype.nodeDistance = 20;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxCompactTreeLayout.prototype.resetEdges = true;\n\n/**\n * Variable: prefHozEdgeSep\n * \n * The preferred horizontal distance between edges exiting a vertex.\n */\nmxCompactTreeLayout.prototype.prefHozEdgeSep = 5;\n\n/**\n * Variable: prefVertEdgeOff\n * \n * The preferred vertical offset between edges exiting a vertex.\n */\nmxCompactTreeLayout.prototype.prefVertEdgeOff = 4;\n\n/**\n * Variable: minEdgeJetty\n * \n * The minimum distance for an edge jetty from a vertex.\n */\nmxCompactTreeLayout.prototype.minEdgeJetty = 8;\n\n/**\n * Variable: channelBuffer\n * \n * The size of the vertical buffer in the center of inter-rank channels\n * where edge control points should not be placed.\n */\nmxCompactTreeLayout.prototype.channelBuffer = 4;\n\n/**\n * Variable: edgeRouting\n * \n * Whether or not to apply the internal tree edge routing.\n */\nmxCompactTreeLayout.prototype.edgeRouting = true;\n\n/**\n * Variable: sortEdges\n * \n * Specifies if edges should be sorted according to the order of their\n * opposite terminal cell in the model.\n */\nmxCompactTreeLayout.prototype.sortEdges = false;\n\n/**\n * Variable: alignRanks\n * \n * Whether or not the tops of cells in each rank should be aligned\n * across the rank\n */\nmxCompactTreeLayout.prototype.alignRanks = false;\n\n/**\n * Variable: maxRankHeight\n * \n * An array of the maximum height of cells (relative to the layout direction)\n * per rank\n */\nmxCompactTreeLayout.prototype.maxRankHeight = null;\n\n/**\n * Variable: root\n * \n * The cell to use as the root of the tree\n */\nmxCompactTreeLayout.prototype.root = null;\n\n/**\n * Variable: node\n * \n * The internal node representation of the root cell. Do not set directly\n * , this value is only exposed to assist with post-processing functionality\n */\nmxCompactTreeLayout.prototype.node = null;\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxCompactTreeLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxCompactTreeLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * If the parent has any connected edges, then it is used as the root of\n * the tree. Else, <mxGraph.findTreeRoots> will be used to find a suitable\n * root node within the set of children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be laid out.\n * root - Optional <mxCell> that will be used as the root of the tree.\n * Overrides <root> if specified.\n */\nmxCompactTreeLayout.prototype.execute = function(parent, root)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.getModel();\n\n\tif (root == null)\n\t{\n\t\t// Takes the parent as the root if it has outgoing edges\n\t\tif (this.graph.getEdges(parent, model.getParent(parent),\n\t\t\tthis.invert, !this.invert, false).length > 0)\n\t\t{\n\t\t\tthis.root = parent;\n\t\t}\n\t\t\n\t\t// Tries to find a suitable root in the parent's\n\t\t// children\n\t\telse\n\t\t{\n\t\t\tvar roots = this.graph.findTreeRoots(parent, true, this.invert);\n\t\t\t\n\t\t\tif (roots.length > 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < roots.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (!this.isVertexIgnored(roots[i]) &&\n\t\t\t\t\t\tthis.graph.getEdges(roots[i], null,\n\t\t\t\t\t\t\tthis.invert, !this.invert, false).length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.root = roots[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.root = root;\n\t}\n\t\n\tif (this.root != null)\n\t{\n\t\tif (this.resizeParent)\n\t\t{\n\t\t\tthis.parentsChanged = new Object();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.parentsChanged = null;\n\t\t}\n\n\t\t//  Maintaining parent location\n\t\tthis.parentX = null;\n\t\tthis.parentY = null;\n\t\t\n\t\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tthis.parentX = geo.x;\n\t\t\t\tthis.parentY = geo.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tmodel.beginUpdate();\n\t\t\n\t\ttry\n\t\t{\n\t\t\tthis.visited = new Object();\n\t\t\tthis.node = this.dfs(this.root, parent);\n\t\t\t\n\t\t\tif (this.alignRanks)\n\t\t\t{\n\t\t\t\tthis.maxRankHeight = [];\n\t\t\t\tthis.findRankHeights(this.node, 0);\n\t\t\t\tthis.setCellHeights(this.node, 0);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.node != null)\n\t\t\t{\n\t\t\t\tthis.layout(this.node);\n\t\t\t\tvar x0 = this.graph.gridSize;\n\t\t\t\tvar y0 = x0;\n\t\t\t\t\n\t\t\t\tif (!this.moveTree)\n\t\t\t\t{\n\t\t\t\t\tvar g = this.getVertexBounds(this.root);\n\t\t\t\t\t\n\t\t\t\t\tif (g != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx0 = g.x;\n\t\t\t\t\t\ty0 = g.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar bounds = null;\n\t\t\t\t\n\t\t\t\tif (this.isHorizontal())\n\t\t\t\t{\n\t\t\t\t\tbounds = this.horizontalLayout(this.node, x0, y0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbounds = this.verticalLayout(this.node, null, x0, y0);\n\t\t\t\t}\n\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tvar dx = 0;\n\t\t\t\t\tvar dy = 0;\n\n\t\t\t\t\tif (bounds.x < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx = Math.abs(x0 - bounds.x);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bounds.y < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy = Math.abs(y0 - bounds.y);\t\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dx != 0 || dy != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.moveNode(this.node, dx, dy);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.resizeParent)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.adjustParents();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.edgeRouting)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Iterate through all edges setting their positions\n\t\t\t\t\t\tthis.localEdgeProcessing(this.node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Maintaining parent location\n\t\t\t\tif (this.parentX != null && this.parentY != null)\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\t\t\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\tgeo.x = this.parentX;\n\t\t\t\t\t\tgeo.y = this.parentY;\n\t\t\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: moveNode\n * \n * Moves the specified node and all of its children by the given amount.\n */\nmxCompactTreeLayout.prototype.moveNode = function(node, dx, dy)\n{\n\tnode.x += dx;\n\tnode.y += dy;\n\tthis.apply(node);\n\t\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.moveNode(child, dx, dy);\n\t\tchild = child.next;\n\t}\n};\n\n\n/**\n * Function: sortOutgoingEdges\n * \n * Called if <sortEdges> is true to sort the array of outgoing edges in place.\n */\nmxCompactTreeLayout.prototype.sortOutgoingEdges = function(source, edges)\n{\n\tvar lookup = new mxDictionary();\n\t\n\tedges.sort(function(e1, e2)\n\t{\n\t\tvar end1 = e1.getTerminal(e1.getTerminal(false) == source);\n\t\tvar p1 = lookup.get(end1);\n\t\t\n\t\tif (p1 == null)\n\t\t{\n\t\t\tp1 = mxCellPath.create(end1).split(mxCellPath.PATH_SEPARATOR);\n\t\t\tlookup.put(end1, p1);\n\t\t}\n\n\t\tvar end2 = e2.getTerminal(e2.getTerminal(false) == source);\n\t\tvar p2 = lookup.get(end2);\n\t\t\n\t\tif (p2 == null)\n\t\t{\n\t\t\tp2 = mxCellPath.create(end2).split(mxCellPath.PATH_SEPARATOR);\n\t\t\tlookup.put(end2, p2);\n\t\t}\n\n\t\treturn mxCellPath.compare(p1, p2);\n\t});\n};\n\n/**\n * Function: findRankHeights\n * \n * Stores the maximum height (relative to the layout\n * direction) of cells in each rank\n */\nmxCompactTreeLayout.prototype.findRankHeights = function(node, rank)\n{\n\tif (this.maxRankHeight[rank] == null || this.maxRankHeight[rank] < node.height)\n\t{\n\t\tthis.maxRankHeight[rank] = node.height;\n\t}\n\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.findRankHeights(child, rank + 1);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: setCellHeights\n * \n * Set the cells heights (relative to the layout\n * direction) when the tops of each rank are to be aligned\n */\nmxCompactTreeLayout.prototype.setCellHeights = function(node, rank)\n{\n\tif (this.maxRankHeight[rank] != null && this.maxRankHeight[rank] > node.height)\n\t{\n\t\tnode.height = this.maxRankHeight[rank];\n\t}\n\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.setCellHeights(child, rank + 1);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: dfs\n * \n * Does a depth first search starting at the specified cell.\n * Makes sure the specified parent is never left by the\n * algorithm.\n */\nmxCompactTreeLayout.prototype.dfs = function(cell, parent)\n{\n\tvar id = mxCellPath.create(cell);\n\tvar node = null;\n\t\n\tif (cell != null && this.visited[id] == null && !this.isVertexIgnored(cell))\n\t{\n\t\tthis.visited[id] = cell;\n\t\tnode = this.createNode(cell);\n\n\t\tvar model = this.graph.getModel();\n\t\tvar prev = null;\n\t\tvar out = this.graph.getEdges(cell, parent, this.invert, !this.invert, false, true);\n\t\tvar view = this.graph.getView();\n\t\t\n\t\tif (this.sortEdges)\n\t\t{\n\t\t\tthis.sortOutgoingEdges(cell, out);\n\t\t}\n\n\t\tfor (var i = 0; i < out.length; i++)\n\t\t{\n\t\t\tvar edge = out[i];\n\t\t\t\n\t\t\tif (!this.isEdgeIgnored(edge))\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.setEdgePoints(edge, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.edgeRouting)\n\t\t\t\t{\n\t\t\t\t\tthis.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\tthis.setEdgePoints(edge, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Checks if terminal in same swimlane\n\t\t\t\tvar state = view.getState(edge);\n\t\t\t\tvar target = (state != null) ? state.getVisibleTerminal(this.invert) : view.getVisibleTerminal(edge, this.invert);\n\t\t\t\tvar tmp = this.dfs(target, parent);\n\t\t\t\t\n\t\t\t\tif (tmp != null && model.getGeometry(target) != null)\n\t\t\t\t{\n\t\t\t\t\tif (prev == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.child = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprev.next = tmp;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tprev = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: layout\n * \n * Starts the actual compact tree layout algorithm\n * at the given node.\n */\nmxCompactTreeLayout.prototype.layout = function(node)\n{\n\tif (node != null)\n\t{\n\t\tvar child = node.child;\n\t\t\n\t\twhile (child != null)\n\t\t{\n\t\t\tthis.layout(child);\n\t\t\tchild = child.next;\n\t\t}\n\t\t\n\t\tif (node.child != null)\n\t\t{\n\t\t\tthis.attachParent(node, this.join(node));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.layoutLeaf(node);\n\t\t}\n\t}\n};\n\n/**\n * Function: horizontalLayout\n */\nmxCompactTreeLayout.prototype.horizontalLayout = function(node, x0, y0, bounds)\n{\n\tnode.x += x0 + node.offsetX;\n\tnode.y += y0 + node.offsetY;\n\tbounds = this.apply(node, bounds);\n\tvar child = node.child;\n\t\n\tif (child != null)\n\t{\n\t\tbounds = this.horizontalLayout(child, node.x, node.y, bounds);\n\t\tvar siblingOffset = node.y + child.offsetY;\n\t\tvar s = child.next;\n\t\t\n\t\twhile (s != null)\n\t\t{\n\t\t\tbounds = this.horizontalLayout(s, node.x + child.offsetX, siblingOffset, bounds);\n\t\t\tsiblingOffset += s.offsetY;\n\t\t\ts = s.next;\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\t\n/**\n * Function: verticalLayout\n */\nmxCompactTreeLayout.prototype.verticalLayout = function(node, parent, x0, y0, bounds)\n{\n\tnode.x += x0 + node.offsetY;\n\tnode.y += y0 + node.offsetX;\n\tbounds = this.apply(node, bounds);\n\tvar child = node.child;\n\t\n\tif (child != null)\n\t{\n\t\tbounds = this.verticalLayout(child, node, node.x, node.y, bounds);\n\t\tvar siblingOffset = node.x + child.offsetY;\n\t\tvar s = child.next;\n\t\t\n\t\twhile (s != null)\n\t\t{\n\t\t\tbounds = this.verticalLayout(s, node, siblingOffset, node.y + child.offsetX, bounds);\n\t\t\tsiblingOffset += s.offsetY;\n\t\t\ts = s.next;\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: attachParent\n */\nmxCompactTreeLayout.prototype.attachParent = function(node, height)\n{\n\tvar x = this.nodeDistance + this.levelDistance;\n\tvar y2 = (height - node.width) / 2 - this.nodeDistance;\n\tvar y1 = y2 + node.width + 2 * this.nodeDistance - height;\n\t\n\tnode.child.offsetX = x + node.height;\n\tnode.child.offsetY = y1;\n\t\n\tnode.contour.upperHead = this.createLine(node.height, 0,\n\t\tthis.createLine(x, y1, node.contour.upperHead));\n\tnode.contour.lowerHead = this.createLine(node.height, 0,\n\t\tthis.createLine(x, y2, node.contour.lowerHead));\n};\n\n/**\n * Function: layoutLeaf\n */\nmxCompactTreeLayout.prototype.layoutLeaf = function(node)\n{\n\tvar dist = 2 * this.nodeDistance;\n\t\n\tnode.contour.upperTail = this.createLine(\n\t\tnode.height + dist, 0);\n\tnode.contour.upperHead = node.contour.upperTail;\n\tnode.contour.lowerTail = this.createLine(\n\t\t0, -node.width - dist);\n\tnode.contour.lowerHead = this.createLine(\n\t\tnode.height + dist, 0, node.contour.lowerTail);\n};\n\n/**\n * Function: join\n */\nmxCompactTreeLayout.prototype.join = function(node)\n{\n\tvar dist = 2 * this.nodeDistance;\n\t\n\tvar child = node.child;\n\tnode.contour = child.contour;\n\tvar h = child.width + dist;\n\tvar sum = h;\n\tchild = child.next;\n\t\n\twhile (child != null)\n\t{\n\t\tvar d = this.merge(node.contour, child.contour);\n\t\tchild.offsetY = d + h;\n\t\tchild.offsetX = 0;\n\t\th = child.width + dist;\n\t\tsum += d + h;\n\t\tchild = child.next;\n\t}\n\t\n\treturn sum;\n};\n\n/**\n * Function: merge\n */\nmxCompactTreeLayout.prototype.merge = function(p1, p2)\n{\n\tvar x = 0;\n\tvar y = 0;\n\tvar total = 0;\n\t\n\tvar upper = p1.lowerHead;\n\tvar lower = p2.upperHead;\n\t\n\twhile (lower != null && upper != null)\n\t{\n\t\tvar d = this.offset(x, y, lower.dx, lower.dy,\n\t\t\tupper.dx, upper.dy);\n\t\ty += d;\n\t\ttotal += d;\n\t\t\n\t\tif (x + lower.dx <= upper.dx)\n\t\t{\n\t\t\tx += lower.dx;\n\t\t\ty += lower.dy;\n\t\t\tlower = lower.next;\n\t\t}\n\t\telse\n\t\t{\t\t\t\t\n\t\t\tx -= upper.dx;\n\t\t\ty -= upper.dy;\n\t\t\tupper = upper.next;\n\t\t}\n\t}\n\t\n\tif (lower != null)\n\t{\n\t\tvar b = this.bridge(p1.upperTail, 0, 0, lower, x, y);\n\t\tp1.upperTail = (b.next != null) ? p2.upperTail : b;\n\t\tp1.lowerTail = p2.lowerTail;\n\t}\n\telse\n\t{\n\t\tvar b = this.bridge(p2.lowerTail, x, y, upper, 0, 0);\n\t\t\n\t\tif (b.next == null)\n\t\t{\n\t\t\tp1.lowerTail = b;\n\t\t}\n\t}\n\t\n\tp1.lowerHead = p2.lowerHead;\n\t\n\treturn total;\n};\n\n/**\n * Function: offset\n */\nmxCompactTreeLayout.prototype.offset = function(p1, p2, a1, a2, b1, b2)\n{\n\tvar d = 0;\n\t\n\tif (b1 <= p1 || p1 + a1 <= 0)\n\t{\n\t\treturn 0;\n\t}\n\n\tvar t = b1 * a2 - a1 * b2;\n\t\n\tif (t > 0)\n\t{\n\t\tif (p1 < 0)\n\t\t{\n\t\t\tvar s = p1 * a2;\n\t\t\td = s / a1 - p2;\n\t\t}\n\t\telse if (p1 > 0)\n\t\t{\n\t\t\tvar s = p1 * b2;\n\t\t\td = s / b1 - p2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\td = -p2;\n\t\t}\n\t}\n\telse if (b1 < p1 + a1)\n\t{\n\t\tvar s = (b1 - p1) * a2;\n\t\td = b2 - (p2 + s / a1);\n\t}\n\telse if (b1 > p1 + a1)\n\t{\n\t\tvar s = (a1 + p1) * b2;\n\t\td = s / b1 - (p2 + a2);\n\t}\n\telse\n\t{\n\t\td = b2 - (p2 + a2);\n\t}\n\n\tif (d > 0)\n\t{\n\t\treturn d;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n\n/**\n * Function: bridge\n */\nmxCompactTreeLayout.prototype.bridge = function(line1, x1, y1, line2, x2, y2)\n{\n\tvar dx = x2 + line2.dx - x1;\n\tvar dy = 0;\n\tvar s = 0;\n\t\n\tif (line2.dx == 0)\n\t{\n\t\tdy = line2.dy;\n\t}\n\telse\n\t{\n\t\ts = dx * line2.dy;\n\t\tdy = s / line2.dx;\n\t}\n\t\n\tvar r = this.createLine(dx, dy, line2.next);\n\tline1.next = this.createLine(0, y2 + line2.dy - dy - y1, r);\n\t\n\treturn r;\n};\n\n/**\n * Function: createNode\n */\nmxCompactTreeLayout.prototype.createNode = function(cell)\n{\n\tvar node = new Object();\n\tnode.cell = cell;\n\tnode.x = 0;\n\tnode.y = 0;\n\tnode.width = 0;\n\tnode.height = 0;\n\t\n\tvar geo = this.getVertexBounds(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tif (this.isHorizontal())\n\t\t{\n\t\t\tnode.width = geo.height;\n\t\t\tnode.height = geo.width;\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.width = geo.width;\n\t\t\tnode.height = geo.height;\n\t\t}\n\t}\n\t\n\tnode.offsetX = 0;\n\tnode.offsetY = 0;\n\tnode.contour = new Object();\n\t\n\treturn node;\n};\n\n/**\n * Function: apply\n */\nmxCompactTreeLayout.prototype.apply = function(node, bounds)\n{\n\tvar model = this.graph.getModel();\n\tvar cell = node.cell;\n\tvar g = model.getGeometry(cell);\n\n\tif (cell != null && g != null)\n\t{\n\t\tif (this.isVertexMovable(cell))\n\t\t{\n\t\t\tg = this.setVertexLocation(cell, node.x, node.y);\n\t\t\t\n\t\t\tif (this.resizeParent)\n\t\t\t{\n\t\t\t\tvar parent = model.getParent(cell);\n\t\t\t\tvar id = mxCellPath.create(parent);\n\t\t\t\t\n\t\t\t\t// Implements set semantic\n\t\t\t\tif (this.parentsChanged[id] == null)\n\t\t\t\t{\n\t\t\t\t\tthis.parentsChanged[id] = parent;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (bounds == null)\n\t\t{\n\t\t\tbounds = new mxRectangle(g.x, g.y, g.width, g.height);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds = new mxRectangle(Math.min(bounds.x, g.x),\n\t\t\t\tMath.min(bounds.y, g.y),\n\t\t\t\tMath.max(bounds.x + bounds.width, g.x + g.width),\n\t\t\t\tMath.max(bounds.y + bounds.height, g.y + g.height));\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: createLine\n */\nmxCompactTreeLayout.prototype.createLine = function(dx, dy, next)\n{\n\tvar line = new Object();\n\tline.dx = dx;\n\tline.dy = dy;\n\tline.next = next;\n\t\n\treturn line;\n};\n\n/**\n * Function: adjustParents\n * \n * Adjust parent cells whose child geometries have changed. The default \n * implementation adjusts the group to just fit around the children with \n * a padding.\n */\nmxCompactTreeLayout.prototype.adjustParents = function()\n{\n\tvar tmp = [];\n\t\n\tfor (var id in this.parentsChanged)\n\t{\n\t\ttmp.push(this.parentsChanged[id]);\n\t}\n\t\n\tthis.arrangeGroups(mxUtils.sortCells(tmp, true), this.groupPadding, this.groupPaddingTop,\n\t\tthis.groupPaddingRight, this.groupPaddingBottom, this.groupPaddingLeft);\n};\n\n/**\n * Function: localEdgeProcessing\n *\n * Moves the specified node and all of its children by the given amount.\n */\nmxCompactTreeLayout.prototype.localEdgeProcessing = function(node)\n{\n\tthis.processNodeOutgoing(node);\n\tvar child = node.child;\n\n\twhile (child != null)\n\t{\n\t\tthis.localEdgeProcessing(child);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: localEdgeProcessing\n *\n * Separates the x position of edges as they connect to vertices\n */\nmxCompactTreeLayout.prototype.processNodeOutgoing = function(node)\n{\n\tvar child = node.child;\n\tvar parentCell = node.cell;\n\n\tvar childCount = 0;\n\tvar sortedCells = [];\n\n\twhile (child != null)\n\t{\n\t\tchildCount++;\n\n\t\tvar sortingCriterion = child.x;\n\n\t\tif (this.horizontal)\n\t\t{\n\t\t\tsortingCriterion = child.y;\n\t\t}\n\n\t\tsortedCells.push(new WeightedCellSorter(child, sortingCriterion));\n\t\tchild = child.next;\n\t}\n\n\tsortedCells.sort(WeightedCellSorter.prototype.compare);\n\n\tvar availableWidth = node.width;\n\n\tvar requiredWidth = (childCount + 1) * this.prefHozEdgeSep;\n\n\t// Add a buffer on the edges of the vertex if the edge count allows\n\tif (availableWidth > requiredWidth + (2 * this.prefHozEdgeSep))\n\t{\n\t\tavailableWidth -= 2 * this.prefHozEdgeSep;\n\t}\n\n\tvar edgeSpacing = availableWidth / childCount;\n\n\tvar currentXOffset = edgeSpacing / 2.0;\n\n\tif (availableWidth > requiredWidth + (2 * this.prefHozEdgeSep))\n\t{\n\t\tcurrentXOffset += this.prefHozEdgeSep;\n\t}\n\n\tvar currentYOffset = this.minEdgeJetty - this.prefVertEdgeOff;\n\tvar maxYOffset = 0;\n\n\tvar parentBounds = this.getVertexBounds(parentCell);\n\tchild = node.child;\n\n\tfor (var j = 0; j < sortedCells.length; j++)\n\t{\n\t\tvar childCell = sortedCells[j].cell.cell;\n\t\tvar childBounds = this.getVertexBounds(childCell);\n\n\t\tvar edges = this.graph.getEdgesBetween(parentCell,\n\t\t\t\tchildCell, false);\n\t\t\n\t\tvar newPoints = [];\n\t\tvar x = 0;\n\t\tvar y = 0;\n\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tif (this.horizontal)\n\t\t\t{\n\t\t\t\t// Use opposite co-ords, calculation was done for \n\t\t\t\t// \n\t\t\t\tx = parentBounds.x + parentBounds.width;\n\t\t\t\ty = parentBounds.y + currentXOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tx = parentBounds.x + parentBounds.width\n\t\t\t\t\t\t+ currentYOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\ty = childBounds.y + childBounds.height / 2.0;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tthis.setEdgePoints(edges[i], newPoints);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx = parentBounds.x + currentXOffset;\n\t\t\t\ty = parentBounds.y + parentBounds.height;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\ty = parentBounds.y + parentBounds.height\n\t\t\t\t\t\t+ currentYOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tx = childBounds.x + childBounds.width / 2.0;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tthis.setEdgePoints(edges[i], newPoints);\n\t\t\t}\n\t\t}\n\n\t\tif (j < childCount / 2)\n\t\t{\n\t\t\tcurrentYOffset += this.prefVertEdgeOff;\n\t\t}\n\t\telse if (j > childCount / 2)\n\t\t{\n\t\t\tcurrentYOffset -= this.prefVertEdgeOff;\n\t\t}\n\t\t// Ignore the case if equals, this means the second of 2\n\t\t// jettys with the same y (even number of edges)\n\n\t\t//\t\t\t\t\t\t\t\tpos[k * 2] = currentX;\n\t\tcurrentXOffset += edgeSpacing;\n\t\t//\t\t\t\t\t\t\t\tpos[k * 2 + 1] = currentYOffset;\n\n\t\tmaxYOffset = Math.max(maxYOffset, currentYOffset);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRadialTreeLayout\n * \n * Extends <mxGraphLayout> to implement a radial tree algorithm. This\n * layout is suitable for graphs that have no cycles (trees). Vertices that are\n * not connected to the tree will be ignored by this layout.\n * \n * Example:\n * \n * (code)\n * var layout = new mxRadialTreeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxRadialTreeLayout\n * \n * Constructs a new radial tree layout for the specified graph\n */\nfunction mxRadialTreeLayout(graph)\n{\n\tmxCompactTreeLayout.call(this, graph , false);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxUtils.extend(mxRadialTreeLayout, mxCompactTreeLayout);\n\n/**\n * Variable: angleOffset\n *\n * The initial offset to compute the angle position.\n */\nmxRadialTreeLayout.prototype.angleOffset = 0.5;\n\n/**\n * Variable: rootx\n *\n * The X co-ordinate of the root cell\n */\nmxRadialTreeLayout.prototype.rootx = 0;\n\n/**\n * Variable: rooty\n *\n * The Y co-ordinate of the root cell\n */\nmxRadialTreeLayout.prototype.rooty = 0;\n\n/**\n * Variable: levelDistance\n *\n * Holds the levelDistance. Default is 120.\n */\nmxRadialTreeLayout.prototype.levelDistance = 120;\n\n/**\n * Variable: nodeDistance\n *\n * Holds the nodeDistance. Default is 10.\n */\nmxRadialTreeLayout.prototype.nodeDistance = 10;\n\n/**\n * Variable: autoRadius\n * \n * Specifies if the radios should be computed automatically\n */\nmxRadialTreeLayout.prototype.autoRadius = false;\n\n/**\n * Variable: sortEdges\n * \n * Specifies if edges should be sorted according to the order of their\n * opposite terminal cell in the model.\n */\nmxRadialTreeLayout.prototype.sortEdges = false;\n\n/**\n * Variable: rowMinX\n * \n * Array of leftmost x coordinate of each row\n */\nmxRadialTreeLayout.prototype.rowMinX = [];\n\n/**\n * Variable: rowMaxX\n * \n * Array of rightmost x coordinate of each row\n */\nmxRadialTreeLayout.prototype.rowMaxX = [];\n\n/**\n * Variable: rowMinCenX\n * \n * Array of x coordinate of leftmost vertex of each row\n */\nmxRadialTreeLayout.prototype.rowMinCenX = [];\n\n/**\n * Variable: rowMaxCenX\n * \n * Array of x coordinate of rightmost vertex of each row\n */\nmxRadialTreeLayout.prototype.rowMaxCenX = [];\n\n/**\n * Variable: rowRadi\n * \n * Array of y deltas of each row behind root vertex, also the radius in the tree\n */\nmxRadialTreeLayout.prototype.rowRadi = [];\n\n/**\n * Variable: row\n * \n * Array of vertices on each row\n */\nmxRadialTreeLayout.prototype.row = [];\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxRadialTreeLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * If the parent has any connected edges, then it is used as the root of\n * the tree. Else, <mxGraph.findTreeRoots> will be used to find a suitable\n * root node within the set of children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be laid out.\n * root - Optional <mxCell> that will be used as the root of the tree.\n */\nmxRadialTreeLayout.prototype.execute = function(parent, root)\n{\n\tthis.parent = parent;\n\t\n\tthis.useBoundingBox = false;\n\tthis.edgeRouting = false;\n\t//this.horizontal = false;\n\n\tmxCompactTreeLayout.prototype.execute.apply(this, arguments);\n\t\n\tvar bounds = null;\n\tvar rootBounds = this.getVertexBounds(this.root);\n\tthis.centerX = rootBounds.x + rootBounds.width / 2;\n\tthis.centerY = rootBounds.y + rootBounds.height / 2;\n\n\t// Calculate the bounds of the involved vertices directly from the values set in the compact tree\n\tfor (var vertex in this.visited)\n\t{\n\t\tvar vertexBounds = this.getVertexBounds(this.visited[vertex]);\n\t\tbounds = (bounds != null) ? bounds : vertexBounds.clone();\n\t\tbounds.add(vertexBounds);\n\t}\n\t\n\tthis.calcRowDims([this.node], 0);\n\t\n\tvar maxLeftGrad = 0;\n\tvar maxRightGrad = 0;\n\n\t// Find the steepest left and right gradients\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tvar leftGrad = (this.centerX - this.rowMinX[i] - this.nodeDistance) / this.rowRadi[i];\n\t\tvar rightGrad = (this.rowMaxX[i] - this.centerX - this.nodeDistance) / this.rowRadi[i];\n\t\t\n\t\tmaxLeftGrad = Math.max (maxLeftGrad, leftGrad);\n\t\tmaxRightGrad = Math.max (maxRightGrad, rightGrad);\n\t}\n\t\n\t// Extend out row so they meet the maximum gradient and convert to polar co-ords\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tvar xLeftLimit = this.centerX - this.nodeDistance - maxLeftGrad * this.rowRadi[i];\n\t\tvar xRightLimit = this.centerX + this.nodeDistance + maxRightGrad * this.rowRadi[i];\n\t\tvar fullWidth = xRightLimit - xLeftLimit;\n\t\t\n\t\tfor (var j = 0; j < this.row[i].length; j ++)\n\t\t{\n\t\t\tvar row = this.row[i];\n\t\t\tvar node = row[j];\n\t\t\tvar vertexBounds = this.getVertexBounds(node.cell);\n\t\t\tvar xProportion = (vertexBounds.x + vertexBounds.width / 2 - xLeftLimit) / (fullWidth);\n\t\t\tvar theta =  2 * Math.PI * xProportion;\n\t\t\tnode.theta = theta;\n\t\t}\n\t}\n\n\t// Post-process from outside inwards to try to align parents with children\n\tfor (var i = this.row.length - 2; i >= 0; i--)\n\t{\n\t\tvar row = this.row[i];\n\t\t\n\t\tfor (var j = 0; j < row.length; j++)\n\t\t{\n\t\t\tvar node = row[j];\n\t\t\tvar child = node.child;\n\t\t\tvar counter = 0;\n\t\t\tvar totalTheta = 0;\n\t\t\t\n\t\t\twhile (child != null)\n\t\t\t{\n\t\t\t\ttotalTheta += child.theta;\n\t\t\t\tcounter++;\n\t\t\t\tchild = child.next;\n\t\t\t}\n\t\t\t\n\t\t\tif (counter > 0)\n\t\t\t{\n\t\t\t\tvar averTheta = totalTheta / counter;\n\t\t\t\t\n\t\t\t\tif (averTheta > node.theta && j < row.length - 1)\n\t\t\t\t{\n\t\t\t\t\tvar nextTheta = row[j+1].theta;\n\t\t\t\t\tnode.theta = Math.min (averTheta, nextTheta - Math.PI/10);\n\t\t\t\t}\n\t\t\t\telse if (averTheta < node.theta && j > 0 )\n\t\t\t\t{\n\t\t\t\t\tvar lastTheta = row[j-1].theta;\n\t\t\t\t\tnode.theta = Math.max (averTheta, lastTheta + Math.PI/10);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Set locations\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tfor (var j = 0; j < this.row[i].length; j ++)\n\t\t{\n\t\t\tvar row = this.row[i];\n\t\t\tvar node = row[j];\n\t\t\tvar vertexBounds = this.getVertexBounds(node.cell);\n\t\t\tthis.setVertexLocation(node.cell,\n\t\t\t\t\t\t\t\t\tthis.centerX - vertexBounds.width / 2 + this.rowRadi[i] * Math.cos(node.theta),\n\t\t\t\t\t\t\t\t\tthis.centerY - vertexBounds.height / 2 + this.rowRadi[i] * Math.sin(node.theta));\n\t\t}\n\t}\n};\n\n/**\n * Function: calcRowDims\n * \n * Recursive function to calculate the dimensions of each row\n * \n * Parameters:\n * \n * row - Array of internal nodes, the children of which are to be processed.\n * rowNum - Integer indicating which row is being processed.\n */\nmxRadialTreeLayout.prototype.calcRowDims = function(row, rowNum)\n{\n\tif (row == null || row.length == 0)\n\t{\n\t\treturn;\n\t}\n\n\t// Place root's children proportionally around the first level\n\tthis.rowMinX[rowNum] = this.centerX;\n\tthis.rowMaxX[rowNum] = this.centerX;\n\tthis.rowMinCenX[rowNum] = this.centerX;\n\tthis.rowMaxCenX[rowNum] = this.centerX;\n\tthis.row[rowNum] = [];\n\n\tvar rowHasChildren = false;\n\n\tfor (var i = 0; i < row.length; i++)\n\t{\n\t\tvar child = row[i] != null ? row[i].child : null;\n\n\t\twhile (child != null)\n\t\t{\n\t\t\tvar cell = child.cell;\n\t\t\tvar vertexBounds = this.getVertexBounds(cell);\n\t\t\t\n\t\t\tthis.rowMinX[rowNum] = Math.min(vertexBounds.x, this.rowMinX[rowNum]);\n\t\t\tthis.rowMaxX[rowNum] = Math.max(vertexBounds.x + vertexBounds.width, this.rowMaxX[rowNum]);\n\t\t\tthis.rowMinCenX[rowNum] = Math.min(vertexBounds.x + vertexBounds.width / 2, this.rowMinCenX[rowNum]);\n\t\t\tthis.rowMaxCenX[rowNum] = Math.max(vertexBounds.x + vertexBounds.width / 2, this.rowMaxCenX[rowNum]);\n\t\t\tthis.rowRadi[rowNum] = vertexBounds.y - this.getVertexBounds(this.root).y;\n\t\n\t\t\tif (child.child != null)\n\t\t\t{\n\t\t\t\trowHasChildren = true;\n\t\t\t}\n\t\t\t\n\t\t\tthis.row[rowNum].push(child);\n\t\t\tchild = child.next;\n\t\t}\n\t}\n\t\n\tif (rowHasChildren)\n\t{\n\t\tthis.calcRowDims(this.row[rowNum], rowNum + 1);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxFastOrganicLayout\n * \n * Extends <mxGraphLayout> to implement a fast organic layout algorithm.\n * The vertices need to be connected for this layout to work, vertices\n * with no connections are ignored.\n * \n * Example:\n * \n * (code)\n * var layout = new mxFastOrganicLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompactTreeLayout\n * \n * Constructs a new fast organic layout for the specified graph.\n */\nfunction mxFastOrganicLayout(graph)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxFastOrganicLayout.prototype = new mxGraphLayout();\nmxFastOrganicLayout.prototype.constructor = mxFastOrganicLayout;\n\n/**\n * Variable: useInputOrigin\n * \n * Specifies if the top left corner of the input cells should be the origin\n * of the layout result. Default is true.\n */\nmxFastOrganicLayout.prototype.useInputOrigin = true;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxFastOrganicLayout.prototype.resetEdges = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxFastOrganicLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: forceConstant\n * \n * The force constant by which the attractive forces are divided and the\n * replusive forces are multiple by the square of. The value equates to the\n * average radius there is of free space around each node. Default is 50.\n */\nmxFastOrganicLayout.prototype.forceConstant = 50;\n\n/**\n * Variable: forceConstantSquared\n * \n * Cache of <forceConstant>^2 for performance.\n */\nmxFastOrganicLayout.prototype.forceConstantSquared = 0;\n\n/**\n * Variable: minDistanceLimit\n * \n * Minimal distance limit. Default is 2. Prevents of\n * dividing by zero.\n */\nmxFastOrganicLayout.prototype.minDistanceLimit = 2;\n\n/**\n * Variable: minDistanceLimit\n * \n * Minimal distance limit. Default is 2. Prevents of\n * dividing by zero.\n */\nmxFastOrganicLayout.prototype.maxDistanceLimit = 500;\n\n/**\n * Variable: minDistanceLimitSquared\n * \n * Cached version of <minDistanceLimit> squared.\n */\nmxFastOrganicLayout.prototype.minDistanceLimitSquared = 4;\n\n/**\n * Variable: initialTemp\n * \n * Start value of temperature. Default is 200.\n */\nmxFastOrganicLayout.prototype.initialTemp = 200;\n\n/**\n * Variable: temperature\n * \n * Temperature to limit displacement at later stages of layout.\n */\nmxFastOrganicLayout.prototype.temperature = 0;\n\n/**\n * Variable: maxIterations\n * \n * Total number of iterations to run the layout though.\n */\nmxFastOrganicLayout.prototype.maxIterations = 0;\n\n/**\n * Variable: iteration\n * \n * Current iteration count.\n */\nmxFastOrganicLayout.prototype.iteration = 0;\n\n/**\n * Variable: vertexArray\n * \n * An array of all vertices to be laid out.\n */\nmxFastOrganicLayout.prototype.vertexArray;\n\n/**\n * Variable: dispX\n * \n * An array of locally stored X co-ordinate displacements for the vertices.\n */\nmxFastOrganicLayout.prototype.dispX;\n\n/**\n * Variable: dispY\n * \n * An array of locally stored Y co-ordinate displacements for the vertices.\n */\nmxFastOrganicLayout.prototype.dispY;\n\n/**\n * Variable: cellLocation\n * \n * An array of locally stored co-ordinate positions for the vertices.\n */\nmxFastOrganicLayout.prototype.cellLocation;\n\n/**\n * Variable: radius\n * \n * The approximate radius of each cell, nodes only.\n */\nmxFastOrganicLayout.prototype.radius;\n\n/**\n * Variable: radiusSquared\n * \n * The approximate radius squared of each cell, nodes only.\n */\nmxFastOrganicLayout.prototype.radiusSquared;\n\n/**\n * Variable: isMoveable\n * \n * Array of booleans representing the movable states of the vertices.\n */\nmxFastOrganicLayout.prototype.isMoveable;\n\n/**\n * Variable: neighbours\n * \n * Local copy of cell neighbours.\n */\nmxFastOrganicLayout.prototype.neighbours;\n\n/**\n * Variable: indices\n * \n * Hashtable from cells to local indices.\n */\nmxFastOrganicLayout.prototype.indices;\n\n/**\n * Variable: allowedToRun\n * \n * Boolean flag that specifies if the layout is allowed to run. If this is\n * set to false, then the layout exits in the following iteration.\n */\nmxFastOrganicLayout.prototype.allowedToRun = true;\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxFastOrganicLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>. This operates on all children of the\n * given parent where <isVertexIgnored> returns false.\n */\nmxFastOrganicLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\tthis.vertexArray = [];\n\tvar cells = this.graph.getChildVertices(parent);\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (!this.isVertexIgnored(cells[i]))\n\t\t{\n\t\t\tthis.vertexArray.push(cells[i]);\n\t\t}\n\t}\n\t\n\tvar initialBounds = (this.useInputOrigin) ?\n\t\t\tthis.graph.getBoundingBoxFromGeometry(this.vertexArray) :\n\t\t\t\tnull;\n\tvar n = this.vertexArray.length;\n\n\tthis.indices = [];\n\tthis.dispX = [];\n\tthis.dispY = [];\n\tthis.cellLocation = [];\n\tthis.isMoveable = [];\n\tthis.neighbours = [];\n\tthis.radius = [];\n\tthis.radiusSquared = [];\n\n\tif (this.forceConstant < 0.001)\n\t{\n\t\tthis.forceConstant = 0.001;\n\t}\n\n\tthis.forceConstantSquared = this.forceConstant * this.forceConstant;\n\n\t// Create a map of vertices first. This is required for the array of\n\t// arrays called neighbours which holds, for each vertex, a list of\n\t// ints which represents the neighbours cells to that vertex as\n\t// the indices into vertexArray\n\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t{\n\t\tvar vertex = this.vertexArray[i];\n\t\tthis.cellLocation[i] = [];\n\t\t\n\t\t// Set up the mapping from array indices to cells\n\t\tvar id = mxObjectIdentity.get(vertex);\n\t\tthis.indices[id] = i;\n\t\tvar bounds = this.getVertexBounds(vertex);\n\n\t\t// Set the X,Y value of the internal version of the cell to\n\t\t// the center point of the vertex for better positioning\n\t\tvar width = bounds.width;\n\t\tvar height = bounds.height;\n\t\t\n\t\t// Randomize (0, 0) locations\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\t\n\t\tthis.cellLocation[i][0] = x + width / 2.0;\n\t\tthis.cellLocation[i][1] = y + height / 2.0;\n\t\tthis.radius[i] = Math.min(width, height);\n\t\tthis.radiusSquared[i] = this.radius[i] * this.radius[i];\n\t}\n\n\t// Moves cell location back to top-left from center locations used in\n\t// algorithm, resetting the edge points is part of the transaction\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < n; i++)\n\t\t{\n\t\t\tthis.dispX[i] = 0;\n\t\t\tthis.dispY[i] = 0;\n\t\t\tthis.isMoveable[i] = this.isVertexMovable(this.vertexArray[i]);\n\n\t\t\t// Get lists of neighbours to all vertices, translate the cells\n\t\t\t// obtained in indices into vertexArray and store as an array\n\t\t\t// against the orginial cell index\n\t\t\tvar edges = this.graph.getConnections(this.vertexArray[i], parent);\n\t\t\tvar cells = this.graph.getOpposites(edges, this.vertexArray[i]);\n\t\t\tthis.neighbours[i] = [];\n\n\t\t\tfor (var j = 0; j < cells.length; j++)\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.resetEdge(edges[j]);\n\t\t\t\t}\n\n\t\t\t    if (this.disableEdgeStyle)\n\t\t\t    {\n\t\t\t    \tthis.setEdgeStyleEnabled(edges[j], false);\n\t\t\t    }\n\n\t\t\t\t// Looks the cell up in the indices dictionary\n\t\t\t\tvar id = mxObjectIdentity.get(cells[j]);\n\t\t\t\tvar index = this.indices[id];\n\n\t\t\t\t// Check the connected cell in part of the vertex list to be\n\t\t\t\t// acted on by this layout\n\t\t\t\tif (index != null)\n\t\t\t\t{\n\t\t\t\t\tthis.neighbours[i][j] = index;\n\t\t\t\t}\n\n\t\t\t\t// Else if index of the other cell doesn't correspond to\n\t\t\t\t// any cell listed to be acted upon in this layout. Set\n\t\t\t\t// the index to the value of this vertex (a dummy self-loop)\n\t\t\t\t// so the attraction force of the edge is not calculated\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.neighbours[i][j] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.temperature = this.initialTemp;\n\n\t\t// If max number of iterations has not been set, guess it\n\t\tif (this.maxIterations == 0)\n\t\t{\n\t\t\tthis.maxIterations = 20 * Math.sqrt(n);\n\t\t}\n\t\t\n\t\t// Main iteration loop\n\t\tfor (this.iteration = 0; this.iteration < this.maxIterations; this.iteration++)\n\t\t{\n\t\t\tif (!this.allowedToRun)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// Calculate repulsive forces on all vertices\n\t\t\tthis.calcRepulsion();\n\n\t\t\t// Calculate attractive forces through edges\n\t\t\tthis.calcAttraction();\n\n\t\t\tthis.calcPositions();\n\t\t\tthis.reduceTemperature();\n\t\t}\n\n\t\tvar minx = null;\n\t\tvar miny = null;\n\t\t\n\t\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t\t{\n\t\t\tvar vertex = this.vertexArray[i];\n\t\t\t\n\t\t\tif (this.isVertexMovable(vertex))\n\t\t\t{\n\t\t\t\tvar bounds = this.getVertexBounds(vertex);\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tthis.cellLocation[i][0] -= bounds.width / 2.0;\n\t\t\t\t\tthis.cellLocation[i][1] -= bounds.height / 2.0;\n\t\t\t\t\t\n\t\t\t\t\tvar x = this.graph.snap(Math.round(this.cellLocation[i][0]));\n\t\t\t\t\tvar y = this.graph.snap(Math.round(this.cellLocation[i][1]));\n\t\t\t\t\t\n\t\t\t\t\tthis.setVertexLocation(vertex, x, y);\n\t\t\t\t\t\n\t\t\t\t\tif (minx == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tminx = x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tminx = Math.min(minx, x);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (miny == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tminy = y;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tminy = Math.min(miny, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Modifies the cloned geometries in-place. Not needed\n\t\t// to clone the geometries again as we're in the same\n\t\t// undoable change.\n\t\tvar dx = -(minx || 0) + 1;\n\t\tvar dy = -(miny || 0) + 1;\n\t\t\n\t\tif (initialBounds != null)\n\t\t{\n\t\t\tdx += initialBounds.x;\n\t\t\tdy += initialBounds.y;\n\t\t}\n\t\t\n\t\tthis.graph.moveCells(this.vertexArray, dx, dy);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: calcPositions\n * \n * Takes the displacements calculated for each cell and applies them to the\n * local cache of cell positions. Limits the displacement to the current\n * temperature.\n */\nmxFastOrganicLayout.prototype.calcPositions = function()\n{\n\tfor (var index = 0; index < this.vertexArray.length; index++)\n\t{\n\t\tif (this.isMoveable[index])\n\t\t{\n\t\t\t// Get the distance of displacement for this node for this\n\t\t\t// iteration\n\t\t\tvar deltaLength = Math.sqrt(this.dispX[index] * this.dispX[index] +\n\t\t\t\tthis.dispY[index] * this.dispY[index]);\n\n\t\t\tif (deltaLength < 0.001)\n\t\t\t{\n\t\t\t\tdeltaLength = 0.001;\n\t\t\t}\n\n\t\t\t// Scale down by the current temperature if less than the\n\t\t\t// displacement distance\n\t\t\tvar newXDisp = this.dispX[index] / deltaLength\n\t\t\t\t* Math.min(deltaLength, this.temperature);\n\n\t\t\tvar newYDisp = this.dispY[index] / deltaLength\n\t\t\t\t* Math.min(deltaLength, this.temperature);\n\n\t\t\t// reset displacements\n\t\t\tthis.dispX[index] = 0;\n\t\t\tthis.dispY[index] = 0;\n\n\t\t\t// Update the cached cell locations\n\t\t\tthis.cellLocation[index][0] += newXDisp;\n\t\t\tthis.cellLocation[index][1] += newYDisp;\n\t\t}\n\t}\n};\n\n/**\n * Function: calcAttraction\n * \n * Calculates the attractive forces between all laid out nodes linked by\n * edges\n */\nmxFastOrganicLayout.prototype.calcAttraction = function()\n{\n\t// Check the neighbours of each vertex and calculate the attractive\n\t// force of the edge connecting them\n\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t{\n\t\tfor (var k = 0; k < this.neighbours[i].length; k++)\n\t\t{\n\t\t\t// Get the index of the othe cell in the vertex array\n\t\t\tvar j = this.neighbours[i][k];\n\t\t\t\n\t\t\t// Do not proceed self-loops\n\t\t\tif (i != j &&\n\t\t\t\tthis.isMoveable[i] &&\n\t\t\t\tthis.isMoveable[j])\n\t\t\t{\n\t\t\t\tvar xDelta = this.cellLocation[i][0] - this.cellLocation[j][0];\n\t\t\t\tvar yDelta = this.cellLocation[i][1] - this.cellLocation[j][1];\n\n\t\t\t\t// The distance between the nodes\n\t\t\t\tvar deltaLengthSquared = xDelta * xDelta + yDelta\n\t\t\t\t\t\t* yDelta - this.radiusSquared[i] - this.radiusSquared[j];\n\n\t\t\t\tif (deltaLengthSquared < this.minDistanceLimitSquared)\n\t\t\t\t{\n\t\t\t\t\tdeltaLengthSquared = this.minDistanceLimitSquared;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar deltaLength = Math.sqrt(deltaLengthSquared);\n\t\t\t\tvar force = (deltaLengthSquared) / this.forceConstant;\n\n\t\t\t\tvar displacementX = (xDelta / deltaLength) * force;\n\t\t\t\tvar displacementY = (yDelta / deltaLength) * force;\n\t\t\t\t\n\t\t\t\tthis.dispX[i] -= displacementX;\n\t\t\t\tthis.dispY[i] -= displacementY;\n\t\t\t\t\n\t\t\t\tthis.dispX[j] += displacementX;\n\t\t\t\tthis.dispY[j] += displacementY;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: calcRepulsion\n * \n * Calculates the repulsive forces between all laid out nodes\n */\nmxFastOrganicLayout.prototype.calcRepulsion = function()\n{\n\tvar vertexCount = this.vertexArray.length;\n\n\tfor (var i = 0; i < vertexCount; i++)\n\t{\n\t\tfor (var j = i; j < vertexCount; j++)\n\t\t{\n\t\t\t// Exits if the layout is no longer allowed to run\n\t\t\tif (!this.allowedToRun)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (j != i &&\n\t\t\t\tthis.isMoveable[i] &&\n\t\t\t\tthis.isMoveable[j])\n\t\t\t{\n\t\t\t\tvar xDelta = this.cellLocation[i][0] - this.cellLocation[j][0];\n\t\t\t\tvar yDelta = this.cellLocation[i][1] - this.cellLocation[j][1];\n\n\t\t\t\tif (xDelta == 0)\n\t\t\t\t{\n\t\t\t\t\txDelta = 0.01 + Math.random();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (yDelta == 0)\n\t\t\t\t{\n\t\t\t\t\tyDelta = 0.01 + Math.random();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Distance between nodes\n\t\t\t\tvar deltaLength = Math.sqrt((xDelta * xDelta)\n\t\t\t\t\t\t+ (yDelta * yDelta));\n\t\t\t\tvar deltaLengthWithRadius = deltaLength - this.radius[i]\n\t\t\t\t\t\t- this.radius[j];\n\n\t\t\t\tif (deltaLengthWithRadius > this.maxDistanceLimit)\n\t\t\t\t{\n\t\t\t\t\t// Ignore vertices too far apart\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (deltaLengthWithRadius < this.minDistanceLimit)\n\t\t\t\t{\n\t\t\t\t\tdeltaLengthWithRadius = this.minDistanceLimit;\n\t\t\t\t}\n\n\t\t\t\tvar force = this.forceConstantSquared / deltaLengthWithRadius;\n\n\t\t\t\tvar displacementX = (xDelta / deltaLength) * force;\n\t\t\t\tvar displacementY = (yDelta / deltaLength) * force;\n\t\t\t\t\n\t\t\t\tthis.dispX[i] += displacementX;\n\t\t\t\tthis.dispY[i] += displacementY;\n\n\t\t\t\tthis.dispX[j] -= displacementX;\n\t\t\t\tthis.dispY[j] -= displacementY;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: reduceTemperature\n * \n * Reduces the temperature of the layout from an initial setting in a linear\n * fashion to zero.\n */\nmxFastOrganicLayout.prototype.reduceTemperature = function()\n{\n\tthis.temperature = this.initialTemp * (1.0 - this.iteration / this.maxIterations);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCircleLayout\n * \n * Extends <mxGraphLayout> to implement a circluar layout for a given radius.\n * The vertices do not need to be connected for this layout to work and all\n * connections between vertices are not taken into account.\n * \n * Example:\n * \n * (code)\n * var layout = new mxCircleLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCircleLayout\n *\n * Constructs a new circular layout for the specified radius.\n *\n * Arguments:\n * \n * graph - <mxGraph> that contains the cells.\n * radius - Optional radius as an int. Default is 100.\n */\nfunction mxCircleLayout(graph, radius)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.radius = (radius != null) ? radius : 100;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCircleLayout.prototype = new mxGraphLayout();\nmxCircleLayout.prototype.constructor = mxCircleLayout;\n\n/**\n * Variable: radius\n * \n * Integer specifying the size of the radius. Default is 100.\n */\nmxCircleLayout.prototype.radius = null;\n\n/**\n * Variable: moveCircle\n * \n * Boolean specifying if the circle should be moved to the top,\n * left corner specified by <x0> and <y0>. Default is false.\n */\nmxCircleLayout.prototype.moveCircle = false;\n\n/**\n * Variable: x0\n * \n * Integer specifying the left coordinate of the circle.\n * Default is 0.\n */\nmxCircleLayout.prototype.x0 = 0;\n\n/**\n * Variable: y0\n * \n * Integer specifying the top coordinate of the circle.\n * Default is 0.\n */\nmxCircleLayout.prototype.y0 = 0;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxCircleLayout.prototype.resetEdges = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxCircleLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxCircleLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\n\t// Moves the vertices to build a circle. Makes sure the\n\t// radius is large enough for the vertices to not\n\t// overlap\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\t// Gets all vertices inside the parent and finds\n\t\t// the maximum dimension of the largest vertex\n\t\tvar max = 0;\n\t\tvar top = null;\n\t\tvar left = null;\n\t\tvar vertices = [];\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (!this.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\tvertices.push(cell);\n\t\t\t\tvar bounds = this.getVertexBounds(cell);\n\t\t\t\t\n\t\t\t\tif (top == null)\n\t\t\t\t{\n\t\t\t\t\ttop = bounds.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttop = Math.min(top, bounds.y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (left == null)\n\t\t\t\t{\n\t\t\t\t\tleft = bounds.x;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleft = Math.min(left, bounds.x);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmax = Math.max(max, Math.max(bounds.width, bounds.height));\n\t\t\t}\n\t\t\telse if (!this.isEdgeIgnored(cell))\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.resetEdge(cell);\n\t\t\t\t}\n\n\t\t\t    if (this.disableEdgeStyle)\n\t\t\t    {\n\t\t\t    \t\tthis.setEdgeStyleEnabled(cell, false);\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar r = this.getRadius(vertices.length, max);\n\n\t\t// Moves the circle to the specified origin\n\t\tif (this.moveCircle)\n\t\t{\n\t\t\tleft = this.x0;\n\t\t\ttop = this.y0;\n\t\t}\n\t\t\n\t\tthis.circle(vertices, r, left, top);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: getRadius\n * \n * Returns the radius to be used for the given vertex count. Max is the maximum\n * width or height of all vertices in the layout.\n */\nmxCircleLayout.prototype.getRadius = function(count, max)\n{\n\treturn Math.max(count * max / Math.PI, this.radius);\n};\n\n/**\n * Function: circle\n * \n * Executes the circular layout for the specified array\n * of vertices and the given radius. This is called from\n * <execute>.\n */\nmxCircleLayout.prototype.circle = function(vertices, r, left, top)\n{\n\tvar vertexCount = vertices.length;\n\tvar phi = 2 * Math.PI / vertexCount;\n\t\n\tfor (var i = 0; i < vertexCount; i++)\n\t{\n\t\tif (this.isVertexMovable(vertices[i]))\n\t\t{\n\t\t\tthis.setVertexLocation(vertices[i],\n\t\t\t\tMath.round(left + r + r * Math.sin(i * phi)),\n\t\t\t\tMath.round(top + r + r * Math.cos(i * phi)));\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxParallelEdgeLayout\n * \n * Extends <mxGraphLayout> for arranging parallel edges. This layout works\n * on edges for all pairs of vertices where there is more than one edge\n * connecting the latter.\n * \n * Example:\n * \n * (code)\n * var layout = new mxParallelEdgeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * To run the layout for the parallel edges of a changed edge only, the\n * following code can be used.\n * \n * (code)\n * var layout = new mxParallelEdgeLayout(graph);\n * \n * graph.addListener(mxEvent.CELL_CONNECTED, function(sender, evt)\n * {\n *   var model = graph.getModel();\n *   var edge = evt.getProperty('edge');\n *   var src = model.getTerminal(edge, true);\n *   var trg = model.getTerminal(edge, false);\n *   \n *   layout.isEdgeIgnored = function(edge2)\n *   {\n *     var src2 = model.getTerminal(edge2, true);\n *     var trg2 = model.getTerminal(edge2, false);\n *     \n *     return !(model.isEdge(edge2) && ((src == src2 && trg == trg2) || (src == trg2 && trg == src2)));\n *   };\n *   \n *   layout.execute(graph.getDefaultParent());\n * });\n * (end)\n * \n * Constructor: mxParallelEdgeLayout\n * \n * Constructs a new parallel edge layout for the specified graph.\n */\nfunction mxParallelEdgeLayout(graph)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxParallelEdgeLayout.prototype = new mxGraphLayout();\nmxParallelEdgeLayout.prototype.constructor = mxParallelEdgeLayout;\n\n/**\n * Variable: spacing\n * \n * Defines the spacing between the parallels. Default is 20.\n */\nmxParallelEdgeLayout.prototype.spacing = 20;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxParallelEdgeLayout.prototype.execute = function(parent)\n{\n\tvar lookup = this.findParallels(parent);\n\t\n\tthis.graph.model.beginUpdate();\t\n\ttry\n\t{\n\t\tfor (var i in lookup)\n\t\t{\n\t\t\tvar parallels = lookup[i];\n\n\t\t\tif (parallels.length > 1)\n\t\t\t{\n\t\t\t\tthis.layout(parallels);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.graph.model.endUpdate();\n\t}\n};\n\n/**\n * Function: findParallels\n * \n * Finds the parallel edges in the given parent.\n */\nmxParallelEdgeLayout.prototype.findParallels = function(parent)\n{\n\tvar model = this.graph.getModel();\n\tvar lookup = [];\n\tvar childCount = model.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (!this.isEdgeIgnored(child))\n\t\t{\n\t\t\tvar id = this.getEdgeId(child);\n\t\t\t\n\t\t\tif (id != null)\n\t\t\t{\n\t\t\t\tif (lookup[id] == null)\n\t\t\t\t{\n\t\t\t\t\tlookup[id] = [];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlookup[id].push(child);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn lookup;\n};\n\n/**\n * Function: getEdgeId\n * \n * Returns a unique ID for the given edge. The id is independent of the\n * edge direction and is built using the visible terminal of the given\n * edge.\n */\nmxParallelEdgeLayout.prototype.getEdgeId = function(edge)\n{\n\tvar view = this.graph.getView();\n\t\n\t// Cannot used cached visible terminal because this could be triggered in BEFORE_UNDO\n\tvar src = view.getVisibleTerminal(edge, true);\n\tvar trg = view.getVisibleTerminal(edge, false);\n\n\tif (src != null && trg != null)\n\t{\n\t\tsrc = mxObjectIdentity.get(src);\n\t\ttrg = mxObjectIdentity.get(trg);\n\t\t\n\t\treturn (src > trg) ? trg + '-' + src : src + '-' + trg;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: layout\n * \n * Lays out the parallel edges in the given array.\n */\nmxParallelEdgeLayout.prototype.layout = function(parallels)\n{\n\tvar edge = parallels[0];\n\tvar view = this.graph.getView();\n\tvar model = this.graph.getModel();\n\tvar src = model.getGeometry(view.getVisibleTerminal(edge, true));\n\tvar trg = model.getGeometry(view.getVisibleTerminal(edge, false));\n\t\n\t// Routes multiple loops\n\tif (src == trg)\n\t{\n\t\tvar x0 = src.x + src.width + this.spacing;\n\t\tvar y0 = src.y + src.height / 2;\n\n\t\tfor (var i = 0; i < parallels.length; i++)\n\t\t{\n\t\t\tthis.route(parallels[i], x0, y0);\n\t\t\tx0 += this.spacing;\n\t\t}\n\t}\n\telse if (src != null && trg != null)\n\t{\n\t\t// Routes parallel edges\n\t\tvar scx = src.x + src.width / 2;\n\t\tvar scy = src.y + src.height / 2;\n\t\t\n\t\tvar tcx = trg.x + trg.width / 2;\n\t\tvar tcy = trg.y + trg.height / 2;\n\t\t\n\t\tvar dx = tcx - scx;\n\t\tvar dy = tcy - scy;\n\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\t\n\t\tif (len > 0)\n\t\t{\n\t\t\tvar x0 = scx + dx / 2;\n\t\t\tvar y0 = scy + dy / 2;\n\t\t\t\n\t\t\tvar nx = dy * this.spacing / len;\n\t\t\tvar ny = dx * this.spacing / len;\n\t\t\t\n\t\t\tx0 += nx * (parallels.length - 1) / 2;\n\t\t\ty0 -= ny * (parallels.length - 1) / 2;\n\t\n\t\t\tfor (var i = 0; i < parallels.length; i++)\n\t\t\t{\n\t\t\t\tthis.route(parallels[i], x0, y0);\n\t\t\t\tx0 -= nx;\n\t\t\t\ty0 += ny;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: route\n * \n * Routes the given edge via the given point.\n */\nmxParallelEdgeLayout.prototype.route = function(edge, x, y)\n{\n\tif (this.graph.isCellMovable(edge))\n\t{\n\t\tthis.setEdgePoints(edge, [new mxPoint(x, y)]);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCompositeLayout\n * \n * Allows to compose multiple layouts into a single layout. The master layout\n * is the layout that handles move operations if another layout than the first\n * element in <layouts> should be used. The <master> layout is not executed as\n * the code assumes that it is part of <layouts>.\n * \n * Example:\n * (code)\n * var first = new mxFastOrganicLayout(graph);\n * var second = new mxParallelEdgeLayout(graph);\n * var layout = new mxCompositeLayout(graph, [first, second], first);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompositeLayout\n *\n * Constructs a new layout using the given layouts. The graph instance is\n * required for creating the transaction that contains all layouts.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * layouts - Array of <mxGraphLayouts>.\n * master - Optional layout that handles moves. If no layout is given then\n * the first layout of the above array is used to handle moves.\n */\nfunction mxCompositeLayout(graph, layouts, master)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.layouts = layouts;\n\tthis.master = master;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCompositeLayout.prototype = new mxGraphLayout();\nmxCompositeLayout.prototype.constructor = mxCompositeLayout;\n\t\n/**\n * Variable: layouts\n * \n * Holds the array of <mxGraphLayouts> that this layout contains.\n */\nmxCompositeLayout.prototype.layouts = null;\n\n/**\n * Variable: layouts\n * \n * Reference to the <mxGraphLayouts> that handles moves. If this is null\n * then the first layout in <layouts> is used.\n */\nmxCompositeLayout.prototype.master = null;\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell> by calling move on <master> or the first\n * layout in <layouts>.\n */\nmxCompositeLayout.prototype.moveCell = function(cell, x, y)\n{\n\tif (this.master != null)\n\t{\n\t\tthis.master.moveCell.apply(this.master, arguments);\n\t}\n\telse\n\t{\n\t\tthis.layouts[0].moveCell.apply(this.layouts[0], arguments);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute> by executing all <layouts> in a\n * single transaction.\n */\nmxCompositeLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < this.layouts.length; i++)\n\t\t{\n\t\t\tthis.layouts[i].execute.apply(this.layouts[i], arguments);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEdgeLabelLayout\n * \n * Extends <mxGraphLayout> to implement an edge label layout. This layout\n * makes use of cell states, which means the graph must be validated in\n * a graph view (so that the label bounds are available) before this layout\n * can be executed.\n * \n * Example:\n * \n * (code)\n * var layout = new mxEdgeLabelLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxEdgeLabelLayout\n *\n * Constructs a new edge label layout.\n *\n * Arguments:\n * \n * graph - <mxGraph> that contains the cells.\n */\nfunction mxEdgeLabelLayout(graph, radius)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxEdgeLabelLayout.prototype = new mxGraphLayout();\nmxEdgeLabelLayout.prototype.constructor = mxEdgeLabelLayout;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxEdgeLabelLayout.prototype.execute = function(parent)\n{\n\tvar view = this.graph.view;\n\tvar model = this.graph.getModel();\n\t\n\t// Gets all vertices and edges inside the parent\n\tvar edges = [];\n\tvar vertices = [];\n\tvar childCount = model.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar cell = model.getChildAt(parent, i);\n\t\tvar state = view.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tif (!this.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\tvertices.push(state);\n\t\t\t}\n\t\t\telse if (!this.isEdgeIgnored(cell))\n\t\t\t{\n\t\t\t\tedges.push(state);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.placeLabels(vertices, edges);\n};\n\n/**\n * Function: placeLabels\n * \n * Places the labels of the given edges.\n */\nmxEdgeLabelLayout.prototype.placeLabels = function(v, e)\n{\n\tvar model = this.graph.getModel();\n\t\n\t// Moves the vertices to build a circle. Makes sure the\n\t// radius is large enough for the vertices to not\n\t// overlap\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < e.length; i++)\n\t\t{\n\t\t\tvar edge = e[i];\n\t\t\t\n\t\t\tif (edge != null && edge.text != null &&\n\t\t\t\tedge.text.boundingBox != null)\n\t\t\t{\n\t\t\t\tfor (var j = 0; j < v.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar vertex = v[j];\n\t\t\t\t\t\n\t\t\t\t\tif (vertex != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.avoid(edge, vertex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: avoid\n * \n * Places the labels of the given edges.\n */\nmxEdgeLabelLayout.prototype.avoid = function(edge, vertex)\n{\n\tvar model = this.graph.getModel();\n\tvar labRect = edge.text.boundingBox;\n\t\n\tif (mxUtils.intersects(labRect, vertex))\n\t{\n\t\tvar dy1 = -labRect.y - labRect.height + vertex.y;\n\t\tvar dy2 = -labRect.y + vertex.y + vertex.height;\n\t\t\n\t\tvar dy = (Math.abs(dy1) < Math.abs(dy2)) ? dy1 : dy2;\n\t\t\n\t\tvar dx1 = -labRect.x - labRect.width + vertex.x;\n\t\tvar dx2 = -labRect.x + vertex.x + vertex.width;\n\t\n\t\tvar dx = (Math.abs(dx1) < Math.abs(dx2)) ? dx1 : dx2;\n\t\t\n\t\tif (Math.abs(dx) < Math.abs(dy))\n\t\t{\n\t\t\tdy = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdx = 0;\n\t\t}\n\t\n\t\tvar g = model.getGeometry(edge.cell);\n\t\t\n\t\tif (g != null)\n\t\t{\n\t\t\tg = g.clone();\n\t\t\t\n\t\t\tif (g.offset != null)\n\t\t\t{\n\t\t\t\tg.offset.x += dx;\n\t\t\t\tg.offset.y += dy;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tg.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\t\n\t\t\tmodel.setGeometry(edge.cell, g);\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphAbstractHierarchyCell\n * \n * An abstraction of an internal hierarchy node or edge\n * \n * Constructor: mxGraphAbstractHierarchyCell\n *\n * Constructs a new hierarchical layout algorithm.\n */\nfunction mxGraphAbstractHierarchyCell()\n{\n\tthis.x = [];\n\tthis.y = [];\n\tthis.temp = [];\n};\n\n/**\n * Variable: maxRank\n * \n * The maximum rank this cell occupies. Default is -1.\n */\nmxGraphAbstractHierarchyCell.prototype.maxRank = -1;\n\n/**\n * Variable: minRank\n * \n * The minimum rank this cell occupies. Default is -1.\n */\nmxGraphAbstractHierarchyCell.prototype.minRank = -1;\n\n/**\n * Variable: x\n * \n * The x position of this cell for each layer it occupies\n */\nmxGraphAbstractHierarchyCell.prototype.x = null;\n\n/**\n * Variable: y\n * \n * The y position of this cell for each layer it occupies\n */\nmxGraphAbstractHierarchyCell.prototype.y = null;\n\n/**\n * Variable: width\n * \n * The width of this cell. Default is 0.\n */\nmxGraphAbstractHierarchyCell.prototype.width = 0;\n\n/**\n * Variable: height\n * \n * The height of this cell. Default is 0.\n */\nmxGraphAbstractHierarchyCell.prototype.height = 0;\n\n/**\n * Variable: nextLayerConnectedCells\n * \n * A cached version of the cells this cell connects to on the next layer up\n */\nmxGraphAbstractHierarchyCell.prototype.nextLayerConnectedCells = null;\n\n/**\n * Variable: previousLayerConnectedCells\n * \n * A cached version of the cells this cell connects to on the next layer down\n */\nmxGraphAbstractHierarchyCell.prototype.previousLayerConnectedCells = null;\n\n/**\n * Variable: temp\n * \n * Temporary variable for general use. Generally, try to avoid\n * carrying information between stages. Currently, the longest\n * path layering sets temp to the rank position in fixRanks()\n * and the crossing reduction uses this. This meant temp couldn't\n * be used for hashing the nodes in the model dfs and so hashCode\n * was created\n */\nmxGraphAbstractHierarchyCell.prototype.temp = null;\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphAbstractHierarchyCell.prototype.getNextLayerConnectedCells = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphAbstractHierarchyCell.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: isEdge\n * \n * Returns whether or not this cell is an edge\n */\nmxGraphAbstractHierarchyCell.prototype.isEdge = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isVertex\n * \n * Returns whether or not this cell is a node\n */\nmxGraphAbstractHierarchyCell.prototype.isVertex = function()\n{\n\treturn false;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\treturn null;\n};\n\n/**\n * Function: setX\n * \n * Set the value of x for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setX = function(layer, value)\n{\n\tif (this.isVertex())\n\t{\n\t\tthis.x[0] = value;\n\t}\n\telse if (this.isEdge())\n\t{\n\t\tthis.x[layer - this.minRank - 1] = value;\n\t}\n};\n\n/**\n * Function: getX\n * \n * Gets the value of x on the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.getX = function(layer)\n{\n\tif (this.isVertex())\n\t{\n\t\treturn this.x[0];\n\t}\n\telse if (this.isEdge())\n\t{\n\t\treturn this.x[layer - this.minRank - 1];\n\t}\n\n\treturn 0.0;\n};\n\n/**\n * Function: setY\n * \n * Set the value of y for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setY = function(layer, value)\n{\n\tif (this.isVertex())\n\t{\n\t\tthis.y[0] = value;\n\t}\n\telse if (this.isEdge())\n\t{\n\t\tthis.y[layer -this. minRank - 1] = value;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyNode\n * \n * An abstraction of a hierarchical edge for the hierarchy layout\n * \n * Constructor: mxGraphHierarchyNode\n *\n * Constructs an internal node to represent the specified real graph cell\n *\n * Arguments:\n * \n * cell - the real graph cell this node represents\n */\nfunction mxGraphHierarchyNode(cell)\n{\n\tmxGraphAbstractHierarchyCell.apply(this, arguments);\n\tthis.cell = cell;\n\tthis.id = mxObjectIdentity.get(cell);\n\tthis.connectsAsTarget = [];\n\tthis.connectsAsSource = [];\n};\n\n/**\n * Extends mxGraphAbstractHierarchyCell.\n */\nmxGraphHierarchyNode.prototype = new mxGraphAbstractHierarchyCell();\nmxGraphHierarchyNode.prototype.constructor = mxGraphHierarchyNode;\n\n/**\n * Variable: cell\n * \n * The graph cell this object represents.\n */\nmxGraphHierarchyNode.prototype.cell = null;\n\n/**\n * Variable: id\n * \n * The object identity of the wrapped cell\n */\nmxGraphHierarchyNode.prototype.id = null;\n\n/**\n * Variable: connectsAsTarget\n * \n * Collection of hierarchy edges that have this node as a target\n */\nmxGraphHierarchyNode.prototype.connectsAsTarget = null;\n\n/**\n * Variable: connectsAsSource\n * \n * Collection of hierarchy edges that have this node as a source\n */\nmxGraphHierarchyNode.prototype.connectsAsSource = null;\n\n/**\n * Variable: hashCode\n * \n * Assigns a unique hashcode for each node. Used by the model dfs instead\n * of copying HashSets\n */\nmxGraphHierarchyNode.prototype.hashCode = false;\n\n/**\n * Function: getRankValue\n * \n * Returns the integer value of the layer that this node resides in\n */\nmxGraphHierarchyNode.prototype.getRankValue = function(layer)\n{\n\treturn this.maxRank;\n};\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphHierarchyNode.prototype.getNextLayerConnectedCells = function(layer)\n{\n\tif (this.nextLayerConnectedCells == null)\n\t{\n\t\tthis.nextLayerConnectedCells = [];\n\t\tthis.nextLayerConnectedCells[0] = [];\n\t\t\n\t\tfor (var i = 0; i < this.connectsAsTarget.length; i++)\n\t\t{\n\t\t\tvar edge = this.connectsAsTarget[i];\n\n\t\t\tif (edge.maxRank == -1 || edge.maxRank == layer + 1)\n\t\t\t{\n\t\t\t\t// Either edge is not in any rank or\n\t\t\t\t// no dummy nodes in edge, add node of other side of edge\n\t\t\t\tthis.nextLayerConnectedCells[0].push(edge.source);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Edge spans at least two layers, add edge\n\t\t\t\tthis.nextLayerConnectedCells[0].push(edge);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.nextLayerConnectedCells[0];\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphHierarchyNode.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\tif (this.previousLayerConnectedCells == null)\n\t{\n\t\tthis.previousLayerConnectedCells = [];\n\t\tthis.previousLayerConnectedCells[0] = [];\n\t\t\n\t\tfor (var i = 0; i < this.connectsAsSource.length; i++)\n\t\t{\n\t\t\tvar edge = this.connectsAsSource[i];\n\n\t\t\tif (edge.minRank == -1 || edge.minRank == layer - 1)\n\t\t\t{\n\t\t\t\t// No dummy nodes in edge, add node of other side of edge\n\t\t\t\tthis.previousLayerConnectedCells[0].push(edge.target);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Edge spans at least two layers, add edge\n\t\t\t\tthis.previousLayerConnectedCells[0].push(edge);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.previousLayerConnectedCells[0];\n};\n\n/**\n * Function: isVertex\n * \n * Returns true.\n */\nmxGraphHierarchyNode.prototype.isVertex = function()\n{\n\treturn true;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphHierarchyNode.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn this.temp[0];\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphHierarchyNode.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\tthis.temp[0] = value;\n};\n\n/**\n * Function: isAncestor\n */\nmxGraphHierarchyNode.prototype.isAncestor = function(otherNode)\n{\n\t// Firstly, the hash code of this node needs to be shorter than the\n\t// other node\n\tif (otherNode != null && this.hashCode != null && otherNode.hashCode != null\n\t\t\t&& this.hashCode.length < otherNode.hashCode.length)\n\t{\n\t\tif (this.hashCode == otherNode.hashCode)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tif (this.hashCode == null || this.hashCode == null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// Secondly, this hash code must match the start of the other\n\t\t// node's hash code. Arrays.equals cannot be used here since\n\t\t// the arrays are different length, and we do not want to\n\t\t// perform another array copy.\n\t\tfor (var i = 0; i < this.hashCode.length; i++)\n\t\t{\n\t\t\tif (this.hashCode[i] != otherNode.hashCode[i])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n/**\n * Function: getCoreCell\n * \n * Gets the core vertex associated with this wrapper\n */\nmxGraphHierarchyNode.prototype.getCoreCell = function()\n{\n\treturn this.cell;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyEdge\n * \n * An abstraction of a hierarchical edge for the hierarchy layout\n * \n * Constructor: mxGraphHierarchyEdge\n *\n * Constructs a hierarchy edge\n *\n * Arguments:\n * \n * edges - a list of real graph edges this abstraction represents\n */\nfunction mxGraphHierarchyEdge(edges)\n{\n\tmxGraphAbstractHierarchyCell.apply(this, arguments);\n\tthis.edges = edges;\n\tthis.ids = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tthis.ids.push(mxObjectIdentity.get(edges[i]));\n\t}\n};\n\n/**\n * Extends mxGraphAbstractHierarchyCell.\n */\nmxGraphHierarchyEdge.prototype = new mxGraphAbstractHierarchyCell();\nmxGraphHierarchyEdge.prototype.constructor = mxGraphHierarchyEdge;\n\n/**\n * Variable: edges\n * \n * The graph edge(s) this object represents. Parallel edges are all grouped\n * together within one hierarchy edge.\n */\nmxGraphHierarchyEdge.prototype.edges = null;\n\n/**\n * Variable: ids\n * \n * The object identities of the wrapped cells\n */\nmxGraphHierarchyEdge.prototype.ids = null;\n\n/**\n * Variable: source\n * \n * The node this edge is sourced at\n */\nmxGraphHierarchyEdge.prototype.source = null;\n\n/**\n * Variable: target\n * \n * The node this edge targets\n */\nmxGraphHierarchyEdge.prototype.target = null;\n\n/**\n * Variable: isReversed\n * \n * Whether or not the direction of this edge has been reversed\n * internally to create a DAG for the hierarchical layout\n */\nmxGraphHierarchyEdge.prototype.isReversed = false;\n\n/**\n * Function: invert\n * \n * Inverts the direction of this internal edge(s)\n */\nmxGraphHierarchyEdge.prototype.invert = function(layer)\n{\n\tvar temp = this.source;\n\tthis.source = this.target;\n\tthis.target = temp;\n\tthis.isReversed = !this.isReversed;\n};\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphHierarchyEdge.prototype.getNextLayerConnectedCells = function(layer)\n{\n\tif (this.nextLayerConnectedCells == null)\n\t{\n\t\tthis.nextLayerConnectedCells = [];\n\t\t\n\t\tfor (var i = 0; i < this.temp.length; i++)\n\t\t{\n\t\t\tthis.nextLayerConnectedCells[i] = [];\n\t\t\t\n\t\t\tif (i == this.temp.length - 1)\n\t\t\t{\n\t\t\t\tthis.nextLayerConnectedCells[i].push(this.source);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.nextLayerConnectedCells[i].push(this);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this.nextLayerConnectedCells[layer - this.minRank - 1];\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphHierarchyEdge.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\tif (this.previousLayerConnectedCells == null)\n\t{\n\t\tthis.previousLayerConnectedCells = [];\n\n\t\tfor (var i = 0; i < this.temp.length; i++)\n\t\t{\n\t\t\tthis.previousLayerConnectedCells[i] = [];\n\t\t\t\n\t\t\tif (i == 0)\n\t\t\t{\n\t\t\t\tthis.previousLayerConnectedCells[i].push(this.target);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.previousLayerConnectedCells[i].push(this);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.previousLayerConnectedCells[layer - this.minRank - 1];\n};\n\n/**\n * Function: isEdge\n * \n * Returns true.\n */\nmxGraphHierarchyEdge.prototype.isEdge = function()\n{\n\treturn true;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphHierarchyEdge.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn this.temp[layer - this.minRank - 1];\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphHierarchyEdge.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\tthis.temp[layer - this.minRank - 1] = value;\n};\n\n/**\n * Function: getCoreCell\n * \n * Gets the first core edge associated with this wrapper\n */\nmxGraphHierarchyEdge.prototype.getCoreCell = function()\n{\n\tif (this.edges != null && this.edges.length > 0)\n\t{\n\t\treturn this.edges[0];\n\t}\n\t\n\treturn null;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyModel\n *\n * Internal model of a hierarchical graph. This model stores nodes and edges\n * equivalent to the real graph nodes and edges, but also stores the rank of the\n * cells, the order within the ranks and the new candidate locations of cells.\n * The internal model also reverses edge direction were appropriate , ignores\n * self-loop and groups parallels together under one edge object.\n *\n * Constructor: mxGraphHierarchyModel\n *\n * Creates an internal ordered graph model using the vertices passed in. If\n * there are any, leftward edge need to be inverted in the internal model\n *\n * Arguments:\n *\n * graph - the facade describing the graph to be operated on\n * vertices - the vertices for this hierarchy\n * ordered - whether or not the vertices are already ordered\n * deterministic - whether or not this layout should be deterministic on each\n * tightenToSource - whether or not to tighten vertices towards the sources\n * scanRanksFromSinks - Whether rank assignment is from the sinks or sources.\n * usage\n */\nfunction mxGraphHierarchyModel(layout, vertices, roots, parent, tightenToSource)\n{\n\tvar graph = layout.getGraph();\n\tthis.tightenToSource = tightenToSource;\n\tthis.roots = roots;\n\tthis.parent = parent;\n\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly\n\tthis.vertexMapper = new mxDictionary();\n\tthis.edgeMapper = new mxDictionary();\n\tthis.maxRank = 0;\n\tvar internalVertices = [];\n\n\tif (vertices == null)\n\t{\n\t\tvertices = this.graph.getChildVertices(parent);\n\t}\n\n\tthis.maxRank = this.SOURCESCANSTARTRANK;\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly. Guess size by number\n\t// of edges is roughly same as number of vertices.\n\tthis.createInternalCells(layout, vertices, internalVertices);\n\n\t// Go through edges set their sink values. Also check the\n\t// ordering if and invert edges if necessary\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tvar edges = internalVertices[i].connectsAsSource;\n\n\t\tfor (var j = 0; j < edges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = edges[j];\n\t\t\tvar realEdges = internalEdge.edges;\n\n\t\t\t// Only need to process the first real edge, since\n\t\t\t// all the edges connect to the same other vertex\n\t\t\tif (realEdges != null && realEdges.length > 0)\n\t\t\t{\n\t\t\t\tvar realEdge = realEdges[0];\n\t\t\t\tvar targetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\trealEdge, false);\n\t\t\t\tvar internalTargetCell = this.vertexMapper.get(targetCell);\n\n\t\t\t\tif (internalVertices[i] == internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\t// If there are parallel edges going between two vertices and not all are in the same direction\n\t\t\t\t\t// you can have navigated across one direction when doing the cycle reversal that isn't the same\n\t\t\t\t\t// direction as the first real edge in the array above. When that happens the if above catches\n\t\t\t\t\t// that and we correct the target cell before continuing.\n\t\t\t\t\t// This branch only detects this single case\n\t\t\t\t\ttargetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\t\trealEdge, true);\n\t\t\t\t\tinternalTargetCell = this.vertexMapper.get(targetCell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (internalTargetCell != null\n\t\t\t\t\t\t&& internalVertices[i] != internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\tinternalEdge.target = internalTargetCell;\n\n\t\t\t\t\tif (internalTargetCell.connectsAsTarget.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.indexOf(internalTargetCell.connectsAsTarget, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Use the temp variable in the internal nodes to mark this\n\t\t// internal vertex as having been visited.\n\t\tinternalVertices[i].temp[0] = 1;\n\t}\n};\n\n/**\n * Variable: maxRank\n *\n * Stores the largest rank number allocated\n */\nmxGraphHierarchyModel.prototype.maxRank = null;\n\n/**\n * Variable: vertexMapper\n *\n * Map from graph vertices to internal model nodes.\n */\nmxGraphHierarchyModel.prototype.vertexMapper = null;\n\n/**\n * Variable: edgeMapper\n *\n * Map from graph edges to internal model edges\n */\nmxGraphHierarchyModel.prototype.edgeMapper = null;\n\n/**\n * Variable: ranks\n *\n * Mapping from rank number to actual rank\n */\nmxGraphHierarchyModel.prototype.ranks = null;\n\n/**\n * Variable: roots\n *\n * Store of roots of this hierarchy model, these are real graph cells, not\n * internal cells\n */\nmxGraphHierarchyModel.prototype.roots = null;\n\n/**\n * Variable: parent\n *\n * The parent cell whose children are being laid out\n */\nmxGraphHierarchyModel.prototype.parent = null;\n\n/**\n * Variable: dfsCount\n *\n * Count of the number of times the ancestor dfs has been used.\n */\nmxGraphHierarchyModel.prototype.dfsCount = 0;\n\n/**\n * Variable: SOURCESCANSTARTRANK\n *\n * High value to start source layering scan rank value from.\n */\nmxGraphHierarchyModel.prototype.SOURCESCANSTARTRANK = 100000000;\n\n/**\n * Variable: tightenToSource\n *\n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxGraphHierarchyModel.prototype.tightenToSource = false;\n\n/**\n * Function: createInternalCells\n *\n * Creates all edges in the internal model\n *\n * Parameters:\n *\n * layout - Reference to the <mxHierarchicalLayout> algorithm.\n * vertices - Array of <mxCells> that represent the vertices whom are to\n * have an internal representation created.\n * internalVertices - The array of <mxGraphHierarchyNodes> to have their\n * information filled in using the real vertices.\n */\nmxGraphHierarchyModel.prototype.createInternalCells = function(layout, vertices, internalVertices)\n{\n\tvar graph = layout.getGraph();\n\n\t// Create internal edges\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tinternalVertices[i] = new mxGraphHierarchyNode(vertices[i]);\n\t\tthis.vertexMapper.put(vertices[i], internalVertices[i]);\n\n\t\t// If the layout is deterministic, order the cells\n\t\t//List outgoingCells = graph.getNeighbours(vertices[i], deterministic);\n\t\tvar conns = layout.getEdges(vertices[i]);\n\t\tinternalVertices[i].connectsAsSource = [];\n\n\t\t// Create internal edges, but don't do any rank assignment yet\n\t\t// First use the information from the greedy cycle remover to\n\t\t// invert the leftward edges internally\n\t\tfor (var j = 0; j < conns.length; j++)\n\t\t{\n\t\t\tvar cell = layout.getVisibleTerminal(conns[j], false);\n\n\t\t\t// Looking for outgoing edges only\n\t\t\tif (cell != vertices[i] && layout.graph.model.isVertex(cell) &&\n\t\t\t\t\t!layout.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\t// We process all edge between this source and its targets\n\t\t\t\t// If there are edges going both ways, we need to collect\n\t\t\t\t// them all into one internal edges to avoid looping problems\n\t\t\t\t// later. We assume this direction (source -> target) is the \n\t\t\t\t// natural direction if at least half the edges are going in\n\t\t\t\t// that direction.\n\n\t\t\t\t// The check below for edges[0] being in the vertex mapper is\n\t\t\t\t// in case we've processed this the other way around\n\t\t\t\t// (target -> source) and the number of edges in each direction\n\t\t\t\t// are the same. All the graph edges will have been assigned to\n\t\t\t\t// an internal edge going the other way, so we don't want to \n\t\t\t\t// process them again\n\t\t\t\tvar undirectedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, false);\n\t\t\t\tvar directedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, true);\n\t\t\t\t\n\t\t\t\tif (undirectedEdges != null &&\n\t\t\t\t\t\tundirectedEdges.length > 0 &&\n\t\t\t\t\t\tthis.edgeMapper.get(undirectedEdges[0]) == null &&\n\t\t\t\t\t\tdirectedEdges.length * 2 >= undirectedEdges.length)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = new mxGraphHierarchyEdge(undirectedEdges);\n\n\t\t\t\t\tfor (var k = 0; k < undirectedEdges.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar edge = undirectedEdges[k];\n\t\t\t\t\t\tthis.edgeMapper.put(edge, internalEdge);\n\n\t\t\t\t\t\t// Resets all point on the edge and disables the edge style\n\t\t\t\t\t\t// without deleting it from the cell style\n\t\t\t\t\t\tgraph.resetEdge(edge);\n\n\t\t\t\t\t    if (layout.disableEdgeStyle)\n\t\t\t\t\t    {\n\t\t\t\t\t    \tlayout.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\t    \tlayout.setOrthogonalEdge(edge,true);\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\n\t\t\t\t\tinternalEdge.source = internalVertices[i];\n\n\t\t\t\t\tif (mxUtils.indexOf(internalVertices[i].connectsAsSource, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalVertices[i].connectsAsSource.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Ensure temp variable is cleared from any previous use\n\t\tinternalVertices[i].temp[0] = 0;\n\t}\n};\n\n/**\n * Function: initialRank\n *\n * Basic determination of minimum layer ranking by working from from sources\n * or sinks and working through each node in the relevant edge direction.\n * Starting at the sinks is basically a longest path layering algorithm.\n*/\nmxGraphHierarchyModel.prototype.initialRank = function()\n{\n\tvar startNodes = [];\n\n\tif (this.roots != null)\n\t{\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar internalNode = this.vertexMapper.get(this.roots[i]);\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tstartNodes.push(internalNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar internalNodes = this.vertexMapper.getValues();\n\t\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] = -1;\n\t}\n\n\tvar startNodesCopy = startNodes.slice();\n\n\twhile (startNodes.length > 0)\n\t{\n\t\tvar internalNode = startNodes[0];\n\t\tvar layerDeterminingEdges;\n\t\tvar edgesToBeMarked;\n\n\t\tlayerDeterminingEdges = internalNode.connectsAsTarget;\n\t\tedgesToBeMarked = internalNode.connectsAsSource;\n\n\t\t// flag to keep track of whether or not all layer determining\n\t\t// edges have been scanned\n\t\tvar allEdgesScanned = true;\n\n\t\t// Work out the layer of this node from the layer determining\n\t\t// edges. The minimum layer number of any node connected by one of\n\t\t// the layer determining edges variable\n\t\tvar minimumLayer = this.SOURCESCANSTARTRANK;\n\n\t\tfor (var i = 0; i < layerDeterminingEdges.length; i++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[i];\n\n\t\t\tif (internalEdge.temp[0] == 5270620)\n\t\t\t{\n\t\t\t\t// This edge has been scanned, get the layer of the\n\t\t\t\t// node on the other end\n\t\t\t\tvar otherNode = internalEdge.source;\n\t\t\t\tminimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tallEdgesScanned = false;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If all edge have been scanned, assign the layer, mark all\n\t\t// edges in the other direction and remove from the nodes list\n\t\tif (allEdgesScanned)\n\t\t{\n\t\t\tinternalNode.temp[0] = minimumLayer;\n\t\t\tthis.maxRank = Math.min(this.maxRank, minimumLayer);\n\n\t\t\tif (edgesToBeMarked != null)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < edgesToBeMarked.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = edgesToBeMarked[i];\n\n\t\t\t\t\t// Assign unique stamp ( y/m/d/h )\n\t\t\t\t\tinternalEdge.temp[0] = 5270620;\n\n\t\t\t\t\t// Add node on other end of edge to LinkedList of\n\t\t\t\t\t// nodes to be analysed\n\t\t\t\t\tvar otherNode = internalEdge.target;\n\n\t\t\t\t\t// Only add node if it hasn't been assigned a layer\n\t\t\t\t\tif (otherNode.temp[0] == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tstartNodes.push(otherNode);\n\n\t\t\t\t\t\t// Mark this other node as neither being\n\t\t\t\t\t\t// unassigned nor assigned so it isn't\n\t\t\t\t\t\t// added to this list again, but it's\n\t\t\t\t\t\t// layer isn't used in any calculation.\n\t\t\t\t\t\totherNode.temp[0] = -2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartNodes.shift();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Not all the edges have been scanned, get to the back of\n\t\t\t// the class and put the dunces cap on\n\t\t\tvar removedCell = startNodes.shift();\n\t\t\tstartNodes.push(internalNode);\n\n\t\t\tif (removedCell == internalNode && startNodes.length == 1)\n\t\t\t{\n\t\t\t\t// This is an error condition, we can't get out of\n\t\t\t\t// this loop. It could happen for more than one node\n\t\t\t\t// but that's a lot harder to detect. Log the error\n\t\t\t\t// TODO make log comment\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize the ranks down from their large starting value to place\n\t// at least 1 sink on layer 0\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] -= this.maxRank;\n\t}\n\t\n\t// Tighten the rank 0 nodes as far as possible\n\tfor ( var i = 0; i < startNodesCopy.length; i++)\n\t{\n\t\tvar internalNode = startNodesCopy[i];\n\t\tvar currentMaxLayer = 0;\n\t\tvar layerDeterminingEdges = internalNode.connectsAsSource;\n\n\t\tfor ( var j = 0; j < layerDeterminingEdges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[j];\n\t\t\tvar otherNode = internalEdge.target;\n\t\t\tinternalNode.temp[0] = Math.max(currentMaxLayer,\n\t\t\t\t\totherNode.temp[0] + 1);\n\t\t\tcurrentMaxLayer = internalNode.temp[0];\n\t\t}\n\t}\n\t\n\t// Reset the maxRank to that which would be expected for a from-sink\n\t// scan\n\tthis.maxRank = this.SOURCESCANSTARTRANK - this.maxRank;\n};\n\n/**\n * Function: fixRanks\n *\n * Fixes the layer assignments to the values stored in the nodes. Also needs\n * to create dummy nodes for edges that cross layers.\n */\nmxGraphHierarchyModel.prototype.fixRanks = function()\n{\n\tvar rankList = [];\n\tthis.ranks = [];\n\n\tfor (var i = 0; i < this.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tthis.ranks[i] = rankList[i];\n\t}\n\n\t// Perform a DFS to obtain an initial ordering for each rank.\n\t// Without doing this you would end up having to process\n\t// crossings for a standard tree.\n\tvar rootsArray = null;\n\n\tif (this.roots != null)\n\t{\n\t\tvar oldRootsArray = this.roots;\n\t\trootsArray = [];\n\n\t\tfor (var i = 0; i < oldRootsArray.length; i++)\n\t\t{\n\t\t\tvar cell = oldRootsArray[i];\n\t\t\tvar internalNode = this.vertexMapper.get(cell);\n\t\t\trootsArray[i] = internalNode;\n\t\t}\n\t}\n\n\tthis.visit(function(parent, node, edge, layer, seen)\n\t{\n\t\tif (seen == 0 && node.maxRank < 0 && node.minRank < 0)\n\t\t{\n\t\t\trankList[node.temp[0]].push(node);\n\t\t\tnode.maxRank = node.temp[0];\n\t\t\tnode.minRank = node.temp[0];\n\n\t\t\t// Set temp[0] to the nodes position in the rank\n\t\t\tnode.temp[0] = rankList[node.maxRank].length - 1;\n\t\t}\n\n\t\tif (parent != null && edge != null)\n\t\t{\n\t\t\tvar parentToCellRankDifference = parent.maxRank - node.maxRank;\n\n\t\t\tif (parentToCellRankDifference > 1)\n\t\t\t{\n\t\t\t\t// There are ranks in between the parent and current cell\n\t\t\t\tedge.maxRank = parent.maxRank;\n\t\t\t\tedge.minRank = node.maxRank;\n\t\t\t\tedge.temp = [];\n\t\t\t\tedge.x = [];\n\t\t\t\tedge.y = [];\n\n\t\t\t\tfor (var i = edge.minRank + 1; i < edge.maxRank; i++)\n\t\t\t\t{\n\t\t\t\t\t// The connecting edge must be added to the\n\t\t\t\t\t// appropriate ranks\n\t\t\t\t\trankList[i].push(edge);\n\t\t\t\t\tedge.setGeneralPurposeVariable(i, rankList[i]\n\t\t\t\t\t\t\t.length - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, rootsArray, false, null);\n};\n\n/**\n * Function: visit\n *\n * A depth first search through the internal heirarchy model.\n *\n * Parameters:\n *\n * visitor - The visitor function pattern to be called for each node.\n * trackAncestors - Whether or not the search is to keep track all nodes\n * directly above this one in the search path.\n */\nmxGraphHierarchyModel.prototype.visit = function(visitor, dfsRoots, trackAncestors, seenNodes)\n{\n\t// Run dfs through on all roots\n\tif (dfsRoots != null)\n\t{\n\t\tfor (var i = 0; i < dfsRoots.length; i++)\n\t\t{\n\t\t\tvar internalNode = dfsRoots[i];\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tif (seenNodes == null)\n\t\t\t\t{\n\t\t\t\t\tseenNodes = new Object();\n\t\t\t\t}\n\n\t\t\t\tif (trackAncestors)\n\t\t\t\t{\n\t\t\t\t\t// Set up hash code for root\n\t\t\t\t\tinternalNode.hashCode = [];\n\t\t\t\t\tinternalNode.hashCode[0] = this.dfsCount;\n\t\t\t\t\tinternalNode.hashCode[1] = i;\n\t\t\t\t\tthis.extendedDfs(null, internalNode, null, visitor, seenNodes,\n\t\t\t\t\t\t\tinternalNode.hashCode, i, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.dfs(null, internalNode, null, visitor, seenNodes, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dfsCount++;\n\t}\n};\n\n/**\n * Function: dfs\n *\n * Performs a depth first search on the internal hierarchy model\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs a set of all of the\n * ancestor node of the current node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxGraphHierarchyModel.prototype.dfs = function(parent, root, connectingEdge, visitor, seen, layer)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\t\n\t\t\tfor (var i = 0; i< outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.dfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\tlayer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendedDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of cells ancestors, but it\n * should be only used when necessary because of it can be computationally\n * intensive for deep searches.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs\n * ancestors - the parent hash code\n * childHash - the new hash code for this node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxGraphHierarchyModel.prototype.extendedDfs = function(parent, root, connectingEdge, visitor, seen, ancestors, childHash, layer)\n{\n\t// Explanation of custom hash set. Previously, the ancestors variable\n\t// was passed through the dfs as a HashSet. The ancestors were copied\n\t// into a new HashSet and when the new child was processed it was also\n\t// added to the set. If the current node was in its ancestor list it\n\t// meant there is a cycle in the graph and this information is passed\n\t// to the visitor.visit() in the seen parameter. The HashSet clone was\n\t// very expensive on CPU so a custom hash was developed using primitive\n\t// types. temp[] couldn't be used so hashCode[] was added to each node.\n\t// Each new child adds another int to the array, copying the prefix\n\t// from its parent. Child of the same parent add different ints (the\n\t// limit is therefore 2^32 children per parent...). If a node has a\n\t// child with the hashCode already set then the child code is compared\n\t// to the same portion of the current nodes array. If they match there\n\t// is a loop.\n\t// Note that the basic mechanism would only allow for 1 use of this\n\t// functionality, so the root nodes have two ints. The second int is\n\t// incremented through each node root and the first is incremented\n\t// through each run of the dfs algorithm (therefore the dfs is not\n\t// thread safe). The hash code of each node is set if not already set,\n\t// or if the first int does not match that of the current run.\n\tif (root != null)\n\t{\n\t\tif (parent != null)\n\t\t{\n\t\t\t// Form this nodes hash code if necessary, that is, if the\n\t\t\t// hashCode variable has not been initialized or if the\n\t\t\t// start of the parent hash code does not equal the start of\n\t\t\t// this nodes hash code, indicating the code was set on a\n\t\t\t// previous run of this dfs.\n\t\t\tif (root.hashCode == null ||\n\t\t\t\troot.hashCode[0] != parent.hashCode[0])\n\t\t\t{\n\t\t\t\tvar hashCodeLength = parent.hashCode.length + 1;\n\t\t\t\troot.hashCode = parent.hashCode.slice();\n\t\t\t\troot.hashCode[hashCodeLength - 1] = childHash;\n\t\t\t}\n\t\t}\n\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneModel\n *\n * Internal model of a hierarchical graph. This model stores nodes and edges\n * equivalent to the real graph nodes and edges, but also stores the rank of the\n * cells, the order within the ranks and the new candidate locations of cells.\n * The internal model also reverses edge direction were appropriate , ignores\n * self-loop and groups parallels together under one edge object.\n *\n * Constructor: mxSwimlaneModel\n *\n * Creates an internal ordered graph model using the vertices passed in. If\n * there are any, leftward edge need to be inverted in the internal model\n *\n * Arguments:\n *\n * graph - the facade describing the graph to be operated on\n * vertices - the vertices for this hierarchy\n * ordered - whether or not the vertices are already ordered\n * deterministic - whether or not this layout should be deterministic on each\n * tightenToSource - whether or not to tighten vertices towards the sources\n * scanRanksFromSinks - Whether rank assignment is from the sinks or sources.\n * usage\n */\nfunction mxSwimlaneModel(layout, vertices, roots, parent, tightenToSource)\n{\n\tvar graph = layout.getGraph();\n\tthis.tightenToSource = tightenToSource;\n\tthis.roots = roots;\n\tthis.parent = parent;\n\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly\n\tthis.vertexMapper = new mxDictionary();\n\tthis.edgeMapper = new mxDictionary();\n\tthis.maxRank = 0;\n\tvar internalVertices = [];\n\n\tif (vertices == null)\n\t{\n\t\tvertices = this.graph.getChildVertices(parent);\n\t}\n\n\tthis.maxRank = this.SOURCESCANSTARTRANK;\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly. Guess size by number\n\t// of edges is roughly same as number of vertices.\n\tthis.createInternalCells(layout, vertices, internalVertices);\n\n\t// Go through edges set their sink values. Also check the\n\t// ordering if and invert edges if necessary\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tvar edges = internalVertices[i].connectsAsSource;\n\n\t\tfor (var j = 0; j < edges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = edges[j];\n\t\t\tvar realEdges = internalEdge.edges;\n\n\t\t\t// Only need to process the first real edge, since\n\t\t\t// all the edges connect to the same other vertex\n\t\t\tif (realEdges != null && realEdges.length > 0)\n\t\t\t{\n\t\t\t\tvar realEdge = realEdges[0];\n\t\t\t\tvar targetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\trealEdge, false);\n\t\t\t\tvar internalTargetCell = this.vertexMapper.get(targetCell);\n\n\t\t\t\tif (internalVertices[i] == internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\t// If there are parallel edges going between two vertices and not all are in the same direction\n\t\t\t\t\t// you can have navigated across one direction when doing the cycle reversal that isn't the same\n\t\t\t\t\t// direction as the first real edge in the array above. When that happens the if above catches\n\t\t\t\t\t// that and we correct the target cell before continuing.\n\t\t\t\t\t// This branch only detects this single case\n\t\t\t\t\ttargetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\t\trealEdge, true);\n\t\t\t\t\tinternalTargetCell = this.vertexMapper.get(targetCell);\n\t\t\t\t}\n\n\t\t\t\tif (internalTargetCell != null\n\t\t\t\t\t\t&& internalVertices[i] != internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\tinternalEdge.target = internalTargetCell;\n\n\t\t\t\t\tif (internalTargetCell.connectsAsTarget.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.indexOf(internalTargetCell.connectsAsTarget, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Use the temp variable in the internal nodes to mark this\n\t\t// internal vertex as having been visited.\n\t\tinternalVertices[i].temp[0] = 1;\n\t}\n};\n\n/**\n * Variable: maxRank\n *\n * Stores the largest rank number allocated\n */\nmxSwimlaneModel.prototype.maxRank = null;\n\n/**\n * Variable: vertexMapper\n *\n * Map from graph vertices to internal model nodes.\n */\nmxSwimlaneModel.prototype.vertexMapper = null;\n\n/**\n * Variable: edgeMapper\n *\n * Map from graph edges to internal model edges\n */\nmxSwimlaneModel.prototype.edgeMapper = null;\n\n/**\n * Variable: ranks\n *\n * Mapping from rank number to actual rank\n */\nmxSwimlaneModel.prototype.ranks = null;\n\n/**\n * Variable: roots\n *\n * Store of roots of this hierarchy model, these are real graph cells, not\n * internal cells\n */\nmxSwimlaneModel.prototype.roots = null;\n\n/**\n * Variable: parent\n *\n * The parent cell whose children are being laid out\n */\nmxSwimlaneModel.prototype.parent = null;\n\n/**\n * Variable: dfsCount\n *\n * Count of the number of times the ancestor dfs has been used.\n */\nmxSwimlaneModel.prototype.dfsCount = 0;\n\n/**\n * Variable: SOURCESCANSTARTRANK\n *\n * High value to start source layering scan rank value from.\n */\nmxSwimlaneModel.prototype.SOURCESCANSTARTRANK = 100000000;\n\n/**\n * Variable: tightenToSource\n *\n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxSwimlaneModel.prototype.tightenToSource = false;\n\n/**\n * Variable: ranksPerGroup\n *\n * An array of the number of ranks within each swimlane\n */\nmxSwimlaneModel.prototype.ranksPerGroup = null;\n\n/**\n * Function: createInternalCells\n *\n * Creates all edges in the internal model\n *\n * Parameters:\n *\n * layout - Reference to the <mxHierarchicalLayout> algorithm.\n * vertices - Array of <mxCells> that represent the vertices whom are to\n * have an internal representation created.\n * internalVertices - The array of <mxGraphHierarchyNodes> to have their\n * information filled in using the real vertices.\n */\nmxSwimlaneModel.prototype.createInternalCells = function(layout, vertices, internalVertices)\n{\n\tvar graph = layout.getGraph();\n\tvar swimlanes = layout.swimlanes;\n\n\t// Create internal edges\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tinternalVertices[i] = new mxGraphHierarchyNode(vertices[i]);\n\t\tthis.vertexMapper.put(vertices[i], internalVertices[i]);\n\t\tinternalVertices[i].swimlaneIndex = -1;\n\n\t\tfor (var ii = 0; ii < swimlanes.length; ii++)\n\t\t{\n\t\t\tif (graph.model.getParent(vertices[i]) == swimlanes[ii])\n\t\t\t{\n\t\t\t\tinternalVertices[i].swimlaneIndex = ii;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If the layout is deterministic, order the cells\n\t\t//List outgoingCells = graph.getNeighbours(vertices[i], deterministic);\n\t\tvar conns = layout.getEdges(vertices[i]);\n\t\tinternalVertices[i].connectsAsSource = [];\n\n\t\t// Create internal edges, but don't do any rank assignment yet\n\t\t// First use the information from the greedy cycle remover to\n\t\t// invert the leftward edges internally\n\t\tfor (var j = 0; j < conns.length; j++)\n\t\t{\n\t\t\tvar cell = layout.getVisibleTerminal(conns[j], false);\n\n\t\t\t// Looking for outgoing edges only\n\t\t\tif (cell != vertices[i] && layout.graph.model.isVertex(cell) &&\n\t\t\t\t\t!layout.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\t// We process all edge between this source and its targets\n\t\t\t\t// If there are edges going both ways, we need to collect\n\t\t\t\t// them all into one internal edges to avoid looping problems\n\t\t\t\t// later. We assume this direction (source -> target) is the \n\t\t\t\t// natural direction if at least half the edges are going in\n\t\t\t\t// that direction.\n\n\t\t\t\t// The check below for edges[0] being in the vertex mapper is\n\t\t\t\t// in case we've processed this the other way around\n\t\t\t\t// (target -> source) and the number of edges in each direction\n\t\t\t\t// are the same. All the graph edges will have been assigned to\n\t\t\t\t// an internal edge going the other way, so we don't want to \n\t\t\t\t// process them again\n\t\t\t\tvar undirectedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, false);\n\t\t\t\tvar directedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, true);\n\t\t\t\t\n\t\t\t\tif (undirectedEdges != null &&\n\t\t\t\t\t\tundirectedEdges.length > 0 &&\n\t\t\t\t\t\tthis.edgeMapper.get(undirectedEdges[0]) == null &&\n\t\t\t\t\t\tdirectedEdges.length * 2 >= undirectedEdges.length)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = new mxGraphHierarchyEdge(undirectedEdges);\n\n\t\t\t\t\tfor (var k = 0; k < undirectedEdges.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar edge = undirectedEdges[k];\n\t\t\t\t\t\tthis.edgeMapper.put(edge, internalEdge);\n\n\t\t\t\t\t\t// Resets all point on the edge and disables the edge style\n\t\t\t\t\t\t// without deleting it from the cell style\n\t\t\t\t\t\tgraph.resetEdge(edge);\n\n\t\t\t\t\t    if (layout.disableEdgeStyle)\n\t\t\t\t\t    {\n\t\t\t\t\t    \tlayout.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\t    \tlayout.setOrthogonalEdge(edge,true);\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\n\t\t\t\t\tinternalEdge.source = internalVertices[i];\n\n\t\t\t\t\tif (mxUtils.indexOf(internalVertices[i].connectsAsSource, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalVertices[i].connectsAsSource.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Ensure temp variable is cleared from any previous use\n\t\tinternalVertices[i].temp[0] = 0;\n\t}\n};\n\n/**\n * Function: initialRank\n *\n * Basic determination of minimum layer ranking by working from from sources\n * or sinks and working through each node in the relevant edge direction.\n * Starting at the sinks is basically a longest path layering algorithm.\n*/\nmxSwimlaneModel.prototype.initialRank = function()\n{\n\tthis.ranksPerGroup = [];\n\t\n\tvar startNodes = [];\n\tvar seen = new Object();\n\n\tif (this.roots != null)\n\t{\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar internalNode = this.vertexMapper.get(this.roots[i]);\n\t\t\tthis.maxChainDfs(null, internalNode, null, seen, 0);\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tstartNodes.push(internalNode);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Calculate the lower and upper rank bounds of each swimlane\n\tvar lowerRank = [];\n\tvar upperRank = [];\n\t\n\tfor (var i = this.ranksPerGroup.length - 1; i >= 0; i--)\n\t{\n\t\tif (i == this.ranksPerGroup.length - 1)\n\t\t{\n\t\t\tlowerRank[i] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlowerRank[i] = upperRank[i+1] + 1;\n\t\t}\n\t\t\n\t\tupperRank[i] = lowerRank[i] + this.ranksPerGroup[i];\n\t}\n\t\n\tthis.maxRank = upperRank[0];\n\n\tvar internalNodes = this.vertexMapper.getValues();\n\t\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] = -1;\n\t}\n\n\tvar startNodesCopy = startNodes.slice();\n\t\n\twhile (startNodes.length > 0)\n\t{\n\t\tvar internalNode = startNodes[0];\n\t\tvar layerDeterminingEdges;\n\t\tvar edgesToBeMarked;\n\n\t\tlayerDeterminingEdges = internalNode.connectsAsTarget;\n\t\tedgesToBeMarked = internalNode.connectsAsSource;\n\n\t\t// flag to keep track of whether or not all layer determining\n\t\t// edges have been scanned\n\t\tvar allEdgesScanned = true;\n\n\t\t// Work out the layer of this node from the layer determining\n\t\t// edges. The minimum layer number of any node connected by one of\n\t\t// the layer determining edges variable\n\t\tvar minimumLayer = upperRank[0];\n\n\t\tfor (var i = 0; i < layerDeterminingEdges.length; i++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[i];\n\n\t\t\tif (internalEdge.temp[0] == 5270620)\n\t\t\t{\n\t\t\t\t// This edge has been scanned, get the layer of the\n\t\t\t\t// node on the other end\n\t\t\t\tvar otherNode = internalEdge.source;\n\t\t\t\tminimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tallEdgesScanned = false;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If all edge have been scanned, assign the layer, mark all\n\t\t// edges in the other direction and remove from the nodes list\n\t\tif (allEdgesScanned)\n\t\t{\n\t\t\tif (minimumLayer > upperRank[internalNode.swimlaneIndex])\n\t\t\t{\n\t\t\t\tminimumLayer = upperRank[internalNode.swimlaneIndex];\n\t\t\t}\n\n\t\t\tinternalNode.temp[0] = minimumLayer;\n\n\t\t\tif (edgesToBeMarked != null)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < edgesToBeMarked.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = edgesToBeMarked[i];\n\n\t\t\t\t\t// Assign unique stamp ( y/m/d/h )\n\t\t\t\t\tinternalEdge.temp[0] = 5270620;\n\n\t\t\t\t\t// Add node on other end of edge to LinkedList of\n\t\t\t\t\t// nodes to be analysed\n\t\t\t\t\tvar otherNode = internalEdge.target;\n\n\t\t\t\t\t// Only add node if it hasn't been assigned a layer\n\t\t\t\t\tif (otherNode.temp[0] == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tstartNodes.push(otherNode);\n\n\t\t\t\t\t\t// Mark this other node as neither being\n\t\t\t\t\t\t// unassigned nor assigned so it isn't\n\t\t\t\t\t\t// added to this list again, but it's\n\t\t\t\t\t\t// layer isn't used in any calculation.\n\t\t\t\t\t\totherNode.temp[0] = -2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartNodes.shift();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Not all the edges have been scanned, get to the back of\n\t\t\t// the class and put the dunces cap on\n\t\t\tvar removedCell = startNodes.shift();\n\t\t\tstartNodes.push(internalNode);\n\n\t\t\tif (removedCell == internalNode && startNodes.length == 1)\n\t\t\t{\n\t\t\t\t// This is an error condition, we can't get out of\n\t\t\t\t// this loop. It could happen for more than one node\n\t\t\t\t// but that's a lot harder to detect. Log the error\n\t\t\t\t// TODO make log comment\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize the ranks down from their large starting value to place\n\t// at least 1 sink on layer 0\n//\tfor (var key in this.vertexMapper)\n//\t{\n//\t\tvar internalNode = this.vertexMapper[key];\n//\t\t// Mark the node as not having had a layer assigned\n//\t\tinternalNode.temp[0] -= this.maxRank;\n//\t}\n\t\n\t// Tighten the rank 0 nodes as far as possible\n//\tfor ( var i = 0; i < startNodesCopy.length; i++)\n//\t{\n//\t\tvar internalNode = startNodesCopy[i];\n//\t\tvar currentMaxLayer = 0;\n//\t\tvar layerDeterminingEdges = internalNode.connectsAsSource;\n//\n//\t\tfor ( var j = 0; j < layerDeterminingEdges.length; j++)\n//\t\t{\n//\t\t\tvar internalEdge = layerDeterminingEdges[j];\n//\t\t\tvar otherNode = internalEdge.target;\n//\t\t\tinternalNode.temp[0] = Math.max(currentMaxLayer,\n//\t\t\t\t\totherNode.temp[0] + 1);\n//\t\t\tcurrentMaxLayer = internalNode.temp[0];\n//\t\t}\n//\t}\n};\n\n/**\n * Function: maxChainDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of chains within groups.\n * Any cycles should be removed prior to running, but previously seen cells\n * are ignored.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * seen - a set of all nodes seen by this dfs\n * chainCount - the number of edges in the chain of vertices going through\n * the current swimlane\n */\nmxSwimlaneModel.prototype.maxChainDfs = function(parent, root, connectingEdge, seen, chainCount)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = mxCellPath.create(root.cell);\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvar slIndex = root.swimlaneIndex;\n\t\t\t\n\t\t\tif (this.ranksPerGroup[slIndex] == null || this.ranksPerGroup[slIndex] < chainCount)\n\t\t\t{\n\t\t\t\tthis.ranksPerGroup[slIndex] = chainCount;\n\t\t\t}\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Only navigate in source->target direction within the same\n\t\t\t\t// swimlane, or from a lower index swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex < targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.maxChainDfs(root, targetNode, internalEdge, mxUtils.clone(seen, null , true), 0);\n\t\t\t\t}\n\t\t\t\telse if (root.swimlaneIndex == targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.maxChainDfs(root, targetNode, internalEdge, mxUtils.clone(seen, null , true), chainCount + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: fixRanks\n *\n * Fixes the layer assignments to the values stored in the nodes. Also needs\n * to create dummy nodes for edges that cross layers.\n */\nmxSwimlaneModel.prototype.fixRanks = function()\n{\n\tvar rankList = [];\n\tthis.ranks = [];\n\n\tfor (var i = 0; i < this.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tthis.ranks[i] = rankList[i];\n\t}\n\n\t// Perform a DFS to obtain an initial ordering for each rank.\n\t// Without doing this you would end up having to process\n\t// crossings for a standard tree.\n\tvar rootsArray = null;\n\n\tif (this.roots != null)\n\t{\n\t\tvar oldRootsArray = this.roots;\n\t\trootsArray = [];\n\n\t\tfor (var i = 0; i < oldRootsArray.length; i++)\n\t\t{\n\t\t\tvar cell = oldRootsArray[i];\n\t\t\tvar internalNode = this.vertexMapper.get(cell);\n\t\t\trootsArray[i] = internalNode;\n\t\t}\n\t}\n\n\tthis.visit(function(parent, node, edge, layer, seen)\n\t{\n\t\tif (seen == 0 && node.maxRank < 0 && node.minRank < 0)\n\t\t{\n\t\t\trankList[node.temp[0]].push(node);\n\t\t\tnode.maxRank = node.temp[0];\n\t\t\tnode.minRank = node.temp[0];\n\n\t\t\t// Set temp[0] to the nodes position in the rank\n\t\t\tnode.temp[0] = rankList[node.maxRank].length - 1;\n\t\t}\n\n\t\tif (parent != null && edge != null)\n\t\t{\n\t\t\tvar parentToCellRankDifference = parent.maxRank - node.maxRank;\n\n\t\t\tif (parentToCellRankDifference > 1)\n\t\t\t{\n\t\t\t\t// There are ranks in between the parent and current cell\n\t\t\t\tedge.maxRank = parent.maxRank;\n\t\t\t\tedge.minRank = node.maxRank;\n\t\t\t\tedge.temp = [];\n\t\t\t\tedge.x = [];\n\t\t\t\tedge.y = [];\n\n\t\t\t\tfor (var i = edge.minRank + 1; i < edge.maxRank; i++)\n\t\t\t\t{\n\t\t\t\t\t// The connecting edge must be added to the\n\t\t\t\t\t// appropriate ranks\n\t\t\t\t\trankList[i].push(edge);\n\t\t\t\t\tedge.setGeneralPurposeVariable(i, rankList[i]\n\t\t\t\t\t\t\t.length - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, rootsArray, false, null);\n};\n\n/**\n * Function: visit\n *\n * A depth first search through the internal heirarchy model.\n *\n * Parameters:\n *\n * visitor - The visitor function pattern to be called for each node.\n * trackAncestors - Whether or not the search is to keep track all nodes\n * directly above this one in the search path.\n */\nmxSwimlaneModel.prototype.visit = function(visitor, dfsRoots, trackAncestors, seenNodes)\n{\n\t// Run dfs through on all roots\n\tif (dfsRoots != null)\n\t{\n\t\tfor (var i = 0; i < dfsRoots.length; i++)\n\t\t{\n\t\t\tvar internalNode = dfsRoots[i];\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tif (seenNodes == null)\n\t\t\t\t{\n\t\t\t\t\tseenNodes = new Object();\n\t\t\t\t}\n\n\t\t\t\tif (trackAncestors)\n\t\t\t\t{\n\t\t\t\t\t// Set up hash code for root\n\t\t\t\t\tinternalNode.hashCode = [];\n\t\t\t\t\tinternalNode.hashCode[0] = this.dfsCount;\n\t\t\t\t\tinternalNode.hashCode[1] = i;\n\t\t\t\t\tthis.extendedDfs(null, internalNode, null, visitor, seenNodes,\n\t\t\t\t\t\t\tinternalNode.hashCode, i, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.dfs(null, internalNode, null, visitor, seenNodes, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dfsCount++;\n\t}\n};\n\n/**\n * Function: dfs\n *\n * Performs a depth first search on the internal hierarchy model\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs a set of all of the\n * ancestor node of the current node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxSwimlaneModel.prototype.dfs = function(parent, root, connectingEdge, visitor, seen, layer)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\t\n\t\t\tfor (var i = 0; i< outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.dfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\tlayer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendedDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of cells ancestors, but it\n * should be only used when necessary because of it can be computationally\n * intensive for deep searches.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs\n * ancestors - the parent hash code\n * childHash - the new hash code for this node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxSwimlaneModel.prototype.extendedDfs = function(parent, root, connectingEdge, visitor, seen, ancestors, childHash, layer)\n{\n\t// Explanation of custom hash set. Previously, the ancestors variable\n\t// was passed through the dfs as a HashSet. The ancestors were copied\n\t// into a new HashSet and when the new child was processed it was also\n\t// added to the set. If the current node was in its ancestor list it\n\t// meant there is a cycle in the graph and this information is passed\n\t// to the visitor.visit() in the seen parameter. The HashSet clone was\n\t// very expensive on CPU so a custom hash was developed using primitive\n\t// types. temp[] couldn't be used so hashCode[] was added to each node.\n\t// Each new child adds another int to the array, copying the prefix\n\t// from its parent. Child of the same parent add different ints (the\n\t// limit is therefore 2^32 children per parent...). If a node has a\n\t// child with the hashCode already set then the child code is compared\n\t// to the same portion of the current nodes array. If they match there\n\t// is a loop.\n\t// Note that the basic mechanism would only allow for 1 use of this\n\t// functionality, so the root nodes have two ints. The second int is\n\t// incremented through each node root and the first is incremented\n\t// through each run of the dfs algorithm (therefore the dfs is not\n\t// thread safe). The hash code of each node is set if not already set,\n\t// or if the first int does not match that of the current run.\n\tif (root != null)\n\t{\n\t\tif (parent != null)\n\t\t{\n\t\t\t// Form this nodes hash code if necessary, that is, if the\n\t\t\t// hashCode variable has not been initialized or if the\n\t\t\t// start of the parent hash code does not equal the start of\n\t\t\t// this nodes hash code, indicating the code was set on a\n\t\t\t// previous run of this dfs.\n\t\t\tif (root.hashCode == null ||\n\t\t\t\troot.hashCode[0] != parent.hashCode[0])\n\t\t\t{\n\t\t\t\tvar hashCodeLength = parent.hashCode.length + 1;\n\t\t\t\troot.hashCode = parent.hashCode.slice();\n\t\t\t\troot.hashCode[hashCodeLength - 1] = childHash;\n\t\t\t}\n\t\t}\n\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\tvar incomingEdges = root.connectsAsTarget.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\t\t\t\t\n\t\t\t\t// Only navigate in source->target direction within the same\n\t\t\t\t// swimlane, or from a lower index swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex <= targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < incomingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = incomingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.source;\n\n\t\t\t\t// Only navigate in target->source direction from a lower index \n\t\t\t\t// swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex < targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHierarchicalLayoutStage\n * \n * The specific layout interface for hierarchical layouts. It adds a\n * <code>run</code> method with a parameter for the hierarchical layout model\n * that is shared between the layout stages.\n * \n * Constructor: mxHierarchicalLayoutStage\n *\n * Constructs a new hierarchical layout stage.\n */\nfunction mxHierarchicalLayoutStage() { };\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxHierarchicalLayoutStage.prototype.execute = function(parent) { };\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMedianHybridCrossingReduction\n * \n * Sets the horizontal locations of node and edge dummy nodes on each layer.\n * Uses median down and up weighings as well heuristic to straighten edges as\n * far as possible.\n * \n * Constructor: mxMedianHybridCrossingReduction\n *\n * Creates a coordinate assignment.\n * \n * Arguments:\n * \n * intraCellSpacing - the minimum buffer between cells on the same rank\n * interRankCellSpacing - the minimum distance between cells on adjacent ranks\n * orientation - the position of the root node(s) relative to the graph\n * initialX - the leftmost coordinate node placement starts at\n */\nfunction mxMedianHybridCrossingReduction(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxMedianHybridCrossingReduction.\n */\nmxMedianHybridCrossingReduction.prototype = new mxHierarchicalLayoutStage();\nmxMedianHybridCrossingReduction.prototype.constructor = mxMedianHybridCrossingReduction;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxMedianHybridCrossingReduction.prototype.layout = null;\n\n/**\n * Variable: maxIterations\n * \n * The maximum number of iterations to perform whilst reducing edge\n * crossings. Default is 24.\n */\nmxMedianHybridCrossingReduction.prototype.maxIterations = 24;\n\n/**\n * Variable: nestedBestRanks\n * \n * Stores each rank as a collection of cells in the best order found for\n * each layer so far\n */\nmxMedianHybridCrossingReduction.prototype.nestedBestRanks = null;\n\n/**\n * Variable: currentBestCrossings\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.currentBestCrossings = 0;\n\n/**\n * Variable: iterationsWithoutImprovement\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.iterationsWithoutImprovement = 0;\n\n/**\n * Variable: maxNoImprovementIterations\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.maxNoImprovementIterations = 2;\n\n/**\n * Function: execute\n * \n * Performs a vertex ordering within ranks as described by Gansner et al\n * 1993\n */\nmxMedianHybridCrossingReduction.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\n\t// Stores initial ordering as being the best one found so far\n\tthis.nestedBestRanks = [];\n\t\n\tfor (var i = 0; i < model.ranks.length; i++)\n\t{\n\t\tthis.nestedBestRanks[i] = model.ranks[i].slice();\n\t}\n\n\tvar iterationsWithoutImprovement = 0;\n\tvar currentBestCrossings = this.calculateCrossings(model);\n\n\tfor (var i = 0; i < this.maxIterations &&\n\t\titerationsWithoutImprovement < this.maxNoImprovementIterations; i++)\n\t{\n\t\tthis.weightedMedian(i, model);\n\t\tthis.transpose(i, model);\n\t\tvar candidateCrossings = this.calculateCrossings(model);\n\n\t\tif (candidateCrossings < currentBestCrossings)\n\t\t{\n\t\t\tcurrentBestCrossings = candidateCrossings;\n\t\t\titerationsWithoutImprovement = 0;\n\n\t\t\t// Store the current rankings as the best ones\n\t\t\tfor (var j = 0; j < this.nestedBestRanks.length; j++)\n\t\t\t{\n\t\t\t\tvar rank = model.ranks[j];\n\n\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\tthis.nestedBestRanks[j][cell.getGeneralPurposeVariable(j)] = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Increase count of iterations where we haven't improved the\n\t\t\t// layout\n\t\t\titerationsWithoutImprovement++;\n\n\t\t\t// Restore the best values to the cells\n\t\t\tfor (var j = 0; j < this.nestedBestRanks.length; j++)\n\t\t\t{\n\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\tcell.setGeneralPurposeVariable(j, k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (currentBestCrossings == 0)\n\t\t{\n\t\t\t// Do nothing further\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Store the best rankings but in the model\n\tvar ranks = [];\n\tvar rankList = [];\n\n\tfor (var i = 0; i < model.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tranks[i] = rankList[i];\n\t}\n\n\tfor (var i = 0; i < this.nestedBestRanks.length; i++)\n\t{\n\t\tfor (var j = 0; j < this.nestedBestRanks[i].length; j++)\n\t\t{\n\t\t\trankList[i].push(this.nestedBestRanks[i][j]);\n\t\t}\n\t}\n\n\tmodel.ranks = ranks;\n};\n\n\n/**\n * Function: calculateCrossings\n * \n * Calculates the total number of edge crossing in the current graph.\n * Returns the current number of edge crossings in the hierarchy graph\n * model in the current candidate layout\n * \n * Parameters:\n * \n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.calculateCrossings = function(model)\n{\n\tvar numRanks = model.ranks.length;\n\tvar totalCrossings = 0;\n\n\tfor (var i = 1; i < numRanks; i++)\n\t{\n\t\ttotalCrossings += this.calculateRankCrossing(i, model);\n\t}\n\t\n\treturn totalCrossings;\n};\n\n/**\n * Function: calculateRankCrossing\n * \n * Calculates the number of edges crossings between the specified rank and\n * the rank below it. Returns the number of edges crossings with the rank\n * beneath\n * \n * Parameters:\n * \n * i -  the topmost rank of the pair ( higher rank value )\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.calculateRankCrossing = function(i, model)\n{\n\tvar totalCrossings = 0;\n\tvar rank = model.ranks[i];\n\tvar previousRank = model.ranks[i - 1];\n\n\tvar tmpIndices = [];\n\n\t// Iterate over the top rank and fill in the connection information\n\tfor (var j = 0; j < rank.length; j++)\n\t{\n\t\tvar node = rank[j];\n\t\tvar rankPosition = node.getGeneralPurposeVariable(i);\n\t\tvar connectedCells = node.getPreviousLayerConnectedCells(i);\n\t\tvar nodeIndices = [];\n\n\t\tfor (var k = 0; k < connectedCells.length; k++)\n\t\t{\n\t\t\tvar connectedNode = connectedCells[k];\n\t\t\tvar otherCellRankPosition = connectedNode.getGeneralPurposeVariable(i - 1);\n\t\t\tnodeIndices.push(otherCellRankPosition);\n\t\t}\n\t\t\n\t\tnodeIndices.sort(function(x, y) { return x - y; });\n\t\ttmpIndices[rankPosition] = nodeIndices;\n\t}\n\t\n\tvar indices = [];\n\n\tfor (var j = 0; j < tmpIndices.length; j++)\n\t{\n\t\tindices = indices.concat(tmpIndices[j]);\n\t}\n\n\tvar firstIndex = 1;\n\t\n\twhile (firstIndex < previousRank.length)\n\t{\n\t\tfirstIndex <<= 1;\n\t}\n\n\tvar treeSize = 2 * firstIndex - 1;\n\tfirstIndex -= 1;\n\n\tvar tree = [];\n\t\n\tfor (var j = 0; j < treeSize; ++j)\n\t{\n\t\ttree[j] = 0;\n\t}\n\n\tfor (var j = 0; j < indices.length; j++)\n\t{\n\t\tvar index = indices[j];\n\t    var treeIndex = index + firstIndex;\n\t    ++tree[treeIndex];\n\t    \n\t    while (treeIndex > 0)\n\t    {\n\t    \tif (treeIndex % 2)\n\t    \t{\n\t    \t\ttotalCrossings += tree[treeIndex + 1];\n\t    \t}\n\t      \n\t    \ttreeIndex = (treeIndex - 1) >> 1;\n\t    \t++tree[treeIndex];\n\t    }\n\t}\n\n\treturn totalCrossings;\n};\n\n/**\n * Function: transpose\n * \n * Takes each possible adjacent cell pair on each rank and checks if\n * swapping them around reduces the number of crossing\n * \n * Parameters:\n * \n * mainLoopIteration - the iteration number of the main loop\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.transpose = function(mainLoopIteration, model)\n{\n\tvar improved = true;\n\n\t// Track the number of iterations in case of looping\n\tvar count = 0;\n\tvar maxCount = 10;\n\twhile (improved && count++ < maxCount)\n\t{\n\t\t// On certain iterations allow allow swapping of cell pairs with\n\t\t// equal edge crossings switched or not switched. This help to\n\t\t// nudge a stuck layout into a lower crossing total.\n\t\tvar nudge = mainLoopIteration % 2 == 1 && count % 2 == 1;\n\t\timproved = false;\n\t\t\n\t\tfor (var i = 0; i < model.ranks.length; i++)\n\t\t{\n\t\t\tvar rank = model.ranks[i];\n\t\t\tvar orderedCells = [];\n\t\t\t\n\t\t\tfor (var j = 0; j < rank.length; j++)\n\t\t\t{\n\t\t\t\tvar cell = rank[j];\n\t\t\t\tvar tempRank = cell.getGeneralPurposeVariable(i);\n\t\t\t\t\n\t\t\t\t// FIXME: Workaround to avoid negative tempRanks\n\t\t\t\tif (tempRank < 0)\n\t\t\t\t{\n\t\t\t\t\ttempRank = j;\n\t\t\t\t}\n\t\t\t\torderedCells[tempRank] = cell;\n\t\t\t}\n\t\t\t\n\t\t\tvar leftCellAboveConnections = null;\n\t\t\tvar leftCellBelowConnections = null;\n\t\t\tvar rightCellAboveConnections = null;\n\t\t\tvar rightCellBelowConnections = null;\n\t\t\t\n\t\t\tvar leftAbovePositions = null;\n\t\t\tvar leftBelowPositions = null;\n\t\t\tvar rightAbovePositions = null;\n\t\t\tvar rightBelowPositions = null;\n\t\t\t\n\t\t\tvar leftCell = null;\n\t\t\tvar rightCell = null;\n\n\t\t\tfor (var j = 0; j < (rank.length - 1); j++)\n\t\t\t{\n\t\t\t\t// For each intra-rank adjacent pair of cells\n\t\t\t\t// see if swapping them around would reduce the\n\t\t\t\t// number of edges crossing they cause in total\n\t\t\t\t// On every cell pair except the first on each rank, we\n\t\t\t\t// can save processing using the previous values for the\n\t\t\t\t// right cell on the new left cell\n\t\t\t\tif (j == 0)\n\t\t\t\t{\n\t\t\t\t\tleftCell = orderedCells[j];\n\t\t\t\t\tleftCellAboveConnections = leftCell\n\t\t\t\t\t\t\t.getNextLayerConnectedCells(i);\n\t\t\t\t\tleftCellBelowConnections = leftCell\n\t\t\t\t\t\t\t.getPreviousLayerConnectedCells(i);\n\t\t\t\t\tleftAbovePositions = [];\n\t\t\t\t\tleftBelowPositions = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < leftCellAboveConnections.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tleftAbovePositions[k] = leftCellAboveConnections[k].getGeneralPurposeVariable(i + 1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < leftCellBelowConnections.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tleftBelowPositions[k] = leftCellBelowConnections[k].getGeneralPurposeVariable(i - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleftCellAboveConnections = rightCellAboveConnections;\n\t\t\t\t\tleftCellBelowConnections = rightCellBelowConnections;\n\t\t\t\t\tleftAbovePositions = rightAbovePositions;\n\t\t\t\t\tleftBelowPositions = rightBelowPositions;\n\t\t\t\t\tleftCell = rightCell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trightCell = orderedCells[j + 1];\n\t\t\t\trightCellAboveConnections = rightCell\n\t\t\t\t\t\t.getNextLayerConnectedCells(i);\n\t\t\t\trightCellBelowConnections = rightCell\n\t\t\t\t\t\t.getPreviousLayerConnectedCells(i);\n\n\t\t\t\trightAbovePositions = [];\n\t\t\t\trightBelowPositions = [];\n\n\t\t\t\tfor (var k = 0; k < rightCellAboveConnections.length; k++)\n\t\t\t\t{\n\t\t\t\t\trightAbovePositions[k] = rightCellAboveConnections[k].getGeneralPurposeVariable(i + 1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < rightCellBelowConnections.length; k++)\n\t\t\t\t{\n\t\t\t\t\trightBelowPositions[k] = rightCellBelowConnections[k].getGeneralPurposeVariable(i - 1);\n\t\t\t\t}\n\n\t\t\t\tvar totalCurrentCrossings = 0;\n\t\t\t\tvar totalSwitchedCrossings = 0;\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < leftAbovePositions.length; k++)\n\t\t\t\t{\n\t\t\t\t\tfor (var ik = 0; ik < rightAbovePositions.length; ik++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (leftAbovePositions[k] > rightAbovePositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalCurrentCrossings++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (leftAbovePositions[k] < rightAbovePositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalSwitchedCrossings++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < leftBelowPositions.length; k++)\n\t\t\t\t{\n\t\t\t\t\tfor (var ik = 0; ik < rightBelowPositions.length; ik++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (leftBelowPositions[k] > rightBelowPositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalCurrentCrossings++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (leftBelowPositions[k] < rightBelowPositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalSwitchedCrossings++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((totalSwitchedCrossings < totalCurrentCrossings) ||\n\t\t\t\t\t(totalSwitchedCrossings == totalCurrentCrossings &&\n\t\t\t\t\tnudge))\n\t\t\t\t{\n\t\t\t\t\tvar temp = leftCell.getGeneralPurposeVariable(i);\n\t\t\t\t\tleftCell.setGeneralPurposeVariable(i, rightCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(i));\n\t\t\t\t\trightCell.setGeneralPurposeVariable(i, temp);\n\n\t\t\t\t\t// With this pair exchanged we have to switch all of\n\t\t\t\t\t// values for the left cell to the right cell so the\n\t\t\t\t\t// next iteration for this rank uses it as the left\n\t\t\t\t\t// cell again\n\t\t\t\t\trightCellAboveConnections = leftCellAboveConnections;\n\t\t\t\t\trightCellBelowConnections = leftCellBelowConnections;\n\t\t\t\t\trightAbovePositions = leftAbovePositions;\n\t\t\t\t\trightBelowPositions = leftBelowPositions;\n\t\t\t\t\trightCell = leftCell;\n\t\t\t\t\t\n\t\t\t\t\tif (!nudge)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Don't count nudges as improvement or we'll end\n\t\t\t\t\t\t// up stuck in two combinations and not finishing\n\t\t\t\t\t\t// as early as we should\n\t\t\t\t\t\timproved = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: weightedMedian\n * \n * Sweeps up or down the layout attempting to minimise the median placement\n * of connected cells on adjacent ranks\n * \n * Parameters:\n * \n * iteration - the iteration number of the main loop\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.weightedMedian = function(iteration, model)\n{\n\t// Reverse sweep direction each time through this method\n\tvar downwardSweep = (iteration % 2 == 0);\n\tif (downwardSweep)\n\t{\n\t\tfor (var j = model.maxRank - 1; j >= 0; j--)\n\t\t{\n\t\t\tthis.medianRank(j, downwardSweep);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var j = 1; j < model.maxRank; j++)\n\t\t{\n\t\t\tthis.medianRank(j, downwardSweep);\n\t\t}\n\t}\n};\n\n/**\n * Function: medianRank\n * \n * Attempts to minimise the median placement of connected cells on this rank\n * and one of the adjacent ranks\n * \n * Parameters:\n * \n * rankValue - the layer number of this rank\n * downwardSweep - whether or not this is a downward sweep through the graph\n */\nmxMedianHybridCrossingReduction.prototype.medianRank = function(rankValue, downwardSweep)\n{\n\tvar numCellsForRank = this.nestedBestRanks[rankValue].length;\n\tvar medianValues = [];\n\tvar reservedPositions = [];\n\n\tfor (var i = 0; i < numCellsForRank; i++)\n\t{\n\t\tvar cell = this.nestedBestRanks[rankValue][i];\n\t\tvar sorterEntry = new MedianCellSorter();\n\t\tsorterEntry.cell = cell;\n\n\t\t// Flip whether or not equal medians are flipped on up and down\n\t\t// sweeps\n\t\t// TODO re-implement some kind of nudge\n\t\t// medianValues[i].nudge = !downwardSweep;\n\t\tvar nextLevelConnectedCells;\n\t\t\n\t\tif (downwardSweep)\n\t\t{\n\t\t\tnextLevelConnectedCells = cell\n\t\t\t\t\t.getNextLayerConnectedCells(rankValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLevelConnectedCells = cell\n\t\t\t\t\t.getPreviousLayerConnectedCells(rankValue);\n\t\t}\n\t\t\n\t\tvar nextRankValue;\n\t\t\n\t\tif (downwardSweep)\n\t\t{\n\t\t\tnextRankValue = rankValue + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextRankValue = rankValue - 1;\n\t\t}\n\n\t\tif (nextLevelConnectedCells != null\n\t\t\t\t&& nextLevelConnectedCells.length != 0)\n\t\t{\n\t\t\tsorterEntry.medianValue = this.medianValue(\n\t\t\t\t\tnextLevelConnectedCells, nextRankValue);\n\t\t\tmedianValues.push(sorterEntry);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Nodes with no adjacent vertices are flagged in the reserved array\n\t\t\t// to indicate they should be left in their current position.\n\t\t\treservedPositions[cell.getGeneralPurposeVariable(rankValue)] = true;\n\t\t}\n\t}\n\t\n\tmedianValues.sort(MedianCellSorter.prototype.compare);\n\t\n\t// Set the new position of each node within the rank using\n\t// its temp variable\n\tfor (var i = 0; i < numCellsForRank; i++)\n\t{\n\t\tif (reservedPositions[i] == null)\n\t\t{\n\t\t\tvar cell = medianValues.shift().cell;\n\t\t\tcell.setGeneralPurposeVariable(rankValue, i);\n\t\t}\n\t}\n};\n\n/**\n * Function: medianValue\n * \n * Calculates the median rank order positioning for the specified cell using\n * the connected cells on the specified rank. Returns the median rank\n * ordering value of the connected cells\n * \n * Parameters:\n * \n * connectedCells - the cells on the specified rank connected to the\n * specified cell\n * rankValue - the rank that the connected cell lie upon\n */\nmxMedianHybridCrossingReduction.prototype.medianValue = function(connectedCells, rankValue)\n{\n\tvar medianValues = [];\n\tvar arrayCount = 0;\n\t\n\tfor (var i = 0; i < connectedCells.length; i++)\n\t{\n\t\tvar cell = connectedCells[i];\n\t\tmedianValues[arrayCount++] = cell.getGeneralPurposeVariable(rankValue);\n\t}\n\n\t// Sort() sorts lexicographically by default (i.e. 11 before 9) so force\n\t// numerical order sort\n\tmedianValues.sort(function(a,b){return a - b;});\n\t\n\tif (arrayCount % 2 == 1)\n\t{\n\t\t// For odd numbers of adjacent vertices return the median\n\t\treturn medianValues[Math.floor(arrayCount / 2)];\n\t}\n\telse if (arrayCount == 2)\n\t{\n\t\treturn ((medianValues[0] + medianValues[1]) / 2.0);\n\t}\n\telse\n\t{\n\t\tvar medianPoint = arrayCount / 2;\n\t\tvar leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n\t\tvar rightMedian = medianValues[arrayCount - 1]\n\t\t\t\t- medianValues[medianPoint];\n\n\t\treturn (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint]\n\t\t\t\t* leftMedian)\n\t\t\t\t/ (leftMedian + rightMedian);\n\t}\n};\n\n/**\n * Class: MedianCellSorter\n * \n * A utility class used to track cells whilst sorting occurs on the median\n * values. Does not violate (x.compareTo(y)==0) == (x.equals(y))\n *\n * Constructor: MedianCellSorter\n * \n * Constructs a new median cell sorter.\n */\nfunction MedianCellSorter()\n{\n\t// empty\n};\n\n/**\n * Variable: medianValue\n * \n * The weighted value of the cell stored.\n */\nMedianCellSorter.prototype.medianValue = 0;\n\n/**\n * Variable: cell\n * \n * The cell whose median value is being calculated\n */\nMedianCellSorter.prototype.cell = false;\n\n/**\n * Function: compare\n * \n * Compares two MedianCellSorters.\n */\nMedianCellSorter.prototype.compare = function(a, b)\n{\n\tif (a != null && b != null)\n\t{\n\t\tif (b.medianValue > a.medianValue)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t\telse if (b.medianValue < a.medianValue)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMinimumCycleRemover\n * \n * An implementation of the first stage of the Sugiyama layout. Straightforward\n * longest path calculation of layer assignment\n * \n * Constructor: mxMinimumCycleRemover\n *\n * Creates a cycle remover for the given internal model.\n */\nfunction mxMinimumCycleRemover(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxMinimumCycleRemover.prototype = new mxHierarchicalLayoutStage();\nmxMinimumCycleRemover.prototype.constructor = mxMinimumCycleRemover;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxMinimumCycleRemover.prototype.layout = null;\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxMinimumCycleRemover.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\tvar seenNodes = new Object();\n\tvar unseenNodesArray = model.vertexMapper.getValues();\n\tvar unseenNodes = new Object();\n\t\n\tfor (var i = 0; i < unseenNodesArray.length; i++)\n\t{\n\t\tunseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n\t}\n\t\n\t// Perform a dfs through the internal model. If a cycle is found,\n\t// reverse it.\n\tvar rootsArray = null;\n\t\n\tif (model.roots != null)\n\t{\n\t\tvar modelRoots = model.roots;\n\t\trootsArray = [];\n\t\t\n\t\tfor (var i = 0; i < modelRoots.length; i++)\n\t\t{\n\t\t\trootsArray[i] = model.vertexMapper.get(modelRoots[i]);\n\t\t}\n\t}\n\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\tif (node.isAncestor(parent))\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t}\n\t\t\n\t\tseenNodes[node.id] = node;\n\t\tdelete unseenNodes[node.id];\n\t}, rootsArray, true, null);\n\n\t// If there are any nodes that should be nodes that the dfs can miss\n\t// these need to be processed with the dfs and the roots assigned\n\t// correctly to form a correct internal model\n\tvar seenNodesCopy = mxUtils.clone(seenNodes, null, true);\n\n\t// Pick a random cell and dfs from it\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\tif (node.isAncestor(parent))\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t}\n\t\t\n\t\tseenNodes[node.id] = node;\n\t\tdelete unseenNodes[node.id];\n\t}, unseenNodes, true, seenNodesCopy);\n};\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxCoordinateAssignment\n * \n * Sets the horizontal locations of node and edge dummy nodes on each layer.\n * Uses median down and up weighings as well as heuristics to straighten edges as\n * far as possible.\n * \n * Constructor: mxCoordinateAssignment\n *\n * Creates a coordinate assignment.\n * \n * Arguments:\n * \n * intraCellSpacing - the minimum buffer between cells on the same rank\n * interRankCellSpacing - the minimum distance between cells on adjacent ranks\n * orientation - the position of the root node(s) relative to the graph\n * initialX - the leftmost coordinate node placement starts at\n */\nfunction mxCoordinateAssignment(layout, intraCellSpacing, interRankCellSpacing,\n\torientation, initialX, parallelEdgeSpacing)\n{\n\tthis.layout = layout;\n\tthis.intraCellSpacing = intraCellSpacing;\n\tthis.interRankCellSpacing = interRankCellSpacing;\n\tthis.orientation = orientation;\n\tthis.initialX = initialX;\n\tthis.parallelEdgeSpacing = parallelEdgeSpacing;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxCoordinateAssignment.prototype = new mxHierarchicalLayoutStage();\nmxCoordinateAssignment.prototype.constructor = mxCoordinateAssignment;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxCoordinateAssignment.prototype.layout = null;\n\n/**\n * Variable: intraCellSpacing\n * \n * The minimum buffer between cells on the same rank. Default is 30.\n */\nmxCoordinateAssignment.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The minimum distance between cells on adjacent ranks. Default is 100.\n */\nmxCoordinateAssignment.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges.\n * Default is 10.\n */\nmxCoordinateAssignment.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: maxIterations\n * \n * The number of heuristic iterations to run. Default is 8.\n */\nmxCoordinateAssignment.prototype.maxIterations = 8;\n\n/**\n * Variable: prefHozEdgeSep\n * \n * The preferred horizontal distance between edges exiting a vertex Default is 5.\n */\nmxCoordinateAssignment.prototype.prefHozEdgeSep = 5;\n\n/**\n * Variable: prefVertEdgeOff\n * \n * The preferred vertical offset between edges exiting a vertex Default is 2.\n */\nmxCoordinateAssignment.prototype.prefVertEdgeOff = 2;\n\n/**\n * Variable: minEdgeJetty\n * \n * The minimum distance for an edge jetty from a vertex Default is 12.\n */\nmxCoordinateAssignment.prototype.minEdgeJetty = 12;\n\n/**\n * Variable: channelBuffer\n * \n * The size of the vertical buffer in the center of inter-rank channels\n * where edge control points should not be placed Default is 4.\n */\nmxCoordinateAssignment.prototype.channelBuffer = 4;\n\n/**\n * Variable: jettyPositions\n * \n * Map of internal edges and (x,y) pair of positions of the start and end jetty\n * for that edge where it connects to the source and target vertices.\n * Note this should technically be a WeakHashMap, but since JS does not\n * have an equivalent, housekeeping must be performed before using.\n * i.e. check all edges are still in the model and clear the values.\n * Note that the y co-ord is the offset of the jetty, not the\n * absolute point\n */\nmxCoordinateAssignment.prototype.jettyPositions = null;\n\n/**\n * Variable: orientation\n * \n * The position of the root ( start ) node(s) relative to the rest of the\n * laid out graph. Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxCoordinateAssignment.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: initialX\n * \n * The minimum x position node placement starts at\n */\nmxCoordinateAssignment.prototype.initialX = null;\n\n/**\n * Variable: limitX\n * \n * The maximum x value this positioning lays up to\n */\nmxCoordinateAssignment.prototype.limitX = null;\n\n/**\n * Variable: currentXDelta\n * \n * The sum of x-displacements for the current iteration\n */\nmxCoordinateAssignment.prototype.currentXDelta = null;\n\n/**\n * Variable: widestRank\n * \n * The rank that has the widest x position\n */\nmxCoordinateAssignment.prototype.widestRank = null;\n\n/**\n * Variable: rankTopY\n * \n * Internal cache of top-most values of Y for each rank\n */\nmxCoordinateAssignment.prototype.rankTopY = null;\n\n/**\n * Variable: rankBottomY\n * \n * Internal cache of bottom-most value of Y for each rank\n */\nmxCoordinateAssignment.prototype.rankBottomY = null;\n\n/**\n * Variable: widestRankValue\n * \n * The X-coordinate of the edge of the widest rank\n */\nmxCoordinateAssignment.prototype.widestRankValue = null;\n\n/**\n * Variable: rankWidths\n * \n * The width of all the ranks\n */\nmxCoordinateAssignment.prototype.rankWidths = null;\n\n/**\n * Variable: rankY\n * \n * The Y-coordinate of all the ranks\n */\nmxCoordinateAssignment.prototype.rankY = null;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxCoordinateAssignment.prototype.fineTuning = true;\n\n/**\n * Variable: nextLayerConnectedCache\n * \n * A store of connections to the layer above for speed\n */\nmxCoordinateAssignment.prototype.nextLayerConnectedCache = null;\n\n/**\n * Variable: previousLayerConnectedCache\n * \n * A store of connections to the layer below for speed\n */\nmxCoordinateAssignment.prototype.previousLayerConnectedCache = null;\n\n/**\n * Variable: groupPadding\n * \n * Padding added to resized parents Default is 10.\n */\nmxCoordinateAssignment.prototype.groupPadding = 10;\n\n/**\n * Utility method to display current positions\n */\nmxCoordinateAssignment.prototype.printStatus = function()\n{\n\tvar model = this.layout.getModel();\n\tmxLog.show();\n\n\tmxLog.writeln('======Coord assignment debug=======');\n\n\tfor (var j = 0; j < model.ranks.length; j++)\n\t{\n\t\tmxLog.write('Rank ', j, ' : ' );\n\t\tvar rank = model.ranks[j];\n\t\t\n\t\tfor (var k = 0; k < rank.length; k++)\n\t\t{\n\t\t\tvar cell = rank[k];\n\t\t\t\n\t\t\tmxLog.write(cell.getGeneralPurposeVariable(j), '  ');\n\t\t}\n\t\tmxLog.writeln();\n\t}\n\t\n\tmxLog.writeln('====================================');\n};\n\n/**\n * Function: execute\n * \n * A basic horizontal coordinate assignment algorithm\n */\nmxCoordinateAssignment.prototype.execute = function(parent)\n{\n\tthis.jettyPositions = Object();\n\tvar model = this.layout.getModel();\n\tthis.currentXDelta = 0.0;\n\n\tthis.initialCoords(this.layout.getGraph(), model);\n\t\n//\tthis.printStatus();\n\t\n\tif (this.fineTuning)\n\t{\n\t\tthis.minNode(model);\n\t}\n\t\n\tvar bestXDelta = 100000000.0;\n\t\n\tif (this.fineTuning)\n\t{\n\t\tfor (var i = 0; i < this.maxIterations; i++)\n\t\t{\n//\t\t\tthis.printStatus();\n\t\t\n\t\t\t// Median Heuristic\n\t\t\tif (i != 0)\n\t\t\t{\n\t\t\t\tthis.medianPos(i, model);\n\t\t\t\tthis.minNode(model);\n\t\t\t}\n\t\t\t\n\t\t\t// if the total offset is less for the current positioning,\n\t\t\t// there are less heavily angled edges and so the current\n\t\t\t// positioning is used\n\t\t\tif (this.currentXDelta < bestXDelta)\n\t\t\t{\n\t\t\t\tfor (var j = 0; j < model.ranks.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\t\tcell.setX(j, cell.getGeneralPurposeVariable(j));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbestXDelta = this.currentXDelta;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Restore the best positions\n\t\t\t\tfor (var j = 0; j < model.ranks.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\t\tcell.setGeneralPurposeVariable(j, cell.getX(j));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.minPath(this.layout.getGraph(), model);\n\t\t\t\n\t\t\tthis.currentXDelta = 0;\n\t\t}\n\t}\n\t\n\tthis.setCellLocations(this.layout.getGraph(), model);\n};\n\n/**\n * Function: minNode\n * \n * Performs one median positioning sweep in both directions\n */\nmxCoordinateAssignment.prototype.minNode = function(model)\n{\n\t// Queue all nodes\n\tvar nodeList = [];\n\t\n\t// Need to be able to map from cell to cellWrapper\n\tvar map = new mxDictionary();\n\tvar rank = [];\n\t\n\tfor (var i = 0; i <= model.maxRank; i++)\n\t{\n\t\trank[i] = model.ranks[i];\n\t\t\n\t\tfor (var j = 0; j < rank[i].length; j++)\n\t\t{\n\t\t\t// Use the weight to store the rank and visited to store whether\n\t\t\t// or not the cell is in the list\n\t\t\tvar node = rank[i][j];\n\t\t\tvar nodeWrapper = new WeightedCellSorter(node, i);\n\t\t\tnodeWrapper.rankIndex = j;\n\t\t\tnodeWrapper.visited = true;\n\t\t\tnodeList.push(nodeWrapper);\n\t\t\t\n\t\t\tmap.put(node, nodeWrapper);\n\t\t}\n\t}\n\t\n\t// Set a limit of the maximum number of times we will access the queue\n\t// in case a loop appears\n\tvar maxTries = nodeList.length * 10;\n\tvar count = 0;\n\t\n\t// Don't move cell within this value of their median\n\tvar tolerance = 1;\n\t\n\twhile (nodeList.length > 0 && count <= maxTries)\n\t{\n\t\tvar cellWrapper = nodeList.shift();\n\t\tvar cell = cellWrapper.cell;\n\t\t\n\t\tvar rankValue = cellWrapper.weightedValue;\n\t\tvar rankIndex = parseInt(cellWrapper.rankIndex);\n\t\t\n\t\tvar nextLayerConnectedCells = cell.getNextLayerConnectedCells(rankValue);\n\t\tvar previousLayerConnectedCells = cell.getPreviousLayerConnectedCells(rankValue);\n\t\t\n\t\tvar numNextLayerConnected = nextLayerConnectedCells.length;\n\t\tvar numPreviousLayerConnected = previousLayerConnectedCells.length;\n\n\t\tvar medianNextLevel = this.medianXValue(nextLayerConnectedCells,\n\t\t\t\trankValue + 1);\n\t\tvar medianPreviousLevel = this.medianXValue(previousLayerConnectedCells,\n\t\t\t\trankValue - 1);\n\n\t\tvar numConnectedNeighbours = numNextLayerConnected\n\t\t\t\t+ numPreviousLayerConnected;\n\t\tvar currentPosition = cell.getGeneralPurposeVariable(rankValue);\n\t\tvar cellMedian = currentPosition;\n\t\t\n\t\tif (numConnectedNeighbours > 0)\n\t\t{\n\t\t\tcellMedian = (medianNextLevel * numNextLayerConnected + medianPreviousLevel\n\t\t\t\t\t* numPreviousLayerConnected)\n\t\t\t\t\t/ numConnectedNeighbours;\n\t\t}\n\n\t\t// Flag storing whether or not position has changed\n\t\tvar positionChanged = false;\n\t\t\n\t\tif (cellMedian < currentPosition - tolerance)\n\t\t{\n\t\t\tif (rankIndex == 0)\n\t\t\t{\n\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\tpositionChanged = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar leftCell = rank[rankValue][rankIndex - 1];\n\t\t\t\tvar leftLimit = leftCell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue);\n\t\t\t\tleftLimit = leftLimit + leftCell.width / 2\n\t\t\t\t\t\t+ this.intraCellSpacing + cell.width / 2;\n\n\t\t\t\tif (leftLimit < cellMedian)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t\telse if (leftLimit < cell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t- tolerance)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, leftLimit);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (cellMedian > currentPosition + tolerance)\n\t\t{\n\t\t\tvar rankSize = rank[rankValue].length;\n\t\t\t\n\t\t\tif (rankIndex == rankSize - 1)\n\t\t\t{\n\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\tpositionChanged = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar rightCell = rank[rankValue][rankIndex + 1];\n\t\t\t\tvar rightLimit = rightCell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue);\n\t\t\t\trightLimit = rightLimit - rightCell.width / 2\n\t\t\t\t\t\t- this.intraCellSpacing - cell.width / 2;\n\t\t\t\t\n\t\t\t\tif (rightLimit > cellMedian)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t\telse if (rightLimit > cell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t+ tolerance)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, rightLimit);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (positionChanged)\n\t\t{\n\t\t\t// Add connected nodes to map and list\n\t\t\tfor (var i = 0; i < nextLayerConnectedCells.length; i++)\n\t\t\t{\n\t\t\t\tvar connectedCell = nextLayerConnectedCells[i];\n\t\t\t\tvar connectedCellWrapper = map.get(connectedCell);\n\t\t\t\t\n\t\t\t\tif (connectedCellWrapper != null)\n\t\t\t\t{\n\t\t\t\t\tif (connectedCellWrapper.visited == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tconnectedCellWrapper.visited = true;\n\t\t\t\t\t\tnodeList.push(connectedCellWrapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add connected nodes to map and list\n\t\t\tfor (var i = 0; i < previousLayerConnectedCells.length; i++)\n\t\t\t{\n\t\t\t\tvar connectedCell = previousLayerConnectedCells[i];\n\t\t\t\tvar connectedCellWrapper = map.get(connectedCell);\n\n\t\t\t\tif (connectedCellWrapper != null)\n\t\t\t\t{\n\t\t\t\t\tif (connectedCellWrapper.visited == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tconnectedCellWrapper.visited = true;\n\t\t\t\t\t\tnodeList.push(connectedCellWrapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tcellWrapper.visited = false;\n\t\tcount++;\n\t}\n};\n\n/**\n * Function: medianPos\n * \n * Performs one median positioning sweep in one direction\n * \n * Parameters:\n * \n * i - the iteration of the whole process\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.medianPos = function(i, model)\n{\n\t// Reverse sweep direction each time through this method\n\tvar downwardSweep = (i % 2 == 0);\n\t\n\tif (downwardSweep)\n\t{\n\t\tfor (var j = model.maxRank; j > 0; j--)\n\t\t{\n\t\t\tthis.rankMedianPosition(j - 1, model, j);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var j = 0; j < model.maxRank - 1; j++)\n\t\t{\n\t\t\tthis.rankMedianPosition(j + 1, model, j);\n\t\t}\n\t}\n};\n\n/**\n * Function: rankMedianPosition\n * \n * Performs median minimisation over one rank.\n * \n * Parameters:\n * \n * rankValue - the layer number of this rank\n * model - an internal model of the hierarchical layout\n * nextRankValue - the layer number whose connected cels are to be laid out\n * relative to\n */\nmxCoordinateAssignment.prototype.rankMedianPosition = function(rankValue, model, nextRankValue)\n{\n\tvar rank = model.ranks[rankValue];\n\n\t// Form an array of the order in which the cell are to be processed\n\t// , the order is given by the weighted sum of the in or out edges,\n\t// depending on whether we're traveling up or down the hierarchy.\n\tvar weightedValues = [];\n\tvar cellMap = new Object();\n\n\tfor (var i = 0; i < rank.length; i++)\n\t{\n\t\tvar currentCell = rank[i];\n\t\tweightedValues[i] = new WeightedCellSorter();\n\t\tweightedValues[i].cell = currentCell;\n\t\tweightedValues[i].rankIndex = i;\n\t\tcellMap[currentCell.id] = weightedValues[i];\n\t\tvar nextLayerConnectedCells = null;\n\t\t\n\t\tif (nextRankValue < rankValue)\n\t\t{\n\t\t\tnextLayerConnectedCells = currentCell\n\t\t\t\t\t.getPreviousLayerConnectedCells(rankValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLayerConnectedCells = currentCell\n\t\t\t\t\t.getNextLayerConnectedCells(rankValue);\n\t\t}\n\n\t\t// Calculate the weighing based on this node type and those this\n\t\t// node is connected to on the next layer\n\t\tweightedValues[i].weightedValue = this.calculatedWeightedValue(\n\t\t\t\tcurrentCell, nextLayerConnectedCells);\n\t}\n\n\tweightedValues.sort(WeightedCellSorter.prototype.compare);\n\n\t// Set the new position of each node within the rank using\n\t// its temp variable\n\t\n\tfor (var i = 0; i < weightedValues.length; i++)\n\t{\n\t\tvar numConnectionsNextLevel = 0;\n\t\tvar cell = weightedValues[i].cell;\n\t\tvar nextLayerConnectedCells = null;\n\t\tvar medianNextLevel = 0;\n\n\t\tif (nextRankValue < rankValue)\n\t\t{\n\t\t\tnextLayerConnectedCells = cell.getPreviousLayerConnectedCells(\n\t\t\t\t\trankValue).slice();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLayerConnectedCells = cell.getNextLayerConnectedCells(\n\t\t\t\t\trankValue).slice();\n\t\t}\n\n\t\tif (nextLayerConnectedCells != null)\n\t\t{\n\t\t\tnumConnectionsNextLevel = nextLayerConnectedCells.length;\n\t\t\t\n\t\t\tif (numConnectionsNextLevel > 0)\n\t\t\t{\n\t\t\t\tmedianNextLevel = this.medianXValue(nextLayerConnectedCells,\n\t\t\t\t\t\tnextRankValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// For case of no connections on the next level set the\n\t\t\t\t// median to be the current position and try to be\n\t\t\t\t// positioned there\n\t\t\t\tmedianNextLevel = cell.getGeneralPurposeVariable(rankValue);\n\t\t\t}\n\t\t}\n\n\t\tvar leftBuffer = 0.0;\n\t\tvar leftLimit = -100000000.0;\n\t\t\n\t\tfor (var j = weightedValues[i].rankIndex - 1; j >= 0;)\n\t\t{\n\t\t\tvar weightedValue = cellMap[rank[j].id];\n\t\t\t\n\t\t\tif (weightedValue != null)\n\t\t\t{\n\t\t\t\tvar leftCell = weightedValue.cell;\n\t\t\t\t\n\t\t\t\tif (weightedValue.visited)\n\t\t\t\t{\n\t\t\t\t\t// The left limit is the right hand limit of that\n\t\t\t\t\t// cell plus any allowance for unallocated cells\n\t\t\t\t\t// in-between\n\t\t\t\t\tleftLimit = leftCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t\t+ leftCell.width\n\t\t\t\t\t\t\t/ 2.0\n\t\t\t\t\t\t\t+ this.intraCellSpacing\n\t\t\t\t\t\t\t+ leftBuffer + cell.width / 2.0;\n\t\t\t\t\tj = -1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleftBuffer += leftCell.width + this.intraCellSpacing;\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar rightBuffer = 0.0;\n\t\tvar rightLimit = 100000000.0;\n\t\t\n\t\tfor (var j = weightedValues[i].rankIndex + 1; j < weightedValues.length;)\n\t\t{\n\t\t\tvar weightedValue = cellMap[rank[j].id];\n\t\t\t\n\t\t\tif (weightedValue != null)\n\t\t\t{\n\t\t\t\tvar rightCell = weightedValue.cell;\n\t\t\t\t\n\t\t\t\tif (weightedValue.visited)\n\t\t\t\t{\n\t\t\t\t\t// The left limit is the right hand limit of that\n\t\t\t\t\t// cell plus any allowance for unallocated cells\n\t\t\t\t\t// in-between\n\t\t\t\t\trightLimit = rightCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t\t- rightCell.width\n\t\t\t\t\t\t\t/ 2.0\n\t\t\t\t\t\t\t- this.intraCellSpacing\n\t\t\t\t\t\t\t- rightBuffer - cell.width / 2.0;\n\t\t\t\t\tj = weightedValues.length;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\trightBuffer += rightCell.width + this.intraCellSpacing;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (medianNextLevel >= leftLimit && medianNextLevel <= rightLimit)\n\t\t{\n\t\t\tcell.setGeneralPurposeVariable(rankValue, medianNextLevel);\n\t\t}\n\t\telse if (medianNextLevel < leftLimit)\n\t\t{\n\t\t\t// Couldn't place at median value, place as close to that\n\t\t\t// value as possible\n\t\t\tcell.setGeneralPurposeVariable(rankValue, leftLimit);\n\t\t\tthis.currentXDelta += leftLimit - medianNextLevel;\n\t\t}\n\t\telse if (medianNextLevel > rightLimit)\n\t\t{\n\t\t\t// Couldn't place at median value, place as close to that\n\t\t\t// value as possible\n\t\t\tcell.setGeneralPurposeVariable(rankValue, rightLimit);\n\t\t\tthis.currentXDelta += medianNextLevel - rightLimit;\n\t\t}\n\n\t\tweightedValues[i].visited = true;\n\t}\n};\n\n/**\n * Function: calculatedWeightedValue\n * \n * Calculates the priority the specified cell has based on the type of its\n * cell and the cells it is connected to on the next layer\n * \n * Parameters:\n * \n * currentCell - the cell whose weight is to be calculated\n * collection - the cells the specified cell is connected to\n */\nmxCoordinateAssignment.prototype.calculatedWeightedValue = function(currentCell, collection)\n{\n\tvar totalWeight = 0;\n\t\n\tfor (var i = 0; i < collection.length; i++)\n\t{\n\t\tvar cell = collection[i];\n\n\t\tif (currentCell.isVertex() && cell.isVertex())\n\t\t{\n\t\t\ttotalWeight++;\n\t\t}\n\t\telse if (currentCell.isEdge() && cell.isEdge())\n\t\t{\n\t\t\ttotalWeight += 8;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttotalWeight += 2;\n\t\t}\n\t}\n\n\treturn totalWeight;\n};\n\n/**\n * Function: medianXValue\n * \n * Calculates the median position of the connected cell on the specified\n * rank\n * \n * Parameters:\n * \n * connectedCells - the cells the candidate connects to on this level\n * rankValue - the layer number of this rank\n */\nmxCoordinateAssignment.prototype.medianXValue = function(connectedCells, rankValue)\n{\n\tif (connectedCells.length == 0)\n\t{\n\t\treturn 0;\n\t}\n\n\tvar medianValues = [];\n\n\tfor (var i = 0; i < connectedCells.length; i++)\n\t{\n\t\tmedianValues[i] = connectedCells[i].getGeneralPurposeVariable(rankValue);\n\t}\n\n\tmedianValues.sort(function(a,b){return a - b;});\n\t\n\tif (connectedCells.length % 2 == 1)\n\t{\n\t\t// For odd numbers of adjacent vertices return the median\n\t\treturn medianValues[Math.floor(connectedCells.length / 2)];\n\t}\n\telse\n\t{\n\t\tvar medianPoint = connectedCells.length / 2;\n\t\tvar leftMedian = medianValues[medianPoint - 1];\n\t\tvar rightMedian = medianValues[medianPoint];\n\n\t\treturn ((leftMedian + rightMedian) / 2);\n\t}\n};\n\n/**\n * Function: initialCoords\n * \n * Sets up the layout in an initial positioning. The ranks are all centered\n * as much as possible along the middle vertex in each rank. The other cells\n * are then placed as close as possible on either side.\n * \n * Parameters:\n * \n * facade - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.initialCoords = function(facade, model)\n{\n\tthis.calculateWidestRank(facade, model);\n\n\t// Sweep up and down from the widest rank\n\tfor (var i = this.widestRank; i >= 0; i--)\n\t{\n\t\tif (i < model.maxRank)\n\t\t{\n\t\t\tthis.rankCoordinates(i, facade, model);\n\t\t}\n\t}\n\n\tfor (var i = this.widestRank+1; i <= model.maxRank; i++)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tthis.rankCoordinates(i, facade, model);\n\t\t}\n\t}\n};\n\n/**\n * Function: rankCoordinates\n * \n * Sets up the layout in an initial positioning. All the first cells in each\n * rank are moved to the left and the rest of the rank inserted as close\n * together as their size and buffering permits. This method works on just\n * the specified rank.\n * \n * Parameters:\n * \n * rankValue - the current rank being processed\n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.rankCoordinates = function(rankValue, graph, model)\n{\n\tvar rank = model.ranks[rankValue];\n\tvar maxY = 0.0;\n\tvar localX = this.initialX + (this.widestRankValue - this.rankWidths[rankValue])\n\t\t\t/ 2;\n\n\t// Store whether or not any of the cells' bounds were unavailable so\n\t// to only issue the warning once for all cells\n\tvar boundsWarning = false;\n\t\n\tfor (var i = 0; i < rank.length; i++)\n\t{\n\t\tvar node = rank[i];\n\t\t\n\t\tif (node.isVertex())\n\t\t{\n\t\t\tvar bounds = this.layout.getVertexBounds(node.cell);\n\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnode.width = bounds.width;\n\t\t\t\t\tnode.height = bounds.height;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.width = bounds.height;\n\t\t\t\t\tnode.height = bounds.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tboundsWarning = true;\n\t\t\t}\n\n\t\t\tmaxY = Math.max(maxY, node.height);\n\t\t}\n\t\telse if (node.isEdge())\n\t\t{\n\t\t\t// The width is the number of additional parallel edges\n\t\t\t// time the parallel edge spacing\n\t\t\tvar numEdges = 1;\n\n\t\t\tif (node.edges != null)\n\t\t\t{\n\t\t\t\tnumEdges = node.edges.length;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxLog.warn('edge.edges is null');\n\t\t\t}\n\n\t\t\tnode.width = (numEdges - 1) * this.parallelEdgeSpacing;\n\t\t}\n\n\t\t// Set the initial x-value as being the best result so far\n\t\tlocalX += node.width / 2.0;\n\t\tnode.setX(rankValue, localX);\n\t\tnode.setGeneralPurposeVariable(rankValue, localX);\n\t\tlocalX += node.width / 2.0;\n\t\tlocalX += this.intraCellSpacing;\n\t}\n\n\tif (boundsWarning == true)\n\t{\n\t\tmxLog.warn('At least one cell has no bounds');\n\t}\n};\n\n/**\n * Function: calculateWidestRank\n * \n * Calculates the width rank in the hierarchy. Also set the y value of each\n * rank whilst performing the calculation\n * \n * Parameters:\n * \n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.calculateWidestRank = function(graph, model)\n{\n\t// Starting y co-ordinate\n\tvar y = -this.interRankCellSpacing;\n\t\n\t// Track the widest cell on the last rank since the y\n\t// difference depends on it\n\tvar lastRankMaxCellHeight = 0.0;\n\tthis.rankWidths = [];\n\tthis.rankY = [];\n\n\tfor (var rankValue = model.maxRank; rankValue >= 0; rankValue--)\n\t{\n\t\t// Keep track of the widest cell on this rank\n\t\tvar maxCellHeight = 0.0;\n\t\tvar rank = model.ranks[rankValue];\n\t\tvar localX = this.initialX;\n\n\t\t// Store whether or not any of the cells' bounds were unavailable so\n\t\t// to only issue the warning once for all cells\n\t\tvar boundsWarning = false;\n\t\t\n\t\tfor (var i = 0; i < rank.length; i++)\n\t\t{\n\t\t\tvar node = rank[i];\n\n\t\t\tif (node.isVertex())\n\t\t\t{\n\t\t\t\tvar bounds = this.layout.getVertexBounds(node.cell);\n\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.width = bounds.width;\n\t\t\t\t\t\tnode.height = bounds.height;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.width = bounds.height;\n\t\t\t\t\t\tnode.height = bounds.width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tboundsWarning = true;\n\t\t\t\t}\n\n\t\t\t\tmaxCellHeight = Math.max(maxCellHeight, node.height);\n\t\t\t}\n\t\t\telse if (node.isEdge())\n\t\t\t{\n\t\t\t\t// The width is the number of additional parallel edges\n\t\t\t\t// time the parallel edge spacing\n\t\t\t\tvar numEdges = 1;\n\n\t\t\t\tif (node.edges != null)\n\t\t\t\t{\n\t\t\t\t\tnumEdges = node.edges.length;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmxLog.warn('edge.edges is null');\n\t\t\t\t}\n\n\t\t\t\tnode.width = (numEdges - 1) * this.parallelEdgeSpacing;\n\t\t\t}\n\n\t\t\t// Set the initial x-value as being the best result so far\n\t\t\tlocalX += node.width / 2.0;\n\t\t\tnode.setX(rankValue, localX);\n\t\t\tnode.setGeneralPurposeVariable(rankValue, localX);\n\t\t\tlocalX += node.width / 2.0;\n\t\t\tlocalX += this.intraCellSpacing;\n\n\t\t\tif (localX > this.widestRankValue)\n\t\t\t{\n\t\t\t\tthis.widestRankValue = localX;\n\t\t\t\tthis.widestRank = rankValue;\n\t\t\t}\n\n\t\t\tthis.rankWidths[rankValue] = localX;\n\t\t}\n\n\t\tif (boundsWarning == true)\n\t\t{\n\t\t\tmxLog.warn('At least one cell has no bounds');\n\t\t}\n\n\t\tthis.rankY[rankValue] = y;\n\t\tvar distanceToNextRank = maxCellHeight / 2.0\n\t\t\t\t+ lastRankMaxCellHeight / 2.0 + this.interRankCellSpacing;\n\t\tlastRankMaxCellHeight = maxCellHeight;\n\n\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.orientation == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\ty += distanceToNextRank;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ty -= distanceToNextRank;\n\t\t}\n\n\t\tfor (var i = 0; i < rank.length; i++)\n\t\t{\n\t\t\tvar cell = rank[i];\n\t\t\tcell.setY(rankValue, y);\n\t\t}\n\t}\n};\n\n/**\n * Function: minPath\n * \n * Straightens out chains of virtual nodes where possibleacade to those stored after this layout\n * processing step has completed.\n * \n * Parameters:\n *\n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.minPath = function(graph, model)\n{\n\t// Work down and up each edge with at least 2 control points\n\t// trying to straighten each one out. If the same number of\n\t// straight segments are formed in both directions, the \n\t// preferred direction used is the one where the final\n\t// control points have the least offset from the connectable \n\t// region of the terminating vertices\n\tvar edges = model.edgeMapper.getValues();\n\t\n\tfor (var j = 0; j < edges.length; j++)\n\t{\n\t\tvar cell = edges[j];\n\t\t\n\t\tif (cell.maxRank - cell.minRank - 1 < 1)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At least two virtual nodes in the edge\n\t\t// Check first whether the edge is already straight\n\t\tvar referenceX = cell\n\t\t\t\t.getGeneralPurposeVariable(cell.minRank + 1);\n\t\tvar edgeStraight = true;\n\t\tvar refSegCount = 0;\n\t\t\n\t\tfor (var i = cell.minRank + 2; i < cell.maxRank; i++)\n\t\t{\n\t\t\tvar x = cell.getGeneralPurposeVariable(i);\n\n\t\t\tif (referenceX != x)\n\t\t\t{\n\t\t\t\tedgeStraight = false;\n\t\t\t\treferenceX = x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\trefSegCount++;\n\t\t\t}\n\t\t}\n\n\t\tif (!edgeStraight)\n\t\t{\n\t\t\tvar upSegCount = 0;\n\t\t\tvar downSegCount = 0;\n\t\t\tvar upXPositions = [];\n\t\t\tvar downXPositions = [];\n\n\t\t\tvar currentX = cell.getGeneralPurposeVariable(cell.minRank + 1);\n\n\t\t\tfor (var i = cell.minRank + 1; i < cell.maxRank - 1; i++)\n\t\t\t{\n\t\t\t\t// Attempt to straight out the control point on the\n\t\t\t\t// next segment up with the current control point.\n\t\t\t\tvar nextX = cell.getX(i + 1);\n\n\t\t\t\tif (currentX == nextX)\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = currentX;\n\t\t\t\t\tupSegCount++;\n\t\t\t\t}\n\t\t\t\telse if (this.repositionValid(model, cell, i + 1, currentX))\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = currentX;\n\t\t\t\t\tupSegCount++;\n\t\t\t\t\t// Leave currentX at same value\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = nextX;\n\t\t\t\t\tcurrentX = nextX;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\n\t\t\tcurrentX = cell.getX(i);\n\n\t\t\tfor (var i = cell.maxRank - 1; i > cell.minRank + 1; i--)\n\t\t\t{\n\t\t\t\t// Attempt to straight out the control point on the\n\t\t\t\t// next segment down with the current control point.\n\t\t\t\tvar nextX = cell.getX(i - 1);\n\n\t\t\t\tif (currentX == nextX)\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = currentX;\n\t\t\t\t\tdownSegCount++;\n\t\t\t\t}\n\t\t\t\telse if (this.repositionValid(model, cell, i - 1, currentX))\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = currentX;\n\t\t\t\t\tdownSegCount++;\n\t\t\t\t\t// Leave currentX at same value\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = cell.getX(i-1);\n\t\t\t\t\tcurrentX = nextX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (downSegCount > refSegCount || upSegCount > refSegCount)\n\t\t\t{\n\t\t\t\tif (downSegCount >= upSegCount)\n\t\t\t\t{\n\t\t\t\t\t// Apply down calculation values\n\t\t\t\t\tfor (var i = cell.maxRank - 2; i > cell.minRank; i--)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell.setX(i, downXPositions[i - cell.minRank - 1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (upSegCount > downSegCount)\n\t\t\t\t{\n\t\t\t\t\t// Apply up calculation values\n\t\t\t\t\tfor (var i = cell.minRank + 2; i < cell.maxRank; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell.setX(i, upXPositions[i - cell.minRank - 2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Neither direction provided a favourable result\n\t\t\t\t\t// But both calculations are better than the\n\t\t\t\t\t// existing solution, so apply the one with minimal\n\t\t\t\t\t// offset to attached vertices at either end.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: repositionValid\n * \n * Determines whether or not a node may be moved to the specified x \n * position on the specified rank\n * \n * Parameters:\n *\n * model - the layout model\n * cell - the cell being analysed\n * rank - the layer of the cell\n * position - the x position being sought\n */\nmxCoordinateAssignment.prototype.repositionValid = function(model, cell, rank, position)\n{\n\tvar rankArray = model.ranks[rank];\n\tvar rankIndex = -1;\n\n\tfor (var i = 0; i < rankArray.length; i++)\n\t{\n\t\tif (cell == rankArray[i])\n\t\t{\n\t\t\trankIndex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (rankIndex < 0)\n\t{\n\t\treturn false;\n\t}\n\n\tvar currentX = cell.getGeneralPurposeVariable(rank);\n\n\tif (position < currentX)\n\t{\n\t\t// Trying to move node to the left.\n\t\tif (rankIndex == 0)\n\t\t{\n\t\t\t// Left-most node, can move anywhere\n\t\t\treturn true;\n\t\t}\n\n\t\tvar leftCell = rankArray[rankIndex - 1];\n\t\tvar leftLimit = leftCell.getGeneralPurposeVariable(rank);\n\t\tleftLimit = leftLimit + leftCell.width / 2\n\t\t\t\t+ this.intraCellSpacing + cell.width / 2;\n\n\t\tif (leftLimit <= position)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (position > currentX)\n\t{\n\t\t// Trying to move node to the right.\n\t\tif (rankIndex == rankArray.length - 1)\n\t\t{\n\t\t\t// Right-most node, can move anywhere\n\t\t\treturn true;\n\t\t}\n\n\t\tvar rightCell = rankArray[rankIndex + 1];\n\t\tvar rightLimit = rightCell.getGeneralPurposeVariable(rank);\n\t\trightLimit = rightLimit - rightCell.width / 2\n\t\t\t\t- this.intraCellSpacing - cell.width / 2;\n\n\t\tif (rightLimit >= position)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\n/**\n * Function: setCellLocations\n * \n * Sets the cell locations in the facade to those stored after this layout\n * processing step has completed.\n * \n * Parameters:\n *\n * graph - the input graph\n * model - the layout model\n */\nmxCoordinateAssignment.prototype.setCellLocations = function(graph, model)\n{\n\tthis.rankTopY = [];\n\tthis.rankBottomY = [];\n\n\tfor (var i = 0; i < model.ranks.length; i++)\n\t{\n\t\tthis.rankTopY[i] = Number.MAX_VALUE;\n\t\tthis.rankBottomY[i] = -Number.MAX_VALUE;\n\t}\n\t\n\tvar vertices = model.vertexMapper.getValues();\n\n\t// Process vertices all first, since they define the lower and \n\t// limits of each rank. Between these limits lie the channels\n\t// where the edges can be routed across the graph\n\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tthis.setVertexLocation(vertices[i]);\n\t}\n\t\n\t// Post process edge styles. Needs the vertex locations set for initial\n\t// values of the top and bottoms of each rank\n\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.ORTHOGONAL\n\t\t\t|| this.layout.edgeStyle == mxHierarchicalEdgeStyle.POLYLINE\n\t\t\t|| this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t{\n\t\tthis.localEdgeProcessing(model);\n\t}\n\n\tvar edges = model.edgeMapper.getValues();\n\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tthis.setEdgePosition(edges[i]);\n\t}\n};\n\n/**\n * Function: localEdgeProcessing\n * \n * Separates the x position of edges as they connect to vertices\n * \n * Parameters:\n *\n * model - the layout model\n */\nmxCoordinateAssignment.prototype.localEdgeProcessing = function(model)\n{\n\t// Iterate through each vertex, look at the edges connected in\n\t// both directions.\n\tfor (var rankIndex = 0; rankIndex < model.ranks.length; rankIndex++)\n\t{\n\t\tvar rank = model.ranks[rankIndex];\n\n\t\tfor (var cellIndex = 0; cellIndex < rank.length; cellIndex++)\n\t\t{\n\t\t\tvar cell = rank[cellIndex];\n\n\t\t\tif (cell.isVertex())\n\t\t\t{\n\t\t\t\tvar currentCells = cell.getPreviousLayerConnectedCells(rankIndex);\n\n\t\t\t\tvar currentRank = rankIndex - 1;\n\n\t\t\t\t// Two loops, last connected cells, and next\n\t\t\t\tfor (var k = 0; k < 2; k++)\n\t\t\t\t{\n\t\t\t\t\tif (currentRank > -1\n\t\t\t\t\t\t\t&& currentRank < model.ranks.length\n\t\t\t\t\t\t\t&& currentCells != null\n\t\t\t\t\t\t\t&& currentCells.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar sortedCells = [];\n\n\t\t\t\t\t\tfor (var j = 0; j < currentCells.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar sorter = new WeightedCellSorter(\n\t\t\t\t\t\t\t\t\tcurrentCells[j], currentCells[j].getX(currentRank));\n\t\t\t\t\t\t\tsortedCells.push(sorter);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsortedCells.sort(WeightedCellSorter.prototype.compare);\n\n\t\t\t\t\t\tvar leftLimit = cell.x[0] - cell.width / 2;\n\t\t\t\t\t\tvar rightLimit = leftLimit + cell.width;\n\n\t\t\t\t\t\t// Connected edge count starts at 1 to allow for buffer\n\t\t\t\t\t\t// with edge of vertex\n\t\t\t\t\t\tvar connectedEdgeCount = 0;\n\t\t\t\t\t\tvar connectedEdgeGroupCount = 0;\n\t\t\t\t\t\tvar connectedEdges = [];\n\t\t\t\t\t\t// Calculate width requirements for all connected edges\n\t\t\t\t\t\tfor (var j = 0; j < sortedCells.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar innerCell = sortedCells[j].cell;\n\t\t\t\t\t\t\tvar connections;\n\n\t\t\t\t\t\t\tif (innerCell.isVertex())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Get the connecting edge\n\t\t\t\t\t\t\t\tif (k == 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconnections = cell.connectsAsSource;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconnections = cell.connectsAsTarget;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfor (var connIndex = 0; connIndex < connections.length; connIndex++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (connections[connIndex].source == innerCell\n\t\t\t\t\t\t\t\t\t\t\t|| connections[connIndex].target == innerCell)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconnectedEdgeCount += connections[connIndex].edges\n\t\t\t\t\t\t\t\t\t\t\t\t.length;\n\t\t\t\t\t\t\t\t\t\tconnectedEdgeGroupCount++;\n\n\t\t\t\t\t\t\t\t\t\tconnectedEdges.push(connections[connIndex]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconnectedEdgeCount += innerCell.edges.length;\n\t\t\t\t\t\t\t\tconnectedEdgeGroupCount++;\n\t\t\t\t\t\t\t\tconnectedEdges.push(innerCell);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar requiredWidth = (connectedEdgeCount + 1)\n\t\t\t\t\t\t\t\t* this.prefHozEdgeSep;\n\n\t\t\t\t\t\t// Add a buffer on the edges of the vertex if the edge count allows\n\t\t\t\t\t\tif (cell.width > requiredWidth\n\t\t\t\t\t\t\t\t+ (2 * this.prefHozEdgeSep))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tleftLimit += this.prefHozEdgeSep;\n\t\t\t\t\t\t\trightLimit -= this.prefHozEdgeSep;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar availableWidth = rightLimit - leftLimit;\n\t\t\t\t\t\tvar edgeSpacing = availableWidth / connectedEdgeCount;\n\n\t\t\t\t\t\tvar currentX = leftLimit + edgeSpacing / 2.0;\n\t\t\t\t\t\tvar currentYOffset = this.minEdgeJetty - this.prefVertEdgeOff;\n\t\t\t\t\t\tvar maxYOffset = 0;\n\n\t\t\t\t\t\tfor (var j = 0; j < connectedEdges.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar numActualEdges = connectedEdges[j].edges\n\t\t\t\t\t\t\t\t\t.length;\n\t\t\t\t\t\t\tvar pos = this.jettyPositions[connectedEdges[j].ids[0]];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (pos == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpos = [];\n\t\t\t\t\t\t\t\tthis.jettyPositions[connectedEdges[j].ids[0]] = pos;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (j < connectedEdgeCount / 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcurrentYOffset += this.prefVertEdgeOff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (j > connectedEdgeCount / 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcurrentYOffset -= this.prefVertEdgeOff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Ignore the case if equals, this means the second of 2\n\t\t\t\t\t\t\t// jettys with the same y (even number of edges)\n\n\t\t\t\t\t\t\tfor (var m = 0; m < numActualEdges; m++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpos[m * 4 + k * 2] = currentX;\n\t\t\t\t\t\t\t\tcurrentX += edgeSpacing;\n\t\t\t\t\t\t\t\tpos[m * 4 + k * 2 + 1] = currentYOffset;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmaxYOffset = Math.max(maxYOffset,\n\t\t\t\t\t\t\t\t\tcurrentYOffset);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentCells = cell.getNextLayerConnectedCells(rankIndex);\n\n\t\t\t\t\tcurrentRank = rankIndex + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: setEdgePosition\n * \n * Fixes the control points\n */\nmxCoordinateAssignment.prototype.setEdgePosition = function(cell)\n{\n\t// For parallel edges we need to seperate out the points a\n\t// little\n\tvar offsetX = 0;\n\t// Only set the edge control points once\n\n\tif (cell.temp[0] != 101207)\n\t{\n\t\tvar maxRank = cell.maxRank;\n\t\tvar minRank = cell.minRank;\n\t\t\n\t\tif (maxRank == minRank)\n\t\t{\n\t\t\tmaxRank = cell.source.maxRank;\n\t\t\tminRank = cell.target.minRank;\n\t\t}\n\t\t\n\t\tvar parallelEdgeCount = 0;\n\t\tvar jettys = this.jettyPositions[cell.ids[0]];\n\n\t\tvar source = cell.isReversed ? cell.target.cell : cell.source.cell;\n\t\tvar graph = this.layout.graph;\n\t\tvar layoutReversed = this.orientation == mxConstants.DIRECTION_EAST\n\t\t\t\t|| this.orientation == mxConstants.DIRECTION_SOUTH;\n\n\t\tfor (var i = 0; i < cell.edges.length; i++)\n\t\t{\n\t\t\tvar realEdge = cell.edges[i];\n\t\t\tvar realSource = this.layout.getVisibleTerminal(realEdge, true);\n\n\t\t\t//List oldPoints = graph.getPoints(realEdge);\n\t\t\tvar newPoints = [];\n\n\t\t\t// Single length reversed edges end up with the jettys in the wrong\n\t\t\t// places. Since single length edges only have jettys, not segment\n\t\t\t// control points, we just say the edge isn't reversed in this section\n\t\t\tvar reversed = cell.isReversed;\n\t\t\t\n\t\t\tif (realSource != source)\n\t\t\t{\n\t\t\t\t// The real edges include all core model edges and these can go\n\t\t\t\t// in both directions. If the source of the hierarchical model edge\n\t\t\t\t// isn't the source of the specific real edge in this iteration\n\t\t\t\t// treat if as reversed\n\t\t\t\treversed = !reversed;\n\t\t\t}\n\n\t\t\t// First jetty of edge\n\t\t\tif (jettys != null)\n\t\t\t{\n\t\t\t\tvar arrayOffset = reversed ? 2 : 0;\n\t\t\t\tvar y = reversed ?\n\t\t\t\t\t\t(layoutReversed ? this.rankBottomY[minRank] : this.rankTopY[minRank]) :\n\t\t\t\t\t\t\t(layoutReversed ? this.rankTopY[maxRank] : this.rankBottomY[maxRank]);\n\t\t\t\tvar jetty = jettys[parallelEdgeCount * 4 + 1 + arrayOffset];\n\t\t\t\t\n\t\t\t\tif (reversed != layoutReversed)\n\t\t\t\t{\n\t\t\t\t\tjetty = -jetty;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ty += jetty;\n\t\t\t\tvar x = jettys[parallelEdgeCount * 4 + arrayOffset];\n\t\t\t\t\n\t\t\t\tvar modelSource = graph.model.getTerminal(realEdge, true);\n\n\t\t\t\tif (this.layout.isPort(modelSource) && graph.model.getParent(modelSource) == realSource)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.view.getState(modelSource);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = state.x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = realSource.geometry.x + cell.source.width * modelSource.geometry.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH\n\t\t\t\t\t\t|| this.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\t\t\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(x, y + jetty));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(y, x));\n\t\t\t\t\t\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(y + jetty, x));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Declare variables to define loop through edge points and \n\t\t\t// change direction if edge is reversed\n\n\t\t\tvar loopStart = cell.x.length - 1;\n\t\t\tvar loopLimit = -1;\n\t\t\tvar loopDelta = -1;\n\t\t\tvar currentRank = cell.maxRank - 1;\n\n\t\t\tif (reversed)\n\t\t\t{\n\t\t\t\tloopStart = 0;\n\t\t\t\tloopLimit = cell.x.length;\n\t\t\t\tloopDelta = 1;\n\t\t\t\tcurrentRank = cell.minRank + 1;\n\t\t\t}\n\t\t\t// Reversed edges need the points inserted in\n\t\t\t// reverse order\n\t\t\tfor (var j = loopStart; (cell.maxRank != cell.minRank) && j != loopLimit; j += loopDelta)\n\t\t\t{\n\t\t\t\t// The horizontal position in a vertical layout\n\t\t\t\tvar positionX = cell.x[j] + offsetX;\n\n\t\t\t\t// Work out the vertical positions in a vertical layout\n\t\t\t\t// in the edge buffer channels above and below this rank\n\t\t\t\tvar topChannelY = (this.rankTopY[currentRank] + this.rankBottomY[currentRank + 1]) / 2.0;\n\t\t\t\tvar bottomChannelY = (this.rankTopY[currentRank - 1] + this.rankBottomY[currentRank]) / 2.0;\n\n\t\t\t\tif (reversed)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = topChannelY;\n\t\t\t\t\ttopChannelY = bottomChannelY;\n\t\t\t\t\tbottomChannelY = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(positionX, topChannelY));\n\t\t\t\t\tnewPoints.push(new mxPoint(positionX, bottomChannelY));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(topChannelY, positionX));\n\t\t\t\t\tnewPoints.push(new mxPoint(bottomChannelY, positionX));\n\t\t\t\t}\n\n\t\t\t\tthis.limitX = Math.max(this.limitX, positionX);\n\t\t\t\tcurrentRank += loopDelta;\n\t\t\t}\n\n\t\t\t// Second jetty of edge\n\t\t\tif (jettys != null)\n\t\t\t{\n\t\t\t\tvar arrayOffset = reversed ? 2 : 0;\n\t\t\t\tvar rankY = reversed ?\n\t\t\t\t\t\t(layoutReversed ? this.rankTopY[maxRank] : this.rankBottomY[maxRank]) :\n\t\t\t\t\t\t\t(layoutReversed ? this.rankBottomY[minRank] : this.rankTopY[minRank]);\n\t\t\t\tvar jetty = jettys[parallelEdgeCount * 4 + 3 - arrayOffset];\n\t\t\t\t\n\t\t\t\tif (reversed != layoutReversed)\n\t\t\t\t{\n\t\t\t\t\tjetty = -jetty;\n\t\t\t\t}\n\t\t\t\tvar y = rankY - jetty;\n\t\t\t\tvar x = jettys[parallelEdgeCount * 4 + 2 - arrayOffset];\n\t\t\t\t\n\t\t\t\tvar modelTarget = graph.model.getTerminal(realEdge, false);\n\t\t\t\tvar realTarget = this.layout.getVisibleTerminal(realEdge, false);\n\n\t\t\t\tif (this.layout.isPort(modelTarget) && graph.model.getParent(modelTarget) == realTarget)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.view.getState(modelTarget);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = state.x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = realTarget.geometry.x + cell.target.width * modelTarget.geometry.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(x, y - jetty));\n\t\t\t\t\t}\n\n\t\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(y - jetty, x));\n\t\t\t\t\t}\n\n\t\t\t\t\tnewPoints.push(new mxPoint(y, x));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cell.isReversed)\n\t\t\t{\n\t\t\t\tthis.processReversedEdge(cell, realEdge);\n\t\t\t}\n\n\t\t\tthis.layout.setEdgePoints(realEdge, newPoints);\n\n\t\t\t// Increase offset so next edge is drawn next to\n\t\t\t// this one\n\t\t\tif (offsetX == 0.0)\n\t\t\t{\n\t\t\t\toffsetX = this.parallelEdgeSpacing;\n\t\t\t}\n\t\t\telse if (offsetX > 0)\n\t\t\t{\n\t\t\t\toffsetX = -offsetX;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toffsetX = -offsetX + this.parallelEdgeSpacing;\n\t\t\t}\n\t\t\t\n\t\t\tparallelEdgeCount++;\n\t\t}\n\n\t\tcell.temp[0] = 101207;\n\t}\n};\n\n\n/**\n * Function: setVertexLocation\n * \n * Fixes the position of the specified vertex.\n * \n * Parameters:\n * \n * cell - the vertex to position\n */\nmxCoordinateAssignment.prototype.setVertexLocation = function(cell)\n{\n\tvar realCell = cell.cell;\n\tvar positionX = cell.x[0] - cell.width / 2;\n\tvar positionY = cell.y[0] - cell.height / 2;\n\n\tthis.rankTopY[cell.minRank] = Math.min(this.rankTopY[cell.minRank], positionY);\n\tthis.rankBottomY[cell.minRank] = Math.max(this.rankBottomY[cell.minRank],\n\t\t\tpositionY + cell.height);\n\n\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tthis.layout.setVertexLocation(realCell, positionX, positionY);\n\t}\n\telse\n\t{\n\t\tthis.layout.setVertexLocation(realCell, positionY, positionX);\n\t}\n\n\tthis.limitX = Math.max(this.limitX, positionX + cell.width);\n};\n\n/**\n * Function: processReversedEdge\n * \n * Hook to add additional processing\n * \n * Parameters:\n * \n * edge - the hierarchical model edge\n * realEdge - the real edge in the graph\n */\nmxCoordinateAssignment.prototype.processReversedEdge = function(graph, model)\n{\n\t// hook for subclassers\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneOrdering\n * \n * An implementation of the first stage of the Sugiyama layout. Straightforward\n * longest path calculation of layer assignment\n * \n * Constructor: mxSwimlaneOrdering\n *\n * Creates a cycle remover for the given internal model.\n */\nfunction mxSwimlaneOrdering(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxSwimlaneOrdering.prototype = new mxHierarchicalLayoutStage();\nmxSwimlaneOrdering.prototype.constructor = mxSwimlaneOrdering;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxSwimlaneOrdering.prototype.layout = null;\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxSwimlaneOrdering.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\tvar seenNodes = new Object();\n\tvar unseenNodes = mxUtils.clone(model.vertexMapper, null, true);\n\t\n\t// Perform a dfs through the internal model. If a cycle is found,\n\t// reverse it.\n\tvar rootsArray = null;\n\t\n\tif (model.roots != null)\n\t{\n\t\tvar modelRoots = model.roots;\n\t\trootsArray = [];\n\t\t\n\t\tfor (var i = 0; i < modelRoots.length; i++)\n\t\t{\n\t\t\tvar nodeId = mxCellPath.create(modelRoots[i]);\n\t\t\trootsArray[i] = model.vertexMapper.get(modelRoots[i]);\n\t\t}\n\t}\n\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\t// Ancestor hashes only line up within a swimlane\n\t\tvar isAncestor = parent != null && parent.swimlaneIndex == node.swimlaneIndex && node.isAncestor(parent);\n\n\t\t// If the source->target swimlane indices go from higher to\n\t\t// lower, the edge is reverse\n\t\tvar reversedOverSwimlane = parent != null && connectingEdge != null &&\n\t\t\t\t\t\tparent.swimlaneIndex < node.swimlaneIndex && connectingEdge.source == node;\n\n\t\tif (isAncestor)\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t}\n\t\telse if (reversedOverSwimlane)\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsTarget);\n\t\t\tnode.connectsAsTarget.push(connectingEdge);\n\t\t\tparent.connectsAsSource.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsSource);\n\t\t}\n\t\t\n\t\tvar cellId = mxCellPath.create(node.cell);\n\t\tseenNodes[cellId] = node;\n\t\tdelete unseenNodes[cellId];\n\t}, rootsArray, true, null);\n};\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxHierarchicalLayout\n * \n * A hierarchical layout algorithm.\n * \n * Constructor: mxHierarchicalLayout\n *\n * Constructs a new hierarchical layout algorithm.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * orientation - Optional constant that defines the orientation of this\n * layout.\n * deterministic - Optional boolean that specifies if this layout should be\n * deterministic. Default is true.\n */\nfunction mxHierarchicalLayout(graph, orientation, deterministic)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.orientation = (orientation != null) ? orientation : mxConstants.DIRECTION_NORTH;\n\tthis.deterministic = (deterministic != null) ? deterministic : true;\n};\n\nvar mxHierarchicalEdgeStyle =\n{\n\tORTHOGONAL: 1,\n\tPOLYLINE: 2,\n\tSTRAIGHT: 3,\n\tCURVE: 4\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxHierarchicalLayout.prototype = new mxGraphLayout();\nmxHierarchicalLayout.prototype.constructor = mxHierarchicalLayout;\n\n/**\n * Variable: roots\n * \n * Holds the array of <mxCell> that this layout contains.\n */\nmxHierarchicalLayout.prototype.roots = null;\n\n/**\n * Variable: resizeParent\n * \n * Specifies if the parent should be resized after the layout so that it\n * contains all the child cells. Default is false. See also <parentBorder>.\n */\nmxHierarchicalLayout.prototype.resizeParent = false;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxHierarchicalLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: moveParent\n * \n * Specifies if the parent should be moved if <resizeParent> is enabled.\n * Default is false.\n */\nmxHierarchicalLayout.prototype.moveParent = false;\n\n/**\n * Variable: parentBorder\n * \n * The border to be added around the children if the parent is to be\n * resized using <resizeParent>. Default is 0.\n */\nmxHierarchicalLayout.prototype.parentBorder = 0;\n\n/**\n * Variable: intraCellSpacing\n * \n * The spacing buffer added between cells on the same layer. Default is 30.\n */\nmxHierarchicalLayout.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The spacing buffer added between cell on adjacent layers. Default is 100.\n */\nmxHierarchicalLayout.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: interHierarchySpacing\n * \n * The spacing buffer between unconnected hierarchies. Default is 60.\n */\nmxHierarchicalLayout.prototype.interHierarchySpacing = 60;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges.\n * Default is 10.\n */\nmxHierarchicalLayout.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: orientation\n * \n * The position of the root node(s) relative to the laid out graph in.\n * Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxHierarchicalLayout.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxHierarchicalLayout.prototype.fineTuning = true;\n\n/**\n * \n * Variable: tightenToSource\n * \n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells. Default is true.\n */\nmxHierarchicalLayout.prototype.tightenToSource = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxHierarchicalLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: traverseAncestors\n * \n * Whether or not to drill into child cells and layout in reverse\n * group order. This also cause the layout to navigate edges whose \n * terminal vertices have different parents but are in the same \n * ancestry chain. Default is true.\n */\nmxHierarchicalLayout.prototype.traverseAncestors = true;\n\n/**\n * Variable: model\n * \n * The internal <mxGraphHierarchyModel> formed of the layout.\n */\nmxHierarchicalLayout.prototype.model = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgeSourceTermCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesTargetTermCache = null;\n\n/**\n * Variable: edgeStyle\n * \n * The style to apply between cell layers to edge segments.\n * Default is <mxHierarchicalEdgeStyle.POLYLINE>.\n */\nmxHierarchicalLayout.prototype.edgeStyle = mxHierarchicalEdgeStyle.POLYLINE;\n\n/**\n * Function: getModel\n * \n * Returns the internal <mxGraphHierarchyModel> for this layout algorithm.\n */\nmxHierarchicalLayout.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: execute\n * \n * Executes the layout for the children of the specified parent.\n * \n * Parameters:\n * \n * parent - Parent <mxCell> that contains the children to be laid out.\n * roots - Optional starting roots of the layout.\n */\nmxHierarchicalLayout.prototype.execute = function(parent, roots)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.model;\n\tthis.edgesCache = new mxDictionary();\n\tthis.edgeSourceTermCache = new mxDictionary();\n\tthis.edgesTargetTermCache = new mxDictionary();\n\n\tif (roots != null && !(roots instanceof Array))\n\t{\n\t\troots = [roots];\n\t}\n\t\n\t// If the roots are set and the parent is set, only\n\t// use the roots that are some dependent of the that\n\t// parent.\n\t// If just the root are set, use them as-is\n\t// If just the parent is set use it's immediate\n\t// children as the initial set\n\n\tif (roots == null && parent == null)\n\t{\n\t\t// TODO indicate the problem\n\t\treturn;\n\t}\n\t\n\t//  Maintaining parent location\n\tthis.parentX = null;\n\tthis.parentY = null;\n\t\n\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tthis.parentX = geo.x;\n\t\t\tthis.parentY = geo.y;\n\t\t}\n\t}\n\t\n\tif (roots != null)\n\t{\n\t\tvar rootsCopy = [];\n\n\t\tfor (var i = 0; i < roots.length; i++)\n\t\t{\n\t\t\tvar ancestor = parent != null ? model.isAncestor(parent, roots[i]) : true;\n\t\t\t\n\t\t\tif (ancestor && model.isVertex(roots[i]))\n\t\t\t{\n\t\t\t\trootsCopy.push(roots[i]);\n\t\t\t}\n\t\t}\n\n\t\tthis.roots = rootsCopy;\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tthis.run(parent);\n\t\t\n\t\tif (this.resizeParent && !this.graph.isCellCollapsed(parent))\n\t\t{\n\t\t\tthis.graph.updateGroupBounds([parent], this.parentBorder, this.moveParent);\n\t\t}\n\t\t\n\t\t// Maintaining parent location\n\t\tif (this.parentX != null && this.parentY != null)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.x = this.parentX;\n\t\t\t\tgeo.y = this.parentY;\n\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: findRoots\n * \n * Returns all visible children in the given parent which do not have\n * incoming edges. If the result is empty then the children with the\n * maximum difference between incoming and outgoing edges are returned.\n * This takes into account edges that are being promoted to the given\n * root due to invisible children or collapsed cells.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * vertices - array of vertices to limit search to\n */\nmxHierarchicalLayout.prototype.findRoots = function(parent, vertices)\n{\n\tvar roots = [];\n\t\n\tif (parent != null && vertices != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar best = null;\n\t\tvar maxDiff = -100000;\n\t\t\n\t\tfor (var i in vertices)\n\t\t{\n\t\t\tvar cell = vertices[i];\n\n\t\t\tif (model.isVertex(cell) && this.graph.isCellVisible(cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getEdges(cell);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\n\t\t\t\tfor (var k = 0; k < conns.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.getVisibleTerminal(conns[k], true);\n\n\t\t\t\t\tif (src == cell)\n\t\t\t\t\t{\n\t\t\t\t\t\tfanOut++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfanIn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fanIn == 0 && fanOut > 0)\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\n\t\t\t\tvar diff = fanOut - fanIn;\n\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: getEdges\n * \n * Returns the connected edges for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n */\nmxHierarchicalLayout.prototype.getEdges = function(cell)\n{\n\tvar cachedEdges = this.edgesCache.get(cell);\n\t\n\tif (cachedEdges != null)\n\t{\n\t\treturn cachedEdges;\n\t}\n\n\tvar model = this.graph.model;\n\tvar edges = [];\n\tvar isCollapsed = this.graph.isCellCollapsed(cell);\n\tvar childCount = model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\n\t\tif (this.isPort(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t\telse if (isCollapsed || !this.graph.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t}\n\n\tedges = edges.concat(model.getEdges(cell, true, true));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar source = this.getVisibleTerminal(edges[i], true);\n\t\tvar target = this.getVisibleTerminal(edges[i], false);\n\t\t\n\t\tif ((source == target) ||\n\t\t\t\t((source != target) &&\n\t\t\t\t\t\t((target == cell && (this.parent == null || this.isAncestor(this.parent, source, this.traverseAncestors))) ||\n\t\t\t\t\t\t \t(source == cell && (this.parent == null || this.isAncestor(this.parent, target, this.traverseAncestors))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\tthis.edgesCache.put(cell, result);\n\n\treturn result;\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Helper function to return visible terminal for edge allowing for ports\n * \n * Parameters:\n * \n * edge - <mxCell> whose edges should be returned.\n * source - Boolean that specifies whether the source or target terminal is to be returned\n */\nmxHierarchicalLayout.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar terminalCache = this.edgesTargetTermCache;\n\t\n\tif (source)\n\t{\n\t\tterminalCache = this.edgeSourceTermCache;\n\t}\n\n\tvar term = terminalCache.get(edge);\n\n\tif (term != null)\n\t{\n\t\treturn term;\n\t}\n\n\tvar state = this.graph.view.getState(edge);\n\t\n\tvar terminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t\n\tif (terminal == null)\n\t{\n\t\tterminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t}\n\n\tif (terminal != null)\n\t{\n\t\tif (this.isPort(terminal))\n\t\t{\n\t\t\tterminal = this.graph.model.getParent(terminal);\n\t\t}\n\t\t\n\t\tterminalCache.put(edge, terminal);\n\t}\n\n\treturn terminal;\n};\n\n/**\n * Function: run\n * \n * The API method used to exercise the layout upon the graph description\n * and produce a separate description of the vertex position and edge\n * routing changes made. It runs each stage of the layout that has been\n * created.\n */\nmxHierarchicalLayout.prototype.run = function(parent)\n{\n\t// Separate out unconnected hierarchies\n\tvar hierarchyVertices = [];\n\tvar allVertexSet = [];\n\n\tif (this.roots == null && parent != null)\n\t{\n\t\tvar filledVertexSet = Object();\n\t\tthis.filterDescendants(parent, filledVertexSet);\n\n\t\tthis.roots = [];\n\t\tvar filledVertexSetEmpty = true;\n\n\t\t// Poor man's isSetEmpty\n\t\tfor (var key in filledVertexSet)\n\t\t{\n\t\t\tif (filledVertexSet[key] != null)\n\t\t\t{\n\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\twhile (!filledVertexSetEmpty)\n\t\t{\n\t\t\tvar candidateRoots = this.findRoots(parent, filledVertexSet);\n\t\t\t\n\t\t\t// If the candidate root is an unconnected group cell, remove it from\n\t\t\t// the layout. We may need a custom set that holds such groups and forces\n\t\t\t// them to be processed for resizing and/or moving.\n\t\t\t\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tvar vertexSet = Object();\n\t\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\t\tthis.traverse(candidateRoots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\t\thierarchyVertices, filledVertexSet);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tthis.roots.push(candidateRoots[i]);\n\t\t\t}\n\t\t\t\n\t\t\tfilledVertexSetEmpty = true;\n\t\t\t\n\t\t\t// Poor man's isSetEmpty\n\t\t\tfor (var key in filledVertexSet)\n\t\t\t{\n\t\t\t\tif (filledVertexSet[key] != null)\n\t\t\t\t{\n\t\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Find vertex set as directed traversal from roots\n\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar vertexSet = Object();\n\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\tthis.traverse(this.roots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\thierarchyVertices, null);\n\t\t}\n\t}\n\n\t// Iterate through the result removing parents who have children in this layout\n\t\n\t// Perform a layout for each seperate hierarchy\n\t// Track initial coordinate x-positioning\n\tvar initialX = 0;\n\n\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t{\n\t\tvar vertexSet = hierarchyVertices[i];\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var key in vertexSet)\n\t\t{\n\t\t\ttmp.push(vertexSet[key]);\n\t\t}\n\t\t\n\t\tthis.model = new mxGraphHierarchyModel(this, tmp, this.roots,\n\t\t\tparent, this.tightenToSource);\n\n\t\tthis.cycleStage(parent);\n\t\tthis.layeringStage();\n\t\t\n\t\tthis.crossingStage(parent);\n\t\tinitialX = this.placementStage(initialX, parent);\n\t}\n};\n\n/**\n * Function: filterDescendants\n * \n * Creates an array of descendant cells\n */\nmxHierarchicalLayout.prototype.filterDescendants = function(cell, result)\n{\n\tvar model = this.graph.model;\n\n\tif (model.isVertex(cell) && cell != this.parent && this.graph.isCellVisible(cell))\n\t{\n\t\tresult[mxObjectIdentity.get(cell)] = cell;\n\t}\n\n\tif (this.traverseAncestors || cell == this.parent\n\t\t\t&& this.graph.isCellVisible(cell))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\n\t\t\t// Ignore ports in the layout vertex list, they are dealt with\n\t\t\t// in the traversal mechanisms\n\t\t\tif (!this.isPort(child))\n\t\t\t{\n\t\t\t\tthis.filterDescendants(child, result);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, its parent is the connecting vertex in terms of graph traversal\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxHierarchicalLayout.prototype.isPort = function(cell)\n{\n\tif (cell != null && cell.geometry != null)\n\t{\n\t\treturn cell.geometry.relative;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and ports.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxHierarchicalLayout.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar src = this.getVisibleTerminal(edges[i], true);\n\t\tvar trg = this.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * allVertices - Array of cell paths for the visited cells.\n */\nmxHierarchicalLayout.prototype.traverse = function(vertex, directed, edge, allVertices, currentComp,\n\t\t\t\t\t\t\t\t\t\t\thierarchyVertices, filledVertexSet)\n{\n\tif (vertex != null && allVertices != null)\n\t{\n\t\t// Has this vertex been seen before in any traversal\n\t\t// And if the filled vertex set is populated, only \n\t\t// process vertices in that it contains\n\t\tvar vertexID = mxObjectIdentity.get(vertex);\n\t\t\n\t\tif ((allVertices[vertexID] == null)\n\t\t\t\t&& (filledVertexSet == null ? true : filledVertexSet[vertexID] != null))\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\tcurrentComp[vertexID] = vertex;\n\t\t\t}\n\t\t\tif (allVertices[vertexID] == null)\n\t\t\t{\n\t\t\t\tallVertices[vertexID] = vertex;\n\t\t\t}\n\n\t\t\tif (filledVertexSet !== null)\n\t\t\t{\n\t\t\t\tdelete filledVertexSet[vertexID];\n\t\t\t}\n\n\t\t\tvar edges = this.getEdges(vertex);\n\t\t\tvar edgeIsSource = [];\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tedgeIsSource[i] = (this.getVisibleTerminal(edges[i], true) == vertex);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tif (!directed || edgeIsSource[i])\n\t\t\t\t{\n\t\t\t\t\tvar next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n\t\t\t\t\t\n\t\t\t\t\t// Check whether there are more edges incoming from the target vertex than outgoing\n\t\t\t\t\t// The hierarchical model treats bi-directional parallel edges as being sourced\n\t\t\t\t\t// from the more \"sourced\" terminal. If the directions are equal in number, the direction\n\t\t\t\t\t// is that of the natural direction from the roots of the layout.\n\t\t\t\t\t// The checks below are slightly more verbose than need be for performance reasons\n\t\t\t\t\tvar netCount = 1;\n\n\t\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (j == i)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar isSource2 = edgeIsSource[j];\n\t\t\t\t\t\t\tvar otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (otherTerm == next)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (isSource2)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnetCount++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnetCount--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (netCount >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrentComp = this.traverse(next, directed, edges[i], allVertices,\n\t\t\t\t\t\t\tcurrentComp, hierarchyVertices,\n\t\t\t\t\t\t\tfilledVertexSet);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\t// We've seen this vertex before, but not in the current component\n\t\t\t\t// This component and the one it's in need to be merged\n\n\t\t\t\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar comp = hierarchyVertices[i];\n\n\t\t\t\t\tif (comp[vertexID] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key in comp)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentComp[key] = comp[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Remove the current component from the hierarchy set\n\t\t\t\t\t\thierarchyVertices.splice(i, 1);\n\t\t\t\t\t\treturn currentComp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn currentComp;\n};\n\n/**\n * Function: cycleStage\n * \n * Executes the cycle stage using mxMinimumCycleRemover.\n */\nmxHierarchicalLayout.prototype.cycleStage = function(parent)\n{\n\tvar cycleStage = new mxMinimumCycleRemover(this);\n\tcycleStage.execute(parent);\n};\n\n/**\n * Function: layeringStage\n * \n * Implements first stage of a Sugiyama layout.\n */\nmxHierarchicalLayout.prototype.layeringStage = function()\n{\n\tthis.model.initialRank();\n\tthis.model.fixRanks();\n};\n\n/**\n * Function: crossingStage\n * \n * Executes the crossing stage using mxMedianHybridCrossingReduction.\n */\nmxHierarchicalLayout.prototype.crossingStage = function(parent)\n{\n\tvar crossingStage = new mxMedianHybridCrossingReduction(this);\n\tcrossingStage.execute(parent);\n};\n\n/**\n * Function: placementStage\n * \n * Executes the placement stage using mxCoordinateAssignment.\n */\nmxHierarchicalLayout.prototype.placementStage = function(initialX, parent)\n{\n\tvar placementStage = new mxCoordinateAssignment(this, this.intraCellSpacing,\n\t\t\tthis.interRankCellSpacing, this.orientation, initialX,\n\t\t\tthis.parallelEdgeSpacing);\n\tplacementStage.fineTuning = this.fineTuning;\n\tplacementStage.execute(parent);\n\t\n\treturn placementStage.limitX + this.interHierarchySpacing;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneLayout\n * \n * A hierarchical layout algorithm.\n * \n * Constructor: mxSwimlaneLayout\n *\n * Constructs a new hierarchical layout algorithm.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * orientation - Optional constant that defines the orientation of this\n * layout.\n * deterministic - Optional boolean that specifies if this layout should be\n * deterministic. Default is true.\n */\nfunction mxSwimlaneLayout(graph, orientation, deterministic)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.orientation = (orientation != null) ? orientation : mxConstants.DIRECTION_NORTH;\n\tthis.deterministic = (deterministic != null) ? deterministic : true;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxSwimlaneLayout.prototype = new mxGraphLayout();\nmxSwimlaneLayout.prototype.constructor = mxSwimlaneLayout;\n\n/**\n * Variable: roots\n * \n * Holds the array of <mxCell> that this layout contains.\n */\nmxSwimlaneLayout.prototype.roots = null;\n\n/**\n * Variable: swimlanes\n * \n * Holds the array of <mxCell> of the ordered swimlanes to lay out\n */\nmxSwimlaneLayout.prototype.swimlanes = null;\n\n/**\n * Variable: dummyVertexWidth\n * \n * The cell width of any dummy vertices inserted\n */\nmxSwimlaneLayout.prototype.dummyVertexWidth = 50;\n\n/**\n * Variable: resizeParent\n * \n * Specifies if the parent should be resized after the layout so that it\n * contains all the child cells. Default is false. See also <parentBorder>.\n */\nmxSwimlaneLayout.prototype.resizeParent = false;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxSwimlaneLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: moveParent\n * \n * Specifies if the parent should be moved if <resizeParent> is enabled.\n * Default is false.\n */\nmxSwimlaneLayout.prototype.moveParent = false;\n\n/**\n * Variable: parentBorder\n * \n * The border to be added around the children if the parent is to be\n * resized using <resizeParent>. Default is 30.\n */\nmxSwimlaneLayout.prototype.parentBorder = 30;\n\n/**\n * Variable: intraCellSpacing\n * \n * The spacing buffer added between cells on the same layer. Default is 30.\n */\nmxSwimlaneLayout.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The spacing buffer added between cell on adjacent layers. Default is 100.\n */\nmxSwimlaneLayout.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: interHierarchySpacing\n * \n * The spacing buffer between unconnected hierarchies. Default is 60.\n */\nmxSwimlaneLayout.prototype.interHierarchySpacing = 60;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges.\n * Default is 10.\n */\nmxSwimlaneLayout.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: orientation\n * \n * The position of the root node(s) relative to the laid out graph in.\n * Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxSwimlaneLayout.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxSwimlaneLayout.prototype.fineTuning = true;\n\n/**\n * Variable: tightenToSource\n * \n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells. Default is true.\n */\nmxSwimlaneLayout.prototype.tightenToSource = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxSwimlaneLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: traverseAncestors\n * \n * Whether or not to drill into child cells and layout in reverse\n * group order. This also cause the layout to navigate edges whose \n * terminal vertices have different parents but are in the same\n * ancestry chain. Default is true.\n */\nmxSwimlaneLayout.prototype.traverseAncestors = true;\n\n/**\n * Variable: model\n * \n * The internal <mxSwimlaneModel> formed of the layout.\n */\nmxSwimlaneLayout.prototype.model = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxSwimlaneLayout.prototype.edgesCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgeSourceTermCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesTargetTermCache = null;\n\n/**\n * Variable: edgeStyle\n * \n * The style to apply between cell layers to edge segments.\n * Default is <mxHierarchicalEdgeStyle.POLYLINE>.\n */\nmxHierarchicalLayout.prototype.edgeStyle = mxHierarchicalEdgeStyle.POLYLINE;\n\n/**\n * Function: getModel\n * \n * Returns the internal <mxSwimlaneModel> for this layout algorithm.\n */\nmxSwimlaneLayout.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: execute\n * \n * Executes the layout for the children of the specified parent.\n * \n * Parameters:\n * \n * parent - Parent <mxCell> that contains the children to be laid out.\n * swimlanes - Ordered array of swimlanes to be laid out\n */\nmxSwimlaneLayout.prototype.execute = function(parent, swimlanes)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.model;\n\tthis.edgesCache = new mxDictionary();\n\tthis.edgeSourceTermCache = new mxDictionary();\n\tthis.edgesTargetTermCache = new mxDictionary();\n\n\t// If the roots are set and the parent is set, only\n\t// use the roots that are some dependent of the that\n\t// parent.\n\t// If just the root are set, use them as-is\n\t// If just the parent is set use it's immediate\n\t// children as the initial set\n\n\tif (swimlanes == null || swimlanes.length < 1)\n\t{\n\t\t// TODO indicate the problem\n\t\treturn;\n\t}\n\n\tif (parent == null)\n\t{\n\t\tparent = model.getParent(swimlanes[0]);\n\t}\n\n\t//  Maintaining parent location\n\tthis.parentX = null;\n\tthis.parentY = null;\n\t\n\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tthis.parentX = geo.x;\n\t\t\tthis.parentY = geo.y;\n\t\t}\n\t}\n\n\tthis.swimlanes = swimlanes;\n\tvar dummyVertices = [];\n\t// Check the swimlanes all have vertices\n\t// in them\n\tfor (var i = 0; i < swimlanes.length; i++)\n\t{\n\t\tvar children = this.graph.getChildCells(swimlanes[i]);\n\t\t\n\t\tif (children == null || children.length == 0)\n\t\t{\n\t\t\tvar vertex = this.graph.insertVertex(swimlanes[i], null, null, 0, 0, this.dummyVertexWidth, 0);\n\t\t\tdummyVertices.push(vertex);\n\t\t}\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tthis.run(parent);\n\t\t\n\t\tif (this.resizeParent && !this.graph.isCellCollapsed(parent))\n\t\t{\n\t\t\tthis.graph.updateGroupBounds([parent], this.parentBorder, this.moveParent);\n\t\t}\n\t\t\n\t\t// Maintaining parent location\n\t\tif (this.parentX != null && this.parentY != null)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.x = this.parentX;\n\t\t\t\tgeo.y = this.parentY;\n\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t}\n\t\t}\n\n\t\tthis.graph.removeCells(dummyVertices);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: updateGroupBounds\n * \n * Updates the bounds of the given array of groups so that it includes\n * all child vertices.\n * \n */\nmxSwimlaneLayout.prototype.updateGroupBounds = function()\n{\n\t// Get all vertices and edge in the layout\n\tvar cells = [];\n\tvar model = this.model;\n\t\n\tfor (var key in model.edgeMapper)\n\t{\n\t\tvar edge = model.edgeMapper[key];\n\t\t\n\t\tfor (var i = 0; i < edge.edges.length; i++)\n\t\t{\n\t\t\tcells.push(edge.edges[i]);\n\t\t}\n\t}\n\t\n\tvar layoutBounds = this.graph.getBoundingBoxFromGeometry(cells, true);\n\tvar childBounds = [];\n\n\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t{\n\t\tvar lane = this.swimlanes[i];\n\t\tvar geo = this.graph.getCellGeometry(lane);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tvar children = this.graph.getChildCells(lane);\n\t\t\t\n\t\t\tvar size = (this.graph.isSwimlane(lane)) ?\n\t\t\t\t\tthis.graph.getStartSize(lane) : new mxRectangle();\n\n\t\t\tvar bounds = this.graph.getBoundingBoxFromGeometry(children);\n\t\t\tchildBounds[i] = bounds;\n\t\t\tvar childrenY = bounds.y + geo.y - size.height - this.parentBorder;\n\t\t\tvar maxChildrenY = bounds.y + geo.y + bounds.height;\n\n\t\t\tif (layoutBounds == null)\n\t\t\t{\n\t\t\t\tlayoutBounds = new mxRectangle(0, childrenY, 0, maxChildrenY - childrenY);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlayoutBounds.y = Math.min(layoutBounds.y, childrenY);\n\t\t\t\tvar maxY = Math.max(layoutBounds.y + layoutBounds.height, maxChildrenY);\n\t\t\t\tlayoutBounds.height = maxY - layoutBounds.y;\n\t\t\t}\n\t\t}\n\t}\n\n\t\n\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t{\n\t\tvar lane = this.swimlanes[i];\n\t\tvar geo = this.graph.getCellGeometry(lane);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tvar children = this.graph.getChildCells(lane);\n\t\t\t\n\t\t\tvar size = (this.graph.isSwimlane(lane)) ?\n\t\t\t\t\tthis.graph.getStartSize(lane) : new mxRectangle();\n\n\t\t\tvar newGeo = geo.clone();\n\t\t\t\n\t\t\tvar leftGroupBorder = (i == 0) ? this.parentBorder : this.interRankCellSpacing/2;\n\t\t\tvar w = size.width + leftGroupBorder;\n\t\t\tvar x = childBounds[i].x - w;\n\t\t\tvar y = layoutBounds.y - this.parentBorder;\n\n\t\t\tnewGeo.x += x;\n\t\t\tnewGeo.y = y;\n\t\t\t\n\t\t\tnewGeo.width = childBounds[i].width + w + this.interRankCellSpacing/2;\n\t\t\tnewGeo.height = layoutBounds.height + size.height + 2 * this.parentBorder;\n\t\t\t\n\t\t\tthis.graph.model.setGeometry(lane, newGeo);\n\t\t\tthis.graph.moveCells(children, -x, geo.y - y);\n\t\t}\n\t}\n};\n\n/**\n * Function: findRoots\n * \n * Returns all visible children in the given parent which do not have\n * incoming edges. If the result is empty then the children with the\n * maximum difference between incoming and outgoing edges are returned.\n * This takes into account edges that are being promoted to the given\n * root due to invisible children or collapsed cells.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * vertices - array of vertices to limit search to\n */\nmxSwimlaneLayout.prototype.findRoots = function(parent, vertices)\n{\n\tvar roots = [];\n\t\n\tif (parent != null && vertices != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar best = null;\n\t\tvar maxDiff = -100000;\n\t\t\n\t\tfor (var i in vertices)\n\t\t{\n\t\t\tvar cell = vertices[i];\n\n\t\t\tif (cell != null && model.isVertex(cell) && this.graph.isCellVisible(cell) && model.isAncestor(parent, cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getEdges(cell);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\n\t\t\t\tfor (var k = 0; k < conns.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.getVisibleTerminal(conns[k], true);\n\n\t\t\t\t\tif (src == cell)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Only count connection within this swimlane\n\t\t\t\t\t\tvar other = this.getVisibleTerminal(conns[k], false);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (model.isAncestor(parent, other))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfanOut++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (model.isAncestor(parent, src))\n\t\t\t\t\t{\n\t\t\t\t\t\tfanIn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fanIn == 0 && fanOut > 0)\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\n\t\t\t\tvar diff = fanOut - fanIn;\n\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: getEdges\n * \n * Returns the connected edges for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n */\nmxSwimlaneLayout.prototype.getEdges = function(cell)\n{\n\tvar cachedEdges = this.edgesCache.get(cell);\n\t\n\tif (cachedEdges != null)\n\t{\n\t\treturn cachedEdges;\n\t}\n\n\tvar model = this.graph.model;\n\tvar edges = [];\n\tvar isCollapsed = this.graph.isCellCollapsed(cell);\n\tvar childCount = model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\n\t\tif (this.isPort(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t\telse if (isCollapsed || !this.graph.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t}\n\n\tedges = edges.concat(model.getEdges(cell, true, true));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar source = this.getVisibleTerminal(edges[i], true);\n\t\tvar target = this.getVisibleTerminal(edges[i], false);\n\t\t\n\t\tif ((source == target) || ((source != target) && ((target == cell && (this.parent == null || this.graph.isValidAncestor(source, this.parent, this.traverseAncestors))) ||\n\t\t\t(source == cell && (this.parent == null ||\n\t\t\t\t\tthis.graph.isValidAncestor(target, this.parent, this.traverseAncestors))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\tthis.edgesCache.put(cell, result);\n\n\treturn result;\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Helper function to return visible terminal for edge allowing for ports\n * \n * Parameters:\n * \n * edge - <mxCell> whose edges should be returned.\n * source - Boolean that specifies whether the source or target terminal is to be returned\n */\nmxSwimlaneLayout.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar terminalCache = this.edgesTargetTermCache;\n\t\n\tif (source)\n\t{\n\t\tterminalCache = this.edgeSourceTermCache;\n\t}\n\n\tvar term = terminalCache.get(edge);\n\n\tif (term != null)\n\t{\n\t\treturn term;\n\t}\n\n\tvar state = this.graph.view.getState(edge);\n\t\n\tvar terminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t\n\tif (terminal == null)\n\t{\n\t\tterminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t}\n\n\tif (terminal != null)\n\t{\n\t\tif (this.isPort(terminal))\n\t\t{\n\t\t\tterminal = this.graph.model.getParent(terminal);\n\t\t}\n\t\t\n\t\tterminalCache.put(edge, terminal);\n\t}\n\n\treturn terminal;\n};\n\n/**\n * Function: run\n * \n * The API method used to exercise the layout upon the graph description\n * and produce a separate description of the vertex position and edge\n * routing changes made. It runs each stage of the layout that has been\n * created.\n */\nmxSwimlaneLayout.prototype.run = function(parent)\n{\n\t// Separate out unconnected hierarchies\n\tvar hierarchyVertices = [];\n\tvar allVertexSet = Object();\n\n\tif (this.swimlanes != null && this.swimlanes.length > 0 && parent != null)\n\t{\n\t\tvar filledVertexSet = Object();\n\t\t\n\t\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t\t{\n\t\t\tthis.filterDescendants(this.swimlanes[i], filledVertexSet);\n\t\t}\n\n\t\tthis.roots = [];\n\t\tvar filledVertexSetEmpty = true;\n\n\t\t// Poor man's isSetEmpty\n\t\tfor (var key in filledVertexSet)\n\t\t{\n\t\t\tif (filledVertexSet[key] != null)\n\t\t\t{\n\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Only test for candidates in each swimlane in order\n\t\tvar laneCounter = 0;\n\n\t\twhile (!filledVertexSetEmpty && laneCounter < this.swimlanes.length)\n\t\t{\n\t\t\tvar candidateRoots = this.findRoots(this.swimlanes[laneCounter], filledVertexSet);\n\t\t\t\n\t\t\tif (candidateRoots.length == 0)\n\t\t\t{\n\t\t\t\tlaneCounter++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\t// If the candidate root is an unconnected group cell, remove it from\n\t\t\t// the layout. We may need a custom set that holds such groups and forces\n\t\t\t// them to be processed for resizing and/or moving.\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tvar vertexSet = Object();\n\t\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\t\tthis.traverse(candidateRoots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\t\thierarchyVertices, filledVertexSet, laneCounter);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tthis.roots.push(candidateRoots[i]);\n\t\t\t}\n\t\t\t\n\t\t\tfilledVertexSetEmpty = true;\n\t\t\t\n\t\t\t// Poor man's isSetEmpty\n\t\t\tfor (var key in filledVertexSet)\n\t\t\t{\n\t\t\t\tif (filledVertexSet[key] != null)\n\t\t\t\t{\n\t\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Find vertex set as directed traversal from roots\n\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar vertexSet = Object();\n\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\tthis.traverse(this.roots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\thierarchyVertices, null);\n\t\t}\n\t}\n\n\tvar tmp = [];\n\t\n\tfor (var key in allVertexSet)\n\t{\n\t\ttmp.push(allVertexSet[key]);\n\t}\n\t\n\tthis.model = new mxSwimlaneModel(this, tmp, this.roots,\n\t\tparent, this.tightenToSource);\n\n\tthis.cycleStage(parent);\n\tthis.layeringStage();\n\t\n\tthis.crossingStage(parent);\n\tthis.placementStage(0, parent);\n};\n\n/**\n * Function: filterDescendants\n * \n * Creates an array of descendant cells\n */\nmxSwimlaneLayout.prototype.filterDescendants = function(cell, result)\n{\n\tvar model = this.graph.model;\n\n\tif (model.isVertex(cell) && cell != this.parent && model.getParent(cell) != this.parent && this.graph.isCellVisible(cell))\n\t{\n\t\tresult[mxObjectIdentity.get(cell)] = cell;\n\t}\n\n\tif (this.traverseAncestors || cell == this.parent\n\t\t\t&& this.graph.isCellVisible(cell))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\n\t\t\t// Ignore ports in the layout vertex list, they are dealt with\n\t\t\t// in the traversal mechanisms\n\t\t\tif (!this.isPort(child))\n\t\t\t{\n\t\t\t\tthis.filterDescendants(child, result);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, its parent is the connecting vertex in terms of graph traversal\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxSwimlaneLayout.prototype.isPort = function(cell)\n{\n\tif (cell.geometry.relative)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and ports.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxSwimlaneLayout.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar src = this.getVisibleTerminal(edges[i], true);\n\t\tvar trg = this.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * allVertices - Array of cell paths for the visited cells.\n * swimlaneIndex - the laid out order index of the swimlane vertex is contained in\n */\nmxSwimlaneLayout.prototype.traverse = function(vertex, directed, edge, allVertices, currentComp,\n\t\t\t\t\t\t\t\t\t\t\thierarchyVertices, filledVertexSet, swimlaneIndex)\n{\n\tif (vertex != null && allVertices != null)\n\t{\n\t\t// Has this vertex been seen before in any traversal\n\t\t// And if the filled vertex set is populated, only \n\t\t// process vertices in that it contains\n\t\tvar vertexID = mxObjectIdentity.get(vertex);\n\t\t\n\t\tif ((allVertices[vertexID] == null)\n\t\t\t\t&& (filledVertexSet == null ? true : filledVertexSet[vertexID] != null))\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\tcurrentComp[vertexID] = vertex;\n\t\t\t}\n\t\t\tif (allVertices[vertexID] == null)\n\t\t\t{\n\t\t\t\tallVertices[vertexID] = vertex;\n\t\t\t}\n\n\t\t\tif (filledVertexSet !== null)\n\t\t\t{\n\t\t\t\tdelete filledVertexSet[vertexID];\n\t\t\t}\n\n\t\t\tvar edges = this.getEdges(vertex);\n\t\t\tvar model = this.graph.model;\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tvar otherVertex = this.getVisibleTerminal(edges[i], true);\n\t\t\t\tvar isSource = otherVertex == vertex;\n\t\t\t\t\n\t\t\t\tif (isSource)\n\t\t\t\t{\n\t\t\t\t\totherVertex = this.getVisibleTerminal(edges[i], false);\n\t\t\t\t}\n\n\t\t\t\tvar otherIndex = 0;\n\t\t\t\t// Get the swimlane index of the other terminal\n\t\t\t\tfor (otherIndex = 0; otherIndex < this.swimlanes.length; otherIndex++)\n\t\t\t\t{\n\t\t\t\t\tif (model.isAncestor(this.swimlanes[otherIndex], otherVertex))\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (otherIndex >= this.swimlanes.length)\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Traverse if the other vertex is within the same swimlane as\n\t\t\t\t// as the current vertex, or if the swimlane index of the other\n\t\t\t\t// vertex is greater than that of this vertex\n\t\t\t\tif ((otherIndex > swimlaneIndex) ||\n\t\t\t\t\t\t((!directed || isSource) && otherIndex == swimlaneIndex))\n\t\t\t\t{\n\t\t\t\t\tcurrentComp = this.traverse(otherVertex, directed, edges[i], allVertices,\n\t\t\t\t\t\t\tcurrentComp, hierarchyVertices,\n\t\t\t\t\t\t\tfilledVertexSet, otherIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\t// We've seen this vertex before, but not in the current component\n\t\t\t\t// This component and the one it's in need to be merged\n\t\t\t\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar comp = hierarchyVertices[i];\n\n\t\t\t\t\tif (comp[vertexID] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key in comp)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentComp[key] = comp[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Remove the current component from the hierarchy set\n\t\t\t\t\t\thierarchyVertices.splice(i, 1);\n\t\t\t\t\t\treturn currentComp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn currentComp;\n};\n\n/**\n * Function: cycleStage\n * \n * Executes the cycle stage using mxMinimumCycleRemover.\n */\nmxSwimlaneLayout.prototype.cycleStage = function(parent)\n{\n\tvar cycleStage = new mxSwimlaneOrdering(this);\n\tcycleStage.execute(parent);\n};\n\n/**\n * Function: layeringStage\n * \n * Implements first stage of a Sugiyama layout.\n */\nmxSwimlaneLayout.prototype.layeringStage = function()\n{\n\tthis.model.initialRank();\n\tthis.model.fixRanks();\n};\n\n/**\n * Function: crossingStage\n * \n * Executes the crossing stage using mxMedianHybridCrossingReduction.\n */\nmxSwimlaneLayout.prototype.crossingStage = function(parent)\n{\n\tvar crossingStage = new mxMedianHybridCrossingReduction(this);\n\tcrossingStage.execute(parent);\n};\n\n/**\n * Function: placementStage\n * \n * Executes the placement stage using mxCoordinateAssignment.\n */\nmxSwimlaneLayout.prototype.placementStage = function(initialX, parent)\n{\n\tvar placementStage = new mxCoordinateAssignment(this, this.intraCellSpacing,\n\t\t\tthis.interRankCellSpacing, this.orientation, initialX,\n\t\t\tthis.parallelEdgeSpacing);\n\tplacementStage.fineTuning = this.fineTuning;\n\tplacementStage.execute(parent);\n\t\n\treturn placementStage.limitX + this.interHierarchySpacing;\n};\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxGraphModel\n * \n * Extends <mxEventSource> to implement a graph model. The graph model acts as\n * a wrapper around the cells which are in charge of storing the actual graph\n * datastructure. The model acts as a transactional wrapper with event\n * notification for all changes, whereas the cells contain the atomic\n * operations for updating the actual datastructure.\n * \n * Layers:\n * \n * The cell hierarchy in the model must have a top-level root cell which\n * contains the layers (typically one default layer), which in turn contain the\n * top-level cells of the layers. This means each cell is contained in a layer.\n * If no layers are required, then all new cells should be added to the default\n * layer.\n * \n * Layers are useful for hiding and showing groups of cells, or for placing\n * groups of cells on top of other cells in the display. To identify a layer,\n * the <isLayer> function is used. It returns true if the parent of the given\n * cell is the root of the model.\n * \n * Events:\n * \n * See events section for more details. There is a new set of events for\n * tracking transactional changes as they happen. The events are called\n * startEdit for the initial beginUpdate, executed for each executed change\n * and endEdit for the terminal endUpdate. The executed event contains a\n * property called change which represents the change after execution.\n * \n * Encoding the model:\n * \n * To encode a graph model, use the following code:\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(graph.getModel());\n * (end)\n * \n * This will create an XML node that contains all the model information.\n * \n * Encoding and decoding changes:\n * \n * For the encoding of changes, a graph model listener is required that encodes\n * each change from the given array of changes.\n * \n * (code)\n * model.addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var changes = evt.getProperty('edit').changes;\n *   var nodes = [];\n *   var codec = new mxCodec();\n * \n *   for (var i = 0; i < changes.length; i++)\n *   {\n *     nodes.push(codec.encode(changes[i]));\n *   }\n *   // do something with the nodes\n * });\n * (end)\n * \n * For the decoding and execution of changes, the codec needs a lookup function\n * that allows it to resolve cell IDs as follows:\n * \n * (code)\n * var codec = new mxCodec();\n * codec.lookup = function(id)\n * {\n *   return model.getCell(id);\n * }\n * (end)\n * \n * For each encoded change (represented by a node), the following code can be\n * used to carry out the decoding and create a change object.\n * \n * (code)\n * var changes = [];\n * var change = codec.decode(node);\n * change.model = model;\n * change.execute();\n * changes.push(change);\n * (end)\n * \n * The changes can then be dispatched using the model as follows.\n * \n * (code)\n * var edit = new mxUndoableEdit(model, false);\n * edit.changes = changes;\n * \n * edit.notify = function()\n * {\n *   edit.source.fireEvent(new mxEventObject(mxEvent.CHANGE,\n *   \t'edit', edit, 'changes', edit.changes));\n *   edit.source.fireEvent(new mxEventObject(mxEvent.NOTIFY,\n *   \t'edit', edit, 'changes', edit.changes));\n * }\n * \n * model.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n * model.fireEvent(new mxEventObject(mxEvent.CHANGE,\n * \t\t'edit', edit, 'changes', changes));\n * (end)\n *\n * Event: mxEvent.CHANGE\n *\n * Fires when an undoable edit is dispatched. The <code>edit</code> property\n * contains the <mxUndoableEdit>. The <code>changes</code> property contains\n * the array of atomic changes inside the undoable edit. The changes property\n * is <strong>deprecated</strong>, please use edit.changes instead.\n *\n * Example:\n * \n * For finding newly inserted cells, the following code can be used:\n * \n * (code)\n * graph.model.addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var changes = evt.getProperty('edit').changes;\n * \n *   for (var i = 0; i < changes.length; i++)\n *   {\n *     var change = changes[i];\n *     \n *     if (change instanceof mxChildChange &&\n *       change.change.previous == null)\n *     {\n *       graph.startEditingAtCell(change.child);\n *       break;\n *     }\n *   }\n * });\n * (end)\n * \n * \n * Event: mxEvent.NOTIFY\n *\n * Same as <mxEvent.CHANGE>, this event can be used for classes that need to\n * implement a sync mechanism between this model and, say, a remote model. In\n * such a setup, only local changes should trigger a notify event and all\n * changes should trigger a change event.\n * \n * Event: mxEvent.EXECUTE\n * \n * Fires between begin- and endUpdate and after an atomic change was executed\n * in the model. The <code>change</code> property contains the atomic change\n * that was executed.\n * \n * Event: mxEvent.EXECUTED\n * \n * Fires between START_EDIT and END_EDIT after an atomic change was executed.\n * The <code>change</code> property contains the change that was executed.\n *\n * Event: mxEvent.BEGIN_UPDATE\n *\n * Fires after the <updateLevel> was incremented in <beginUpdate>. This event\n * contains no properties.\n * \n * Event: mxEvent.START_EDIT\n *\n * Fires after the <updateLevel> was changed from 0 to 1. This event\n * contains no properties.\n * \n * Event: mxEvent.END_UPDATE\n * \n * Fires after the <updateLevel> was decreased in <endUpdate> but before any\n * notification or change dispatching. The <code>edit</code> property contains\n * the <currentEdit>.\n * \n * Event: mxEvent.END_EDIT\n *\n * Fires after the <updateLevel> was changed from 1 to 0. This event\n * contains no properties.\n * \n * Event: mxEvent.BEFORE_UNDO\n * \n * Fires before the change is dispatched after the update level has reached 0\n * in <endUpdate>. The <code>edit</code> property contains the <curreneEdit>.\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the change was dispatched in <endUpdate>. The <code>edit</code>\n * property contains the <currentEdit>.\n * \n * Constructor: mxGraphModel\n * \n * Constructs a new graph model. If no root is specified then a new root\n * <mxCell> with a default layer is created.\n * \n * Parameters:\n * \n * root - <mxCell> that represents the root cell.\n */\nfunction mxGraphModel(root)\n{\n\tthis.currentEdit = this.createUndoableEdit();\n\t\n\tif (root != null)\n\t{\n\t\tthis.setRoot(root);\n\t}\n\telse\n\t{\n\t\tthis.clear();\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphModel.prototype = new mxEventSource();\nmxGraphModel.prototype.constructor = mxGraphModel;\n\n/**\n * Variable: root\n * \n * Holds the root cell, which in turn contains the cells that represent the\n * layers of the diagram as child cells. That is, the actual elements of the\n * diagram are supposed to live in the third generation of cells and below.\n */\nmxGraphModel.prototype.root = null;\n\n/**\n * Variable: cells\n * \n * Maps from Ids to cells.\n */\nmxGraphModel.prototype.cells = null;\n\n/**\n * Variable: maintainEdgeParent\n * \n * Specifies if edges should automatically be moved into the nearest common\n * ancestor of their terminals. Default is true.\n */\nmxGraphModel.prototype.maintainEdgeParent = true;\n\n/**\n * Variable: ignoreRelativeEdgeParent\n * \n * Specifies if relative edge parents should be ignored for finding the nearest\n * common ancestors of an edge's terminals. Default is true.\n */\nmxGraphModel.prototype.ignoreRelativeEdgeParent = true;\n\n/**\n * Variable: createIds\n * \n * Specifies if the model should automatically create Ids for new cells.\n * Default is true.\n */\nmxGraphModel.prototype.createIds = true;\n\n/**\n * Variable: prefix\n * \n * Defines the prefix of new Ids. Default is an empty string.\n */\nmxGraphModel.prototype.prefix = '';\n\n/**\n * Variable: postfix\n * \n * Defines the postfix of new Ids. Default is an empty string.\n */\nmxGraphModel.prototype.postfix = '';\n\n/**\n * Variable: nextId\n * \n * Specifies the next Id to be created. Initial value is 0.\n */\nmxGraphModel.prototype.nextId = 0;\n\n/**\n * Variable: currentEdit\n * \n * Holds the changes for the current transaction. If the transaction is\n * closed then a new object is created for this variable using\n * <createUndoableEdit>.\n */\nmxGraphModel.prototype.currentEdit = null;\n\n/**\n * Variable: updateLevel\n * \n * Counter for the depth of nested transactions. Each call to <beginUpdate>\n * will increment this number and each call to <endUpdate> will decrement\n * it. When the counter reaches 0, the transaction is closed and the\n * respective events are fired. Initial value is 0.\n */\nmxGraphModel.prototype.updateLevel = 0;\n\n/**\n * Variable: endingUpdate\n * \n * True if the program flow is currently inside endUpdate.\n */\nmxGraphModel.prototype.endingUpdate = false;\n\n/**\n * Function: clear\n *\n * Sets a new root using <createRoot>.\n */\nmxGraphModel.prototype.clear = function()\n{\n\tthis.setRoot(this.createRoot());\n};\n\n/**\n * Function: isCreateIds\n *\n * Returns <createIds>.\n */\nmxGraphModel.prototype.isCreateIds = function()\n{\n\treturn this.createIds;\n};\n\n/**\n * Function: setCreateIds\n *\n * Sets <createIds>.\n */\nmxGraphModel.prototype.setCreateIds = function(value)\n{\n\tthis.createIds = value;\n};\n\n/**\n * Function: createRoot\n *\n * Creates a new root cell with a default layer (child 0).\n */\nmxGraphModel.prototype.createRoot = function()\n{\n\tvar cell = new mxCell();\n\tcell.insert(new mxCell());\n\t\n\treturn cell;\n};\n\n/**\n * Function: getCell\n *\n * Returns the <mxCell> for the specified Id or null if no cell can be\n * found for the given Id.\n *\n * Parameters:\n * \n * id - A string representing the Id of the cell.\n */\nmxGraphModel.prototype.getCell = function(id)\n{\n\treturn (this.cells != null) ? this.cells[id] : null;\n};\n\n/**\n * Function: filterCells\n * \n * Returns the cells from the given array where the given filter function\n * returns true.\n */\nmxGraphModel.prototype.filterCells = function(cells, filter)\n{\n\tvar result = null;\n\t\n\tif (cells != null)\n\t{\n\t\tresult = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (filter(cells[i]))\n\t\t\t{\n\t\t\t\tresult.push(cells[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getDescendants\n * \n * Returns all descendants of the given cell and the cell itself in an array.\n * \n * Parameters:\n * \n * parent - <mxCell> whose descendants should be returned.\n */\nmxGraphModel.prototype.getDescendants = function(parent)\n{\n\treturn this.filterDescendants(null, parent);\n};\n\n/**\n * Function: filterDescendants\n * \n * Visits all cells recursively and applies the specified filter function\n * to each cell. If the function returns true then the cell is added\n * to the resulting array. The parent and result paramters are optional.\n * If parent is not specified then the recursion starts at <root>.\n * \n * Example:\n * The following example extracts all vertices from a given model:\n * (code)\n * var filter = function(cell)\n * {\n * \treturn model.isVertex(cell);\n * }\n * var vertices = model.filterDescendants(filter);\n * (end)\n * \n * Parameters:\n * \n * filter - JavaScript function that takes an <mxCell> as an argument\n * and returns a boolean.\n * parent - Optional <mxCell> that is used as the root of the recursion.\n */\nmxGraphModel.prototype.filterDescendants = function(filter, parent)\n{\n\t// Creates a new array for storing the result\n\tvar result = [];\n\n\t// Recursion starts at the root of the model\n\tparent = parent || this.getRoot();\n\t\n\t// Checks if the filter returns true for the cell\n\t// and adds it to the result array\n\tif (filter == null || filter(parent))\n\t{\n\t\tresult.push(parent);\n\t}\n\t\n\t// Visits the children of the cell\n\tvar childCount = this.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(parent, i);\n\t\tresult = result.concat(this.filterDescendants(filter, child));\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getRoot\n * \n * Returns the root of the model or the topmost parent of the given cell.\n *\n * Parameters:\n * \n * cell - Optional <mxCell> that specifies the child.\n */\nmxGraphModel.prototype.getRoot = function(cell)\n{\n\tvar root = cell || this.root;\n\t\n\tif (cell != null)\n\t{\n\t\twhile (cell != null)\n\t\t{\n\t\t\troot = cell;\n\t\t\tcell = this.getParent(cell);\n\t\t}\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: setRoot\n * \n * Sets the <root> of the model using <mxRootChange> and adds the change to\n * the current transaction. This resets all datastructures in the model and\n * is the preferred way of clearing an existing model. Returns the new\n * root.\n * \n * Example:\n * \n * (code)\n * var root = new mxCell();\n * root.insert(new mxCell());\n * model.setRoot(root);\n * (end)\n *\n * Parameters:\n * \n * root - <mxCell> that specifies the new root.\n */\nmxGraphModel.prototype.setRoot = function(root)\n{\n\tthis.execute(new mxRootChange(this, root));\n\t\n\treturn root;\n};\n\n/**\n * Function: rootChanged\n * \n * Inner callback to change the root of the model and update the internal\n * datastructures, such as <cells> and <nextId>. Returns the previous root.\n *\n * Parameters:\n * \n * root - <mxCell> that specifies the new root.\n */\nmxGraphModel.prototype.rootChanged = function(root)\n{\n\tvar oldRoot = this.root;\n\tthis.root = root;\n\t\n\t// Resets counters and datastructures\n\tthis.nextId = 0;\n\tthis.cells = null;\n\tthis.cellAdded(root);\n\t\n\treturn oldRoot;\n};\n\n/**\n * Function: isRoot\n * \n * Returns true if the given cell is the root of the model and a non-null\n * value.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible root.\n */\nmxGraphModel.prototype.isRoot = function(cell)\n{\n\treturn cell != null && this.root == cell;\n};\n\n/**\n * Function: isLayer\n * \n * Returns true if <isRoot> returns true for the parent of the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible layer.\n */\nmxGraphModel.prototype.isLayer = function(cell)\n{\n\treturn this.isRoot(this.getParent(cell));\n};\n\n/**\n * Function: isAncestor\n * \n * Returns true if the given parent is an ancestor of the given child. Note \n * returns true if child == parent.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent.\n * child - <mxCell> that specifies the child.\n */\nmxGraphModel.prototype.isAncestor = function(parent, child)\n{\n\twhile (child != null && child != parent)\n\t{\n\t\tchild = this.getParent(child);\n\t}\n\t\n\treturn child == parent;\n};\n\n/**\n * Function: contains\n * \n * Returns true if the model contains the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell.\n */\nmxGraphModel.prototype.contains = function(cell)\n{\n\treturn this.isAncestor(this.root, cell);\n};\n\n/**\n * Function: getParent\n * \n * Returns the parent of the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> whose parent should be returned.\n */\nmxGraphModel.prototype.getParent = function(cell)\n{\n\treturn (cell != null) ? cell.getParent() : null;\n};\n\n/**\n * Function: add\n * \n * Adds the specified child to the parent at the given index using\n * <mxChildChange> and adds the change to the current transaction. If no\n * index is specified then the child is appended to the parent's array of\n * children. Returns the inserted child.\n * \n * Parameters:\n * \n * parent - <mxCell> that specifies the parent to contain the child.\n * child - <mxCell> that specifies the child to be inserted.\n * index - Optional integer that specifies the index of the child.\n */\nmxGraphModel.prototype.add = function(parent, child, index)\n{\n\tif (child != parent && parent != null && child != null)\n\t{\t\n\t\t// Appends the child if no index was specified\n\t\tif (index == null)\n\t\t{\n\t\t\tindex = this.getChildCount(parent);\n\t\t}\n\t\t\n\t\tvar parentChanged = parent != this.getParent(child);\n\t\tthis.execute(new mxChildChange(this, parent, child, index));\n\n\t\t// Maintains the edges parents by moving the edges\n\t\t// into the nearest common ancestor of its terminals\n\t\tif (this.maintainEdgeParent && parentChanged)\n\t\t{\n\t\t\tthis.updateEdgeParents(child);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: cellAdded\n * \n * Inner callback to update <cells> when a cell has been added. This\n * implementation resolves collisions by creating new Ids. To change the\n * ID of a cell after it was inserted into the model, use the following\n * code:\n * \n * (code\n * delete model.cells[cell.getId()];\n * cell.setId(newId);\n * model.cells[cell.getId()] = cell;\n * (end)\n *\n * If the change of the ID should be part of the command history, then the\n * cell should be removed from the model and a clone with the new ID should\n * be reinserted into the model instead.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell that has been added.\n */\nmxGraphModel.prototype.cellAdded = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\t// Creates an Id for the cell if not Id exists\n\t\tif (cell.getId() == null && this.createIds)\n\t\t{\n\t\t\tcell.setId(this.createId(cell));\n\t\t}\n\t\t\n\t\tif (cell.getId() != null)\n\t\t{\n\t\t\tvar collision = this.getCell(cell.getId());\n\t\t\t\n\t\t\tif (collision != cell)\n\t\t\t{\t\n\t\t\t\t// Creates new Id for the cell\n\t\t\t\t// as long as there is a collision\n\t\t\t\twhile (collision != null)\n\t\t\t\t{\n\t\t\t\t\tcell.setId(this.createId(cell));\n\t\t\t\t\tcollision = this.getCell(cell.getId());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Lazily creates the cells dictionary\n\t\t\t\tif (this.cells == null)\n\t\t\t\t{\n\t\t\t\t\tthis.cells = new Object();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.cells[cell.getId()] = cell;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Makes sure IDs of deleted cells are not reused\n\t\tif (mxUtils.isNumeric(cell.getId()))\n\t\t{\n\t\t\tthis.nextId = Math.max(this.nextId, cell.getId());\n\t\t}\n\t\t\n\t\t// Recursively processes child cells\n\t\tvar childCount = this.getChildCount(cell);\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tthis.cellAdded(this.getChildAt(cell, i));\n\t\t}\n\t}\n};\n\n/**\n * Function: createId\n * \n * Hook method to create an Id for the specified cell. This implementation\n * concatenates <prefix>, id and <postfix> to create the Id and increments\n * <nextId>. The cell is ignored by this implementation, but can be used in\n * overridden methods to prefix the Ids with eg. the cell type.\n *\n * Parameters:\n *\n * cell - <mxCell> to create the Id for.\n */\nmxGraphModel.prototype.createId = function(cell)\n{\n\tvar id = this.nextId;\n\tthis.nextId++;\n\t\n\treturn this.prefix + id + this.postfix;\n};\n\n/**\n * Function: updateEdgeParents\n * \n * Updates the parent for all edges that are connected to cell or one of\n * its descendants using <updateEdgeParent>.\n */\nmxGraphModel.prototype.updateEdgeParents = function(cell, root)\n{\n\t// Gets the topmost node of the hierarchy\n\troot = root || this.getRoot(cell);\n\t\n\t// Updates edges on children first\n\tvar childCount = this.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(cell, i);\n\t\tthis.updateEdgeParents(child, root);\n\t}\n\t\n\t// Updates the parents of all connected edges\n\tvar edgeCount = this.getEdgeCount(cell);\n\tvar edges = [];\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tedges.push(this.getEdgeAt(cell, i));\n\t}\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar edge = edges[i];\n\t\t\n\t\t// Updates edge parent if edge and child have\n\t\t// a common root node (does not need to be the\n\t\t// model root node)\n\t\tif (this.isAncestor(root, edge))\n\t\t{\n\t\t\tthis.updateEdgeParent(edge, root);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateEdgeParent\n *\n * Inner callback to update the parent of the specified <mxCell> to the\n * nearest-common-ancestor of its two terminals.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * root - <mxCell> that represents the current root of the model.\n */\nmxGraphModel.prototype.updateEdgeParent = function(edge, root)\n{\n\tvar source = this.getTerminal(edge, true);\n\tvar target = this.getTerminal(edge, false);\n\tvar cell = null;\n\t\n\t// Uses the first non-relative descendants of the source terminal\n\twhile (source != null && !this.isEdge(source) &&\n\t\tsource.geometry != null && source.geometry.relative)\n\t{\n\t\tsource = this.getParent(source);\n\t}\n\t\n\t// Uses the first non-relative descendants of the target terminal\n\twhile (target != null && this.ignoreRelativeEdgeParent &&\n\t\t!this.isEdge(target) && target.geometry != null && \n\t\ttarget.geometry.relative)\n\t{\n\t\ttarget = this.getParent(target);\n\t}\n\t\n\tif (this.isAncestor(root, source) && this.isAncestor(root, target))\n\t{\n\t\tif (source == target)\n\t\t{\n\t\t\tcell = this.getParent(source);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcell = this.getNearestCommonAncestor(source, target);\n\t\t}\n\n\t\tif (cell != null && (this.getParent(cell) != this.root ||\n\t\t\tthis.isAncestor(cell, edge)) && this.getParent(edge) != cell)\n\t\t{\n\t\t\tvar geo = this.getGeometry(edge);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar origin1 = this.getOrigin(this.getParent(edge));\n\t\t\t\tvar origin2 = this.getOrigin(cell);\n\t\t\t\t\n\t\t\t\tvar dx = origin2.x - origin1.x;\n\t\t\t\tvar dy = origin2.y - origin1.y;\n\t\t\t\t\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.translate(-dx, -dy);\n\t\t\t\tthis.setGeometry(edge, geo);\n\t\t\t}\n\n\t\t\tthis.add(cell, edge, this.getChildCount(cell));\n\t\t}\n\t}\n};\n\n/**\n * Function: getOrigin\n * \n * Returns the absolute, accumulated origin for the children inside the\n * given parent as an <mxPoint>.\n */\nmxGraphModel.prototype.getOrigin = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tresult = this.getOrigin(this.getParent(cell));\n\t\t\n\t\tif (!this.isEdge(cell))\n\t\t{\n\t\t\tvar geo = this.getGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tresult.x += geo.x;\n\t\t\t\tresult.y += geo.y;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = new mxPoint();\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getNearestCommonAncestor\n * \n * Returns the nearest common ancestor for the specified cells.\n *\n * Parameters:\n * \n * cell1 - <mxCell> that specifies the first cell in the tree.\n * cell2 - <mxCell> that specifies the second cell in the tree.\n */\nmxGraphModel.prototype.getNearestCommonAncestor = function(cell1, cell2)\n{\n\tif (cell1 != null && cell2 != null)\n\t{\t\t\n\t\t// Creates the cell path for the second cell\n\t\tvar path = mxCellPath.create(cell2);\n\n\t\tif (path != null && path.length > 0)\n\t\t{\n\t\t\t// Bubbles through the ancestors of the first\n\t\t\t// cell to find the nearest common ancestor.\n\t\t\tvar cell = cell1;\n\t\t\tvar current = mxCellPath.create(cell);\n\t\t\t\n\t\t\t// Inverts arguments\n\t\t\tif (path.length < current.length)\n\t\t\t{\n\t\t\t\tcell = cell2;\n\t\t\t\tvar tmp = current;\n\t\t\t\tcurrent = path;\n\t\t\t\tpath = tmp;\n\t\t\t}\n\t\t\t\n\t\t\twhile (cell != null)\n\t\t\t{\n\t\t\t\tvar parent = this.getParent(cell);\n\t\t\t\t\n\t\t\t\t// Checks if the cell path is equal to the beginning of the given cell path\n\t\t\t\tif (path.indexOf(current + mxCellPath.PATH_SEPARATOR) == 0 && parent != null)\n\t\t\t\t{\n\t\t\t\t\treturn cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrent = mxCellPath.getParentPath(current);\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: remove\n * \n * Removes the specified cell from the model using <mxChildChange> and adds\n * the change to the current transaction. This operation will remove the\n * cell and all of its children from the model. Returns the removed cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that should be removed.\n */\nmxGraphModel.prototype.remove = function(cell)\n{\n\tif (cell == this.root)\n\t{\n\t\tthis.setRoot(null);\n\t}\n\telse if (this.getParent(cell) != null)\n\t{\n\t\tthis.execute(new mxChildChange(this, null, cell));\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellRemoved\n * \n * Inner callback to update <cells> when a cell has been removed.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell that has been removed.\n */\nmxGraphModel.prototype.cellRemoved = function(cell)\n{\n\tif (cell != null && this.cells != null)\n\t{\n\t\t// Recursively processes child cells\n\t\tvar childCount = this.getChildCount(cell);\n\t\t\n\t\tfor (var i = childCount - 1; i >= 0; i--)\n\t\t{\n\t\t\tthis.cellRemoved(this.getChildAt(cell, i));\n\t\t}\n\t\t\n\t\t// Removes the dictionary entry for the cell\n\t\tif (this.cells != null && cell.getId() != null)\n\t\t{\n\t\t\tdelete this.cells[cell.getId()];\n\t\t}\n\t}\n};\n\n/**\n * Function: parentForCellChanged\n * \n * Inner callback to update the parent of a cell using <mxCell.insert>\n * on the parent and return the previous parent.\n *\n * Parameters:\n * \n * cell - <mxCell> to update the parent for.\n * parent - <mxCell> that specifies the new parent of the cell.\n * index - Optional integer that defines the index of the child\n * in the parent's child array.\n */\nmxGraphModel.prototype.parentForCellChanged = function(cell, parent, index)\n{\n\tvar previous = this.getParent(cell);\n\t\n\tif (parent != null)\n\t{\n\t\tif (parent != previous || previous.getIndex(cell) != index)\n\t\t{\n\t\t\tparent.insert(cell, index);\n\t\t}\n\t}\n\telse if (previous != null)\n\t{\n\t\tvar oldIndex = previous.getIndex(cell);\n\t\tprevious.remove(oldIndex);\n\t}\n\t\n\t// Adds or removes the cell from the model\n\tvar par = this.contains(parent);\n\tvar pre = this.contains(previous);\n\t\n\tif (par && !pre)\n\t{\n\t\tthis.cellAdded(cell);\n\t}\n\telse if (pre && !par)\n\t{\n\t\tthis.cellRemoved(cell);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: getChildCount\n *\n * Returns the number of children in the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> whose number of children should be returned.\n */\nmxGraphModel.prototype.getChildCount = function(cell)\n{\n\treturn (cell != null) ? cell.getChildCount() : 0;\n};\n\n/**\n * Function: getChildAt\n *\n * Returns the child of the given <mxCell> at the given index.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the parent.\n * index - Integer that specifies the index of the child to be returned.\n */\nmxGraphModel.prototype.getChildAt = function(cell, index)\n{\n\treturn (cell != null) ? cell.getChildAt(index) : null;\n};\n\n/**\n * Function: getChildren\n * \n * Returns all children of the given <mxCell> as an array of <mxCells>. The\n * return value should be only be read.\n *\n * Parameters:\n * \n * cell - <mxCell> the represents the parent.\n */\nmxGraphModel.prototype.getChildren = function(cell)\n{\n\treturn (cell != null) ? cell.children : null;\n};\n\t\n/**\n * Function: getChildVertices\n * \n * Returns the child vertices of the given parent.\n *\n * Parameters:\n * \n * cell - <mxCell> whose child vertices should be returned.\n */\nmxGraphModel.prototype.getChildVertices = function(parent)\n{\n\treturn this.getChildCells(parent, true, false);\n};\n\t\t\n/**\n * Function: getChildEdges\n * \n * Returns the child edges of the given parent.\n *\n * Parameters:\n * \n * cell - <mxCell> whose child edges should be returned.\n */\nmxGraphModel.prototype.getChildEdges = function(parent)\n{\n\treturn this.getChildCells(parent, false, true);\n};\n\n/**\n * Function: getChildCells\n * \n * Returns the children of the given cell that are vertices and/or edges\n * depending on the arguments.\n *\n * Parameters:\n * \n * cell - <mxCell> the represents the parent.\n * vertices - Boolean indicating if child vertices should be returned.\n * Default is false.\n * edges - Boolean indicating if child edges should be returned.\n * Default is false.\n */\nmxGraphModel.prototype.getChildCells = function(parent, vertices, edges)\n{\n\tvertices = (vertices != null) ? vertices : false;\n\tedges = (edges != null) ? edges : false;\n\t\n\tvar childCount = this.getChildCount(parent);\n\tvar result = [];\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(parent, i);\n\n\t\tif ((!edges && !vertices) || (edges && this.isEdge(child)) ||\n\t\t\t(vertices && this.isVertex(child)))\n\t\t{\n\t\t\tresult.push(child);\n\t\t}\n\t}\n\n\treturn result;\n};\n\t\t\n/**\n * Function: getTerminal\n * \n * Returns the source or target <mxCell> of the given edge depending on the\n * value of the boolean parameter.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * isSource - Boolean indicating which end of the edge should be returned.\n */\nmxGraphModel.prototype.getTerminal = function(edge, isSource)\n{\n\treturn (edge != null) ? edge.getTerminal(isSource) : null;\n};\n\n/**\n * Function: setTerminal\n * \n * Sets the source or target terminal of the given <mxCell> using\n * <mxTerminalChange> and adds the change to the current transaction.\n * This implementation updates the parent of the edge using <updateEdgeParent>\n * if required.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * terminal - <mxCell> that specifies the new terminal.\n * isSource - Boolean indicating if the terminal is the new source or\n * target terminal of the edge.\n */\nmxGraphModel.prototype.setTerminal = function(edge, terminal, isSource)\n{\n\tvar terminalChanged = terminal != this.getTerminal(edge, isSource);\n\tthis.execute(new mxTerminalChange(this, edge, terminal, isSource));\n\t\n\tif (this.maintainEdgeParent && terminalChanged)\n\t{\n\t\tthis.updateEdgeParent(edge, this.getRoot());\n\t}\n\t\n\treturn terminal;\n};\n\t\n/**\n * Function: setTerminals\n * \n * Sets the source and target <mxCell> of the given <mxCell> in a single\n * transaction using <setTerminal> for each end of the edge.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * source - <mxCell> that specifies the new source terminal.\n * target - <mxCell> that specifies the new target terminal.\n */\nmxGraphModel.prototype.setTerminals = function(edge, source, target)\n{\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tthis.setTerminal(edge, source, true);\n\t\tthis.setTerminal(edge, target, false);\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: terminalForCellChanged\n * \n * Inner helper function to update the terminal of the edge using\n * <mxCell.insertEdge> and return the previous terminal.\n * \n * Parameters:\n * \n * edge - <mxCell> that specifies the edge to be updated.\n * terminal - <mxCell> that specifies the new terminal.\n * isSource - Boolean indicating if the terminal is the new source or\n * target terminal of the edge.\n */\nmxGraphModel.prototype.terminalForCellChanged = function(edge, terminal, isSource)\n{\n\tvar previous = this.getTerminal(edge, isSource);\n\t\n\tif (terminal != null)\n\t{\n\t\tterminal.insertEdge(edge, isSource);\n\t}\n\telse if (previous != null)\n\t{\n\t\tprevious.removeEdge(edge, isSource);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: getEdgeCount\n * \n * Returns the number of distinct edges connected to the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the vertex.\n */\nmxGraphModel.prototype.getEdgeCount = function(cell)\n{\n\treturn (cell != null) ? cell.getEdgeCount() : 0;\n};\n\n/**\n * Function: getEdgeAt\n * \n * Returns the edge of cell at the given index.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the vertex.\n * index - Integer that specifies the index of the edge\n * to return.\n */\nmxGraphModel.prototype.getEdgeAt = function(cell, index)\n{\n\treturn (cell != null) ? cell.getEdgeAt(index) : null;\n};\n\t\n/**\n * Function: getDirectedEdgeCount\n * \n * Returns the number of incoming or outgoing edges, ignoring the given\n * edge.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edge count should be returned.\n * outgoing - Boolean that specifies if the number of outgoing or\n * incoming edges should be returned.\n * ignoredEdge - <mxCell> that represents an edge to be ignored.\n */\nmxGraphModel.prototype.getDirectedEdgeCount = function(cell, outgoing, ignoredEdge)\n{\n\tvar count = 0;\n\tvar edgeCount = this.getEdgeCount(cell);\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(cell, i);\n\n\t\tif (edge != ignoredEdge && this.getTerminal(edge, outgoing) == cell)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\n\treturn count;\n};\n\n/**\n * Function: getConnections\n * \n * Returns all edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n * \n */\nmxGraphModel.prototype.getConnections = function(cell)\n{\n\treturn this.getEdges(cell, true, true, false);\n};\n\n/**\n * Function: getIncomingEdges\n * \n * Returns the incoming edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose incoming edges should be returned.\n * \n */\nmxGraphModel.prototype.getIncomingEdges = function(cell)\n{\n\treturn this.getEdges(cell, true, false, false);\n};\n\n/**\n * Function: getOutgoingEdges\n * \n * Returns the outgoing edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose outgoing edges should be returned.\n * \n */\nmxGraphModel.prototype.getOutgoingEdges = function(cell)\n{\n\treturn this.getEdges(cell, false, true, false);\n};\n\n/**\n * Function: getEdges\n * \n * Returns all distinct edges connected to this cell as a new array of\n * <mxCells>. If at least one of incoming or outgoing is true, then loops\n * are ignored, otherwise if both are false, then all edges connected to\n * the given cell are returned including loops.\n * \n * Parameters:\n * \n * cell - <mxCell> that specifies the cell.\n * incoming - Optional boolean that specifies if incoming edges should be\n * returned. Default is true.\n * outgoing - Optional boolean that specifies if outgoing edges should be\n * returned. Default is true.\n * includeLoops - Optional boolean that specifies if loops should be returned.\n * Default is true. \n */\nmxGraphModel.prototype.getEdges = function(cell, incoming, outgoing, includeLoops)\n{\n\tincoming = (incoming != null) ? incoming : true;\n\toutgoing = (outgoing != null) ? outgoing : true;\n\tincludeLoops = (includeLoops != null) ? includeLoops : true;\n\t\n\tvar edgeCount = this.getEdgeCount(cell);\n\tvar result = [];\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(cell, i);\n\t\tvar source = this.getTerminal(edge, true);\n\t\tvar target = this.getTerminal(edge, false);\n\n\t\tif ((includeLoops && source == target) || ((source != target) && ((incoming && target == cell) ||\n\t\t\t(outgoing && source == cell))))\n\t\t{\n\t\t\tresult.push(edge);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns all edges between the given source and target pair. If directed\n * is true, then only edges from the source to the target are returned,\n * otherwise, all edges between the two cells are returned.\n * \n * Parameters:\n * \n * source - <mxCell> that defines the source terminal of the edge to be\n * returned.\n * target - <mxCell> that defines the target terminal of the edge to be\n * returned.\n * directed - Optional boolean that specifies if the direction of the\n * edge should be taken into account. Default is false.\n */\nmxGraphModel.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\t\n\tvar tmp1 = this.getEdgeCount(source);\n\tvar tmp2 = this.getEdgeCount(target);\n\t\n\t// Assumes the source has less connected edges\n\tvar terminal = source;\n\tvar edgeCount = tmp1;\n\t\n\t// Uses the smaller array of connected edges\n\t// for searching the edge\n\tif (tmp2 < tmp1)\n\t{\n\t\tedgeCount = tmp2;\n\t\tterminal = target;\n\t}\n\t\n\tvar result = [];\n\t\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(terminal, i);\n\t\tvar src = this.getTerminal(edge, true);\n\t\tvar trg = this.getTerminal(edge, false);\n\t\tvar directedMatch = (src == source) && (trg == target);\n\t\tvar oppositeMatch = (trg == source) && (src == target);\n\n\t\tif (directedMatch || (!directed && oppositeMatch))\n\t\t{\n\t\t\tresult.push(edge);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getOpposites\n * \n * Returns all opposite vertices wrt terminal for the given edges, only\n * returning sources and/or targets as specified. The result is returned\n * as an array of <mxCells>.\n * \n * Parameters:\n * \n * edges - Array of <mxCells> that contain the edges to be examined.\n * terminal - <mxCell> that specifies the known end of the edges.\n * sources - Boolean that specifies if source terminals should be contained\n * in the result. Default is true.\n * targets - Boolean that specifies if target terminals should be contained\n * in the result. Default is true.\n */\nmxGraphModel.prototype.getOpposites = function(edges, terminal, sources, targets)\n{\n\tsources = (sources != null) ? sources : true;\n\ttargets = (targets != null) ? targets : true;\n\t\n\tvar terminals = [];\n\t\n\tif (edges != null)\n\t{\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tvar source = this.getTerminal(edges[i], true);\n\t\t\tvar target = this.getTerminal(edges[i], false);\n\t\t\t\n\t\t\t// Checks if the terminal is the source of\n\t\t\t// the edge and if the target should be\n\t\t\t// stored in the result\n\t\t\tif (source == terminal && target != null && target != terminal && targets)\n\t\t\t{\n\t\t\t\tterminals.push(target);\n\t\t\t}\n\t\t\t\n\t\t\t// Checks if the terminal is the taget of\n\t\t\t// the edge and if the source should be\n\t\t\t// stored in the result\n\t\t\telse if (target == terminal && source != null && source != terminal && sources)\n\t\t\t{\n\t\t\t\tterminals.push(source);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn terminals;\n};\n\n/**\n * Function: getTopmostCells\n * \n * Returns the topmost cells of the hierarchy in an array that contains no\n * descendants for each <mxCell> that it contains. Duplicates should be\n * removed in the cells array to improve performance.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose topmost ancestors should be returned.\n */\nmxGraphModel.prototype.getTopmostCells = function(cells)\n{\n\tvar dict = new mxDictionary();\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tdict.put(cells[i], true);\n\t}\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tvar cell = cells[i];\n\t\tvar topmost = true;\n\t\tvar parent = this.getParent(cell);\n\t\t\n\t\twhile (parent != null)\n\t\t{\n\t\t\tif (dict.get(parent))\n\t\t\t{\n\t\t\t\ttopmost = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tparent = this.getParent(parent);\n\t\t}\n\t\t\n\t\tif (topmost)\n\t\t{\n\t\t\ttmp.push(cell);\n\t\t}\n\t}\n\t\n\treturn tmp;\n};\n\n/**\n * Function: isVertex\n * \n * Returns true if the given cell is a vertex.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible vertex.\n */\nmxGraphModel.prototype.isVertex = function(cell)\n{\n\treturn (cell != null) ? cell.isVertex() : false;\n};\n\n/**\n * Function: isEdge\n * \n * Returns true if the given cell is an edge.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible edge.\n */\nmxGraphModel.prototype.isEdge = function(cell)\n{\n\treturn (cell != null) ? cell.isEdge() : false;\n};\n\n/**\n * Function: isConnectable\n * \n * Returns true if the given <mxCell> is connectable. If <edgesConnectable>\n * is false, then this function returns false for all edges else it returns\n * the return value of <mxCell.isConnectable>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose connectable state should be returned.\n */\nmxGraphModel.prototype.isConnectable = function(cell)\n{\n\treturn (cell != null) ? cell.isConnectable() : false;\n};\n\n/**\n * Function: getValue\n * \n * Returns the user object of the given <mxCell> using <mxCell.getValue>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose user object should be returned.\n */\nmxGraphModel.prototype.getValue = function(cell)\n{\n\treturn (cell != null) ? cell.getValue() : null;\n};\n\n/**\n * Function: setValue\n * \n * Sets the user object of then given <mxCell> using <mxValueChange>\n * and adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose user object should be changed.\n * value - Object that defines the new user object.\n */\nmxGraphModel.prototype.setValue = function(cell, value)\n{\n\tthis.execute(new mxValueChange(this, cell, value));\n\t\n\treturn value;\n};\n\n/**\n * Function: valueForCellChanged\n * \n * Inner callback to update the user object of the given <mxCell>\n * using <mxCell.valueChanged> and return the previous value,\n * that is, the return value of <mxCell.valueChanged>.\n * \n * To change a specific attribute in an XML node, the following code can be\n * used.\n * \n * (code)\n * graph.getModel().valueForCellChanged = function(cell, value)\n * {\n *   var previous = cell.value.getAttribute('label');\n *   cell.value.setAttribute('label', value);\n *   \n *   return previous;\n * };\n * (end) \n */\nmxGraphModel.prototype.valueForCellChanged = function(cell, value)\n{\n\treturn cell.valueChanged(value);\n};\n\n/**\n * Function: getGeometry\n * \n * Returns the <mxGeometry> of the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose geometry should be returned.\n */\nmxGraphModel.prototype.getGeometry = function(cell)\n{\n\treturn (cell != null) ? cell.getGeometry() : null;\n};\n\n/**\n * Function: setGeometry\n * \n * Sets the <mxGeometry> of the given <mxCell>. The actual update\n * of the cell is carried out in <geometryForCellChanged>. The\n * <mxGeometryChange> action is used to encapsulate the change.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be changed.\n * geometry - <mxGeometry> that defines the new geometry.\n */\nmxGraphModel.prototype.setGeometry = function(cell, geometry)\n{\n\tif (geometry != this.getGeometry(cell))\n\t{\n\t\tthis.execute(new mxGeometryChange(this, cell, geometry));\n\t}\n\t\n\treturn geometry;\n};\n\n/**\n * Function: geometryForCellChanged\n * \n * Inner callback to update the <mxGeometry> of the given <mxCell> using\n * <mxCell.setGeometry> and return the previous <mxGeometry>.\n */\nmxGraphModel.prototype.geometryForCellChanged = function(cell, geometry)\n{\n\tvar previous = this.getGeometry(cell);\n\tcell.setGeometry(geometry);\n\t\n\treturn previous;\n};\n\n/**\n * Function: getStyle\n * \n * Returns the style of the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose style should be returned.\n */\nmxGraphModel.prototype.getStyle = function(cell)\n{\n\treturn (cell != null) ? cell.getStyle() : null;\n};\n\n/**\n * Function: setStyle\n * \n * Sets the style of the given <mxCell> using <mxStyleChange> and\n * adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose style should be changed.\n * style - String of the form [stylename;|key=value;] to specify\n * the new cell style.\n */\nmxGraphModel.prototype.setStyle = function(cell, style)\n{\n\tif (style != this.getStyle(cell))\n\t{\n\t\tthis.execute(new mxStyleChange(this, cell, style));\n\t}\n\t\n\treturn style;\n};\n\n/**\n * Function: styleForCellChanged\n * \n * Inner callback to update the style of the given <mxCell>\n * using <mxCell.setStyle> and return the previous style.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * style - String of the form [stylename;|key=value;] to specify\n * the new cell style.\n */\nmxGraphModel.prototype.styleForCellChanged = function(cell, style)\n{\n\tvar previous = this.getStyle(cell);\n\tcell.setStyle(style);\n\t\n\treturn previous;\n};\n\n/**\n * Function: isCollapsed\n * \n * Returns true if the given <mxCell> is collapsed.\n *\n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be returned.\n */\nmxGraphModel.prototype.isCollapsed = function(cell)\n{\n\treturn (cell != null) ? cell.isCollapsed() : false;\n};\n\n/**\n * Function: setCollapsed\n * \n * Sets the collapsed state of the given <mxCell> using <mxCollapseChange>\n * and adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be changed.\n * collapsed - Boolean that specifies the new collpased state.\n */\nmxGraphModel.prototype.setCollapsed = function(cell, collapsed)\n{\n\tif (collapsed != this.isCollapsed(cell))\n\t{\n\t\tthis.execute(new mxCollapseChange(this, cell, collapsed));\n\t}\n\t\n\treturn collapsed;\n};\n\t\n/**\n * Function: collapsedStateForCellChanged\n *\n * Inner callback to update the collapsed state of the\n * given <mxCell> using <mxCell.setCollapsed> and return\n * the previous collapsed state.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * collapsed - Boolean that specifies the new collpased state.\n */\nmxGraphModel.prototype.collapsedStateForCellChanged = function(cell, collapsed)\n{\n\tvar previous = this.isCollapsed(cell);\n\tcell.setCollapsed(collapsed);\n\t\n\treturn previous;\n};\n\n/**\n * Function: isVisible\n * \n * Returns true if the given <mxCell> is visible.\n * \n * Parameters:\n * \n * cell - <mxCell> whose visible state should be returned.\n */\nmxGraphModel.prototype.isVisible = function(cell)\n{\n\treturn (cell != null) ? cell.isVisible() : false;\n};\n\n/**\n * Function: setVisible\n * \n * Sets the visible state of the given <mxCell> using <mxVisibleChange> and\n * adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose visible state should be changed.\n * visible - Boolean that specifies the new visible state.\n */\nmxGraphModel.prototype.setVisible = function(cell, visible)\n{\n\tif (visible != this.isVisible(cell))\n\t{\n\t\tthis.execute(new mxVisibleChange(this, cell, visible));\n\t}\n\t\n\treturn visible;\n};\n\t\n/**\n * Function: visibleStateForCellChanged\n *\n * Inner callback to update the visible state of the\n * given <mxCell> using <mxCell.setCollapsed> and return\n * the previous visible state.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * visible - Boolean that specifies the new visible state.\n */\nmxGraphModel.prototype.visibleStateForCellChanged = function(cell, visible)\n{\n\tvar previous = this.isVisible(cell);\n\tcell.setVisible(visible);\n\t\n\treturn previous;\n};\n\n/**\n * Function: execute\n * \n * Executes the given edit and fires events if required. The edit object\n * requires an execute function which is invoked. The edit is added to the\n * <currentEdit> between <beginUpdate> and <endUpdate> calls, so that\n * events will be fired if this execute is an individual transaction, that\n * is, if no previous <beginUpdate> calls have been made without calling\n * <endUpdate>. This implementation fires an <execute> event before\n * executing the given change.\n * \n * Parameters:\n * \n * change - Object that described the change.\n */\nmxGraphModel.prototype.execute = function(change)\n{\n\tchange.execute();\n\tthis.beginUpdate();\n\tthis.currentEdit.add(change);\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTE, 'change', change));\n\t// New global executed event\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\tthis.endUpdate();\n};\n\n/**\n * Function: beginUpdate\n * \n * Increments the <updateLevel> by one. The event notification\n * is queued until <updateLevel> reaches 0 by use of\n * <endUpdate>.\n *\n * All changes on <mxGraphModel> are transactional,\n * that is, they are executed in a single undoable change\n * on the model (without transaction isolation).\n * Therefore, if you want to combine any\n * number of changes into a single undoable change,\n * you should group any two or more API calls that\n * modify the graph model between <beginUpdate>\n * and <endUpdate> calls as shown here:\n * \n * (code)\n * var model = graph.getModel();\n * var parent = graph.getDefaultParent();\n * var index = model.getChildCount(parent);\n * model.beginUpdate();\n * try\n * {\n *   model.add(parent, v1, index);\n *   model.add(parent, v2, index+1);\n * }\n * finally\n * {\n *   model.endUpdate();\n * }\n * (end)\n * \n * Of course there is a shortcut for appending a\n * sequence of cells into the default parent:\n * \n * (code)\n * graph.addCells([v1, v2]).\n * (end)\n */\nmxGraphModel.prototype.beginUpdate = function()\n{\n\tthis.updateLevel++;\n\tthis.fireEvent(new mxEventObject(mxEvent.BEGIN_UPDATE));\n\t\n\tif (this.updateLevel == 1)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t}\n};\n\n/**\n * Function: endUpdate\n * \n * Decrements the <updateLevel> by one and fires an <undo>\n * event if the <updateLevel> reaches 0. This function\n * indirectly fires a <change> event by invoking the notify\n * function on the <currentEdit> und then creates a new\n * <currentEdit> using <createUndoableEdit>.\n *\n * The <undo> event is fired only once per edit, whereas\n * the <change> event is fired whenever the notify\n * function is invoked, that is, on undo and redo of\n * the edit.\n */\nmxGraphModel.prototype.endUpdate = function()\n{\n\tthis.updateLevel--;\n\t\n\tif (this.updateLevel == 0)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tif (!this.endingUpdate)\n\t{\n\t\tthis.endingUpdate = this.updateLevel == 0;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.END_UPDATE, 'edit', this.currentEdit));\n\n\t\ttry\n\t\t{\t\t\n\t\t\tif (this.endingUpdate && !this.currentEdit.isEmpty())\n\t\t\t{\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.BEFORE_UNDO, 'edit', this.currentEdit));\n\t\t\t\tvar tmp = this.currentEdit;\n\t\t\t\tthis.currentEdit = this.createUndoableEdit();\n\t\t\t\ttmp.notify();\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', tmp));\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.endingUpdate = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: createUndoableEdit\n * \n * Creates a new <mxUndoableEdit> that implements the\n * notify function to fire a <change> and <notify> event\n * through the <mxUndoableEdit>'s source.\n * \n * Parameters:\n * \n * significant - Optional boolean that specifies if the edit to be created is\n * significant. Default is true.\n */\nmxGraphModel.prototype.createUndoableEdit = function(significant)\n{\n\tvar edit = new mxUndoableEdit(this, (significant != null) ? significant : true);\n\t\n\tedit.notify = function()\n\t{\n\t\t// LATER: Remove changes property (deprecated)\n\t\tedit.source.fireEvent(new mxEventObject(mxEvent.CHANGE,\n\t\t\t'edit', edit, 'changes', edit.changes));\n\t\tedit.source.fireEvent(new mxEventObject(mxEvent.NOTIFY,\n\t\t\t'edit', edit, 'changes', edit.changes));\n\t};\n\t\n\treturn edit;\n};\n\n/**\n * Function: mergeChildren\n * \n * Merges the children of the given cell into the given target cell inside\n * this model. All cells are cloned unless there is a corresponding cell in\n * the model with the same id, in which case the source cell is ignored and\n * all edges are connected to the corresponding cell in this model. Edges\n * are considered to have no identity and are always cloned unless the\n * cloneAllEdges flag is set to false, in which case edges with the same\n * id in the target model are reconnected to reflect the terminals of the\n * source edges.\n */\nmxGraphModel.prototype.mergeChildren = function(from, to, cloneAllEdges)\n{\n\tcloneAllEdges = (cloneAllEdges != null) ? cloneAllEdges : true;\n\t\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tvar mapping = new Object();\n\t\tthis.mergeChildrenImpl(from, to, cloneAllEdges, mapping);\n\t\t\n\t\t// Post-processes all edges in the mapping and\n\t\t// reconnects the terminals to the corresponding\n\t\t// cells in the target model\n\t\tfor (var key in mapping)\n\t\t{\n\t\t\tvar cell = mapping[key];\n\t\t\tvar terminal = this.getTerminal(cell, true);\n\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tterminal = mapping[mxCellPath.create(terminal)];\n\t\t\t\tthis.setTerminal(cell, terminal, true);\n\t\t\t}\n\t\t\t\n\t\t\tterminal = this.getTerminal(cell, false);\n\t\t\t\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tterminal = mapping[mxCellPath.create(terminal)];\n\t\t\t\tthis.setTerminal(cell, terminal, false);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: mergeChildren\n * \n * Clones the children of the source cell into the given target cell in\n * this model and adds an entry to the mapping that maps from the source\n * cell to the target cell with the same id or the clone of the source cell\n * that was inserted into this model.\n */\nmxGraphModel.prototype.mergeChildrenImpl = function(from, to, cloneAllEdges, mapping)\n{\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tvar childCount = from.getChildCount();\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar cell = from.getChildAt(i);\n\t\t\t\n\t\t\tif (typeof(cell.getId) == 'function')\n\t\t\t{\n\t\t\t\tvar id = cell.getId();\n\t\t\t\tvar target = (id != null && (!this.isEdge(cell) || !cloneAllEdges)) ?\n\t\t\t\t\t\tthis.getCell(id) : null;\n\t\t\t\t\n\t\t\t\t// Clones and adds the child if no cell exists for the id\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\tvar clone = cell.clone();\n\t\t\t\t\tclone.setId(id);\n\t\t\t\t\t\n\t\t\t\t\t// Sets the terminals from the original cell to the clone\n\t\t\t\t\t// because the lookup uses strings not cells in JS\n\t\t\t\t\tclone.setTerminal(cell.getTerminal(true), true);\n\t\t\t\t\tclone.setTerminal(cell.getTerminal(false), false);\n\t\t\t\t\t\n\t\t\t\t\t// Do *NOT* use model.add as this will move the edge away\n\t\t\t\t\t// from the parent in updateEdgeParent if maintainEdgeParent\n\t\t\t\t\t// is enabled in the target model\n\t\t\t\t\ttarget = to.insert(clone);\n\t\t\t\t\tthis.cellAdded(target);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Stores the mapping for later reconnecting edges\n\t\t\t\tmapping[mxCellPath.create(cell)] = target;\n\t\t\t\t\n\t\t\t\t// Recurses\n\t\t\t\tthis.mergeChildrenImpl(cell, target, cloneAllEdges, mapping);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: getParents\n * \n * Returns an array that represents the set (no duplicates) of all parents\n * for the given array of cells.\n * \n * Parameters:\n * \n * cells - Array of cells whose parents should be returned.\n */\nmxGraphModel.prototype.getParents = function(cells)\n{\n\tvar parents = [];\n\t\n\tif (cells != null)\n\t{\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar parent = this.getParent(cells[i]);\n\t\t\t\n\t\t\tif (parent != null && !dict.get(parent))\n\t\t\t{\n\t\t\t\tdict.put(parent, true);\n\t\t\t\tparents.push(parent);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn parents;\n};\n\n//\n// Cell Cloning\n//\n\n/**\n * Function: cloneCell\n * \n * Returns a deep clone of the given <mxCell> (including\n * the children) which is created using <cloneCells>.\n *\n * Parameters:\n * \n * cell - <mxCell> to be cloned.\n */\nmxGraphModel.prototype.cloneCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\treturn this.cloneCells([cell], true)[0];\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: cloneCells\n * \n * Returns an array of clones for the given array of <mxCells>.\n * Depending on the value of includeChildren, a deep clone is created for\n * each cell. Connections are restored based if the corresponding\n * cell is contained in the passed in array.\n *\n * Parameters:\n * \n * cells - Array of <mxCell> to be cloned.\n * includeChildren - Boolean indicating if the cells should be cloned\n * with all descendants.\n * mapping - Optional mapping for existing clones.\n */\nmxGraphModel.prototype.cloneCells = function(cells, includeChildren, mapping)\n{\n\tmapping = (mapping != null) ? mapping : new Object();\n\tvar clones = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (cells[i] != null)\n\t\t{\n\t\t\tclones.push(this.cloneCellImpl(cells[i], mapping, includeChildren));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tclones.push(null);\n\t\t}\n\t}\n\t\n\tfor (var i = 0; i < clones.length; i++)\n\t{\n\t\tif (clones[i] != null)\n\t\t{\n\t\t\tthis.restoreClone(clones[i], cells[i], mapping);\n\t\t}\n\t}\n\t\n\treturn clones;\n};\n\t\t\t\n/**\n * Function: cloneCellImpl\n * \n * Inner helper method for cloning cells recursively.\n */\nmxGraphModel.prototype.cloneCellImpl = function(cell, mapping, includeChildren)\n{\n\tvar ident = mxObjectIdentity.get(cell);\n\tvar clone = mapping[ident];\n\t\n\tif (clone == null)\n\t{\n\t\tclone = this.cellCloned(cell);\n\t\tmapping[ident] = clone;\n\n\t\tif (includeChildren)\n\t\t{\n\t\t\tvar childCount = this.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar cloneChild = this.cloneCellImpl(\n\t\t\t\t\tthis.getChildAt(cell, i), mapping, true);\n\t\t\t\tclone.insert(cloneChild);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn clone;\n};\n\n/**\n * Function: cellCloned\n * \n * Hook for cloning the cell. This returns cell.clone() or\n * any possible exceptions.\n */\nmxGraphModel.prototype.cellCloned = function(cell)\n{\n\treturn cell.clone();\n};\n\n/**\n * Function: restoreClone\n * \n * Inner helper method for restoring the connections in\n * a network of cloned cells.\n */\nmxGraphModel.prototype.restoreClone = function(clone, cell, mapping)\n{\n\tvar source = this.getTerminal(cell, true);\n\t\n\tif (source != null)\n\t{\n\t\tvar tmp = mapping[mxObjectIdentity.get(source)];\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\ttmp.insertEdge(clone, true);\n\t\t}\n\t}\n\t\n\tvar target = this.getTerminal(cell, false);\n\t\n\tif (target != null)\n\t{\n\t\tvar tmp = mapping[mxObjectIdentity.get(target)];\n\t\t\n\t\tif (tmp != null)\n\t\t{\t\n\t\t\ttmp.insertEdge(clone, false);\n\t\t}\n\t}\n\t\n\tvar childCount = this.getChildCount(clone);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.restoreClone(this.getChildAt(clone, i),\n\t\t\tthis.getChildAt(cell, i), mapping);\n\t}\n};\n\n//\n// Atomic changes\n//\n\n/**\n * Class: mxRootChange\n * \n * Action to change the root in a model.\n *\n * Constructor: mxRootChange\n * \n * Constructs a change of the root in the\n * specified model.\n */\nfunction mxRootChange(model, root)\n{\n\tthis.model = model;\n\tthis.root = root;\n\tthis.previous = root;\n};\n\n/**\n * Function: execute\n * \n * Carries out a change of the root using\n * <mxGraphModel.rootChanged>.\n */\nmxRootChange.prototype.execute = function()\n{\n\tthis.root = this.previous;\n\tthis.previous = this.model.rootChanged(this.previous);\n};\n\n/**\n * Class: mxChildChange\n * \n * Action to add or remove a child in a model.\n *\n * Constructor: mxChildChange\n * \n * Constructs a change of a child in the\n * specified model.\n */\nfunction mxChildChange(model, parent, child, index)\n{\n\tthis.model = model;\n\tthis.parent = parent;\n\tthis.previous = parent;\n\tthis.child = child;\n\tthis.index = index;\n\tthis.previousIndex = index;\n};\n\n/**\n * Function: execute\n * \n * Changes the parent of <child> using\n * <mxGraphModel.parentForCellChanged> and\n * removes or restores the cell's\n * connections.\n */\nmxChildChange.prototype.execute = function()\n{\n\tif (this.child != null)\n\t{\n\t\tvar tmp = this.model.getParent(this.child);\n\t\tvar tmp2 = (tmp != null) ? tmp.getIndex(this.child) : 0;\n\t\t\n\t\tif (this.previous == null)\n\t\t{\n\t\t\tthis.connect(this.child, false);\n\t\t}\n\t\t\n\t\ttmp = this.model.parentForCellChanged(\n\t\t\tthis.child, this.previous, this.previousIndex);\n\t\t\t\n\t\tif (this.previous != null)\n\t\t{\n\t\t\tthis.connect(this.child, true);\n\t\t}\n\t\t\n\t\tthis.parent = this.previous;\n\t\tthis.previous = tmp;\n\t\tthis.index = this.previousIndex;\n\t\tthis.previousIndex = tmp2;\n\t}\n};\n\n/**\n * Function: disconnect\n * \n * Disconnects the given cell recursively from its\n * terminals and stores the previous terminal in the\n * cell's terminals.\n */\nmxChildChange.prototype.connect = function(cell, isConnect)\n{\n\tisConnect = (isConnect != null) ? isConnect : true;\n\t\n\tvar source = cell.getTerminal(true);\n\tvar target = cell.getTerminal(false);\n\t\n\tif (source != null)\n\t{\n\t\tif (isConnect)\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, source, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, null, true);\n\t\t}\n\t}\n\t\n\tif (target != null)\n\t{\n\t\tif (isConnect)\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, target, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, null, false);\n\t\t}\n\t}\n\t\n\tcell.setTerminal(source, true);\n\tcell.setTerminal(target, false);\n\t\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i=0; i<childCount; i++)\n\t{\n\t\tthis.connect(this.model.getChildAt(cell, i), isConnect);\n\t}\n};\n\n/**\n * Class: mxTerminalChange\n * \n * Action to change a terminal in a model.\n *\n * Constructor: mxTerminalChange\n * \n * Constructs a change of a terminal in the \n * specified model.\n */\nfunction mxTerminalChange(model, cell, terminal, source)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.terminal = terminal;\n\tthis.previous = terminal;\n\tthis.source = source;\n};\n\n/**\n * Function: execute\n * \n * Changes the terminal of <cell> to <previous> using\n * <mxGraphModel.terminalForCellChanged>.\n */\nmxTerminalChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.terminal = this.previous;\n\t\tthis.previous = this.model.terminalForCellChanged(\n\t\t\tthis.cell, this.previous, this.source);\n\t}\n};\n\n/**\n * Class: mxValueChange\n * \n * Action to change a user object in a model.\n *\n * Constructor: mxValueChange\n * \n * Constructs a change of a user object in the \n * specified model.\n */\nfunction mxValueChange(model, cell, value)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.value = value;\n\tthis.previous = value;\n};\n\n/**\n * Function: execute\n * \n * Changes the value of <cell> to <previous> using\n * <mxGraphModel.valueForCellChanged>.\n */\nmxValueChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.value = this.previous;\n\t\tthis.previous = this.model.valueForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxStyleChange\n * \n * Action to change a cell's style in a model.\n *\n * Constructor: mxStyleChange\n * \n * Constructs a change of a style in the\n * specified model.\n */\nfunction mxStyleChange(model, cell, style)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.style = style;\n\tthis.previous = style;\n};\n\n/**\n * Function: execute\n * \n * Changes the style of <cell> to <previous> using\n * <mxGraphModel.styleForCellChanged>.\n */\nmxStyleChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.style = this.previous;\n\t\tthis.previous = this.model.styleForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxGeometryChange\n * \n * Action to change a cell's geometry in a model.\n *\n * Constructor: mxGeometryChange\n * \n * Constructs a change of a geometry in the\n * specified model.\n */\nfunction mxGeometryChange(model, cell, geometry)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.geometry = geometry;\n\tthis.previous = geometry;\n};\n\n/**\n * Function: execute\n * \n * Changes the geometry of <cell> ro <previous> using\n * <mxGraphModel.geometryForCellChanged>.\n */\nmxGeometryChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.geometry = this.previous;\n\t\tthis.previous = this.model.geometryForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxCollapseChange\n * \n * Action to change a cell's collapsed state in a model.\n *\n * Constructor: mxCollapseChange\n * \n * Constructs a change of a collapsed state in the\n * specified model.\n */\nfunction mxCollapseChange(model, cell, collapsed)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.collapsed = collapsed;\n\tthis.previous = collapsed;\n};\n\n/**\n * Function: execute\n * \n * Changes the collapsed state of <cell> to <previous> using\n * <mxGraphModel.collapsedStateForCellChanged>.\n */\nmxCollapseChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.collapsed = this.previous;\n\t\tthis.previous = this.model.collapsedStateForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxVisibleChange\n * \n * Action to change a cell's visible state in a model.\n *\n * Constructor: mxVisibleChange\n * \n * Constructs a change of a visible state in the\n * specified model.\n */\nfunction mxVisibleChange(model, cell, visible)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.visible = visible;\n\tthis.previous = visible;\n};\n\n/**\n * Function: execute\n * \n * Changes the visible state of <cell> to <previous> using\n * <mxGraphModel.visibleStateForCellChanged>.\n */\nmxVisibleChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.visible = this.previous;\n\t\tthis.previous = this.model.visibleStateForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxCellAttributeChange\n * \n * Action to change the attribute of a cell's user object.\n * There is no method on the graph model that uses this\n * action. To use the action, you can use the code shown\n * in the example below.\n * \n * Example:\n * \n * To change the attributeName in the cell's user object\n * to attributeValue, use the following code:\n * \n * (code)\n * model.beginUpdate();\n * try\n * {\n *   var edit = new mxCellAttributeChange(\n *     cell, attributeName, attributeValue);\n *   model.execute(edit);\n * }\n * finally\n * {\n *   model.endUpdate();\n * } \n * (end)\n *\n * Constructor: mxCellAttributeChange\n * \n * Constructs a change of a attribute of the DOM node\n * stored as the value of the given <mxCell>.\n */\nfunction mxCellAttributeChange(cell, attribute, value)\n{\n\tthis.cell = cell;\n\tthis.attribute = attribute;\n\tthis.value = value;\n\tthis.previous = value;\n};\n\n/**\n * Function: execute\n * \n * Changes the attribute of the cell's user object by\n * using <mxCell.setAttribute>.\n */\nmxCellAttributeChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tvar tmp = this.cell.getAttribute(this.attribute);\n\t\t\n\t\tif (this.previous == null)\n\t\t{\n\t\t\tthis.cell.value.removeAttribute(this.attribute);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.cell.setAttribute(this.attribute, this.previous);\n\t\t}\n\t\t\n\t\tthis.previous = tmp;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCell\n *\n * Cells are the elements of the graph model. They represent the state\n * of the groups, vertices and edges in a graph.\n * \n * Custom attributes:\n * \n * For custom attributes we recommend using an XML node as the value of a cell.\n * The following code can be used to create a cell with an XML node as the\n * value:\n * \n * (code)\n * var doc = mxUtils.createXmlDocument();\n * var node = doc.createElement('MyNode')\n * node.setAttribute('label', 'MyLabel');\n * node.setAttribute('attribute1', 'value1');\n * graph.insertVertex(graph.getDefaultParent(), null, node, 40, 40, 80, 30);\n * (end)\n * \n * For the label to work, <mxGraph.convertValueToString> and\n * <mxGraph.cellLabelChanged> should be overridden as follows:\n * \n * (code)\n * graph.convertValueToString = function(cell)\n * {\n *   if (mxUtils.isNode(cell.value))\n *   {\n *     return cell.getAttribute('label', '')\n *   }\n * };\n * \n * var cellLabelChanged = graph.cellLabelChanged;\n * graph.cellLabelChanged = function(cell, newValue, autoSize)\n * {\n *   if (mxUtils.isNode(cell.value))\n *   {\n *     // Clones the value for correct undo/redo\n *     var elt = cell.value.cloneNode(true);\n *     elt.setAttribute('label', newValue);\n *     newValue = elt;\n *   }\n *   \n *   cellLabelChanged.apply(this, arguments);\n * };\n * (end)\n * \n * Callback: onInit\n *\n * Called from within the constructor.\n * \n * Constructor: mxCell\n *\n * Constructs a new cell to be used in a graph model.\n * This method invokes <onInit> upon completion.\n * \n * Parameters:\n * \n * value - Optional object that represents the cell value.\n * geometry - Optional <mxGeometry> that specifies the geometry.\n * style - Optional formatted string that defines the style.\n */\nfunction mxCell(value, geometry, style)\n{\n\tthis.value = value;\n\tthis.setGeometry(geometry);\n\tthis.setStyle(style);\n\t\n\tif (this.onInit != null)\n\t{\n\t\tthis.onInit();\n\t}\n};\n\n/**\n * Variable: id\n *\n * Holds the Id. Default is null.\n */\nmxCell.prototype.id = null;\n\n/**\n * Variable: value\n *\n * Holds the user object. Default is null.\n */\nmxCell.prototype.value = null;\n\n/**\n * Variable: geometry\n *\n * Holds the <mxGeometry>. Default is null.\n */\nmxCell.prototype.geometry = null;\n\n/**\n * Variable: style\n *\n * Holds the style as a string of the form [(stylename|key=value);]. Default is\n * null.\n */\nmxCell.prototype.style = null;\n\n/**\n * Variable: vertex\n *\n * Specifies whether the cell is a vertex. Default is false.\n */\nmxCell.prototype.vertex = false;\n\n/**\n * Variable: edge\n *\n * Specifies whether the cell is an edge. Default is false.\n */\nmxCell.prototype.edge = false;\n\n/**\n * Variable: connectable\n *\n * Specifies whether the cell is connectable. Default is true.\n */\nmxCell.prototype.connectable = true;\n\n/**\n * Variable: visible\n *\n * Specifies whether the cell is visible. Default is true.\n */\nmxCell.prototype.visible = true;\n\n/**\n * Variable: collapsed\n *\n * Specifies whether the cell is collapsed. Default is false.\n */\nmxCell.prototype.collapsed = false;\n\n/**\n * Variable: parent\n *\n * Reference to the parent cell.\n */\nmxCell.prototype.parent = null;\n\n/**\n * Variable: source\n *\n * Reference to the source terminal.\n */\nmxCell.prototype.source = null;\n\n/**\n * Variable: target\n *\n * Reference to the target terminal.\n */\nmxCell.prototype.target = null;\n\n/**\n * Variable: children\n *\n * Holds the child cells.\n */\nmxCell.prototype.children = null;\n\n/**\n * Variable: edges\n *\n * Holds the edges.\n */\nmxCell.prototype.edges = null;\n\n/**\n * Variable: mxTransient\n *\n * List of members that should not be cloned inside <clone>. This field is\n * passed to <mxUtils.clone> and is not made persistent in <mxCellCodec>.\n * This is not a convention for all classes, it is only used in this class\n * to mark transient fields since transient modifiers are not supported by\n * the language.\n */\nmxCell.prototype.mxTransient = ['id', 'value', 'parent', 'source',\n                                'target', 'children', 'edges'];\n\n/**\n * Function: getId\n *\n * Returns the Id of the cell as a string.\n */\nmxCell.prototype.getId = function()\n{\n\treturn this.id;\n};\n\t\t\n/**\n * Function: setId\n *\n * Sets the Id of the cell to the given string.\n */\nmxCell.prototype.setId = function(id)\n{\n\tthis.id = id;\n};\n\n/**\n * Function: getValue\n *\n * Returns the user object of the cell. The user\n * object is stored in <value>.\n */\nmxCell.prototype.getValue = function()\n{\n\treturn this.value;\n};\n\t\t\n/**\n * Function: setValue\n *\n * Sets the user object of the cell. The user object\n * is stored in <value>.\n */\nmxCell.prototype.setValue = function(value)\n{\n\tthis.value = value;\n};\n\n/**\n * Function: valueChanged\n *\n * Changes the user object after an in-place edit\n * and returns the previous value. This implementation\n * replaces the user object with the given value and\n * returns the old user object.\n */\nmxCell.prototype.valueChanged = function(newValue)\n{\n\tvar previous = this.getValue();\n\tthis.setValue(newValue);\n\t\n\treturn previous;\n};\n\n/**\n * Function: getGeometry\n *\n * Returns the <mxGeometry> that describes the <geometry>.\n */\nmxCell.prototype.getGeometry = function()\n{\n\treturn this.geometry;\n};\n\n/**\n * Function: setGeometry\n *\n * Sets the <mxGeometry> to be used as the <geometry>.\n */\nmxCell.prototype.setGeometry = function(geometry)\n{\n\tthis.geometry = geometry;\n};\n\n/**\n * Function: getStyle\n *\n * Returns a string that describes the <style>.\n */\nmxCell.prototype.getStyle = function()\n{\n\treturn this.style;\n};\n\n/**\n * Function: setStyle\n *\n * Sets the string to be used as the <style>.\n */\nmxCell.prototype.setStyle = function(style)\n{\n\tthis.style = style;\n};\n\n/**\n * Function: isVertex\n *\n * Returns true if the cell is a vertex.\n */\nmxCell.prototype.isVertex = function()\n{\n\treturn this.vertex != 0;\n};\n\n/**\n * Function: setVertex\n *\n * Specifies if the cell is a vertex. This should only be assigned at\n * construction of the cell and not be changed during its lifecycle.\n * \n * Parameters:\n * \n * vertex - Boolean that specifies if the cell is a vertex.\n */\nmxCell.prototype.setVertex = function(vertex)\n{\n\tthis.vertex = vertex;\n};\n\n/**\n * Function: isEdge\n *\n * Returns true if the cell is an edge.\n */\nmxCell.prototype.isEdge = function()\n{\n\treturn this.edge != 0;\n};\n\t\n/**\n * Function: setEdge\n * \n * Specifies if the cell is an edge. This should only be assigned at\n * construction of the cell and not be changed during its lifecycle.\n * \n * Parameters:\n * \n * edge - Boolean that specifies if the cell is an edge.\n */\nmxCell.prototype.setEdge = function(edge)\n{\n\tthis.edge = edge;\n};\n\n/**\n * Function: isConnectable\n *\n * Returns true if the cell is connectable.\n */\nmxCell.prototype.isConnectable = function()\n{\n\treturn this.connectable != 0;\n};\n\n/**\n * Function: setConnectable\n *\n * Sets the connectable state.\n * \n * Parameters:\n * \n * connectable - Boolean that specifies the new connectable state.\n */\nmxCell.prototype.setConnectable = function(connectable)\n{\n\tthis.connectable = connectable;\n};\n\n/**\n * Function: isVisible\n *\n * Returns true if the cell is visibile.\n */\nmxCell.prototype.isVisible = function()\n{\n\treturn this.visible != 0;\n};\n\n/**\n * Function: setVisible\n *\n * Specifies if the cell is visible.\n * \n * Parameters:\n * \n * visible - Boolean that specifies the new visible state.\n */\nmxCell.prototype.setVisible = function(visible)\n{\n\tthis.visible = visible;\n};\n\n/**\n * Function: isCollapsed\n *\n * Returns true if the cell is collapsed.\n */\nmxCell.prototype.isCollapsed = function()\n{\n\treturn this.collapsed != 0;\n};\n\n/**\n * Function: setCollapsed\n *\n * Sets the collapsed state.\n * \n * Parameters:\n * \n * collapsed - Boolean that specifies the new collapsed state.\n */\nmxCell.prototype.setCollapsed = function(collapsed)\n{\n\tthis.collapsed = collapsed;\n};\n\n/**\n * Function: getParent\n *\n * Returns the cell's parent.\n */\nmxCell.prototype.getParent = function()\n{\n\treturn this.parent;\n};\n\n/**\n * Function: setParent\n *\n * Sets the parent cell.\n * \n * Parameters:\n * \n * parent - <mxCell> that represents the new parent.\n */\nmxCell.prototype.setParent = function(parent)\n{\n\tthis.parent = parent;\n};\n\n/**\n * Function: getTerminal\n *\n * Returns the source or target terminal.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source terminal should be\n * returned.\n */\nmxCell.prototype.getTerminal = function(source)\n{\n\treturn (source) ? this.source : this.target;\n};\n\n/**\n * Function: setTerminal\n *\n * Sets the source or target terminal and returns the new terminal.\n * \n * Parameters:\n * \n * terminal - <mxCell> that represents the new source or target terminal.\n * isSource - Boolean that specifies if the source or target terminal\n * should be set.\n */\nmxCell.prototype.setTerminal = function(terminal, isSource)\n{\n\tif (isSource)\n\t{\n\t\tthis.source = terminal;\n\t}\n\telse\n\t{\n\t\tthis.target = terminal;\n\t}\n\t\n\treturn terminal;\n};\n\n/**\n * Function: getChildCount\n *\n * Returns the number of child cells.\n */\nmxCell.prototype.getChildCount = function()\n{\n\treturn (this.children == null) ? 0 : this.children.length;\n};\n\n/**\n * Function: getIndex\n *\n * Returns the index of the specified child in the child array.\n * \n * Parameters:\n * \n * child - Child whose index should be returned.\n */\nmxCell.prototype.getIndex = function(child)\n{\n\treturn mxUtils.indexOf(this.children, child);\n};\n\n/**\n * Function: getChildAt\n *\n * Returns the child at the specified index.\n * \n * Parameters:\n * \n * index - Integer that specifies the child to be returned.\n */\nmxCell.prototype.getChildAt = function(index)\n{\n\treturn (this.children == null) ? null : this.children[index];\n};\n\n/**\n * Function: insert\n *\n * Inserts the specified child into the child array at the specified index\n * and updates the parent reference of the child. If not childIndex is\n * specified then the child is appended to the child array. Returns the\n * inserted child.\n * \n * Parameters:\n * \n * child - <mxCell> to be inserted or appended to the child array.\n * index - Optional integer that specifies the index at which the child\n * should be inserted into the child array.\n */\nmxCell.prototype.insert = function(child, index)\n{\n\tif (child != null)\n\t{\n\t\tif (index == null)\n\t\t{\n\t\t\tindex = this.getChildCount();\n\t\t\t\n\t\t\tif (child.getParent() == this)\n\t\t\t{\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\n\t\tchild.removeFromParent();\n\t\tchild.setParent(this);\n\t\t\n\t\tif (this.children == null)\n\t\t{\n\t\t\tthis.children = [];\n\t\t\tthis.children.push(child);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.children.splice(index, 0, child);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: remove\n *\n * Removes the child at the specified index from the child array and\n * returns the child that was removed. Will remove the parent reference of\n * the child.\n * \n * Parameters:\n * \n * index - Integer that specifies the index of the child to be\n * removed.\n */\nmxCell.prototype.remove = function(index)\n{\n\tvar child = null;\n\t\n\tif (this.children != null && index >= 0)\n\t{\n\t\tchild = this.getChildAt(index);\n\t\t\n\t\tif (child != null)\n\t\t{\n\t\t\tthis.children.splice(index, 1);\n\t\t\tchild.setParent(null);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: removeFromParent\n *\n * Removes the cell from its parent.\n */\nmxCell.prototype.removeFromParent = function()\n{\n\tif (this.parent != null)\n\t{\n\t\tvar index = this.parent.getIndex(this);\n\t\tthis.parent.remove(index);\n\t}\n};\n\n/**\n * Function: getEdgeCount\n *\n * Returns the number of edges in the edge array.\n */\nmxCell.prototype.getEdgeCount = function()\n{\n\treturn (this.edges == null) ? 0 : this.edges.length;\n};\n\n/**\n * Function: getEdgeIndex\n *\n * Returns the index of the specified edge in <edges>.\n * \n * Parameters:\n * \n * edge - <mxCell> whose index in <edges> should be returned.\n */\nmxCell.prototype.getEdgeIndex = function(edge)\n{\n\treturn mxUtils.indexOf(this.edges, edge);\n};\n\n/**\n * Function: getEdgeAt\n *\n * Returns the edge at the specified index in <edges>.\n * \n * Parameters:\n * \n * index - Integer that specifies the index of the edge to be returned.\n */\nmxCell.prototype.getEdgeAt = function(index)\n{\n\treturn (this.edges == null) ? null : this.edges[index];\n};\n\n/**\n * Function: insertEdge\n *\n * Inserts the specified edge into the edge array and returns the edge.\n * Will update the respective terminal reference of the edge.\n * \n * Parameters:\n * \n * edge - <mxCell> to be inserted into the edge array.\n * isOutgoing - Boolean that specifies if the edge is outgoing.\n */\nmxCell.prototype.insertEdge = function(edge, isOutgoing)\n{\n\tif (edge != null)\n\t{\n\t\tedge.removeFromTerminal(isOutgoing);\n\t\tedge.setTerminal(this, isOutgoing);\n\t\t\n\t\tif (this.edges == null ||\n\t\t\tedge.getTerminal(!isOutgoing) != this ||\n\t\t\tmxUtils.indexOf(this.edges, edge) < 0)\n\t\t{\n\t\t\tif (this.edges == null)\n\t\t\t{\n\t\t\t\tthis.edges = [];\n\t\t\t}\n\t\t\t\n\t\t\tthis.edges.push(edge);\n\t\t}\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: removeEdge\n *\n * Removes the specified edge from the edge array and returns the edge.\n * Will remove the respective terminal reference from the edge.\n * \n * Parameters:\n * \n * edge - <mxCell> to be removed from the edge array.\n * isOutgoing - Boolean that specifies if the edge is outgoing.\n */\nmxCell.prototype.removeEdge = function(edge, isOutgoing)\n{\n\tif (edge != null)\n\t{\n\t\tif (edge.getTerminal(!isOutgoing) != this &&\n\t\t\tthis.edges != null)\n\t\t{\n\t\t\tvar index = this.getEdgeIndex(edge);\n\t\t\t\n\t\t\tif (index >= 0)\n\t\t\t{\n\t\t\t\tthis.edges.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\tedge.setTerminal(null, isOutgoing);\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: removeFromTerminal\n *\n * Removes the edge from its source or target terminal.\n * \n * Parameters:\n * \n * isSource - Boolean that specifies if the edge should be removed from its\n * source or target terminal.\n */\nmxCell.prototype.removeFromTerminal = function(isSource)\n{\n\tvar terminal = this.getTerminal(isSource);\n\t\n\tif (terminal != null)\n\t{\n\t\tterminal.removeEdge(this, isSource);\n\t}\n};\n\n/**\n * Function: hasAttribute\n * \n * Returns true if the user object is an XML node that contains the given\n * attribute.\n * \n * Parameters:\n * \n * name - Name of the attribute.\n */\nmxCell.prototype.hasAttribute = function(name)\n{\n\tvar userObject = this.getValue();\n\t\n\treturn (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT && userObject.hasAttribute) ?\n\t\tuserObject.hasAttribute(name) : userObject.getAttribute(name) != null;\n};\n\n/**\n * Function: getAttribute\n *\n * Returns the specified attribute from the user object if it is an XML\n * node.\n * \n * Parameters:\n * \n * name - Name of the attribute whose value should be returned.\n * defaultValue - Optional default value to use if the attribute has no\n * value.\n */\nmxCell.prototype.getAttribute = function(name, defaultValue)\n{\n\tvar userObject = this.getValue();\n\t\n\tvar val = (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT) ?\n\t\tuserObject.getAttribute(name) : null;\n\t\t\n\treturn (val != null) ? val : defaultValue;\n};\n\n/**\n * Function: setAttribute\n *\n * Sets the specified attribute on the user object if it is an XML node.\n * \n * Parameters:\n * \n * name - Name of the attribute whose value should be set.\n * value - New value of the attribute.\n */\nmxCell.prototype.setAttribute = function(name, value)\n{\n\tvar userObject = this.getValue();\n\t\n\tif (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tuserObject.setAttribute(name, value);\n\t}\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of the cell. Uses <cloneValue> to clone\n * the user object. All fields in <mxTransient> are ignored\n * during the cloning.\n */\nmxCell.prototype.clone = function()\n{\n\tvar clone = mxUtils.clone(this, this.mxTransient);\n\tclone.setValue(this.cloneValue());\n\t\n\treturn clone;\n};\n\n/**\n * Function: cloneValue\n *\n * Returns a clone of the cell's user object.\n */\nmxCell.prototype.cloneValue = function()\n{\n\tvar value = this.getValue();\n\t\n\tif (value != null)\n\t{\n\t\tif (typeof(value.clone) == 'function')\n\t\t{\n\t\t\tvalue = value.clone();\n\t\t}\n\t\telse if (!isNaN(value.nodeType))\n\t\t{\n\t\t\tvalue = value.cloneNode(true);\n\t\t}\n\t}\n\t\n\treturn value;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGeometry\n * \n * Extends <mxRectangle> to represent the geometry of a cell.\n * \n * For vertices, the geometry consists of the x- and y-location, and the width\n * and height. For edges, the geometry consists of the optional terminal- and\n * control points. The terminal points are only required if an edge is\n * unconnected, and are stored in the sourcePoint> and <targetPoint>\n * variables, respectively.\n * \n * Example:\n * \n * If an edge is unconnected, that is, it has no source or target terminal,\n * then a geometry with terminal points for a new edge can be defined as\n * follows.\n * \n * (code)\n * geometry.setTerminalPoint(new mxPoint(x1, y1), true);\n * geometry.points = [new mxPoint(x2, y2)];\n * geometry.setTerminalPoint(new mxPoint(x3, y3), false);\n * (end)\n * \n * Control points are used regardless of the connected state of an edge and may\n * be ignored or interpreted differently depending on the edge's <mxEdgeStyle>.\n * \n * To disable automatic reset of control points after a cell has been moved or\n * resized, the the <mxGraph.resizeEdgesOnMove> and\n * <mxGraph.resetEdgesOnResize> may be used.\n *\n * Edge Labels:\n * \n * Using the x- and y-coordinates of a cell's geometry, it is possible to\n * position the label on edges on a specific location on the actual edge shape\n * as it appears on the screen. The x-coordinate of an edge's geometry is used\n * to describe the distance from the center of the edge from -1 to 1 with 0\n * being the center of the edge and the default value. The y-coordinate of an\n * edge's geometry is used to describe the absolute, orthogonal distance in\n * pixels from that point. In addition, the <mxGeometry.offset> is used as an\n * absolute offset vector from the resulting point.\n * \n * This coordinate system is applied if <relative> is true, otherwise the\n * offset defines the absolute vector from the edge's center point to the\n * label and the values for <x> and <y> are ignored.\n * \n * The width and height parameter for edge geometries can be used to set the\n * label width and height (eg. for word wrapping).\n * \n * Ports:\n * \n * The term \"port\" refers to a relatively positioned, connectable child cell,\n * which is used to specify the connection between the parent and another cell\n * in the graph. Ports are typically modeled as vertices with relative\n * geometries.\n * \n * Offsets:\n * \n * The <offset> field is interpreted in 3 different ways, depending on the cell\n * and the geometry. For edges, the offset defines the absolute offset for the\n * edge label. For relative geometries, the offset defines the absolute offset\n * for the origin (top, left corner) of the vertex, otherwise the offset\n * defines the absolute offset for the label inside the vertex or group.\n * \n * Constructor: mxGeometry\n *\n * Constructs a new object to describe the size and location of a vertex or\n * the control points of an edge.\n */\nfunction mxGeometry(x, y, width, height)\n{\n\tmxRectangle.call(this, x, y, width, height);\n};\n\n/**\n * Extends mxRectangle.\n */\nmxGeometry.prototype = new mxRectangle();\nmxGeometry.prototype.constructor = mxGeometry;\n\n/**\n * Variable: TRANSLATE_CONTROL_POINTS\n * \n * Global switch to translate the points in translate. Default is true.\n */\nmxGeometry.prototype.TRANSLATE_CONTROL_POINTS = true;\n\n/**\n * Variable: alternateBounds\n *\n * Stores alternate values for x, y, width and height in a rectangle. See\n * <swap> to exchange the values. Default is null.\n */\nmxGeometry.prototype.alternateBounds = null;\n\n/**\n * Variable: sourcePoint\n *\n * Defines the source <mxPoint> of the edge. This is used if the\n * corresponding edge does not have a source vertex. Otherwise it is\n * ignored. Default is  null.\n */\nmxGeometry.prototype.sourcePoint = null;\n\n/**\n * Variable: targetPoint\n *\n * Defines the target <mxPoint> of the edge. This is used if the\n * corresponding edge does not have a target vertex. Otherwise it is\n * ignored. Default is null.\n */\nmxGeometry.prototype.targetPoint = null;\n\n/**\n * Variable: points\n *\n * Array of <mxPoints> which specifies the control points along the edge.\n * These points are the intermediate points on the edge, for the endpoints\n * use <targetPoint> and <sourcePoint> or set the terminals of the edge to\n * a non-null value. Default is null.\n */\nmxGeometry.prototype.points = null;\n\n/**\n * Variable: offset\n *\n * For edges, this holds the offset (in pixels) from the position defined\n * by <x> and <y> on the edge. For relative geometries (for vertices), this\n * defines the absolute offset from the point defined by the relative\n * coordinates. For absolute geometries (for vertices), this defines the\n * offset for the label. Default is null.\n */\nmxGeometry.prototype.offset = null;\n\n/**\n * Variable: relative\n *\n * Specifies if the coordinates in the geometry are to be interpreted as\n * relative coordinates. For edges, this is used to define the location of\n * the edge label relative to the edge as rendered on the display. For\n * vertices, this specifies the relative location inside the bounds of the\n * parent cell.\n * \n * If this is false, then the coordinates are relative to the origin of the\n * parent cell or, for edges, the edge label position is relative to the\n * center of the edge as rendered on screen.\n * \n * Default is false.\n */\nmxGeometry.prototype.relative = false;\n\n/**\n * Function: swap\n * \n * Swaps the x, y, width and height with the values stored in\n * <alternateBounds> and puts the previous values into <alternateBounds> as\n * a rectangle. This operation is carried-out in-place, that is, using the\n * existing geometry instance. If this operation is called during a graph\n * model transactional change, then the geometry should be cloned before\n * calling this method and setting the geometry of the cell using\n * <mxGraphModel.setGeometry>.\n */\nmxGeometry.prototype.swap = function()\n{\n\tif (this.alternateBounds != null)\n\t{\n\t\tvar old = new mxRectangle(\n\t\t\tthis.x, this.y, this.width, this.height);\n\n\t\tthis.x = this.alternateBounds.x;\n\t\tthis.y = this.alternateBounds.y;\n\t\tthis.width = this.alternateBounds.width;\n\t\tthis.height = this.alternateBounds.height;\n\n\t\tthis.alternateBounds = old;\n\t}\n};\n\n/**\n * Function: getTerminalPoint\n * \n * Returns the <mxPoint> representing the source or target point of this\n * edge. This is only used if the edge has no source or target vertex.\n * \n * Parameters:\n * \n * isSource - Boolean that specifies if the source or target point\n * should be returned.\n */\nmxGeometry.prototype.getTerminalPoint = function(isSource)\n{\n\treturn (isSource) ? this.sourcePoint : this.targetPoint;\n};\n\n/**\n * Function: setTerminalPoint\n * \n * Sets the <sourcePoint> or <targetPoint> to the given <mxPoint> and\n * returns the new point.\n * \n * Parameters:\n * \n * point - Point to be used as the new source or target point.\n * isSource - Boolean that specifies if the source or target point\n * should be set.\n */\nmxGeometry.prototype.setTerminalPoint = function(point, isSource)\n{\n\tif (isSource)\n\t{\n\t\tthis.sourcePoint = point;\n\t}\n\telse\n\t{\n\t\tthis.targetPoint = point;\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: rotate\n * \n * Rotates the geometry by the given angle around the given center. That is,\n * <x> and <y> of the geometry, the <sourcePoint>, <targetPoint> and all\n * <points> are translated by the given amount. <x> and <y> are only\n * translated if <relative> is false.\n * \n * Parameters:\n * \n * angle - Number that specifies the rotation angle in degrees.\n * cx - <mxPoint> that specifies the center of the rotation.\n */\nmxGeometry.prototype.rotate = function(angle, cx)\n{\n\tvar rad = mxUtils.toRadians(angle);\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(rad);\n\t\n\t// Rotates the geometry\n\tif (!this.relative)\n\t{\n\t\tvar ct = new mxPoint(this.getCenterX(), this.getCenterY());\n\t\tvar pt = mxUtils.getRotatedPoint(ct, cos, sin, cx);\n\t\t\n\t\tthis.x = Math.round(pt.x - this.width / 2);\n\t\tthis.y = Math.round(pt.y - this.height / 2);\n\t}\n\n\t// Rotates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tvar pt = mxUtils.getRotatedPoint(this.sourcePoint, cos, sin, cx);\n\t\tthis.sourcePoint.x = Math.round(pt.x);\n\t\tthis.sourcePoint.y = Math.round(pt.y);\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tvar pt = mxUtils.getRotatedPoint(this.targetPoint, cos, sin, cx);\n\t\tthis.targetPoint.x = Math.round(pt.x);\n\t\tthis.targetPoint.y = Math.round(pt.y);\t\n\t}\n\t\n\t// Translate the control points\n\tif (this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(this.points[i], cos, sin, cx);\n\t\t\t\tthis.points[i].x = Math.round(pt.x);\n\t\t\t\tthis.points[i].y = Math.round(pt.y);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: translate\n * \n * Translates the geometry by the specified amount. That is, <x> and <y> of the\n * geometry, the <sourcePoint>, <targetPoint> and all <points> are translated\n * by the given amount. <x> and <y> are only translated if <relative> is false.\n * If <TRANSLATE_CONTROL_POINTS> is false, then <points> are not modified by\n * this function.\n * \n * Parameters:\n * \n * dx - Number that specifies the x-coordinate of the translation.\n * dy - Number that specifies the y-coordinate of the translation.\n */\nmxGeometry.prototype.translate = function(dx, dy)\n{\n\tdx = parseFloat(dx);\n\tdy = parseFloat(dy);\n\t\n\t// Translates the geometry\n\tif (!this.relative)\n\t{\n\t\tthis.x = parseFloat(this.x) + dx;\n\t\tthis.y = parseFloat(this.y) + dy;\n\t}\n\n\t// Translates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tthis.sourcePoint.x = parseFloat(this.sourcePoint.x) + dx;\n\t\tthis.sourcePoint.y = parseFloat(this.sourcePoint.y) + dy;\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tthis.targetPoint.x = parseFloat(this.targetPoint.x) + dx;\n\t\tthis.targetPoint.y = parseFloat(this.targetPoint.y) + dy;\t\t\n\t}\n\n\t// Translate the control points\n\tif (this.TRANSLATE_CONTROL_POINTS && this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tthis.points[i].x = parseFloat(this.points[i].x) + dx;\n\t\t\t\tthis.points[i].y = parseFloat(this.points[i].y) + dy;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: scale\n * \n * Scales the geometry by the given amount. That is, <x> and <y> of the\n * geometry, the <sourcePoint>, <targetPoint> and all <points> are scaled\n * by the given amount. <x>, <y>, <width> and <height> are only scaled if\n * <relative> is false. If <fixedAspect> is true, then the smaller value\n * is used to scale the width and the height.\n * \n * Parameters:\n * \n * sx - Number that specifies the horizontal scale factor.\n * sy - Number that specifies the vertical scale factor.\n * fixedAspect - Optional boolean to keep the aspect ratio fixed.\n */\nmxGeometry.prototype.scale = function(sx, sy, fixedAspect)\n{\n\tsx = parseFloat(sx);\n\tsy = parseFloat(sy);\n\n\t// Translates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tthis.sourcePoint.x = parseFloat(this.sourcePoint.x) * sx;\n\t\tthis.sourcePoint.y = parseFloat(this.sourcePoint.y) * sy;\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tthis.targetPoint.x = parseFloat(this.targetPoint.x) * sx;\n\t\tthis.targetPoint.y = parseFloat(this.targetPoint.y) * sy;\t\t\n\t}\n\n\t// Translate the control points\n\tif (this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tthis.points[i].x = parseFloat(this.points[i].x) * sx;\n\t\t\t\tthis.points[i].y = parseFloat(this.points[i].y) * sy;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Translates the geometry\n\tif (!this.relative)\n\t{\n\t\tthis.x = parseFloat(this.x) * sx;\n\t\tthis.y = parseFloat(this.y) * sy;\n\n\t\tif (fixedAspect)\n\t\t{\n\t\t\tsy = sx = Math.min(sx, sy);\n\t\t}\n\t\t\n\t\tthis.width = parseFloat(this.width) * sx;\n\t\tthis.height = parseFloat(this.height) * sy;\n\t}\n};\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this geometry.\n */\nmxGeometry.prototype.equals = function(obj)\n{\n\treturn mxRectangle.prototype.equals.apply(this, arguments) &&\n\t\tthis.relative == obj.relative &&\n\t\t((this.sourcePoint == null && obj.sourcePoint == null) || (this.sourcePoint != null && this.sourcePoint.equals(obj.sourcePoint))) &&\n\t\t((this.targetPoint == null && obj.targetPoint == null) || (this.targetPoint != null && this.targetPoint.equals(obj.targetPoint))) &&\n\t\t((this.points == null && obj.points == null) || (this.points != null && mxUtils.equalPoints(this.points, obj.points))) &&\n\t\t((this.alternateBounds == null && obj.alternateBounds == null) || (this.alternateBounds != null && this.alternateBounds.equals(obj.alternateBounds))) &&\n\t\t((this.offset == null && obj.offset == null) || (this.offset != null && this.offset.equals(obj.offset)));\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxCellPath =\n{\n\n\t/**\n\t * Class: mxCellPath\n\t * \n\t * Implements a mechanism for temporary cell Ids.\n\t * \n\t * Variable: PATH_SEPARATOR\n\t * \n\t * Defines the separator between the path components. Default is \".\".\n\t */\n\tPATH_SEPARATOR: '.',\n\t\n\t/**\n\t * Function: create\n\t * \n\t * Creates the cell path for the given cell. The cell path is a\n\t * concatenation of the indices of all ancestors on the (finite) path to\n\t * the root, eg. \"0.0.0.1\".\n\t * \n\t * Parameters:\n\t * \n\t * cell - Cell whose path should be returned.\n\t */\n\tcreate: function(cell)\n\t{\n\t\tvar result = '';\n\t\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tvar parent = cell.getParent();\n\t\t\t\n\t\t\twhile (parent != null)\n\t\t\t{\n\t\t\t\tvar index = parent.getIndex(cell);\n\t\t\t\tresult = index + mxCellPath.PATH_SEPARATOR + result;\n\t\t\t\t\n\t\t\t\tcell = parent;\n\t\t\t\tparent = cell.getParent();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes trailing separator\n\t\tvar n = result.length;\n\t\t\n\t\tif (n > 1)\n\t\t{\n\t\t\tresult = result.substring(0, n - 1);\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: getParentPath\n\t * \n\t * Returns the path for the parent of the cell represented by the given\n\t * path. Returns null if the given path has no parent.\n\t * \n\t * Parameters:\n\t * \n\t * path - Path whose parent path should be returned.\n\t */\n\tgetParentPath: function(path)\n\t{\n\t\tif (path != null)\n\t\t{\n\t\t\tvar index = path.lastIndexOf(mxCellPath.PATH_SEPARATOR);\n\n\t\t\tif (index >= 0)\n\t\t\t{\n\t\t\t\treturn path.substring(0, index);\n\t\t\t}\n\t\t\telse if (path.length > 0)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: resolve\n\t * \n\t * Returns the cell for the specified cell path using the given root as the\n\t * root of the path.\n\t * \n\t * Parameters:\n\t * \n\t * root - Root cell of the path to be resolved.\n\t * path - String that defines the path.\n\t */\n\tresolve: function(root, path)\n\t{\n\t\tvar parent = root;\n\t\t\n\t\tif (path != null)\n\t\t{\n\t\t\tvar tokens = path.split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\n\t\t\tfor (var i=0; i<tokens.length; i++)\n\t\t\t{\n\t\t\t\tparent = parent.getChildAt(parseInt(tokens[i]));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn parent;\n\t},\n\t\n\t/**\n\t * Function: compare\n\t * \n\t * Compares the given cell paths and returns -1 if p1 is smaller, 0 if\n\t * p1 is equal and 1 if p1 is greater than p2.\n\t */\n\tcompare: function(p1, p2)\n\t{\n\t\tvar min = Math.min(p1.length, p2.length);\n\t\tvar comp = 0;\n\t\t\n\t\tfor (var i = 0; i < min; i++)\n\t\t{\n\t\t\tif (p1[i] != p2[i])\n\t\t\t{\n\t\t\t\tif (p1[i].length == 0 ||\n\t\t\t\t\tp2[i].length == 0)\n\t\t\t\t{\n\t\t\t\t\tcomp = (p1[i] == p2[i]) ? 0 : ((p1[i] > p2[i]) ? 1 : -1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar t1 = parseInt(p1[i]);\n\t\t\t\t\tvar t2 = parseInt(p2[i]);\n\t\t\t\t\t\n\t\t\t\t\tcomp = (t1 == t2) ? 0 : ((t1 > t2) ? 1 : -1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Compares path length if both paths are equal to this point\n\t\tif (comp == 0)\n\t\t{\n\t\t\tvar t1 = p1.length;\n\t\t\tvar t2 = p2.length;\n\t\t\t\n\t\t\tif (t1 != t2)\n\t\t\t{\n\t\t\t\tcomp = (t1 > t2) ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn comp;\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxPerimeter =\n{\n\t/**\n\t * Class: mxPerimeter\n\t * \n\t * Provides various perimeter functions to be used in a style\n\t * as the value of <mxConstants.STYLE_PERIMETER>. Perimeters for\n\t * rectangle, circle, rhombus and triangle are available.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * <add as=\"perimeter\">mxPerimeter.RectanglePerimeter</add>\n\t * (end)\n\t * \n\t * Or programmatically:\n\t * \n\t * (code)\n\t * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n\t * (end)\n\t * \n\t * When adding new perimeter functions, it is recommended to use the \n\t * mxPerimeter-namespace as follows:\n\t * \n\t * (code)\n\t * mxPerimeter.CustomPerimeter = function (bounds, vertex, next, orthogonal)\n\t * {\n\t *   var x = 0; // Calculate x-coordinate\n\t *   var y = 0; // Calculate y-coordainte\n\t *   \n\t *   return new mxPoint(x, y);\n\t * }\n\t * (end)\n\t * \n\t * The new perimeter should then be registered in the <mxStyleRegistry> as follows:\n\t * (code)\n\t * mxStyleRegistry.putValue('customPerimeter', mxPerimeter.CustomPerimeter);\n\t * (end)\n\t * \n\t * The custom perimeter above can now be used in a specific vertex as follows:\n\t * \n\t * (code)\n\t * model.setStyle(vertex, 'perimeter=customPerimeter');\n\t * (end)\n\t * \n\t * Note that the key of the <mxStyleRegistry> entry for the function should\n\t * be used in string values, unless <mxGraphView.allowEval> is true, in\n\t * which case you can also use mxPerimeter.CustomPerimeter for the value in\n\t * the cell style above.\n\t * \n\t * Or it can be used for all vertices in the graph as follows:\n\t * \n\t * (code)\n\t * var style = graph.getStylesheet().getDefaultVertexStyle();\n\t * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.CustomPerimeter;\n\t * (end)\n\t * \n\t * Note that the object can be used directly when programmatically setting\n\t * the value, but the key in the <mxStyleRegistry> should be used when\n\t * setting the value via a key, value pair in a cell style.\n\t * \n\t * The parameters are explained in <RectanglePerimeter>.\n\t * \n\t * Function: RectanglePerimeter\n\t * \n\t * Describes a rectangular perimeter for the given bounds.\n\t *\n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the absolute bounds of the\n\t * vertex.\n\t * vertex - <mxCellState> that represents the vertex.\n\t * next - <mxPoint> that represents the nearest neighbour point on the\n\t * given edge.\n\t * orthogonal - Boolean that specifies if the orthogonal projection onto\n\t * the perimeter should be returned. If this is false then the intersection\n\t * of the perimeter and the line between the next and the center point is\n\t * returned.\n\t */\n\tRectanglePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar cx = bounds.getCenterX();\n\t\tvar cy = bounds.getCenterY();\n\t\tvar dx = next.x - cx;\n\t\tvar dy = next.y - cy;\n\t\tvar alpha = Math.atan2(dy, dx);\n\t\tvar p = new mxPoint(0, 0);\n\t\tvar pi = Math.PI;\n\t\tvar pi2 = Math.PI/2;\n\t\tvar beta = pi2 - alpha;\n\t\tvar t = Math.atan2(bounds.height, bounds.width);\n\t\t\n\t\tif (alpha < -pi + t || alpha > pi - t)\n\t\t{\n\t\t\t// Left edge\n\t\t\tp.x = bounds.x;\n\t\t\tp.y = cy - bounds.width * Math.tan(alpha) / 2;\n\t\t}\n\t\telse if (alpha < -t)\n\t\t{\n\t\t\t// Top Edge\n\t\t\tp.y = bounds.y;\n\t\t\tp.x = cx - bounds.height * Math.tan(beta) / 2;\n\t\t}\n\t\telse if (alpha < t)\n\t\t{\n\t\t\t// Right Edge\n\t\t\tp.x = bounds.x + bounds.width;\n\t\t\tp.y = cy + bounds.width * Math.tan(alpha) / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Bottom Edge\n\t\t\tp.y = bounds.y + bounds.height;\n\t\t\tp.x = cx + bounds.height * Math.tan(beta) / 2;\n\t\t}\n\t\t\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (next.x >= bounds.x &&\n\t\t\t\tnext.x <= bounds.x + bounds.width)\n\t\t\t{\n\t\t\t\tp.x = next.x;\n\t\t\t}\n\t\t\telse if (next.y >= bounds.y &&\n\t\t\t\t\t   next.y <= bounds.y + bounds.height)\n\t\t\t{\n\t\t\t\tp.y = next.y;\n\t\t\t}\n\t\t\tif (next.x < bounds.x)\n\t\t\t{\n\t\t\t\tp.x = bounds.x;\n\t\t\t}\n\t\t\telse if (next.x > bounds.x + bounds.width)\n\t\t\t{\n\t\t\t\tp.x = bounds.x + bounds.width;\n\t\t\t}\n\t\t\tif (next.y < bounds.y)\n\t\t\t{\n\t\t\t\tp.y = bounds.y;\n\t\t\t}\n\t\t\telse if (next.y > bounds.y + bounds.height)\n\t\t\t{\n\t\t\t\tp.y = bounds.y + bounds.height;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn p;\n\t},\n\n\t/**\n\t * Function: EllipsePerimeter\n\t * \n\t * Describes an elliptic perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tEllipsePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar a = bounds.width / 2;\n\t\tvar b = bounds.height / 2;\n\t\tvar cx = x + a;\n\t\tvar cy = y + b;\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\t\t\n\t\t// Calculates straight line equation through\n\t\t// point and ellipse center y = d * x + h\n\t\tvar dx = parseInt(px - cx);\n\t\tvar dy = parseInt(py - cy);\n\t\t\n\t\tif (dx == 0 && dy != 0)\n\t\t{\n\t\t\treturn new mxPoint(cx, cy + b * dy / Math.abs(dy));\n\t\t}\n\t\telse if (dx == 0 && dy == 0)\n\t\t{\n\t\t\treturn new mxPoint(px, py);\n\t\t}\n\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (py >= y && py <= y + bounds.height)\n\t\t\t{\n\t\t\t\tvar ty = py - cy;\n\t\t\t\tvar tx = Math.sqrt(a*a*(1-(ty*ty)/(b*b))) || 0;\n\t\t\t\t\n\t\t\t\tif (px <= x)\n\t\t\t\t{\n\t\t\t\t\ttx = -tx;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxPoint(cx+tx, py);\n\t\t\t}\n\t\t\t\n\t\t\tif (px >= x && px <= x + bounds.width)\n\t\t\t{\n\t\t\t\tvar tx = px - cx;\n\t\t\t\tvar ty = Math.sqrt(b*b*(1-(tx*tx)/(a*a))) || 0;\n\t\t\t\t\n\t\t\t\tif (py <= y)\n\t\t\t\t{\n\t\t\t\t\tty = -ty;\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxPoint(px, cy+ty);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Calculates intersection\n\t\tvar d = dy / dx;\n\t\tvar h = cy - d * cx;\n\t\tvar e = a * a * d * d + b * b;\n\t\tvar f = -2 * cx * e;\n\t\tvar g = a * a * d * d * cx * cx +\n\t\t\t\tb * b * cx * cx -\n\t\t\t\ta * a * b * b;\n\t\tvar det = Math.sqrt(f * f - 4 * e * g);\n\t\t\n\t\t// Two solutions (perimeter points)\n\t\tvar xout1 = (-f + det) / (2 * e);\n\t\tvar xout2 = (-f - det) / (2 * e);\n\t\tvar yout1 = d * xout1 + h;\n\t\tvar yout2 = d * xout2 + h;\n\t\tvar dist1 = Math.sqrt(Math.pow((xout1 - px), 2)\n\t\t\t\t\t+ Math.pow((yout1 - py), 2));\n\t\tvar dist2 = Math.sqrt(Math.pow((xout2 - px), 2)\n\t\t\t\t\t+ Math.pow((yout2 - py), 2));\n\t\t\t\t\t\n\t\t// Correct solution\n\t\tvar xout = 0;\n\t\tvar yout = 0;\n\t\t\n\t\tif (dist1 < dist2)\n\t\t{\n\t\t\txout = xout1;\n\t\t\tyout = yout1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\txout = xout2;\n\t\t\tyout = yout2;\n\t\t}\n\t\t\n\t\treturn new mxPoint(xout, yout);\n\t},\n\n\t/**\n\t * Function: RhombusPerimeter\n\t * \n\t * Describes a rhombus (aka diamond) perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tRhombusPerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\t\t\n\t\tvar cx = x + w / 2;\n\t\tvar cy = y + h / 2;\n\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\n\t\t// Special case for intersecting the diamond's corners\n\t\tif (cx == px)\n\t\t{\n\t\t\tif (cy > py)\n\t\t\t{\n\t\t\t\treturn new mxPoint(cx, y); // top\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new mxPoint(cx, y + h); // bottom\n\t\t\t}\n\t\t}\n\t\telse if (cy == py)\n\t\t{\n\t\t\tif (cx > px)\n\t\t\t{\n\t\t\t\treturn new mxPoint(x, cy); // left\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new mxPoint(x + w, cy); // right\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar tx = cx;\n\t\tvar ty = cy;\n\t\t\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (px >= x && px <= x + w)\n\t\t\t{\n\t\t\t\ttx = px;\n\t\t\t}\n\t\t\telse if (py >= y && py <= y + h)\n\t\t\t{\n\t\t\t\tty = py;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// In which quadrant will the intersection be?\n\t\t// set the slope and offset of the border line accordingly\n\t\tif (px < cx)\n\t\t{\n\t\t\tif (py < cy)\n\t\t\t{\n\t\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y, x, cy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y + h, x, cy);\n\t\t\t}\n\t\t}\n\t\telse if (py < cy)\n\t\t{\n\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y, x + w, cy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y + h, x + w, cy);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: TrianglePerimeter\n\t * \n\t * Describes a triangle perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tTrianglePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar direction = (vertex != null) ?\n\t\t\tvertex.style[mxConstants.STYLE_DIRECTION] : null;\n\t\tvar vertical = direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tdirection == mxConstants.DIRECTION_SOUTH;\n\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\t\t\n\t\tvar cx = x + w / 2;\n\t\tvar cy = y + h / 2;\n\t\t\n\t\tvar start = new mxPoint(x, y);\n\t\tvar corner = new mxPoint(x + w, cy);\n\t\tvar end = new mxPoint(x, y + h);\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tstart = end;\n\t\t\tcorner = new mxPoint(cx, y);\n\t\t\tend = new mxPoint(x + w, y + h);\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tcorner = new mxPoint(cx, y + h);\n\t\t\tend = new mxPoint(x + w, y);\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tstart = new mxPoint(x + w, y);\n\t\t\tcorner = new mxPoint(x, cy);\n\t\t\tend = new mxPoint(x + w, y + h);\n\t\t}\n\n\t\tvar dx = next.x - cx;\n\t\tvar dy = next.y - cy;\n\n\t\tvar alpha = (vertical) ? Math.atan2(dx, dy) : Math.atan2(dy, dx);\n\t\tvar t = (vertical) ? Math.atan2(w, h) : Math.atan2(h, w);\n\t\t\n\t\tvar base = false;\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tdirection == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tbase = alpha > -t && alpha < t;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbase = alpha < -Math.PI + t || alpha > Math.PI - t;\t\n\t\t}\n\n\t\tvar result = null;\t\t\t\n\n\t\tif (base)\n\t\t{\n\t\t\tif (orthogonal && ((vertical && next.x >= start.x && next.x <= end.x) ||\n\t\t\t\t(!vertical && next.y >= start.y && next.y <= end.y)))\n\t\t\t{\n\t\t\t\tif (vertical)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(next.x, start.y);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(start.x, next.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w / 2 + h * Math.tan(alpha) / 2,\n\t\t\t\t\t\ty + h);\n\t\t\t\t}\n\t\t\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w / 2 - h * Math.tan(alpha) / 2,\n\t\t\t\t\t\ty);\n\t\t\t\t}\n\t\t\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w, y + h / 2 +\n\t\t\t\t\t\tw * Math.tan(alpha) / 2);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x, y + h / 2 -\n\t\t\t\t\t\tw * Math.tan(alpha) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (orthogonal)\n\t\t\t{\n\t\t\t\tvar pt = new mxPoint(cx, cy);\n\t\t\n\t\t\t\tif (next.y >= y && next.y <= y + h)\n\t\t\t\t{\n\t\t\t\t\tpt.x = (vertical) ? cx : (\n\t\t\t\t\t\t(direction == mxConstants.DIRECTION_WEST) ?\n\t\t\t\t\t\t\tx + w : x);\n\t\t\t\t\tpt.y = next.y;\n\t\t\t\t}\n\t\t\t\telse if (next.x >= x && next.x <= x + w)\n\t\t\t\t{\n\t\t\t\t\tpt.x = next.x;\n\t\t\t\t\tpt.y = (!vertical) ? cy : (\n\t\t\t\t\t\t(direction == mxConstants.DIRECTION_NORTH) ?\n\t\t\t\t\t\t\ty + h : y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Compute angle\n\t\t\t\tdx = next.x - pt.x;\n\t\t\t\tdy = next.y - pt.y;\n\t\t\t\t\n\t\t\t\tcx = pt.x;\n\t\t\t\tcy = pt.y;\n\t\t\t}\n\n\t\t\tif ((vertical && next.x <= x + w / 2) ||\n\t\t\t\t(!vertical && next.y <= y + h / 2))\n\t\t\t{\n\t\t\t\tresult = mxUtils.intersection(next.x, next.y, cx, cy,\n\t\t\t\t\tstart.x, start.y, corner.x, corner.y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = mxUtils.intersection(next.x, next.y, cx, cy,\n\t\t\t\t\tcorner.x, corner.y, end.x, end.y);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (result == null)\n\t\t{\n\t\t\tresult = new mxPoint(cx, cy);\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: HexagonPerimeter\n\t * \n\t * Describes a hexagon perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tHexagonPerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\n\t\tvar cx = bounds.getCenterX();\n\t\tvar cy = bounds.getCenterY();\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\t\tvar dx = px - cx;\n\t\tvar dy = py - cy;\n\t\tvar alpha = -Math.atan2(dy, dx);\n\t\tvar pi = Math.PI;\n\t\tvar pi2 = Math.PI / 2;\n\n\t\tvar result = new mxPoint(cx, cy);\n\n\t\tvar direction = (vertex != null) ? mxUtils.getValue(\n\t\t\t\tvertex.style, mxConstants.STYLE_DIRECTION,\n\t\t\t\tmxConstants.DIRECTION_EAST) : mxConstants.DIRECTION_EAST;\n\t\tvar vertical = direction == mxConstants.DIRECTION_NORTH\n\t\t\t\t|| direction == mxConstants.DIRECTION_SOUTH;\n\t\tvar a = new mxPoint();\n\t\tvar b = new mxPoint();\n\n\t\t//Only consider corrects quadrants for the orthogonal case.\n\t\tif ((px < x) && (py < y) || (px < x) && (py > y + h)\n\t\t\t\t|| (px > x + w) && (py < y) || (px > x + w) && (py > y + h))\n\t\t{\n\t\t\torthogonal = false;\n\t\t}\n\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (vertical)\n\t\t\t{\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (px == cx)\n\t\t\t\t{\n\t\t\t\t\tif (py <= y)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(cx, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py >= y + h)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(cx, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px < x)\n\t\t\t\t{\n\t\t\t\t\tif (py == y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py == y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px > x + w)\n\t\t\t\t{\n\t\t\t\t\tif (py == y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py == y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px == x)\n\t\t\t\t{\n\t\t\t\t\tif (py < cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px == x + w)\n\t\t\t\t{\n\t\t\t\t\tif (py < cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (py == y)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(cx, y);\n\t\t\t\t}\n\t\t\t\telse if (py == y + h)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(cx, y + h);\n\t\t\t\t}\n\n\t\t\t\tif (px < cx)\n\t\t\t\t{\n\t\t\t\t\tif ((py > y + h / 4) && (py < y + 3 * h / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\t\tb = new mxPoint(x, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py < y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + w, y - Math.floor(0.25 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + w, y + Math.floor(1.25 * h));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px > cx)\n\t\t\t\t{\n\t\t\t\t\tif ((py > y + h / 4) && (py < y + 3 * h / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + w, y);\n\t\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py < y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y - Math.floor(0.25 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x, y + Math.floor(1.25 * h));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (py == cy)\n\t\t\t\t{\n\t\t\t\t\tif (px <= x)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 2);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px >= x + w)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py < y)\n\t\t\t\t{\n\t\t\t\t\tif (px == x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px == x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py > y + h)\n\t\t\t\t{\n\t\t\t\t\tif (px == x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px == x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py == y)\n\t\t\t\t{\n\t\t\t\t\tif (px < cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py == y + h)\n\t\t\t\t{\n\t\t\t\t\tif (px < cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (px == x)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, cy);\n\t\t\t\t}\n\t\t\t\telse if (px == x + w)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, cy);\n\t\t\t\t}\n\n\t\t\t\tif (py < cy)\n\t\t\t\t{\n\t\t\t\t\tif ((px > x + w / 4) && (px < x + 3 * w / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\t\tb = new mxPoint(x + w, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px < x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y + h);\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py > cy)\n\t\t\t\t{\n\t\t\t\t\tif ((px > x + w / 4) && (px < x + 3 * w / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y + h);\n\t\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px < x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y);\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar tx = cx;\n\t\t\tvar ty = cy;\n\n\t\t\tif (px >= x && px <= x + w)\n\t\t\t{\n\t\t\t\ttx = px;\n\t\t\t\t\n\t\t\t\tif (py < cy)\n\t\t\t\t{\n\t\t\t\t\tty = y + h;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tty = y;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (py >= y && py <= y + h)\n\t\t\t{\n\t\t\t\tty = py;\n\t\t\t\t\n\t\t\t\tif (px < cx)\n\t\t\t\t{\n\t\t\t\t\ttx = x + w;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttx = x;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = mxUtils.intersection(tx, ty, next.x, next.y, a.x, a.y, b.x, b.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (vertical)\n\t\t\t{\n\t\t\t\tvar beta = Math.atan2(h / 4, w / 2);\n\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (alpha == beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == pi2)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.5 * w), y);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (pi - beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == -beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.75 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi2))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.5 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi + beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.75 * h));\n\t\t\t\t}\n\n\t\t\t\tif ((alpha < beta) && (alpha > -beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + w, y);\n\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > beta) && (alpha < pi2))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y - Math.floor(0.25 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha > pi2) && (alpha < (pi - beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + w, y - Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (((alpha > (pi - beta)) && (alpha <= pi))\n\t\t\t\t\t\t|| ((alpha < (-pi + beta)) && (alpha >= -pi)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\tb = new mxPoint(x, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -beta) && (alpha > -pi2))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x, y + Math.floor(1.25 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -pi2) && (alpha > (-pi + beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + w, y + Math.floor(1.25 * h));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar beta = Math.atan2(h / 2, w / 4);\n\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (alpha == beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.75 * w), y);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (pi - beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.25 * w), y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha == pi) || (alpha == -pi))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == 0)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == -beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.75 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi + beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.25 * w), y + h);\n\t\t\t\t}\n\n\t\t\t\tif ((alpha > 0) && (alpha < beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > beta) && (alpha < (pi - beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\tb = new mxPoint(x + w, y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > (pi - beta)) && (alpha < pi))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y + h);\n\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha < 0) && (alpha > -beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -beta) && (alpha > (-pi + beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y + h);\n\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < (-pi + beta)) && (alpha > -pi))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y);\n\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = mxUtils.intersection(cx, cy, next.x, next.y, a.x, a.y, b.x, b.y);\n\t\t}\n\t\t\n\t\tif (result == null)\n\t\t{\n\t\t\treturn new mxPoint(cx, cy);\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n/**\n * Copyright (c) 2006-2019, JGraph Ltd\n * Copyright (c) 2006-2017, draw.io AG\n */\n/**\n * Class: mxPrintPreview\n * \n * Implements printing of a diagram across multiple pages. The following opens\n * a print preview for an existing graph:\n * \n * (code)\n * var preview = new mxPrintPreview(graph);\n * preview.open();\n * (end)\n * \n * Use <mxUtils.getScaleForPageCount> as follows in order to print the graph\n * across a given number of pages:\n * \n * (code)\n * var pageCount = mxUtils.prompt('Enter page count', '1');\n * \n * if (pageCount != null)\n * {\n *   var scale = mxUtils.getScaleForPageCount(pageCount, graph);\n *   var preview = new mxPrintPreview(graph, scale);\n *   preview.open();\n * }\n * (end)\n * \n * Additional pages:\n * \n * To add additional pages before and after the output, <getCoverPages> and\n * <getAppendices> can be used, respectively.\n * \n * (code)\n * var preview = new mxPrintPreview(graph, 1);\n * \n * preview.getCoverPages = function(w, h)\n * {\n *   return [this.renderPage(w, h, 0, 0, mxUtils.bind(this, function(div)\n *   {\n *     div.innerHTML = '<div style=\"position:relative;margin:4px;\">Cover Page</p>'\n *   }))];\n * };\n * \n * preview.getAppendices = function(w, h)\n * {\n *   return [this.renderPage(w, h, 0, 0, mxUtils.bind(this, function(div)\n *   {\n *     div.innerHTML = '<div style=\"position:relative;margin:4px;\">Appendix</p>'\n *   }))];\n * };\n * \n * preview.open();\n * (end)\n * \n * CSS:\n * \n * The CSS from the original page is not carried over to the print preview.\n * To add CSS to the page, use the css argument in the <open> function or\n * override <writeHead> to add the respective link tags as follows:\n * \n * (code)\n * var writeHead = preview.writeHead;\n * preview.writeHead = function(doc, css)\n * {\n *   writeHead.apply(this, arguments);\n *   doc.writeln('<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">');\n * };\n * (end)\n * \n * Padding:\n * \n * To add a padding to the page in the preview (but not the print output), use\n * the following code:\n * \n * (code)\n * preview.writeHead = function(doc)\n * {\n *   writeHead.apply(this, arguments);\n *   \n *   doc.writeln('<style type=\"text/css\">');\n *   doc.writeln('@media screen {');\n *   doc.writeln('  body > div { padding-top:30px;padding-left:40px;box-sizing:content-box; }');\n *   doc.writeln('}');\n *   doc.writeln('</style>');\n * };\n * (end)\n * \n * Headers:\n * \n * Apart from setting the title argument in the mxPrintPreview constructor you\n * can override <renderPage> as follows to add a header to any page:\n * \n * (code)\n * var oldRenderPage = mxPrintPreview.prototype.renderPage;\n * mxPrintPreview.prototype.renderPage = function(w, h, x, y, content, pageNumber)\n * {\n *   var div = oldRenderPage.apply(this, arguments);\n *   \n *   var header = document.createElement('div');\n *   header.style.position = 'absolute';\n *   header.style.top = '0px';\n *   header.style.width = '100%';\n *   header.style.textAlign = 'right';\n *   mxUtils.write(header, 'Your header here');\n *   div.firstChild.appendChild(header);\n *   \n *   return div;\n * };\n * (end)\n * \n * The pageNumber argument contains the number of the current page, starting at\n * 1. To display a header on the first page only, check pageNumber and add a\n * vertical offset in the constructor call for the height of the header.\n * \n * Page Format:\n * \n * For landscape printing, use <mxConstants.PAGE_FORMAT_A4_LANDSCAPE> as\n * the pageFormat in <mxUtils.getScaleForPageCount> and <mxPrintPreview>.\n * Keep in mind that one can not set the defaults for the print dialog\n * of the operating system from JavaScript so the user must manually choose\n * a page format that matches this setting.\n * \n * You can try passing the following CSS directive to <open> to set the\n * page format in the print dialog to landscape. However, this CSS\n * directive seems to be ignored in most major browsers, including IE.\n * \n * (code)\n * @page {\n *   size: landscape;\n * }\n * (end)\n * \n * Note that the print preview behaves differently in IE when used from the\n * filesystem or via HTTP so printing should always be tested via HTTP.\n * \n * If you are using a DOCTYPE in the source page you can override <getDoctype>\n * and provide the same DOCTYPE for the print preview if required. Here is\n * an example for IE8 standards mode.\n * \n * (code)\n * var preview = new mxPrintPreview(graph);\n * preview.getDoctype = function()\n * {\n *   return '<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=5,IE=8\" ><![endif]-->';\n * };\n * preview.open();\n * (end)\n * \n * Constructor: mxPrintPreview\n *\n * Constructs a new print preview for the given parameters.\n * \n * Parameters:\n * \n * graph - <mxGraph> to be previewed.\n * scale - Optional scale of the output. Default is 1 / <mxGraph.pageScale>.\n * pageFormat - <mxRectangle> that specifies the page format (in pixels).\n * border - Border in pixels along each side of every page. Note that the\n * actual print function in the browser will add another border for\n * printing.\n * This should match the page format of the printer. Default uses the\n * <mxGraph.pageFormat> of the given graph.\n * x0 - Optional left offset of the output. Default is 0.\n * y0 - Optional top offset of the output. Default is 0.\n * borderColor - Optional color of the page border. Default is no border.\n * Note that a border is sometimes useful to highlight the printed page\n * border in the print preview of the browser.\n * title - Optional string that is used for the window title. Default\n * is 'Printer-friendly version'.\n * pageSelector - Optional boolean that specifies if the page selector\n * should appear in the window with the print preview. Default is true.\n */\nfunction mxPrintPreview(graph, scale, pageFormat, border, x0, y0, borderColor, title, pageSelector)\n{\n\tthis.graph = graph;\n\tthis.scale = (scale != null) ? scale : 1 / graph.pageScale;\n\tthis.border = (border != null) ? border : 0;\n\tthis.pageFormat = mxRectangle.fromRectangle((pageFormat != null) ? pageFormat : graph.pageFormat);\n\tthis.title = (title != null) ? title : 'Printer-friendly version';\n\tthis.x0 = (x0 != null) ? x0 : 0;\n\tthis.y0 = (y0 != null) ? y0 : 0;\n\tthis.borderColor = borderColor;\n\tthis.pageSelector = (pageSelector != null) ? pageSelector : true;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the <mxGraph> that should be previewed.\n */\nmxPrintPreview.prototype.graph = null;\n\n/**\n * Variable: pageFormat\n *\n * Holds the <mxRectangle> that defines the page format.\n */\nmxPrintPreview.prototype.pageFormat = null;\n\n/**\n * Variable: scale\n * \n * Holds the scale of the print preview.\n */\nmxPrintPreview.prototype.scale = null;\n\n/**\n * Variable: border\n * \n * The border inset around each side of every page in the preview. This is set\n * to 0 if autoOrigin is false.\n */\nmxPrintPreview.prototype.border = 0;\n\n/**\n * Variable: marginTop\n * \n * The margin at the top of the page (number). Default is 0.\n */\nmxPrintPreview.prototype.marginTop = 0;\n\n/**\n * Variable: marginBottom\n * \n * The margin at the bottom of the page (number). Default is 0.\n */\nmxPrintPreview.prototype.marginBottom = 0;\n\n/**\n * Variable: x0\n * \n * Holds the horizontal offset of the output.\n */\nmxPrintPreview.prototype.x0 = 0;\n\n/**\n * Variable: y0\n *\n * Holds the vertical offset of the output.\n */\nmxPrintPreview.prototype.y0 = 0;\n\n/**\n * Variable: autoOrigin\n * \n * Specifies if the origin should be automatically computed based on the top,\n * left corner of the actual diagram contents. The required offset will be added\n * to <x0> and <y0> in <open>. Default is true.\n */\nmxPrintPreview.prototype.autoOrigin = true;\n\n/**\n * Variable: printOverlays\n * \n * Specifies if overlays should be printed. Default is false.\n */\nmxPrintPreview.prototype.printOverlays = false;\n\n/**\n * Variable: printControls\n * \n * Specifies if controls (such as folding icons) should be printed. Default is\n * false.\n */\nmxPrintPreview.prototype.printControls = false;\n\n/**\n * Variable: printBackgroundImage\n * \n * Specifies if the background image should be printed. Default is false.\n */\nmxPrintPreview.prototype.printBackgroundImage = false;\n\n/**\n * Variable: backgroundColor\n * \n * Holds the color value for the page background color. Default is #ffffff.\n */\nmxPrintPreview.prototype.backgroundColor = '#ffffff';\n\n/**\n * Variable: borderColor\n * \n * Holds the color value for the page border.\n */\nmxPrintPreview.prototype.borderColor = null;\n\n/**\n * Variable: title\n * \n * Holds the title of the preview window.\n */\nmxPrintPreview.prototype.title = null;\n\n/**\n * Variable: pageSelector\n * \n * Boolean that specifies if the page selector should be\n * displayed. Default is true.\n */\nmxPrintPreview.prototype.pageSelector = null;\n\n/**\n * Variable: wnd\n * \n * Reference to the preview window.\n */\nmxPrintPreview.prototype.wnd = null;\n\n/**\n * Variable: targetWindow\n * \n * Assign any window here to redirect the rendering in <open>.\n */\nmxPrintPreview.prototype.targetWindow = null;\n\n/**\n * Variable: pageCount\n * \n * Holds the actual number of pages in the preview.\n */\nmxPrintPreview.prototype.pageCount = 0;\n\n/**\n * Variable: clipping\n * \n * Specifies is clipping should be used to avoid creating too many cell states\n * in large diagrams. The bounding box of the cells in the original diagram is\n * used if this is enabled. Default is true.\n */\nmxPrintPreview.prototype.clipping = true;\n\n/**\n * Function: getWindow\n * \n * Returns <wnd>.\n */\nmxPrintPreview.prototype.getWindow = function()\n{\n\treturn this.wnd;\n};\n\n/**\n * Function: getDocType\n * \n * Returns the string that should go before the HTML tag in the print preview\n * page. This implementation returns an X-UA meta tag for IE5 in quirks mode,\n * IE8 in IE8 standards mode and edge in IE9 standards mode.\n */\nmxPrintPreview.prototype.getDoctype = function()\n{\n\tvar dt = '';\n\t\n\tif (document.documentMode == 5)\n\t{\n\t\tdt = '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=5\">';\n\t}\n\telse if (document.documentMode == 8)\n\t{\n\t\tdt = '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\">';\n\t}\n\telse if (document.documentMode > 8)\n\t{\n\t\t// Comment needed to make standards doctype apply in IE\n\t\tdt = '<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><![endif]-->';\n\t}\n\t\n\treturn dt;\n};\n\n/**\n * Function: appendGraph\n * \n * Adds the given graph to the existing print preview.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n * targetWindow - Optional window that should be used for rendering. If\n * this is specified then no HEAD tag, CSS and BODY tag will be written.\n */\nmxPrintPreview.prototype.appendGraph = function(graph, scale, x0, y0, forcePageBreaks, keepOpen)\n{\n\tthis.graph = graph;\n\tthis.scale = (scale != null) ? scale : 1 / graph.pageScale;\n\tthis.x0 = x0;\n\tthis.y0 = y0;\n\tthis.open(null, null, forcePageBreaks, keepOpen);\n};\n\n/**\n * Function: open\n * \n * Shows the print preview window. The window is created here if it does\n * not exist.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n * targetWindow - Optional window that should be used for rendering. If\n * this is specified then no HEAD tag, CSS and BODY tag will be written.\n */\nmxPrintPreview.prototype.open = function(css, targetWindow, forcePageBreaks, keepOpen)\n{\n\t// Closing the window while the page is being rendered may cause an\n\t// exception in IE. This and any other exceptions are simply ignored.\n\tvar previousInitializeOverlay = this.graph.cellRenderer.initializeOverlay;\n\tvar div = null;\n\t\n\ttry\n\t{\n\t\t// Temporarily overrides the method to redirect rendering of overlays\n\t\t// to the draw pane so that they are visible in the printout\n\t\tif (this.printOverlays)\n\t\t{\n\t\t\tthis.graph.cellRenderer.initializeOverlay = function(state, overlay)\n\t\t\t{\n\t\t\t\toverlay.init(state.view.getDrawPane());\n\t\t\t};\n\t\t}\n\t\t\n\t\tif (this.printControls)\n\t\t{\n\t\t\tthis.graph.cellRenderer.initControl = function(state, control, handleEvents, clickHandler)\n\t\t\t{\n\t\t\t\tcontrol.dialect = state.view.graph.dialect;\n\t\t\t\tcontrol.init(state.view.getDrawPane());\n\t\t\t};\n\t\t}\n\t\t\n\t\tthis.wnd = (targetWindow != null) ? targetWindow : this.wnd;\n\t\tvar isNewWindow = false;\n\t\t\n\t\tif (this.wnd == null)\n\t\t{\n\t\t\tisNewWindow = true;\n\t\t\tthis.wnd = window.open();\n\t\t}\n\t\t\n\t\tvar doc = this.wnd.document;\n\t\t\n\t\tif (isNewWindow)\n\t\t{\n\t\t\tvar dt = this.getDoctype();\n\t\t\t\n\t\t\tif (dt != null && dt.length > 0)\n\t\t\t{\n\t\t\t\tdoc.writeln(dt);\n\t\t\t}\n\t\t\t\n\t\t\tif (mxClient.IS_VML)\n\t\t\t{\n\t\t\t\tdoc.writeln('<html xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\">');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (document.compatMode === 'CSS1Compat')\n\t\t\t\t{\n\t\t\t\t\tdoc.writeln('<!DOCTYPE html>');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdoc.writeln('<html>');\n\t\t\t}\n\t\t\t\n\t\t\tdoc.writeln('<head>');\n\t\t\tthis.writeHead(doc, css);\n\t\t\tdoc.writeln('</head>');\n\t\t\tdoc.writeln('<body class=\"mxPage\">');\n\t\t}\n\n\t\t// Computes the horizontal and vertical page count\n\t\tvar bounds = this.graph.getGraphBounds().clone();\n\t\tvar currentScale = this.graph.getView().getScale();\n\t\tvar sc = currentScale / this.scale;\n\t\tvar tr = this.graph.getView().getTranslate();\n\t\t\n\t\t// Uses the absolute origin with no offset for all printing\n\t\tif (!this.autoOrigin)\n\t\t{\n\t\t\tthis.x0 -= tr.x * this.scale;\n\t\t\tthis.y0 -= tr.y * this.scale;\n\t\t\tbounds.width += bounds.x;\n\t\t\tbounds.height += bounds.y;\n\t\t\tbounds.x = 0;\n\t\t\tbounds.y = 0;\n\t\t\tthis.border = 0;\n\t\t}\n\t\t\n\t\t// Store the available page area\n\t\tvar availableWidth = this.pageFormat.width - (this.border * 2);\n\t\tvar availableHeight = this.pageFormat.height - (this.border * 2);\n\t\n\t\t// Adds margins to page format\n\t\tthis.pageFormat.height += this.marginTop + this.marginBottom;\n\n\t\t// Compute the unscaled, untranslated bounds to find\n\t\t// the number of vertical and horizontal pages\n\t\tbounds.width /= sc;\n\t\tbounds.height /= sc;\n\n\t\tvar hpages = Math.max(1, Math.ceil((bounds.width + this.x0) / availableWidth));\n\t\tvar vpages = Math.max(1, Math.ceil((bounds.height + this.y0) / availableHeight));\n\t\tthis.pageCount = hpages * vpages;\n\t\t\n\t\tvar writePageSelector = mxUtils.bind(this, function()\n\t\t{\n\t\t\tif (this.pageSelector && (vpages > 1 || hpages > 1))\n\t\t\t{\n\t\t\t\tvar table = this.createPageSelector(vpages, hpages);\n\t\t\t\tdoc.body.appendChild(table);\n\t\t\t\t\n\t\t\t\t// Implements position: fixed in IE quirks mode\n\t\t\t\tif (mxClient.IS_IE && doc.documentMode == null || doc.documentMode == 5 || doc.documentMode == 8 || doc.documentMode == 7)\n\t\t\t\t{\n\t\t\t\t\ttable.style.position = 'absolute';\n\t\t\t\t\t\n\t\t\t\t\tvar update = function()\n\t\t\t\t\t{\n\t\t\t\t\t\ttable.style.top = ((doc.body.scrollTop || doc.documentElement.scrollTop) + 10) + 'px';\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tmxEvent.addListener(this.wnd, 'scroll', function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate();\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tmxEvent.addListener(this.wnd, 'resize', function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tvar addPage = mxUtils.bind(this, function(div, addBreak)\n\t\t{\n\t\t\t// Border of the DIV (aka page) inside the document\n\t\t\tif (this.borderColor != null)\n\t\t\t{\n\t\t\t\tdiv.style.borderColor = this.borderColor;\n\t\t\t\tdiv.style.borderStyle = 'solid';\n\t\t\t\tdiv.style.borderWidth = '1px';\n\t\t\t}\n\t\t\t\n\t\t\t// Needs to be assigned directly because IE doesn't support\n\t\t\t// child selectors, eg. body > div { background: white; }\n\t\t\tdiv.style.background = this.backgroundColor;\n\t\t\t\n\t\t\tif (forcePageBreaks || addBreak)\n\t\t\t{\n\t\t\t\tdiv.style.pageBreakAfter = 'always';\n\t\t\t}\n\n\t\t\t// NOTE: We are dealing with cross-window DOM here, which\n\t\t\t// is a problem in IE, so we copy the HTML markup instead.\n\t\t\t// The underlying problem is that the graph display markup\n\t\t\t// creation (in mxShape, mxGraphView) is hardwired to using\n\t\t\t// document.createElement and hence we must use this document\n\t\t\t// to create the complete page and then copy it over to the\n\t\t\t// new window.document. This can be fixed later by using the\n\t\t\t// ownerDocument of the container in mxShape and mxGraphView.\n\t\t\tif (isNewWindow && (mxClient.IS_IE || document.documentMode >= 11 || mxClient.IS_EDGE))\n\t\t\t{\n\t\t\t\t// For some obscure reason, removing the DIV from the\n\t\t\t\t// parent before fetching its outerHTML has missing\n\t\t\t\t// fillcolor properties and fill children, so the div\n\t\t\t\t// must be removed afterwards to keep the fillcolors.\n\t\t\t\tdoc.writeln(div.outerHTML);\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t}\n\t\t\telse if (mxClient.IS_IE || document.documentMode >= 11 || mxClient.IS_EDGE)\n\t\t\t{\n\t\t\t\tvar clone = doc.createElement('div');\n\t\t\t\tclone.innerHTML = div.outerHTML;\n\t\t\t\tclone = clone.getElementsByTagName('div')[0];\n\t\t\t\tdoc.body.appendChild(clone);\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t}\n\n\t\t\tif (forcePageBreaks || addBreak)\n\t\t\t{\n\t\t\t\tthis.addPageBreak(doc);\n\t\t\t}\n\t\t});\n\t\t\n\t\tvar cov = this.getCoverPages(this.pageFormat.width, this.pageFormat.height);\n\t\t\n\t\tif (cov != null)\n\t\t{\n\t\t\tfor (var i = 0; i < cov.length; i++)\n\t\t\t{\n\t\t\t\taddPage(cov[i], true);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar apx = this.getAppendices(this.pageFormat.width, this.pageFormat.height);\n\t\t\n\t\t// Appends each page to the page output for printing, making\n\t\t// sure there will be a page break after each page (ie. div)\n\t\tfor (var i = 0; i < vpages; i++)\n\t\t{\n\t\t\tvar dy = i * availableHeight / this.scale - this.y0 / this.scale +\n\t\t\t\t\t(bounds.y - tr.y * currentScale) / currentScale;\n\t\t\t\n\t\t\tfor (var j = 0; j < hpages; j++)\n\t\t\t{\n\t\t\t\tif (this.wnd == null)\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dx = j * availableWidth / this.scale - this.x0 / this.scale +\n\t\t\t\t\t\t(bounds.x - tr.x * currentScale) / currentScale;\n\t\t\t\tvar pageNum = i * hpages + j + 1;\n\t\t\t\tvar clip = new mxRectangle(dx, dy, availableWidth, availableHeight);\n\t\t\t\tdiv = this.renderPage(this.pageFormat.width, this.pageFormat.height, 0, 0, mxUtils.bind(this, function(div)\n\t\t\t\t{\n\t\t\t\t\tthis.addGraphFragment(-dx, -dy, this.scale, pageNum, div, clip);\n\t\t\t\t\t\n\t\t\t\t\tif (this.printBackgroundImage)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.insertBackgroundImage(div, -dx, -dy);\n\t\t\t\t\t}\n\t\t\t\t}), pageNum);\n\n\t\t\t\t// Gives the page a unique ID for later accessing the page\n\t\t\t\tdiv.setAttribute('id', 'mxPage-'+pageNum);\n\n\t\t\t\taddPage(div, apx != null || i < vpages - 1 || j < hpages - 1);\n\t\t\t}\n\t\t}\n\n\t\tif (apx != null)\n\t\t{\n\t\t\tfor (var i = 0; i < apx.length; i++)\n\t\t\t{\n\t\t\t\taddPage(apx[i], i < apx.length - 1);\n\t\t\t}\n\t\t}\n\n\t\tif (isNewWindow && !keepOpen)\n\t\t{\n\t\t\tthis.closeDocument();\n\t\t\twritePageSelector();\n\t\t}\n\t\t\n\t\tthis.wnd.focus();\n\t}\n\tcatch (e)\n\t{\n\t\t// Removes the DIV from the document in case of an error\n\t\tif (div != null && div.parentNode != null)\n\t\t{\n\t\t\tdiv.parentNode.removeChild(div);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.graph.cellRenderer.initializeOverlay = previousInitializeOverlay;\n\t}\n\n\treturn this.wnd;\n};\n\n/**\n * Function: addPageBreak\n * \n * Adds a page break to the given document.\n */\nmxPrintPreview.prototype.addPageBreak = function(doc)\n{\n\tvar hr = doc.createElement('hr');\n\thr.className = 'mxPageBreak';\n\tdoc.body.appendChild(hr);\n};\n\n/**\n * Function: closeDocument\n * \n * Writes the closing tags for body and page after calling <writePostfix>.\n */\nmxPrintPreview.prototype.closeDocument = function()\n{\n\ttry\n\t{\n\t\tif (this.wnd != null && this.wnd.document != null)\n\t\t{\n\t\t\tvar doc = this.wnd.document;\n\t\t\t\n\t\t\tthis.writePostfix(doc);\n\t\t\tdoc.writeln('</body>');\n\t\t\tdoc.writeln('</html>');\n\t\t\tdoc.close();\n\t\t\t\n\t\t\t// Removes all event handlers in the print output\n\t\t\tmxEvent.release(doc.body);\n\t\t}\n\t}\n\tcatch (e)\n\t{\n\t\t// ignore any errors resulting from wnd no longer being available\n\t}\n};\n\n/**\n * Function: writeHead\n * \n * Writes the HEAD section into the given document, without the opening\n * and closing HEAD tags.\n */\nmxPrintPreview.prototype.writeHead = function(doc, css)\n{\n\tif (this.title != null)\n\t{\n\t\tdoc.writeln('<title>' + this.title + '</title>');\n\t}\n\t\n\t// Adds required namespaces\n\tif (mxClient.IS_VML)\n\t{\n\t\tdoc.writeln('<style type=\"text/css\">v\\\\:*{behavior:url(#default#VML)}o\\\\:*{behavior:url(#default#VML)}</style>');\n\t}\n\n\t// Adds all required stylesheets\n\tmxClient.link('stylesheet', mxClient.basePath + '/css/common.css', doc);\n\n\t// Removes horizontal rules and page selector from print output\n\tdoc.writeln('<style type=\"text/css\">');\n\tdoc.writeln('@media print {');\n\tdoc.writeln('  * { -webkit-print-color-adjust: exact; }');\n\tdoc.writeln('  table.mxPageSelector { display: none; }');\n\tdoc.writeln('  hr.mxPageBreak { display: none; }');\n\tdoc.writeln('}');\n\tdoc.writeln('@media screen {');\n\t\n\t// NOTE: position: fixed is not supported in IE, so the page selector\n\t// position (absolute) needs to be updated in IE (see below)\n\tdoc.writeln('  table.mxPageSelector { position: fixed; right: 10px; top: 10px;' +\n\t\t\t'font-family: Arial; font-size:10pt; border: solid 1px darkgray;' +\n\t\t\t'background: white; border-collapse:collapse; }');\n\tdoc.writeln('  table.mxPageSelector td { border: solid 1px gray; padding:4px; }');\n\tdoc.writeln('  body.mxPage { background: gray; }');\n\tdoc.writeln('}');\n\t\n\tif (css != null)\n\t{\n\t\tdoc.writeln(css);\n\t}\n\t\n\tdoc.writeln('</style>');\n};\n\n/**\n * Function: writePostfix\n * \n * Called before closing the body of the page. This implementation is empty.\n */\nmxPrintPreview.prototype.writePostfix = function(doc)\n{\n\t// empty\n};\n\n/**\n * Function: createPageSelector\n * \n * Creates the page selector table.\n */\nmxPrintPreview.prototype.createPageSelector = function(vpages, hpages)\n{\n\tvar doc = this.wnd.document;\n\tvar table = doc.createElement('table');\n\ttable.className = 'mxPageSelector';\n\ttable.setAttribute('border', '0');\n\n\tvar tbody = doc.createElement('tbody');\n\t\n\tfor (var i = 0; i < vpages; i++)\n\t{\n\t\tvar row = doc.createElement('tr');\n\t\t\n\t\tfor (var j = 0; j < hpages; j++)\n\t\t{\n\t\t\tvar pageNum = i * hpages + j + 1;\n\t\t\tvar cell = doc.createElement('td');\n\t\t\tvar a = doc.createElement('a');\n\t\t\ta.setAttribute('href', '#mxPage-' + pageNum);\n\n\t\t\t// Workaround for FF where the anchor is appended to the URL of the original document\n\t\t\tif (mxClient.IS_NS && !mxClient.IS_SF && !mxClient.IS_GC)\n\t\t\t{\n\t\t\t\tvar js = 'var page = document.getElementById(\\'mxPage-' + pageNum + '\\');page.scrollIntoView(true);event.preventDefault();';\n\t\t\t\ta.setAttribute('onclick', js);\n\t\t\t}\n\t\t\t\n\t\t\tmxUtils.write(a, pageNum, doc);\n\t\t\tcell.appendChild(a);\n\t\t\trow.appendChild(cell);\n\t\t}\n\t\t\n\t\ttbody.appendChild(row);\n\t}\n\t\n\ttable.appendChild(tbody);\n\t\n\treturn table;\n};\n\n/**\n * Function: renderPage\n * \n * Creates a DIV that prints a single page of the given\n * graph using the given scale and returns the DIV that\n * represents the page.\n * \n * Parameters:\n * \n * w - Width of the page in pixels.\n * h - Height of the page in pixels.\n * dx - Optional horizontal page offset in pixels (used internally).\n * dy - Optional vertical page offset in pixels (used internally).\n * content - Callback that adds the HTML content to the inner div of a page.\n * Takes the inner div as the argument.\n * pageNumber - Integer representing the page number.\n */\nmxPrintPreview.prototype.renderPage = function(w, h, dx, dy, content, pageNumber)\n{\n\tvar doc = this.wnd.document;\n\tvar div = document.createElement('div');\n\tvar arg = null;\n\n\ttry\n\t{\n\t\t// Workaround for ignored clipping in IE 9 standards\n\t\t// when printing with page breaks and HTML labels.\n\t\tif (dx != 0 || dy != 0)\n\t\t{\n\t\t\tdiv.style.position = 'relative';\n\t\t\tdiv.style.width = w + 'px';\n\t\t\tdiv.style.height = h + 'px';\n\t\t\tdiv.style.pageBreakInside = 'avoid';\n\t\t\t\n\t\t\tvar innerDiv = document.createElement('div');\n\t\t\tinnerDiv.style.position = 'relative';\n\t\t\tinnerDiv.style.top = this.border + 'px';\n\t\t\tinnerDiv.style.left = this.border + 'px';\n\t\t\tinnerDiv.style.width = (w - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.height = (h - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.overflow = 'hidden';\n\t\t\t\n\t\t\tvar viewport = document.createElement('div');\n\t\t\tviewport.style.position = 'relative';\n\t\t\tviewport.style.marginLeft = dx + 'px';\n\t\t\tviewport.style.marginTop = dy + 'px';\n\n\t\t\t// FIXME: IE8 standards output problems\n\t\t\tif (doc.documentMode == 8)\n\t\t\t{\n\t\t\t\tinnerDiv.style.position = 'absolute';\n\t\t\t\tviewport.style.position = 'absolute';\n\t\t\t}\n\t\t\n\t\t\tif (doc.documentMode == 10)\n\t\t\t{\n\t\t\t\tviewport.style.width = '100%';\n\t\t\t\tviewport.style.height = '100%';\n\t\t\t}\n\t\t\t\n\t\t\tinnerDiv.appendChild(viewport);\n\t\t\tdiv.appendChild(innerDiv);\n\t\t\tdocument.body.appendChild(div);\n\t\t\targ = viewport;\n\t\t}\n\t\t// FIXME: IE10/11 too many pages\n\t\telse\n\t\t{\n\t\t\tdiv.style.width = w + 'px';\n\t\t\tdiv.style.height = h + 'px';\n\t\t\tdiv.style.overflow = 'hidden';\n\t\t\tdiv.style.pageBreakInside = 'avoid';\n\t\t\t\n\t\t\t// IE8 uses above branch currently\n\t\t\tif (doc.documentMode == 8)\n\t\t\t{\n\t\t\t\tdiv.style.position = 'relative';\n\t\t\t}\n\t\t\t\n\t\t\tvar innerDiv = document.createElement('div');\n\t\t\tinnerDiv.style.width = (w - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.height = (h - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.overflow = 'hidden';\n\n\t\t\tif (mxClient.IS_IE && (doc.documentMode == null || doc.documentMode == 5 || doc.documentMode == 8 || doc.documentMode == 7))\n\t\t\t{\n\t\t\t\tinnerDiv.style.marginTop = this.border + 'px';\n\t\t\t\tinnerDiv.style.marginLeft = this.border + 'px';\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinnerDiv.style.top = this.border + 'px';\n\t\t\t\tinnerDiv.style.left = this.border + 'px';\n\t\t\t}\n\t\n\t\t\tif (this.graph.dialect == mxConstants.DIALECT_VML)\n\t\t\t{\n\t\t\t\tinnerDiv.style.position = 'absolute';\n\t\t\t}\n\n\t\t\tdiv.appendChild(innerDiv);\n\t\t\tdocument.body.appendChild(div);\n\t\t\targ = innerDiv;\n\t\t}\n\t}\n\tcatch (e)\n\t{\n\t\tdiv.parentNode.removeChild(div);\n\t\tdiv = null;\n\t\t\n\t\tthrow e;\n\t}\n\n\tcontent(arg);\n\t \n\treturn div;\n};\n\n/**\n * Function: getRoot\n * \n * Returns the root cell for painting the graph.\n */\nmxPrintPreview.prototype.getRoot = function()\n{\n\tvar root = this.graph.view.currentRoot;\n\t\n\tif (root == null)\n\t{\n\t\troot = this.graph.getModel().getRoot();\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: addGraphFragment\n * \n * Adds a graph fragment to the given div.\n * \n * Parameters:\n * \n * dx - Horizontal translation for the diagram.\n * dy - Vertical translation for the diagram.\n * scale - Scale for the diagram.\n * pageNumber - Number of the page to be rendered.\n * div - Div that contains the output.\n * clip - Contains the clipping rectangle as an <mxRectangle>.\n */\nmxPrintPreview.prototype.addGraphFragment = function(dx, dy, scale, pageNumber, div, clip)\n{\n\tvar view = this.graph.getView();\n\tvar previousContainer = this.graph.container;\n\tthis.graph.container = div;\n\t\n\tvar canvas = view.getCanvas();\n\tvar backgroundPane = view.getBackgroundPane();\n\tvar drawPane = view.getDrawPane();\n\tvar overlayPane = view.getOverlayPane();\n\tvar realScale = scale;\n\n\tif (this.graph.dialect == mxConstants.DIALECT_SVG)\n\t{\n\t\tview.createSvg();\n\t\t\n\t\t// Uses CSS transform for scaling\n\t\tif (!mxClient.NO_FO)\n\t\t{\n\t\t\tvar g = view.getDrawPane().parentNode;\n\t\t\tvar prev = g.getAttribute('transform');\n\t\t\tg.setAttribute('transformOrigin', '0 0');\n\t\t\tg.setAttribute('transform', 'scale(' + scale + ',' + scale + ')' +\n\t\t\t\t'translate(' + dx + ',' + dy + ')');\n\t\t\t\n\t\t\tscale = 1;\n\t\t\tdx = 0;\n\t\t\tdy = 0;\n\t\t}\n\t}\n\telse if (this.graph.dialect == mxConstants.DIALECT_VML)\n\t{\n\t\tview.createVml();\n\t}\n\telse\n\t{\n\t\tview.createHtml();\n\t}\n\t\n\t// Disables events on the view\n\tvar eventsEnabled = view.isEventsEnabled();\n\tview.setEventsEnabled(false);\n\t\n\t// Disables the graph to avoid cursors\n\tvar graphEnabled = this.graph.isEnabled();\n\tthis.graph.setEnabled(false);\n\n\t// Resets the translation\n\tvar translate = view.getTranslate();\n\tview.translate = new mxPoint(dx, dy);\n\t\n\t// Redraws only states that intersect the clip\n\tvar redraw = this.graph.cellRenderer.redraw;\n\tvar states = view.states;\n\tvar s = view.scale;\n\n\t// Gets the transformed clip for intersection check below\n\tif (this.clipping)\n\t{\n\t\tvar tempClip = new mxRectangle((clip.x + translate.x) * s, (clip.y + translate.y) * s,\n\t\t\t\tclip.width * s / realScale, clip.height * s / realScale);\n\n\t\t// Checks clipping rectangle for speedup\n\t\t// Must create terminal states for edge clipping even if terminal outside of clip\n\t\tthis.graph.cellRenderer.redraw = function(state, force, rendering)\n\t\t{\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\t// Gets original state from graph to find bounding box\n\t\t\t\tvar orig = states.get(state.cell);\n\t\t\t\t\n\t\t\t\tif (orig != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = view.getBoundingBox(orig, false);\n\t\t\t\t\t\n\t\t\t\t\t// Stops rendering if outside clip for speedup\n\t\t\t\t\tif (bbox != null && !mxUtils.intersects(tempClip, bbox))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tredraw.apply(this, arguments);\n\t\t};\n\t}\n\t\n\tvar temp = null;\n\t\n\ttry\n\t{\n\t\t// Creates the temporary cell states in the view and\n\t\t// draws them onto the temporary DOM nodes in the view\n\t\tvar cells = [this.getRoot()];\n\t\ttemp = new mxTemporaryCellStates(view, scale, cells, null, mxUtils.bind(this, function(state)\n\t\t{\n\t\t\treturn this.getLinkForCellState(state);\n\t\t}));\n\t}\n\tfinally\n\t{\n\t\t// Removes overlay pane with selection handles\n\t\t// controls and icons from the print output\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tview.overlayPane.innerHTML = '';\n\t\t\tview.canvas.style.overflow = 'hidden';\n\t\t\tview.canvas.style.position = 'relative';\n\t\t\tview.canvas.style.top = this.marginTop + 'px';\n\t\t\tview.canvas.style.width = clip.width + 'px';\n\t\t\tview.canvas.style.height = clip.height + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Removes everything but the SVG node\n\t\t\tvar tmp = div.firstChild;\n\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\tvar next = tmp.nextSibling;\n\t\t\t\tvar name = tmp.nodeName.toLowerCase();\n\n\t\t\t\t// Note: Width and height are required in FF 11\n\t\t\t\tif (name == 'svg')\n\t\t\t\t{\n\t\t\t\t\ttmp.style.overflow = 'hidden';\n\t\t\t\t\ttmp.style.position = 'relative';\n\t\t\t\t\ttmp.style.top = this.marginTop + 'px';\n\t\t\t\t\ttmp.setAttribute('width', clip.width);\n\t\t\t\t\ttmp.setAttribute('height', clip.height);\n\t\t\t\t\ttmp.style.width = '';\n\t\t\t\t\ttmp.style.height = '';\n\t\t\t\t}\n\t\t\t\t// Tries to fetch all text labels and only text labels\n\t\t\t\telse if (tmp.style.cursor != 'default' && name != 'div')\n\t\t\t\t{\n\t\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp = next;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Puts background image behind SVG output\n\t\tif (this.printBackgroundImage)\n\t\t{\n\t\t\tvar svgs = div.getElementsByTagName('svg');\n\t\t\t\n\t\t\tif (svgs.length > 0)\n\t\t\t{\n\t\t\t\tsvgs[0].style.position = 'absolute';\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Completely removes the overlay pane to remove more handles\n\t\tview.overlayPane.parentNode.removeChild(view.overlayPane);\n\n\t\t// Restores the state of the view\n\t\tthis.graph.setEnabled(graphEnabled);\n\t\tthis.graph.container = previousContainer;\n\t\tthis.graph.cellRenderer.redraw = redraw;\n\t\tview.canvas = canvas;\n\t\tview.backgroundPane = backgroundPane;\n\t\tview.drawPane = drawPane;\n\t\tview.overlayPane = overlayPane;\n\t\tview.translate = translate;\n\t\ttemp.destroy();\n\t\tview.setEventsEnabled(eventsEnabled);\n\t}\n};\n\n/**\n * Function: getLinkForCellState\n * \n * Returns the link for the given cell state. This returns null.\n */\nmxPrintPreview.prototype.getLinkForCellState = function(state)\n{\n\treturn this.graph.getLinkForCell(state.cell);\n};\n\n/**\n * Function: insertBackgroundImage\n * \n * Inserts the background image into the given div.\n */\nmxPrintPreview.prototype.insertBackgroundImage = function(div, dx, dy)\n{\n\tvar bg = this.graph.backgroundImage;\n\t\n\tif (bg != null)\n\t{\n\t\tvar img = document.createElement('img');\n\t\timg.style.position = 'absolute';\n\t\timg.style.marginLeft = Math.round(dx * this.scale) + 'px';\n\t\timg.style.marginTop = Math.round(dy * this.scale) + 'px';\n\t\timg.setAttribute('width', Math.round(this.scale * bg.width));\n\t\timg.setAttribute('height', Math.round(this.scale * bg.height));\n\t\timg.src = bg.src;\n\t\t\n\t\tdiv.insertBefore(img, div.firstChild);\n\t}\n};\n\n/**\n * Function: getCoverPages\n * \n * Returns the pages to be added before the print output. This returns null.\n */\nmxPrintPreview.prototype.getCoverPages = function()\n{\n\treturn null;\n};\n\n/**\n * Function: getAppendices\n * \n * Returns the pages to be added after the print output. This returns null.\n */\nmxPrintPreview.prototype.getAppendices = function()\n{\n\treturn null;\n};\n\n/**\n * Function: print\n * \n * Opens the print preview and shows the print dialog.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n */\nmxPrintPreview.prototype.print = function(css)\n{\n\tvar wnd = this.open(css);\n\t\n\tif (wnd != null)\n\t{\n\t\twnd.print();\n\t}\n};\n\n/**\n * Function: close\n * \n * Closes the print preview window.\n */\nmxPrintPreview.prototype.close = function()\n{\n\tif (this.wnd != null)\n\t{\n\t\tthis.wnd.close();\n\t\tthis.wnd = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStylesheet\n * \n * Defines the appearance of the cells in a graph. See <putCellStyle> for an\n * example of creating a new cell style. It is recommended to use objects, not\n * arrays for holding cell styles. Existing styles can be cloned using\n * <mxUtils.clone> and turned into a string for debugging using\n * <mxUtils.toString>.\n *\n * Default Styles:\n * \n * The stylesheet contains two built-in styles, which are used if no style is\n * defined for a cell:\n *\n *   defaultVertex - Default style for vertices\n *   defaultEdge - Default style for edges\n * \n * Example:\n * \n * (code)\n * var vertexStyle = stylesheet.getDefaultVertexStyle();\n * vertexStyle[mxConstants.ROUNDED] = true;\n * var edgeStyle = stylesheet.getDefaultEdgeStyle();\n * edgeStyle[mxConstants.STYLE_EDGE] = mxEdgeStyle.EntityRelation;\n * (end)\n * \n * Modifies the built-in default styles.\n * \n * To avoid the default style for a cell, add a leading semicolon\n * to the style definition, eg.\n * \n * (code)\n * ;shadow=1\n * (end)\n * \n * Removing keys:\n * \n * For removing a key in a cell style of the form [stylename;|key=value;] the\n * special value none can be used, eg. highlight;fillColor=none\n * \n * See also the helper methods in mxUtils to modify strings of this format,\n * namely <mxUtils.setStyle>, <mxUtils.indexOfStylename>,\n * <mxUtils.addStylename>, <mxUtils.removeStylename>,\n * <mxUtils.removeAllStylenames> and <mxUtils.setStyleFlag>.\n * \n * Constructor: mxStylesheet\n * \n * Constructs a new stylesheet and assigns default styles.\n */\nfunction mxStylesheet()\n{\n\tthis.styles = new Object();\n\t\n\tthis.putDefaultVertexStyle(this.createDefaultVertexStyle());\n\tthis.putDefaultEdgeStyle(this.createDefaultEdgeStyle());\n};\n\n/**\n * Function: styles\n * \n * Maps from names to cell styles. Each cell style is a map of key,\n * value pairs.\n */\nmxStylesheet.prototype.styles;\n\n/**\n * Function: createDefaultVertexStyle\n * \n * Creates and returns the default vertex style.\n */\nmxStylesheet.prototype.createDefaultVertexStyle = function()\n{\n\tvar style = new Object();\n\t\n\tstyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_RECTANGLE;\n\tstyle[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n\tstyle[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\n\tstyle[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\n\tstyle[mxConstants.STYLE_FILLCOLOR] = '#C3D9FF';\n\tstyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\n\tstyle[mxConstants.STYLE_FONTCOLOR] = '#774400';\n\t\n\treturn style;\n};\n\n/**\n * Function: createDefaultEdgeStyle\n * \n * Creates and returns the default edge style.\n */\nmxStylesheet.prototype.createDefaultEdgeStyle = function()\n{\n\tvar style = new Object();\n\t\n\tstyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_CONNECTOR;\n\tstyle[mxConstants.STYLE_ENDARROW] = mxConstants.ARROW_CLASSIC;\n\tstyle[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\n\tstyle[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\n\tstyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\n\tstyle[mxConstants.STYLE_FONTCOLOR] = '#446299';\n\t\n\treturn style;\n};\n\n/**\n * Function: putDefaultVertexStyle\n * \n * Sets the default style for vertices using defaultVertex as the\n * stylename.\n * \n * Parameters:\n * style - Key, value pairs that define the style.\n */\nmxStylesheet.prototype.putDefaultVertexStyle = function(style)\n{\n\tthis.putCellStyle('defaultVertex', style);\n};\n\n/**\n * Function: putDefaultEdgeStyle\n * \n * Sets the default style for edges using defaultEdge as the stylename.\n */\nmxStylesheet.prototype.putDefaultEdgeStyle = function(style)\n{\n\tthis.putCellStyle('defaultEdge', style);\n};\n\n/**\n * Function: getDefaultVertexStyle\n * \n * Returns the default style for vertices.\n */\nmxStylesheet.prototype.getDefaultVertexStyle = function()\n{\n\treturn this.styles['defaultVertex'];\n};\n\n/**\n * Function: getDefaultEdgeStyle\n * \n * Sets the default style for edges.\n */\nmxStylesheet.prototype.getDefaultEdgeStyle = function()\n{\n\treturn this.styles['defaultEdge'];\n};\n\n/**\n * Function: putCellStyle\n * \n * Stores the given map of key, value pairs under the given name in\n * <styles>.\n *\n * Example:\n * \n * The following example adds a new style called 'rounded' into an\n * existing stylesheet:\n * \n * (code)\n * var style = new Object();\n * style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_RECTANGLE;\n * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n * style[mxConstants.STYLE_ROUNDED] = true;\n * graph.getStylesheet().putCellStyle('rounded', style);\n * (end)\n * \n * In the above example, the new style is an object. The possible keys of\n * the object are all the constants in <mxConstants> that start with STYLE\n * and the values are either JavaScript objects, such as\n * <mxPerimeter.RightAngleRectanglePerimeter> (which is in fact a function)\n * or expressions, such as true. Note that not all keys will be\n * interpreted by all shapes (eg. the line shape ignores the fill color).\n * The final call to this method associates the style with a name in the\n * stylesheet. The style is used in a cell with the following code:\n * \n * (code)\n * model.setStyle(cell, 'rounded');\n * (end)\n * \n * Parameters:\n * \n * name - Name for the style to be stored.\n * style - Key, value pairs that define the style.\n */\nmxStylesheet.prototype.putCellStyle = function(name, style)\n{\n\tthis.styles[name] = style;\n};\n\n/**\n * Function: getCellStyle\n * \n * Returns the cell style for the specified stylename or the given\n * defaultStyle if no style can be found for the given stylename.\n * \n * Parameters:\n * \n * name - String of the form [(stylename|key=value);] that represents the\n * style.\n * defaultStyle - Default style to be returned if no style can be found.\n */\nmxStylesheet.prototype.getCellStyle = function(name, defaultStyle)\n{\n\tvar style = defaultStyle;\n\t\n\tif (name != null && name.length > 0)\n\t{\n\t\tvar pairs = name.split(';');\n\n\t\tif (style != null &&\n\t\t\tname.charAt(0) != ';')\n\t\t{\n\t\t\tstyle = mxUtils.clone(style);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle = new Object();\n\t\t}\n\n\t\t// Parses each key, value pair into the existing style\n\t \tfor (var i = 0; i < pairs.length; i++)\n\t \t{\n\t \t\tvar tmp = pairs[i];\n\t \t\tvar pos = tmp.indexOf('=');\n\t \t\t\n\t \t\tif (pos >= 0)\n\t \t\t{\n\t\t \t\tvar key = tmp.substring(0, pos);\n\t\t \t\tvar value = tmp.substring(pos + 1);\n\n\t\t \t\tif (value == mxConstants.NONE)\n\t\t \t\t{\n\t\t \t\t\tdelete style[key];\n\t\t \t\t}\n\t\t \t\telse if (mxUtils.isNumeric(value))\n\t\t \t\t{\n\t\t \t\t\tstyle[key] = parseFloat(value);\n\t\t \t\t}\n\t\t \t\telse\n\t\t \t\t{\n\t\t\t \t\tstyle[key] = value;\n\t\t \t\t}\n\t\t\t}\n\t \t\telse\n\t \t\t{\n\t \t\t\t// Merges the entries from a named style\n\t\t\t\tvar tmpStyle = this.styles[tmp];\n\t\t\t\t\n\t\t\t\tif (tmpStyle != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var key in tmpStyle)\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle[key] = tmpStyle[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t \t\t}\n\t\t}\n\t}\n\t\n\treturn style;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellState\n * \n * Represents the current state of a cell in a given <mxGraphView>.\n * \n * For edges, the edge label position is stored in <absoluteOffset>.\n * \n * The size for oversize labels can be retrieved using the boundingBox property\n * of the <text> field as shown below.\n * \n * (code)\n * var bbox = (state.text != null) ? state.text.boundingBox : null;\n * (end)\n * \n * Constructor: mxCellState\n * \n * Constructs a new object that represents the current state of the given\n * cell in the specified view.\n * \n * Parameters:\n * \n * view - <mxGraphView> that contains the state.\n * cell - <mxCell> that this state represents.\n * style - Array of key, value pairs that constitute the style.\n */\nfunction mxCellState(view, cell, style)\n{\n\tthis.view = view;\n\tthis.cell = cell;\n\tthis.style = (style != null) ? style : {};\n\t\n\tthis.origin = new mxPoint();\n\tthis.absoluteOffset = new mxPoint();\n};\n\n/**\n * Extends mxRectangle.\n */\nmxCellState.prototype = new mxRectangle();\nmxCellState.prototype.constructor = mxCellState;\n\n/**\n * Variable: view\n * \n * Reference to the enclosing <mxGraphView>.\n */\nmxCellState.prototype.view = null;\n\n/**\n * Variable: cell\n *\n * Reference to the <mxCell> that is represented by this state.\n */\nmxCellState.prototype.cell = null;\n\n/**\n * Variable: style\n * \n * Contains an array of key, value pairs that represent the style of the\n * cell.\n */\nmxCellState.prototype.style = null;\n\n/**\n * Variable: invalidStyle\n * \n * Specifies if the style is invalid. Default is false.\n */\nmxCellState.prototype.invalidStyle = false;\n\n/**\n * Variable: invalid\n * \n * Specifies if the state is invalid. Default is true.\n */\nmxCellState.prototype.invalid = true;\n\n/**\n * Variable: origin\n *\n * <mxPoint> that holds the origin for all child cells. Default is a new\n * empty <mxPoint>.\n */\nmxCellState.prototype.origin = null;\n\n/**\n * Variable: absolutePoints\n * \n * Holds an array of <mxPoints> that represent the absolute points of an\n * edge.\n */\nmxCellState.prototype.absolutePoints = null;\n\n/**\n * Variable: absoluteOffset\n *\n * <mxPoint> that holds the absolute offset. For edges, this is the\n * absolute coordinates of the label position. For vertices, this is the\n * offset of the label relative to the top, left corner of the vertex. \n */\nmxCellState.prototype.absoluteOffset = null;\n\n/**\n * Variable: visibleSourceState\n * \n * Caches the visible source terminal state.\n */\nmxCellState.prototype.visibleSourceState = null;\n\n/**\n * Variable: visibleTargetState\n * \n * Caches the visible target terminal state.\n */\nmxCellState.prototype.visibleTargetState = null;\n\n/**\n * Variable: terminalDistance\n * \n * Caches the distance between the end points for an edge.\n */\nmxCellState.prototype.terminalDistance = 0;\n\n/**\n * Variable: length\n *\n * Caches the length of an edge.\n */\nmxCellState.prototype.length = 0;\n\n/**\n * Variable: segments\n * \n * Array of numbers that represent the cached length of each segment of the\n * edge.\n */\nmxCellState.prototype.segments = null;\n\n/**\n * Variable: shape\n * \n * Holds the <mxShape> that represents the cell graphically.\n */\nmxCellState.prototype.shape = null;\n\n/**\n * Variable: text\n * \n * Holds the <mxText> that represents the label of the cell. Thi smay be\n * null if the cell has no label.\n */\nmxCellState.prototype.text = null;\n\n/**\n * Variable: unscaledWidth\n * \n * Holds the unscaled width of the state.\n */\nmxCellState.prototype.unscaledWidth = null;\n\n/**\n * Function: getPerimeterBounds\n * \n * Returns the <mxRectangle> that should be used as the perimeter of the\n * cell.\n * \n * Parameters:\n * \n * border - Optional border to be added around the perimeter bounds.\n * bounds - Optional <mxRectangle> to be used as the initial bounds.\n */\nmxCellState.prototype.getPerimeterBounds = function(border, bounds)\n{\n\tborder = border || 0;\n\tbounds = (bounds != null) ? bounds : new mxRectangle(this.x, this.y, this.width, this.height);\n\t\n\tif (this.shape != null && this.shape.stencil != null && this.shape.stencil.aspect == 'fixed')\n\t{\n\t\tvar aspect = this.shape.stencil.computeAspect(this.style, bounds.x, bounds.y, bounds.width, bounds.height);\n\t\t\n\t\tbounds.x = aspect.x;\n\t\tbounds.y = aspect.y;\n\t\tbounds.width = this.shape.stencil.w0 * aspect.width;\n\t\tbounds.height = this.shape.stencil.h0 * aspect.height;\n\t}\n\t\n\tif (border != 0)\n\t{\n\t\tbounds.grow(border);\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: setAbsoluteTerminalPoint\n * \n * Sets the first or last point in <absolutePoints> depending on isSource.\n * \n * Parameters:\n * \n * point - <mxPoint> that represents the terminal point.\n * isSource - Boolean that specifies if the first or last point should\n * be assigned.\n */\nmxCellState.prototype.setAbsoluteTerminalPoint = function(point, isSource)\n{\n\tif (isSource)\n\t{\n\t\tif (this.absolutePoints == null)\n\t\t{\n\t\t\tthis.absolutePoints = [];\n\t\t}\n\t\t\n\t\tif (this.absolutePoints.length == 0)\n\t\t{\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.absolutePoints[0] = point;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (this.absolutePoints == null)\n\t\t{\n\t\t\tthis.absolutePoints = [];\n\t\t\tthis.absolutePoints.push(null);\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse if (this.absolutePoints.length == 1)\n\t\t{\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.absolutePoints[this.absolutePoints.length - 1] = point;\n\t\t}\n\t}\n};\n\n/**\n * Function: setCursor\n * \n * Sets the given cursor on the shape and text shape.\n */\nmxCellState.prototype.setCursor = function(cursor)\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.setCursor(cursor);\n\t}\n\t\n\tif (this.text != null)\n\t{\n\t\tthis.text.setCursor(cursor);\n\t}\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Returns the visible source or target terminal cell.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source or target cell should be\n * returned.\n */\nmxCellState.prototype.getVisibleTerminal = function(source)\n{\n\tvar tmp = this.getVisibleTerminalState(source);\n\t\n\treturn (tmp != null) ? tmp.cell : null;\n};\n\n/**\n * Function: getVisibleTerminalState\n * \n * Returns the visible source or target terminal state.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source or target state should be\n * returned.\n */\nmxCellState.prototype.getVisibleTerminalState = function(source)\n{\n\treturn (source) ? this.visibleSourceState : this.visibleTargetState;\n};\n\n/**\n * Function: setVisibleTerminalState\n * \n * Sets the visible source or target terminal state.\n * \n * Parameters:\n * \n * terminalState - <mxCellState> that represents the terminal.\n * source - Boolean that specifies if the source or target state should be set.\n */\nmxCellState.prototype.setVisibleTerminalState = function(terminalState, source)\n{\n\tif (source)\n\t{\n\t\tthis.visibleSourceState = terminalState;\n\t}\n\telse\n\t{\n\t\tthis.visibleTargetState = terminalState;\n\t}\n};\n\n/**\n * Function: getCellBounds\n * \n * Returns the unscaled, untranslated bounds.\n */\nmxCellState.prototype.getCellBounds = function()\n{\n\treturn this.cellBounds;\n};\n\n/**\n * Function: getPaintBounds\n * \n * Returns the unscaled, untranslated paint bounds. This is the same as\n * <getCellBounds> but with a 90 degree rotation if the shape's\n * isPaintBoundsInverted returns true.\n */\nmxCellState.prototype.getPaintBounds = function()\n{\n\treturn this.paintBounds;\n};\n\n/**\n * Function: updateCachedBounds\n * \n * Updates the cellBounds and paintBounds.\n */\nmxCellState.prototype.updateCachedBounds = function()\n{\n\tvar tr = this.view.translate;\n\tvar s = this.view.scale;\n\tthis.cellBounds = new mxRectangle(this.x / s - tr.x, this.y / s - tr.y, this.width / s, this.height / s);\n\tthis.paintBounds = mxRectangle.fromRectangle(this.cellBounds);\n\t\n\tif (this.shape != null && this.shape.isPaintBoundsInverted())\n\t{\n\t\tthis.paintBounds.rotate90();\n\t}\n};\n\n/**\n * Destructor: setState\n * \n * Copies all fields from the given state to this state.\n */\nmxCellState.prototype.setState = function(state)\n{\n\tthis.view = state.view;\n\tthis.cell = state.cell;\n\tthis.style = state.style;\n\tthis.absolutePoints = state.absolutePoints;\n\tthis.origin = state.origin;\n\tthis.absoluteOffset = state.absoluteOffset;\n\tthis.boundingBox = state.boundingBox;\n\tthis.terminalDistance = state.terminalDistance;\n\tthis.segments = state.segments;\n\tthis.length = state.length;\n\tthis.x = state.x;\n\tthis.y = state.y;\n\tthis.width = state.width;\n\tthis.height = state.height;\n\tthis.unscaledWidth = state.unscaledWidth;\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of this <mxPoint>.\n */\nmxCellState.prototype.clone = function()\n{\n \tvar clone = new mxCellState(this.view, this.cell, this.style);\n\n\t// Clones the absolute points\n\tif (this.absolutePoints != null)\n\t{\n\t\tclone.absolutePoints = [];\n\t\t\n\t\tfor (var i = 0; i < this.absolutePoints.length; i++)\n\t\t{\n\t\t\tclone.absolutePoints[i] = this.absolutePoints[i].clone();\n\t\t}\n\t}\n\n\tif (this.origin != null)\n\t{\n\t\tclone.origin = this.origin.clone();\n\t}\n\n\tif (this.absoluteOffset != null)\n\t{\n\t\tclone.absoluteOffset = this.absoluteOffset.clone();\n\t}\n\n\tif (this.boundingBox != null)\n\t{\n\t\tclone.boundingBox = this.boundingBox.clone();\n\t}\n\n\tclone.terminalDistance = this.terminalDistance;\n\tclone.segments = this.segments;\n\tclone.length = this.length;\n\tclone.x = this.x;\n\tclone.y = this.y;\n\tclone.width = this.width;\n\tclone.height = this.height;\n\tclone.unscaledWidth = this.unscaledWidth;\n\t\n\treturn clone;\n};\n\n/**\n * Destructor: destroy\n * \n * Destroys the state and all associated resources.\n */\nmxCellState.prototype.destroy = function()\n{\n\tthis.view.graph.cellRenderer.destroy(this);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphSelectionModel\n *\n * Implements the selection model for a graph. Here is a listener that handles\n * all removed selection cells.\n * \n * (code)\n * graph.getSelectionModel().addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var cells = evt.getProperty('added');\n *   \n *   for (var i = 0; i < cells.length; i++)\n *   {\n *     // Handle cells[i]...\n *   }\n * });\n * (end)\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the selection was changed in <changeSelection>. The\n * <code>edit</code> property contains the <mxUndoableEdit> which contains the\n * <mxSelectionChange>.\n * \n * Event: mxEvent.CHANGE\n * \n * Fires after the selection changes by executing an <mxSelectionChange>. The\n * <code>added</code> and <code>removed</code> properties contain arrays of\n * cells that have been added to or removed from the selection, respectively.\n * The names are inverted due to historic reasons. This cannot be changed.\n * \n * Constructor: mxGraphSelectionModel\n *\n * Constructs a new graph selection model for the given <mxGraph>.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphSelectionModel(graph)\n{\n\tthis.graph = graph;\n\tthis.cells = [];\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphSelectionModel.prototype = new mxEventSource();\nmxGraphSelectionModel.prototype.constructor = mxGraphSelectionModel;\n\n/**\n * Variable: doneResource\n * \n * Specifies the resource key for the status message after a long operation.\n * If the resource for this key does not exist then the value is used as\n * the status message. Default is 'done'.\n */\nmxGraphSelectionModel.prototype.doneResource = (mxClient.language != 'none') ? 'done' : '';\n\n/**\n * Variable: updatingSelectionResource\n *\n * Specifies the resource key for the status message while the selection is\n * being updated. If the resource for this key does not exist then the\n * value is used as the status message. Default is 'updatingSelection'.\n */\nmxGraphSelectionModel.prototype.updatingSelectionResource = (mxClient.language != 'none') ? 'updatingSelection' : '';\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphSelectionModel.prototype.graph = null;\n\n/**\n * Variable: singleSelection\n *\n * Specifies if only one selected item at a time is allowed.\n * Default is false.\n */\nmxGraphSelectionModel.prototype.singleSelection = false;\n\n/**\n * Function: isSingleSelection\n *\n * Returns <singleSelection> as a boolean.\n */\nmxGraphSelectionModel.prototype.isSingleSelection = function()\n{\n\treturn this.singleSelection;\n};\n\n/**\n * Function: setSingleSelection\n *\n * Sets the <singleSelection> flag.\n * \n * Parameters:\n * \n * singleSelection - Boolean that specifies the new value for\n * <singleSelection>.\n */\nmxGraphSelectionModel.prototype.setSingleSelection = function(singleSelection)\n{\n\tthis.singleSelection = singleSelection;\n};\n\n/**\n * Function: isSelected\n *\n * Returns true if the given <mxCell> is selected.\n */\nmxGraphSelectionModel.prototype.isSelected = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\treturn mxUtils.indexOf(this.cells, cell) >= 0;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: isEmpty\n *\n * Returns true if no cells are currently selected.\n */\nmxGraphSelectionModel.prototype.isEmpty = function()\n{\n\treturn this.cells.length == 0;\n};\n\n/**\n * Function: clear\n *\n * Clears the selection and fires a <change> event if the selection was not\n * empty.\n */\nmxGraphSelectionModel.prototype.clear = function()\n{\n\tthis.changeSelection(null, this.cells);\n};\n\n/**\n * Function: setCell\n *\n * Selects the specified <mxCell> using <setCells>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n */\nmxGraphSelectionModel.prototype.setCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.setCells([cell]);\n\t}\n};\n\n/**\n * Function: setCells\n *\n * Selects the given array of <mxCells> and fires a <change> event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n */\nmxGraphSelectionModel.prototype.setCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tif (this.singleSelection)\n\t\t{\n\t\t\tcells = [this.getFirstSelectableCell(cells)];\n\t\t}\n\t\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\t\n\t\t}\n\n\t\tthis.changeSelection(tmp, this.cells);\n\t}\n};\n\n/**\n * Function: getFirstSelectableCell\n *\n * Returns the first selectable cell in the given array of cells.\n */\nmxGraphSelectionModel.prototype.getFirstSelectableCell = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\treturn cells[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: addCell\n * \n * Adds the given <mxCell> to the selection and fires a <select> event.\n * \n * Parameters:\n * \n * cell - <mxCell> to add to the selection.\n */\nmxGraphSelectionModel.prototype.addCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.addCells([cell]);\n\t}\n};\n\n/**\n * Function: addCells\n * \n * Adds the given array of <mxCells> to the selection and fires a <select>\n * event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to add to the selection.\n */\nmxGraphSelectionModel.prototype.addCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar remove = null;\n\t\t\n\t\tif (this.singleSelection)\n\t\t{\n\t\t\tremove = this.cells;\n\t\t\tcells = [this.getFirstSelectableCell(cells)];\n\t\t}\n\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (!this.isSelected(cells[i]) &&\n\t\t\t\tthis.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\t\n\t\t}\n\n\t\tthis.changeSelection(tmp, remove);\n\t}\n};\n\n/**\n * Function: removeCell\n *\n * Removes the specified <mxCell> from the selection and fires a <select>\n * event for the remaining cells.\n * \n * Parameters:\n * \n * cell - <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.removeCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.removeCells([cell]);\n\t}\n};\n\n/**\n * Function: removeCells\n */\nmxGraphSelectionModel.prototype.removeCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.isSelected(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.changeSelection(null, tmp);\t\n\t}\n};\n\n/**\n * Function: changeSelection\n *\n * Adds/removes the specified arrays of <mxCell> to/from the selection.\n * \n * Parameters:\n * \n * added - Array of <mxCell> to add to the selection.\n * remove - Array of <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.changeSelection = function(added, removed)\n{\n\tif ((added != null &&\n\t\tadded.length > 0 &&\n\t\tadded[0] != null) ||\n\t\t(removed != null &&\n\t\tremoved.length > 0 &&\n\t\tremoved[0] != null))\n\t{\n\t\tvar change = new mxSelectionChange(this, added, removed);\n\t\tchange.execute();\n\t\tvar edit = new mxUndoableEdit(this, false);\n\t\tedit.add(change);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n\t}\n};\n\n/**\n * Function: cellAdded\n *\n * Inner callback to add the specified <mxCell> to the selection. No event\n * is fired in this implementation.\n * \n * Paramters:\n * \n * cell - <mxCell> to add to the selection.\n */\nmxGraphSelectionModel.prototype.cellAdded = function(cell)\n{\n\tif (cell != null &&\n\t\t!this.isSelected(cell))\n\t{\n\t\tthis.cells.push(cell);\n\t}\n};\n\n/**\n * Function: cellRemoved\n *\n * Inner callback to remove the specified <mxCell> from the selection. No\n * event is fired in this implementation.\n * \n * Parameters:\n * \n * cell - <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.cellRemoved = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tvar index = mxUtils.indexOf(this.cells, cell);\n\t\t\n\t\tif (index >= 0)\n\t\t{\n\t\t\tthis.cells.splice(index, 1);\n\t\t}\n\t}\n};\n\n/**\n * Class: mxSelectionChange\n *\n * Action to change the current root in a view.\n *\n * Constructor: mxCurrentRootChange\n *\n * Constructs a change of the current root in the given view.\n */\nfunction mxSelectionChange(selectionModel, added, removed)\n{\n\tthis.selectionModel = selectionModel;\n\tthis.added = (added != null) ? added.slice() : null;\n\tthis.removed = (removed != null) ? removed.slice() : null;\n};\n\n/**\n * Function: execute\n *\n * Changes the current root of the view.\n */\nmxSelectionChange.prototype.execute = function()\n{\n\tvar t0 = mxLog.enter('mxSelectionChange.execute');\n\twindow.status = mxResources.get(\n\t\tthis.selectionModel.updatingSelectionResource) ||\n\t\tthis.selectionModel.updatingSelectionResource;\n\n\tif (this.removed != null)\n\t{\n\t\tfor (var i = 0; i < this.removed.length; i++)\n\t\t{\n\t\t\tthis.selectionModel.cellRemoved(this.removed[i]);\n\t\t}\n\t}\n\n\tif (this.added != null)\n\t{\n\t\tfor (var i = 0; i < this.added.length; i++)\n\t\t{\n\t\t\tthis.selectionModel.cellAdded(this.added[i]);\n\t\t}\n\t}\n\t\n\tvar tmp = this.added;\n\tthis.added = this.removed;\n\tthis.removed = tmp;\n\n\twindow.status = mxResources.get(this.selectionModel.doneResource) ||\n\t\tthis.selectionModel.doneResource;\n\tmxLog.leave('mxSelectionChange.execute', t0);\n\t\n\tthis.selectionModel.fireEvent(new mxEventObject(mxEvent.CHANGE,\n\t\t\t'added', this.added, 'removed', this.removed));\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellEditor\n *\n * In-place editor for the graph. To control this editor, use\n * <mxGraph.invokesStopCellEditing>, <mxGraph.enterStopsCellEditing> and\n * <mxGraph.escapeEnabled>. If <mxGraph.enterStopsCellEditing> is true then\n * ctrl-enter or shift-enter can be used to create a linefeed. The F2 and\n * escape keys can always be used to stop editing.\n * \n * To customize the location of the textbox in the graph, override\n * <getEditorBounds> as follows:\n * \n * (code)\n * graph.cellEditor.getEditorBounds = function(state)\n * {\n *   var result = mxCellEditor.prototype.getEditorBounds.apply(this, arguments);\n *   \n *   if (this.graph.getModel().isEdge(state.cell))\n *   {\n *     result.x = state.getCenterX() - result.width / 2;\n *     result.y = state.getCenterY() - result.height / 2;\n *   }\n *   \n *   return result;\n * };\n * (end)\n * \n * Note that this hook is only called if <autoSize> is false. If <autoSize> is true,\n * then <mxShape.getLabelBounds> is used to compute the current bounds of the textbox.\n * \n * The textarea uses the mxCellEditor CSS class. You can modify this class in\n * your custom CSS. Note: You should modify the CSS after loading the client\n * in the page.\n *\n * Example:\n * \n * To only allow numeric input in the in-place editor, use the following code.\n *\n * (code)\n * var text = graph.cellEditor.textarea;\n * \n * mxEvent.addListener(text, 'keydown', function (evt)\n * {\n *   if (!(evt.keyCode >= 48 && evt.keyCode <= 57) &&\n *       !(evt.keyCode >= 96 && evt.keyCode <= 105))\n *   {\n *     mxEvent.consume(evt);\n *   }\n * }); \n * (end)\n * \n * Placeholder:\n * \n * To implement a placeholder for cells without a label, use the\n * <emptyLabelText> variable.\n * \n * Resize in Chrome:\n * \n * Resize of the textarea is disabled by default. If you want to enable\n * this feature extend <init> and set this.textarea.style.resize = ''.\n * \n * To start editing on a key press event, the container of the graph\n * should have focus or a focusable parent should be used to add the\n * key press handler as follows.\n * \n * (code)\n * mxEvent.addListener(graph.container, 'keypress', mxUtils.bind(this, function(evt)\n * {\n *   if (!graph.isEditing() && !graph.isSelectionEmpty() && evt.which !== 0 &&\n *       !mxEvent.isAltDown(evt) && !mxEvent.isControlDown(evt) && !mxEvent.isMetaDown(evt))\n *   {\n *     graph.startEditing();\n *     \n *     if (mxClient.IS_FF)\n *     {\n *       graph.cellEditor.textarea.value = String.fromCharCode(evt.which);\n *     }\n *   }\n * }));\n * (end)\n * \n * To allow focus for a DIV, and hence to receive key press events, some browsers\n * require it to have a valid tabindex attribute. In this case the following\n * code may be used to keep the container focused.\n * \n * (code)\n * var graphFireMouseEvent = graph.fireMouseEvent;\n * graph.fireMouseEvent = function(evtName, me, sender)\n * {\n *   if (evtName == mxEvent.MOUSE_DOWN)\n *   {\n *     this.container.focus();\n *   }\n *   \n *   graphFireMouseEvent.apply(this, arguments);\n * };\n * (end)\n *\n * Constructor: mxCellEditor\n *\n * Constructs a new in-place editor for the specified graph.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxCellEditor(graph)\n{\n\tthis.graph = graph;\n\t\n\t// Stops editing after zoom changes\n\tthis.zoomHandler = mxUtils.bind(this, function()\n\t{\n\t\tif (this.graph.isEditing())\n\t\t{\n\t\t\tthis.resize();\n\t\t}\n\t});\n\t\n\tthis.graph.view.addListener(mxEvent.SCALE, this.zoomHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE_AND_TRANSLATE, this.zoomHandler);\n\t\n\t// Adds handling of deleted cells while editing\n\tthis.changeHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.editingCell != null && this.graph.getView().getState(this.editingCell) == null)\n\t\t{\n\t\t\tthis.stopEditing(true);\n\t\t}\n\t});\n\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellEditor.prototype.graph = null;\n\n/**\n * Variable: textarea\n *\n * Holds the DIV that is used for text editing. Note that this may be null before the first\n * edit. Instantiated in <init>.\n */\nmxCellEditor.prototype.textarea = null;\n\n/**\n * Variable: editingCell\n * \n * Reference to the <mxCell> that is currently being edited.\n */\nmxCellEditor.prototype.editingCell = null;\n\n/**\n * Variable: trigger\n * \n * Reference to the event that was used to start editing.\n */\nmxCellEditor.prototype.trigger = null;\n\n/**\n * Variable: modified\n * \n * Specifies if the label has been modified.\n */\nmxCellEditor.prototype.modified = false;\n\n/**\n * Variable: autoSize\n * \n * Specifies if the textarea should be resized while the text is being edited.\n * Default is true.\n */\nmxCellEditor.prototype.autoSize = true;\n\n/**\n * Variable: selectText\n * \n * Specifies if the text should be selected when editing starts. Default is\n * true.\n */\nmxCellEditor.prototype.selectText = true;\n\n/**\n * Variable: emptyLabelText\n * \n * Text to be displayed for empty labels. Default is '' or '<br>' in Firefox as\n * a workaround for the missing cursor bug for empty content editable. This can\n * be set to eg. \"[Type Here]\" to easier visualize editing of empty labels. The\n * value is only displayed before the first keystroke and is never used as the\n * actual editing value.\n */\nmxCellEditor.prototype.emptyLabelText = (mxClient.IS_FF) ? '<br>' : '';\n\n/**\n * Variable: escapeCancelsEditing\n * \n * If true, pressing the escape key will stop editing and not accept the new\n * value. Change this to false to accept the new value on escape, and cancel\n * editing on Shift+Escape instead. Default is true.\n */\nmxCellEditor.prototype.escapeCancelsEditing = true;\n\n/**\n * Variable: textNode\n * \n * Reference to the label DOM node that has been hidden.\n */\nmxCellEditor.prototype.textNode = '';\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the textarea. Default is 5.\n */\nmxCellEditor.prototype.zIndex = 5;\n\n/**\n * Variable: minResize\n * \n * Defines the minimum width and height to be used in <resize>. Default is 0x20px.\n */\nmxCellEditor.prototype.minResize = new mxRectangle(0, 20);\n\n/**\n * Variable: wordWrapPadding\n * \n * Correction factor for word wrapping width. Default is 2 in quirks, 0 in IE\n * 11 and 1 in all other browsers and modes.\n */\nmxCellEditor.prototype.wordWrapPadding = (mxClient.IS_QUIRKS) ? 2 : (!mxClient.IS_IE11) ? 1 : 0;\n\n/**\n * Variable: blurEnabled\n *\n * If <focusLost> should be called if <textarea> loses the focus. Default is false.\n */\nmxCellEditor.prototype.blurEnabled = false;\n\n/**\n * Variable: initialValue\n * \n * Holds the initial editing value to check if the current value was modified.\n */\nmxCellEditor.prototype.initialValue = null;\n\n/**\n * Variable: align\n * \n * Holds the current temporary horizontal alignment for the cell style. If this\n * is modified then the current text alignment is changed and the cell style is\n * updated when the value is applied.\n */\nmxCellEditor.prototype.align = null;\n\n/**\n * Function: init\n *\n * Creates the <textarea> and installs the event listeners. The key handler\n * updates the <modified> state.\n */\nmxCellEditor.prototype.init = function ()\n{\n\tthis.textarea = document.createElement('div');\n\tthis.textarea.className = 'mxCellEditor mxPlainTextEditor';\n\tthis.textarea.contentEditable = true;\n\t\n\t// Workaround for selection outside of DIV if height is 0\n\tif (mxClient.IS_GC)\n\t{\n\t\tthis.textarea.style.minHeight = '1em';\n\t}\n\n\tthis.textarea.style.position = ((this.isLegacyEditor())) ? 'absolute' : 'relative';\n\tthis.installListeners(this.textarea);\n};\n\n/**\n * Function: applyValue\n * \n * Called in <stopEditing> if cancel is false to invoke <mxGraph.labelChanged>.\n */\nmxCellEditor.prototype.applyValue = function(state, value)\n{\n\tthis.graph.labelChanged(state.cell, value, this.trigger);\n};\n\n/**\n * Function: setAlign\n * \n * Sets the temporary horizontal alignment for the current editing session.\n */\nmxCellEditor.prototype.setAlign = function (align)\n{\n\tif (this.textarea != null)\n\t{\n\t\tthis.textarea.style.textAlign = align;\n\t}\n\t\n\tthis.align = align;\n\tthis.resize();\n};\n\n/**\n * Function: getInitialValue\n * \n * Gets the initial editing value for the given cell.\n */\nmxCellEditor.prototype.getInitialValue = function(state, trigger)\n{\n\tvar result = mxUtils.htmlEntities(this.graph.getEditingValue(state.cell, trigger), false);\n\t\n    // Workaround for trailing line breaks being ignored in the editor\n\tif (!mxClient.IS_QUIRKS && document.documentMode != 8 && document.documentMode != 9 &&\n\t\tdocument.documentMode != 10)\n\t{\n\t\tresult = mxUtils.replaceTrailingNewlines(result, '<div><br></div>');\n\t}\n    \n    return result.replace(/\\n/g, '<br>');\n};\n\n/**\n * Function: getCurrentValue\n * \n * Returns the current editing value.\n */\nmxCellEditor.prototype.getCurrentValue = function(state)\n{\n\treturn mxUtils.extractTextWithWhitespace(this.textarea.childNodes);\n};\n\n/**\n * Function: isCancelEditingKeyEvent\n * \n * Returns true if <escapeCancelsEditing> is true and shift, control and meta\n * are not pressed.\n */\nmxCellEditor.prototype.isCancelEditingKeyEvent = function(evt)\n{\n\treturn this.escapeCancelsEditing || mxEvent.isShiftDown(evt) || mxEvent.isControlDown(evt) || mxEvent.isMetaDown(evt);\n};\n\n/**\n * Function: installListeners\n * \n * Installs listeners for focus, change and standard key event handling.\n */\nmxCellEditor.prototype.installListeners = function(elt)\n{\n\t// Applies value if text is dragged\n\t// LATER: Gesture mouse events ignored for starting move\n\tmxEvent.addListener(elt, 'dragstart', mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.graph.stopEditing(false);\n\t\tmxEvent.consume(evt);\n\t}));\n\n\t// Applies value if focus is lost\n\tmxEvent.addListener(elt, 'blur', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.blurEnabled)\n\t\t{\n\t\t\tthis.focusLost(evt);\n\t\t}\n\t}));\n\n\t// Updates modified state and handles placeholder text\n\tmxEvent.addListener(elt, 'keydown', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (!mxEvent.isConsumed(evt))\n\t\t{\n\t\t\tif (this.isStopEditingEvent(evt))\n\t\t\t{\n\t\t\t\tthis.graph.stopEditing(false);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t\telse if (evt.keyCode == 27 /* Escape */)\n\t\t\t{\n\t\t\t\tthis.graph.stopEditing(this.isCancelEditingKeyEvent(evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t}\n\t}));\n\n\t// Keypress only fires if printable key was pressed and handles removing the empty placeholder\n\tvar keypressHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null)\n\t\t{\n\t\t\t// Clears the initial empty label on the first keystroke\n\t\t\t// and workaround for FF which fires keypress for delete and backspace\n\t\t\tif (this.clearOnChange && elt.innerHTML == this.getEmptyLabelText() &&\n\t\t\t\t(!mxClient.IS_FF || (evt.keyCode != 8 /* Backspace */ && evt.keyCode != 46 /* Delete */)))\n\t\t\t{\n\t\t\t\tthis.clearOnChange = false;\n\t\t\t\telt.innerHTML = '';\n\t\t\t}\n\t\t}\n\t});\n\n\tmxEvent.addListener(elt, 'keypress', keypressHandler);\n\tmxEvent.addListener(elt, 'paste', keypressHandler);\n\t\n\t// Handler for updating the empty label text value after a change\n\tvar keyupHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null)\n\t\t{\n\t\t\t// Uses an optional text value for sempty labels which is cleared\n\t\t\t// when the first keystroke appears. This makes it easier to see\n\t\t\t// that a label is being edited even if the label is empty.\n\t\t\t// In Safari and FF, an empty text is represented by <BR> which isn't enough to force a valid size\n\t\t\tif (this.textarea.innerHTML.length == 0 || this.textarea.innerHTML == '<br>')\n\t\t\t{\n\t\t\t\tthis.textarea.innerHTML = this.getEmptyLabelText();\n\t\t\t\tthis.clearOnChange = this.textarea.innerHTML.length > 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.clearOnChange = false;\n\t\t\t}\n\t\t}\n\t});\n\n\tmxEvent.addListener(elt, (!mxClient.IS_IE11 && !mxClient.IS_IE) ? 'input' : 'keyup', keyupHandler);\n\tmxEvent.addListener(elt, 'cut', keyupHandler);\n\tmxEvent.addListener(elt, 'paste', keyupHandler);\n\n\t// Adds automatic resizing of the textbox while typing using input, keyup and/or DOM change events\n\tvar evtName = (!mxClient.IS_IE11 && !mxClient.IS_IE) ? 'input' : 'keydown';\n\t\n\tvar resizeHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null && this.autoSize && !mxEvent.isConsumed(evt))\n\t\t{\n\t\t\t// Asynchronous is needed for keydown and shows better results for input events overall\n\t\t\t// (ie non-blocking and cases where the offsetWidth/-Height was wrong at this time)\n\t\t\tif (this.resizeThread != null)\n\t\t\t{\n\t\t\t\twindow.clearTimeout(this.resizeThread);\n\t\t\t}\n\t\t\t\n\t\t\tthis.resizeThread = window.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.resizeThread = null;\n\t\t\t\tthis.resize();\n\t\t\t}), 0);\n\t\t}\n\t});\n\t\n\tmxEvent.addListener(elt, evtName, resizeHandler);\n\tmxEvent.addListener(window, 'resize', resizeHandler);\n\n\tif (document.documentMode >= 9)\n\t{\n\t\tmxEvent.addListener(elt, 'DOMNodeRemoved', resizeHandler);\n\t\tmxEvent.addListener(elt, 'DOMNodeInserted', resizeHandler);\n\t}\n\telse\n\t{\n\t\tmxEvent.addListener(elt, 'cut', resizeHandler);\n\t\tmxEvent.addListener(elt, 'paste', resizeHandler);\n\t}\n};\n\n/**\n * Function: isStopEditingEvent\n * \n * Returns true if the given keydown event should stop cell editing. This\n * returns true if F2 is pressed of if <mxGraph.enterStopsCellEditing> is true\n * and enter is pressed without control or shift.\n */\nmxCellEditor.prototype.isStopEditingEvent = function(evt)\n{\n\treturn evt.keyCode == 113 /* F2 */ || (this.graph.isEnterStopsCellEditing() &&\n\t\tevt.keyCode == 13 /* Enter */ && !mxEvent.isControlDown(evt) &&\n\t\t!mxEvent.isShiftDown(evt));\n};\n\n/**\n * Function: isEventSource\n * \n * Returns true if this editor is the source for the given native event.\n */\nmxCellEditor.prototype.isEventSource = function(evt)\n{\n\treturn mxEvent.getSource(evt) == this.textarea;\n};\n\n/**\n * Function: resize\n * \n * Returns <modified>.\n */\nmxCellEditor.prototype.resize = function()\n{\n\tvar state = this.graph.getView().getState(this.editingCell);\n\t\n\tif (state == null)\n\t{\n\t\tthis.stopEditing(true);\n\t}\n\telse if (this.textarea != null)\n\t{\n\t\tvar isEdge = this.graph.getModel().isEdge(state.cell);\n \t\tvar scale = this.graph.getView().scale;\n \t\tvar m = null;\n\t\t\n\t\tif (!this.autoSize || (state.style[mxConstants.STYLE_OVERFLOW] == 'fill'))\n\t\t{\n\t\t\t// Specifies the bounds of the editor box\n\t\t\tthis.bounds = this.getEditorBounds(state);\n\t\t\tthis.textarea.style.width = Math.round(this.bounds.width / scale) + 'px';\n\t\t\tthis.textarea.style.height = Math.round(this.bounds.height / scale) + 'px';\n\t\t\t\n\t\t\t// FIXME: Offset when scaled\n\t\t\tif (document.documentMode == 8 || mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.round(this.bounds.x) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.round(this.bounds.y) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.round(this.bounds.x + 1)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.round(this.bounds.y + 1)) + 'px';\n\t\t\t}\n\t\t\t\n\t\t\t// Installs native word wrapping and avoids word wrap for empty label placeholder\n\t\t\tif (this.graph.isWrapping(state.cell) && (this.bounds.width >= 2 || this.bounds.height >= 2) &&\n\t\t\t\tthis.textarea.innerHTML != this.getEmptyLabelText())\n\t\t\t{\n\t\t\t\tthis.textarea.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tthis.textarea.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t\t\tif (state.style[mxConstants.STYLE_OVERFLOW] != 'fill')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = Math.round(this.bounds.width / scale) + this.wordWrapPadding + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.whiteSpace = 'nowrap';\n\t\t\t\t\n\t\t\t\tif (state.style[mxConstants.STYLE_OVERFLOW] != 'fill')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t \t{\n\t \t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\tm = (state.text != null && this.align == null) ? state.text.margin : null;\n\t\t\t\n\t\t\tif (m == null)\n\t\t\t{\n\t\t\t\tm = mxUtils.getAlignmentAsPoint(this.align || mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_CENTER),\n\t\t\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE));\n\t\t\t}\n\t\t\t\n\t \t\tif (isEdge)\n\t\t\t{\n\t\t\t\tthis.bounds = new mxRectangle(state.absoluteOffset.x, state.absoluteOffset.y, 0, 0);\n\t\t\t\t\n\t\t\t\tif (lw != null)\n\t\t\t \t{\n\t\t\t\t\tvar tmp = (parseFloat(lw) + 2) * scale;\n\t\t\t\t\tthis.bounds.width = tmp;\n\t\t\t\t\tthis.bounds.x += m.x * tmp;\n\t\t\t \t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar bds = mxRectangle.fromRectangle(state);\n\t\t\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\t\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\n\t\t\t\tbds = (state.shape != null && hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE) ? state.shape.getLabelBounds(bds) : bds;\n\t\t\t \t\n\t\t\t \tif (lw != null)\n\t\t\t \t{\n\t\t\t \t\tbds.width = parseFloat(lw) * scale;\n\t\t\t \t}\n\t\t\t \t\n\t\t\t \tif (!state.view.graph.cellRenderer.legacySpacing || state.style[mxConstants.STYLE_OVERFLOW] != 'width')\n\t\t\t \t{\n\t\t\t\t\tvar spacing = parseInt(state.style[mxConstants.STYLE_SPACING] || 2) * scale;\n\t\t\t\t\tvar spacingTop = (parseInt(state.style[mxConstants.STYLE_SPACING_TOP] || 0) + mxText.prototype.baseSpacingTop) * scale + spacing;\n\t\t\t\t\tvar spacingRight = (parseInt(state.style[mxConstants.STYLE_SPACING_RIGHT] || 0) + mxText.prototype.baseSpacingRight) * scale + spacing;\n\t\t\t\t\tvar spacingBottom = (parseInt(state.style[mxConstants.STYLE_SPACING_BOTTOM] || 0) + mxText.prototype.baseSpacingBottom) * scale + spacing;\n\t\t\t\t\tvar spacingLeft = (parseInt(state.style[mxConstants.STYLE_SPACING_LEFT] || 0) + mxText.prototype.baseSpacingLeft) * scale + spacing;\n\t\t\t\t\t\n\t\t\t\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\t\t\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\n\t\t\t\t\tbds = new mxRectangle(bds.x + spacingLeft, bds.y + spacingTop,\n\t\t\t\t\t\tbds.width - ((hpos == mxConstants.ALIGN_CENTER && lw == null) ? (spacingLeft + spacingRight) : 0),\n\t\t\t\t\t\tbds.height - ((vpos == mxConstants.ALIGN_MIDDLE) ? (spacingTop + spacingBottom) : 0));\n\t\t\t \t}\n\n\t\t\t\tthis.bounds = new mxRectangle(bds.x + state.absoluteOffset.x, bds.y + state.absoluteOffset.y, bds.width, bds.height);\n\t\t\t}\n\n\t\t\t// Needed for word wrap inside text blocks with oversize lines to match the final result where\n\t \t\t// the width of the longest line is used as the reference for text alignment in the cell\n\t \t\t// TODO: Fix word wrapping preview for edge labels in helloworld.html\n\t\t\tif (this.graph.isWrapping(state.cell) && (this.bounds.width >= 2 || this.bounds.height >= 2) &&\n\t\t\t\tthis.textarea.innerHTML != this.getEmptyLabelText())\n\t\t\t{\n\t\t\t\tthis.textarea.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tthis.textarea.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t \t\t// Forces automatic reflow if text is removed from an oversize label and normal word wrap\n\t\t\t\tvar tmp = Math.round(this.bounds.width / ((document.documentMode == 8) ? scale : scale)) + this.wordWrapPadding;\n\n\t\t\t\tif (this.textarea.style.position != 'relative')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = tmp + 'px';\n\t\t\t\t\t\n\t\t\t\t\tif (this.textarea.scrollWidth > tmp)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.textarea.style.width = this.textarea.scrollWidth + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.maxWidth = tmp + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// KNOWN: Trailing cursor in IE9 quirks mode is not visible\n\t\t\t\tthis.textarea.style.whiteSpace = 'nowrap';\n\t\t\t\tthis.textarea.style.width = '';\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Keep in visible area, add fine tuning for pixel precision\n\t\t\t// Workaround for wrong measuring in IE8 standards\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\tthis.textarea.style.zoom = '1';\n\t\t\t\tthis.textarea.style.height = 'auto';\n\t\t\t}\n\t\t\t\n\t\t\tvar ow = this.textarea.scrollWidth;\n\t\t\tvar oh = this.textarea.scrollHeight;\n\t\t\t\n\t\t\t// TODO: Update CSS width and height if smaller than minResize or remove minResize\n\t\t\t//if (this.minResize != null)\n\t\t\t//{\n\t\t\t//\tow = Math.max(ow, this.minResize.width);\n\t\t\t//\toh = Math.max(oh, this.minResize.height);\n\t\t\t//}\n\t\t\t\n\t\t\t// LATER: Keep in visible area, add fine tuning for pixel precision\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\t// LATER: Scaled wrapping and position is wrong in IE8\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.ceil((this.bounds.x - m.x * (this.bounds.width - (ow + 1) * scale) + ow * (scale - 1) * 0 + (m.x + 0.5) * 2) / scale)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.ceil((this.bounds.y - m.y * (this.bounds.height - (oh + 0.5) * scale) + oh * (scale - 1) * 0 + Math.abs(m.y + 0.5) * 1) / scale)) + 'px';\n\t\t\t\t// Workaround for wrong event handling width and height\n\t\t\t\tthis.textarea.style.width = Math.round(ow * scale) + 'px';\n\t\t\t\tthis.textarea.style.height = Math.round(oh * scale) + 'px';\n\t\t\t}\n\t\t\telse if (mxClient.IS_QUIRKS)\n\t\t\t{\t\t\t\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.ceil(this.bounds.x - m.x * (this.bounds.width - (ow + 1) * scale) + ow * (scale - 1) * 0 + (m.x + 0.5) * 2)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.ceil(this.bounds.y - m.y * (this.bounds.height - (oh + 0.5) * scale) + oh * (scale - 1) * 0 + Math.abs(m.y + 0.5) * 1)) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.round(this.bounds.x - m.x * (this.bounds.width - 2)) + 1) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.round(this.bounds.y - m.y * (this.bounds.height - 4) + ((m.y == -1) ? 3 : 0)) + 1) + 'px';\n\t\t\t}\n\t \t}\n\n\t\tif (mxClient.IS_VML)\n\t\t{\n\t\t\tthis.textarea.style.zoom = scale;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.setPrefixedStyle(this.textarea.style, 'transformOrigin', '0px 0px');\n\t\t\tmxUtils.setPrefixedStyle(this.textarea.style, 'transform',\n\t\t\t\t'scale(' + scale + ',' + scale + ')' + ((m == null) ? '' :\n\t\t\t\t' translate(' + (m.x * 100) + '%,' + (m.y * 100) + '%)'));\n\t\t}\n\t}\n};\n\n/**\n * Function: focusLost\n *\n * Called if the textarea has lost focus.\n */\nmxCellEditor.prototype.focusLost = function()\n{\n\tthis.stopEditing(!this.graph.isInvokesStopCellEditing());\n};\n\n/**\n * Function: getBackgroundColor\n * \n * Returns the background color for the in-place editor. This implementation\n * always returns null.\n */\nmxCellEditor.prototype.getBackgroundColor = function(state)\n{\n\treturn null;\n};\n\n/**\n * Function: isLegacyEditor\n * \n * Returns true if max-width is not supported or if the SVG root element in\n * in the graph does not have CSS position absolute. In these cases the text\n * editor must use CSS position absolute to avoid an offset but it will have\n * a less accurate line wrapping width during the text editing preview. This\n * implementation returns true for IE8- and quirks mode or if the CSS position\n * of the SVG element is not absolute.\n */\nmxCellEditor.prototype.isLegacyEditor = function()\n{\n\tif (mxClient.IS_VML)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\tvar absoluteRoot = false;\n\t\t\n\t\tif (mxClient.IS_SVG)\n\t\t{\n\t\t\tvar root = this.graph.view.getDrawPane().ownerSVGElement;\n\t\t\t\n\t\t\tif (root != null)\n\t\t\t{\n\t\t\t\tabsoluteRoot = mxUtils.getCurrentStyle(root).position == 'absolute';\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn !absoluteRoot;\n\t}\n};\n\n/**\n * Function: startEditing\n *\n * Starts the editor for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> to start editing.\n * trigger - Optional mouse event that triggered the editor.\n */\nmxCellEditor.prototype.startEditing = function(cell, trigger)\n{\n\tthis.stopEditing(true);\n\tthis.align = null;\n\t\n\t// Creates new textarea instance\n\tif (this.textarea == null)\n\t{\n\t\tthis.init();\n\t}\n\t\n\tif (this.graph.tooltipHandler != null)\n\t{\n\t\tthis.graph.tooltipHandler.hideTooltip();\n\t}\n\t\n\tvar state = this.graph.getView().getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\t// Configures the style of the in-place editor\n\t\tvar scale = this.graph.getView().scale;\n\t\tvar size = mxUtils.getValue(state.style, mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE);\n\t\tvar family = mxUtils.getValue(state.style, mxConstants.STYLE_FONTFAMILY, mxConstants.DEFAULT_FONTFAMILY);\n\t\tvar color = mxUtils.getValue(state.style, mxConstants.STYLE_FONTCOLOR, 'black');\n\t\tvar align = mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_LEFT);\n\t\tvar bold = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_BOLD) == mxConstants.FONT_BOLD;\n\t\tvar italic = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC;\n\t\tvar uline = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE;\n\t\t\n\t\tthis.textarea.style.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? Math.round(size * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\t\tthis.textarea.style.backgroundColor = this.getBackgroundColor(state);\n\t\tthis.textarea.style.textDecoration = (uline) ? 'underline' : '';\n\t\tthis.textarea.style.fontWeight = (bold) ? 'bold' : 'normal';\n\t\tthis.textarea.style.fontStyle = (italic) ? 'italic' : '';\n\t\tthis.textarea.style.fontSize = Math.round(size) + 'px';\n\t\tthis.textarea.style.zIndex = this.zIndex;\n\t\tthis.textarea.style.fontFamily = family;\n\t\tthis.textarea.style.textAlign = align;\n\t\tthis.textarea.style.outline = 'none';\n\t\tthis.textarea.style.color = color;\n\t\t\n\t\tvar dir = this.textDirection = mxUtils.getValue(state.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n\t\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO)\n\t\t{\n\t\t\tif (state != null && state.text != null && state.text.dialect != mxConstants.DIALECT_STRICTHTML &&\n\t\t\t\t!mxUtils.isNode(state.text.value))\n\t\t\t{\n\t\t\t\tdir = state.text.getAutoDirection();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_LTR || dir == mxConstants.TEXT_DIRECTION_RTL)\n\t\t{\n\t\t\tthis.textarea.setAttribute('dir', dir);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.textarea.removeAttribute('dir');\n\t\t}\n\n\t\t// Sets the initial editing value\n\t\tthis.textarea.innerHTML = this.getInitialValue(state, trigger) || '';\n\t\tthis.initialValue = this.textarea.innerHTML;\n\n\t\t// Uses an optional text value for empty labels which is cleared\n\t\t// when the first keystroke appears. This makes it easier to see\n\t\t// that a label is being edited even if the label is empty.\n\t\tif (this.textarea.innerHTML.length == 0 || this.textarea.innerHTML == '<br>')\n\t\t{\n\t\t\tthis.textarea.innerHTML = this.getEmptyLabelText();\n\t\t\tthis.clearOnChange = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.clearOnChange = this.textarea.innerHTML == this.getEmptyLabelText();\n\t\t}\n\n\t\tthis.graph.container.appendChild(this.textarea);\n\t\t\n\t\t// Update this after firing all potential events that could update the cleanOnChange flag\n\t\tthis.editingCell = cell;\n\t\tthis.trigger = trigger;\n\t\tthis.textNode = null;\n\n\t\tif (state.text != null && this.isHideLabel(state))\n\t\t{\n\t\t\tthis.textNode = state.text.node;\n\t\t\tthis.textNode.style.visibility = 'hidden';\n\t\t}\n\n\t\t// Workaround for initial offsetHeight not ready for heading in markup\n\t\tif (this.autoSize && (this.graph.model.isEdge(state.cell) || state.style[mxConstants.STYLE_OVERFLOW] != 'fill'))\n\t\t{\n\t\t\twindow.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.resize();\n\t\t\t}), 0);\n\t\t}\n\t\t\n\t\tthis.resize();\n\t\t\n\t\t// Workaround for NS_ERROR_FAILURE in FF\n\t\ttry\n\t\t{\n\t\t\t// Prefers blinking cursor over no selected text if empty\n\t\t\tthis.textarea.focus();\n\t\t\t\n\t\t\tif (this.isSelectText() && this.textarea.innerHTML.length > 0 &&\n\t\t\t\t(this.textarea.innerHTML != this.getEmptyLabelText() || !this.clearOnChange))\n\t\t\t{\n\t\t\t\tdocument.execCommand('selectAll', false, null);\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignore\n\t\t}\n\t}\n};\n\n/**\n * Function: isSelectText\n * \n * Returns <selectText>.\n */\nmxCellEditor.prototype.isSelectText = function()\n{\n\treturn this.selectText;\n};\n\n/**\n * Function: isSelectText\n * \n * Returns <selectText>.\n */\nmxCellEditor.prototype.clearSelection = function()\n{\n\tvar selection = null;\n\t\n\tif (window.getSelection)\n\t{\n\t\tselection = window.getSelection();\n\t}\n\telse if (document.selection)\n\t{\n\t\tselection = document.selection;\n\t}\n\t\n\tif (selection != null)\n\t{\n\t\tif (selection.empty)\n\t\t{\n\t\t\tselection.empty();\n\t\t}\n\t\telse if (selection.removeAllRanges)\n\t\t{\n\t\t\tselection.removeAllRanges();\n\t\t}\n\t}\n};\n\n/**\n * Function: stopEditing\n *\n * Stops the editor and applies the value if cancel is false.\n */\nmxCellEditor.prototype.stopEditing = function(cancel)\n{\n\tcancel = cancel || false;\n\t\n\tif (this.editingCell != null)\n\t{\n\t\tif (this.textNode != null)\n\t\t{\n\t\t\tthis.textNode.style.visibility = 'visible';\n\t\t\tthis.textNode = null;\n\t\t}\n\n\t\tvar state = (!cancel) ? this.graph.view.getState(this.editingCell) : null;\n\n\t\tvar initial = this.initialValue;\n\t\tthis.initialValue = null;\n\t\tthis.editingCell = null;\n\t\tthis.trigger = null;\n\t\tthis.bounds = null;\n\t\tthis.textarea.blur();\n\t\tthis.clearSelection();\n\t\t\n\t\tif (this.textarea.parentNode != null)\n\t\t{\n\t\t\tthis.textarea.parentNode.removeChild(this.textarea);\n\t\t}\n\t\t\n\t\tif (this.clearOnChange && this.textarea.innerHTML == this.getEmptyLabelText())\n\t\t{\n\t\t\tthis.textarea.innerHTML = '';\n\t\t\tthis.clearOnChange = false;\n\t\t}\n\n\t\tif (state != null && (this.textarea.innerHTML != initial || this.align != null))\n\t\t{\n\t\t\tthis.prepareTextarea();\n\t\t\tvar value = this.getCurrentValue(state);\n\t\t\t\n\t\t\tthis.graph.getModel().beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (value != null)\n\t\t\t\t{\n\t\t\t\t\tthis.applyValue(state, value);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.align != null)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.setCellStyles(mxConstants.STYLE_ALIGN, this.align, [state.cell]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.graph.getModel().endUpdate();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Forces new instance on next edit for undo history reset\n\t\tmxEvent.release(this.textarea);\n\t\tthis.textarea = null;\n\t\tthis.align = null;\n\t}\n};\n\n/**\n * Function: prepareTextarea\n * \n * Prepares the textarea for getting its value in <stopEditing>.\n * This implementation removes the extra trailing linefeed in Firefox.\n */\nmxCellEditor.prototype.prepareTextarea = function()\n{\n\tif (this.textarea.lastChild != null &&\n\t\tthis.textarea.lastChild.nodeName == 'BR')\n\t{\n\t\tthis.textarea.removeChild(this.textarea.lastChild);\n\t}\n};\n\n/**\n * Function: isHideLabel\n * \n * Returns true if the label should be hidden while the cell is being\n * edited.\n */\nmxCellEditor.prototype.isHideLabel = function(state)\n{\n\treturn true;\n};\n\n/**\n * Function: getMinimumSize\n * \n * Returns the minimum width and height for editing the given state.\n */\nmxCellEditor.prototype.getMinimumSize = function(state)\n{\n\tvar scale = this.graph.getView().scale;\n\t\n\treturn new mxRectangle(0, 0, (state.text == null) ? 30 : state.text.size * scale + 20,\n\t\t\t(this.textarea.style.textAlign == 'left') ? 120 : 40);\n};\n\n/**\n * Function: getEditorBounds\n * \n * Returns the <mxRectangle> that defines the bounds of the editor.\n */\nmxCellEditor.prototype.getEditorBounds = function(state)\n{\n\tvar isEdge = this.graph.getModel().isEdge(state.cell);\n\tvar scale = this.graph.getView().scale;\n\tvar minSize = this.getMinimumSize(state);\n\tvar minWidth = minSize.width;\n \tvar minHeight = minSize.height;\n \tvar result = null;\n \t\n \tif (!isEdge && state.view.graph.cellRenderer.legacySpacing && state.style[mxConstants.STYLE_OVERFLOW] == 'fill')\n \t{\n \t\tresult = state.shape.getLabelBounds(mxRectangle.fromRectangle(state));\n \t}\n \telse\n \t{\n\t\tvar spacing = parseInt(state.style[mxConstants.STYLE_SPACING] || 0) * scale;\n\t\tvar spacingTop = (parseInt(state.style[mxConstants.STYLE_SPACING_TOP] || 0) + mxText.prototype.baseSpacingTop) * scale + spacing;\n\t\tvar spacingRight = (parseInt(state.style[mxConstants.STYLE_SPACING_RIGHT] || 0) + mxText.prototype.baseSpacingRight) * scale + spacing;\n\t\tvar spacingBottom = (parseInt(state.style[mxConstants.STYLE_SPACING_BOTTOM] || 0) + mxText.prototype.baseSpacingBottom) * scale + spacing;\n\t\tvar spacingLeft = (parseInt(state.style[mxConstants.STYLE_SPACING_LEFT] || 0) + mxText.prototype.baseSpacingLeft) * scale + spacing;\n\t\n\t \tresult = new mxRectangle(state.x, state.y,\n\t \t\t Math.max(minWidth, state.width - spacingLeft - spacingRight),\n\t \t\t Math.max(minHeight, state.height - spacingTop - spacingBottom));\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\t\n\t\tresult = (state.shape != null && hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE) ? state.shape.getLabelBounds(result) : result;\n\t\n\t\tif (isEdge)\n\t\t{\n\t\t\tresult.x = state.absoluteOffset.x;\n\t\t\tresult.y = state.absoluteOffset.y;\n\t\n\t\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t\t{\n\t\t\t\t// Workaround for label containing just spaces in which case\n\t\t\t\t// the bounding box location contains negative numbers \n\t\t\t\tif (state.text.boundingBox.x > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.x = state.text.boundingBox.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.y > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.y = state.text.boundingBox.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tresult.x = Math.min(result.x, state.text.boundingBox.x);\n\t\t\tresult.y = Math.min(result.y, state.text.boundingBox.y);\n\t\t}\n\t\n\t\tresult.x += spacingLeft;\n\t\tresult.y += spacingTop;\n\t\n\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tif (!isEdge)\n\t\t\t{\n\t\t\t\tresult.width = Math.max(result.width, state.text.boundingBox.width);\n\t\t\t\tresult.height = Math.max(result.height, state.text.boundingBox.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.width = Math.max(minWidth, state.text.boundingBox.width);\n\t\t\t\tresult.height = Math.max(minHeight, state.text.boundingBox.height);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Applies the horizontal and vertical label positions\n\t\tif (this.graph.getModel().isVertex(state.cell))\n\t\t{\n\t\t\tvar horizontal = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\n\t\t\tif (horizontal == mxConstants.ALIGN_LEFT)\n\t\t\t{\n\t\t\t\tresult.x -= state.width;\n\t\t\t}\n\t\t\telse if (horizontal == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tresult.x += state.width;\n\t\t\t}\n\t\n\t\t\tvar vertical = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\n\t\t\tif (vertical == mxConstants.ALIGN_TOP)\n\t\t\t{\n\t\t\t\tresult.y -= state.height;\n\t\t\t}\n\t\t\telse if (vertical == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tresult.y += state.height;\n\t\t\t}\n\t\t}\n \t}\n \t\n \treturn new mxRectangle(Math.round(result.x), Math.round(result.y), Math.round(result.width), Math.round(result.height));\n};\n\n/**\n * Function: getEmptyLabelText\n *\n * Returns the initial label value to be used of the label of the given\n * cell is empty. This label is displayed and cleared on the first keystroke.\n * This implementation returns <emptyLabelText>.\n * \n * Parameters:\n * \n * cell - <mxCell> for which a text for an empty editing box should be\n * returned.\n */\nmxCellEditor.prototype.getEmptyLabelText = function (cell)\n{\n\treturn this.emptyLabelText;\n};\n\n/**\n * Function: getEditingCell\n *\n * Returns the cell that is currently being edited or null if no cell is\n * being edited.\n */\nmxCellEditor.prototype.getEditingCell = function ()\n{\n\treturn this.editingCell;\n};\n\n/**\n * Function: destroy\n *\n * Destroys the editor and removes all associated resources.\n */\nmxCellEditor.prototype.destroy = function ()\n{\n\tif (this.textarea != null)\n\t{\n\t\tmxEvent.release(this.textarea);\n\t\t\n\t\tif (this.textarea.parentNode != null)\n\t\t{\n\t\t\tthis.textarea.parentNode.removeChild(this.textarea);\n\t\t}\n\t\t\n\t\tthis.textarea = null;\n\n\t}\n\t\t\t\n\tif (this.changeHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t\tthis.changeHandler = null;\n\t}\n\n\tif (this.zoomHandler)\n\t{\n\t\tthis.graph.view.removeListener(this.zoomHandler);\n\t\tthis.zoomHandler = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxCellRenderer\n * \n * Renders cells into a document object model. The <defaultShapes> is a global\n * map of shapename, constructor pairs that is used in all instances. You can\n * get a list of all available shape names using the following code.\n * \n * In general the cell renderer is in charge of creating, redrawing and\n * destroying the shape and label associated with a cell state, as well as\n * some other graphical objects, namely controls and overlays. The shape\n * hieararchy in the display (ie. the hierarchy in which the DOM nodes\n * appear in the document) does not reflect the cell hierarchy. The shapes\n * are a (flat) sequence of shapes and labels inside the draw pane of the\n * graph view, with some exceptions, namely the HTML labels being placed\n * directly inside the graph container for certain browsers.\n * \n * (code)\n * mxLog.show();\n * for (var i in mxCellRenderer.defaultShapes)\n * {\n *   mxLog.debug(i);\n * }\n * (end)\n *\n * Constructor: mxCellRenderer\n * \n * Constructs a new cell renderer with the following built-in shapes:\n * arrow, rectangle, ellipse, rhombus, image, line, label, cylinder,\n * swimlane, connector, actor and cloud.\n */\nfunction mxCellRenderer() { };\n\n/**\n * Variable: defaultShapes\n * \n * Static array that contains the globally registered shapes which are\n * known to all instances of this class. For adding new shapes you should\n * use the static <mxCellRenderer.registerShape> function.\n */\nmxCellRenderer.defaultShapes = new Object();\n\n/**\n * Variable: defaultEdgeShape\n * \n * Defines the default shape for edges. Default is <mxConnector>.\n */\nmxCellRenderer.prototype.defaultEdgeShape = mxConnector;\n\n/**\n * Variable: defaultVertexShape\n * \n * Defines the default shape for vertices. Default is <mxRectangleShape>.\n */\nmxCellRenderer.prototype.defaultVertexShape = mxRectangleShape;\n\n/**\n * Variable: defaultTextShape\n * \n * Defines the default shape for labels. Default is <mxText>.\n */\nmxCellRenderer.prototype.defaultTextShape = mxText;\n\n/**\n * Variable: legacyControlPosition\n * \n * Specifies if the folding icon should ignore the horizontal\n * orientation of a swimlane. Default is true.\n */\nmxCellRenderer.prototype.legacyControlPosition = true;\n\n/**\n * Variable: legacySpacing\n * \n * Specifies if spacing and label position should be ignored if overflow is\n * fill or width. Default is true for backwards compatiblity.\n */\nmxCellRenderer.prototype.legacySpacing = true;\n\n/**\n * Variable: antiAlias\n * \n * Anti-aliasing option for new shapes. Default is true.\n */\nmxCellRenderer.prototype.antiAlias = true;\n\n/**\n * Variable: minSvgStrokeWidth\n * \n * Minimum stroke width for SVG output.\n */\nmxCellRenderer.prototype.minSvgStrokeWidth = 1;\n\n/**\n * Variable: forceControlClickHandler\n * \n * Specifies if the enabled state of the graph should be ignored in the control\n * click handler (to allow folding in disabled graphs). Default is false.\n */\nmxCellRenderer.prototype.forceControlClickHandler = false;\n\n/**\n * Function: registerShape\n * \n * Registers the given constructor under the specified key in this instance\n * of the renderer.\n * \n * Example:\n * \n * (code)\n * mxCellRenderer.registerShape(mxConstants.SHAPE_RECTANGLE, mxRectangleShape);\n * (end)\n * \n * Parameters:\n * \n * key - String representing the shape name.\n * shape - Constructor of the <mxShape> subclass.\n */\nmxCellRenderer.registerShape = function(key, shape)\n{\n\tmxCellRenderer.defaultShapes[key] = shape;\n};\n\n// Adds default shapes into the default shapes array\nmxCellRenderer.registerShape(mxConstants.SHAPE_RECTANGLE, mxRectangleShape);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ELLIPSE, mxEllipse);\nmxCellRenderer.registerShape(mxConstants.SHAPE_RHOMBUS, mxRhombus);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CYLINDER, mxCylinder);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CONNECTOR, mxConnector);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ACTOR, mxActor);\nmxCellRenderer.registerShape(mxConstants.SHAPE_TRIANGLE, mxTriangle);\nmxCellRenderer.registerShape(mxConstants.SHAPE_HEXAGON, mxHexagon);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CLOUD, mxCloud);\nmxCellRenderer.registerShape(mxConstants.SHAPE_LINE, mxLine);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ARROW, mxArrow);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ARROW_CONNECTOR, mxArrowConnector);\nmxCellRenderer.registerShape(mxConstants.SHAPE_DOUBLE_ELLIPSE, mxDoubleEllipse);\nmxCellRenderer.registerShape(mxConstants.SHAPE_SWIMLANE, mxSwimlane);\nmxCellRenderer.registerShape(mxConstants.SHAPE_IMAGE, mxImageShape);\nmxCellRenderer.registerShape(mxConstants.SHAPE_LABEL, mxLabel);\n\n/**\n * Function: initializeShape\n * \n * Initializes the shape in the given state by calling its init method with\n * the correct container after configuring it using <configureShape>.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be initialized.\n */\nmxCellRenderer.prototype.initializeShape = function(state)\n{\n\tstate.shape.dialect = state.view.graph.dialect;\n\tthis.configureShape(state);\n\tstate.shape.init(state.view.getDrawPane());\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be created.\n */\nmxCellRenderer.prototype.createShape = function(state)\n{\n\tvar shape = null;\n\t\n\tif (state.style != null)\n\t{\n\t\t// Checks if there is a stencil for the name and creates\n\t\t// a shape instance for the stencil if one exists\n\t\tvar stencil = mxStencilRegistry.getStencil(state.style[mxConstants.STYLE_SHAPE]);\n\t\t\n\t\tif (stencil != null)\n\t\t{\n\t\t\tshape = new mxShape(stencil);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar ctor = this.getShapeConstructor(state);\n\t\t\tshape = new ctor();\n\t\t}\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: createIndicatorShape\n * \n * Creates the indicator shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the indicator shape should be created.\n */\nmxCellRenderer.prototype.createIndicatorShape = function(state)\n{\n\tstate.shape.indicatorShape = this.getShape(state.view.graph.getIndicatorShape(state));\n};\n\n/**\n * Function: getShape\n * \n * Returns the shape for the given name from <defaultShapes>.\n */\nmxCellRenderer.prototype.getShape = function(name)\n{\n\treturn (name != null) ? mxCellRenderer.defaultShapes[name] : null;\n};\n\n/**\n * Function: getShapeConstructor\n * \n * Returns the constructor to be used for creating the shape.\n */\nmxCellRenderer.prototype.getShapeConstructor = function(state)\n{\n\tvar ctor = this.getShape(state.style[mxConstants.STYLE_SHAPE]);\n\t\n\tif (ctor == null)\n\t{\n\t\tctor = (state.view.graph.getModel().isEdge(state.cell)) ?\n\t\t\tthis.defaultEdgeShape : this.defaultVertexShape;\n\t}\n\t\n\treturn ctor;\n};\n\n/**\n * Function: configureShape\n * \n * Configures the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be configured.\n */\nmxCellRenderer.prototype.configureShape = function(state)\n{\n\tstate.shape.apply(state);\n\tstate.shape.image = state.view.graph.getImage(state);\n\tstate.shape.indicatorColor = state.view.graph.getIndicatorColor(state);\n\tstate.shape.indicatorStrokeColor = state.style[mxConstants.STYLE_INDICATOR_STROKECOLOR];\n\tstate.shape.indicatorGradientColor = state.view.graph.getIndicatorGradientColor(state);\n\tstate.shape.indicatorDirection = state.style[mxConstants.STYLE_INDICATOR_DIRECTION];\n\tstate.shape.indicatorImage = state.view.graph.getIndicatorImage(state);\n\n\tthis.postConfigureShape(state);\n};\n\n/**\n * Function: postConfigureShape\n * \n * Replaces any reserved words used for attributes, eg. inherit,\n * indicated or swimlane for colors in the shape for the given state.\n * This implementation resolves these keywords on the fill, stroke\n * and gradient color keys.\n */\nmxCellRenderer.prototype.postConfigureShape = function(state)\n{\n\tif (state.shape != null)\n\t{\n\t\tthis.resolveColor(state, 'indicatorColor', mxConstants.STYLE_FILLCOLOR);\n\t\tthis.resolveColor(state, 'indicatorGradientColor', mxConstants.STYLE_GRADIENTCOLOR);\n\t\tthis.resolveColor(state, 'fill', mxConstants.STYLE_FILLCOLOR);\n\t\tthis.resolveColor(state, 'stroke', mxConstants.STYLE_STROKECOLOR);\n\t\tthis.resolveColor(state, 'gradient', mxConstants.STYLE_GRADIENTCOLOR);\n\t}\n};\n\n/**\n * Function: checkPlaceholderStyles\n * \n * Resolves special keywords 'inherit', 'indicated' and 'swimlane' and sets\n * the respective color on the shape.\n */\nmxCellRenderer.prototype.checkPlaceholderStyles = function(state)\n{\n\t// LATER: Check if the color has actually changed\n\tif (state.style != null)\n\t{\n\t\tvar values = ['inherit', 'swimlane', 'indicated'];\n\t\tvar styles = [mxConstants.STYLE_FILLCOLOR, mxConstants.STYLE_STROKECOLOR, mxConstants.STYLE_GRADIENTCOLOR];\n\t\t\n\t\tfor (var i = 0; i < styles.length; i++)\n\t\t{\n\t\t\tif (mxUtils.indexOf(values, state.style[styles[i]]) >= 0)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: resolveColor\n * \n * Resolves special keywords 'inherit', 'indicated' and 'swimlane' and sets\n * the respective color on the shape.\n */\nmxCellRenderer.prototype.resolveColor = function(state, field, key)\n{\n\tvar value = state.shape[field];\n\tvar graph = state.view.graph;\n\tvar referenced = null;\n\t\n\tif (value == 'inherit')\n\t{\n\t\treferenced = graph.model.getParent(state.cell);\n\t}\n\telse if (value == 'swimlane')\n\t{\n\t\tstate.shape[field] = (key == mxConstants.STYLE_STROKECOLOR) ? '#000000' : '#ffffff';\n\t\t\n\t\tif (graph.model.getTerminal(state.cell, false) != null)\n\t\t{\n\t\t\treferenced = graph.model.getTerminal(state.cell, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treferenced = state.cell;\n\t\t}\n\t\t\n\t\treferenced = graph.getSwimlane(referenced);\n\t\tkey = graph.swimlaneIndicatorColorAttribute;\n\t}\n\telse if (value == 'indicated')\n\t{\n\t\tstate.shape[field] = state.shape.indicatorColor;\n\t}\n\t\n\tif (referenced != null)\n\t{\n\t\tvar rstate = graph.getView().getState(referenced);\n\t\tstate.shape[field] = null;\n\n\t\tif (rstate != null)\n\t\t{\n\t\t\tif (rstate.shape != null && field != 'indicatorColor')\n\t\t\t{\n\t\t\t\tstate.shape[field] = rstate.shape[field];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape[field] = rstate.style[key];\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getLabelValue\n * \n * Returns the value to be used for the label.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the label should be created.\n */\nmxCellRenderer.prototype.getLabelValue = function(state)\n{\n\treturn state.view.graph.getLabel(state.cell);\n};\n\n/**\n * Function: createLabel\n * \n * Creates the label for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the label should be created.\n */\nmxCellRenderer.prototype.createLabel = function(state, value)\n{\n\tvar graph = state.view.graph;\n\tvar isEdge = graph.getModel().isEdge(state.cell);\n\t\n\tif (state.style[mxConstants.STYLE_FONTSIZE] > 0 || state.style[mxConstants.STYLE_FONTSIZE] == null)\n\t{\n\t\t// Avoids using DOM node for empty labels\n\t\tvar isForceHtml = (graph.isHtmlLabel(state.cell) || (value != null && mxUtils.isNode(value)));\n\n\t\tstate.text = new this.defaultTextShape(value, new mxRectangle(),\n\t\t\t\t(state.style[mxConstants.STYLE_ALIGN] || mxConstants.ALIGN_CENTER),\n\t\t\t\tgraph.getVerticalAlign(state),\n\t\t\t\tstate.style[mxConstants.STYLE_FONTCOLOR],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTFAMILY],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTSIZE],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTSTYLE],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_TOP],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_RIGHT],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_BOTTOM],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_LEFT],\n\t\t\t\tstate.style[mxConstants.STYLE_HORIZONTAL],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_BORDERCOLOR],\n\t\t\t\tgraph.isWrapping(state.cell) && graph.isHtmlLabel(state.cell),\n\t\t\t\tgraph.isLabelClipped(state.cell),\n\t\t\t\tstate.style[mxConstants.STYLE_OVERFLOW],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_PADDING],\n\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION));\n\t\tstate.text.opacity = mxUtils.getValue(state.style, mxConstants.STYLE_TEXT_OPACITY, 100);\n\t\tstate.text.dialect = (isForceHtml) ? mxConstants.DIALECT_STRICTHTML : state.view.graph.dialect;\n\t\tstate.text.style = state.style;\n\t\tstate.text.state = state;\n\t\tthis.initializeLabel(state, state.text);\n\t\t\n\t\t// Workaround for touch devices routing all events for a mouse gesture\n\t\t// (down, move, up) via the initial DOM node. IE additionally redirects\n\t\t// the event via the initial DOM node but the event source is the node\n\t\t// under the mouse, so we need to check if this is the case and force\n\t\t// getCellAt for the subsequent mouseMoves and the final mouseUp.\n\t\tvar forceGetCell = false;\n\t\t\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\tvar result = state;\n\n\t\t\tif (mxClient.IS_TOUCH || forceGetCell)\n\t\t\t{\n\t\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\t\n\t\t\t\t// Dispatches the drop event to the graph which\n\t\t\t\t// consumes and executes the source function\n\t\t\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\t\tresult = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\treturn result;\n\t\t};\n\t\t\n\t\t// TODO: Add handling for special touch device gestures\n\t\tmxEvent.addGestureListeners(state.text.node,\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t\t\tforceGetCell = graph.dialect != mxConstants.DIALECT_SVG &&\n\t\t\t\t\t\tmxEvent.getSource(evt).nodeName == 'IMG';\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t\t\tforceGetCell = false;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// Uses double click timeout in mxGraph for quirks mode\n\t\tif (graph.nativeDblClickEnabled)\n\t\t{\n\t\t\tmxEvent.addListener(state.text.node, 'dblclick',\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t\t{\n\t\t\t\t\t\tgraph.dblClick(evt, state.cell);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Function: initializeLabel\n * \n * Initiailzes the label with a suitable container.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be initialized.\n */\nmxCellRenderer.prototype.initializeLabel = function(state, shape)\n{\n\tif (mxClient.IS_SVG && mxClient.NO_FO && shape.dialect != mxConstants.DIALECT_SVG)\n\t{\n\t\tshape.init(state.view.graph.container);\n\t}\n\telse\n\t{\n\t\tshape.init(state.view.getDrawPane());\n\t}\n};\n\n/**\n * Function: createCellOverlays\n * \n * Creates the actual shape for showing the overlay for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the overlay should be created.\n */\nmxCellRenderer.prototype.createCellOverlays = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar overlays = graph.getCellOverlays(state.cell);\n\tvar dict = null;\n\t\n\tif (overlays != null)\n\t{\n\t\tdict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < overlays.length; i++)\n\t\t{\n\t\t\tvar shape = (state.overlays != null) ? state.overlays.remove(overlays[i]) : null;\n\t\t\t\n\t\t\tif (shape == null)\n\t\t\t{\n\t\t\t\tvar tmp = new mxImageShape(new mxRectangle(), overlays[i].image.src);\n\t\t\t\ttmp.dialect = state.view.graph.dialect;\n\t\t\t\ttmp.preserveImageAspect = false;\n\t\t\t\ttmp.overlay = overlays[i];\n\t\t\t\tthis.initializeOverlay(state, tmp);\n\t\t\t\tthis.installCellOverlayListeners(state, overlays[i], tmp);\n\t\n\t\t\t\tif (overlays[i].cursor != null)\n\t\t\t\t{\n\t\t\t\t\ttmp.node.style.cursor = overlays[i].cursor;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdict.put(overlays[i], tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdict.put(overlays[i], shape);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Removes unused\n\tif (state.overlays != null)\n\t{\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tshape.destroy();\n\t\t});\n\t}\n\t\n\tstate.overlays = dict;\n};\n\n/**\n * Function: initializeOverlay\n * \n * Initializes the given overlay.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the overlay should be created.\n * overlay - <mxImageShape> that represents the overlay.\n */\nmxCellRenderer.prototype.initializeOverlay = function(state, overlay)\n{\n\toverlay.init(state.view.getOverlayPane());\n};\n\n/**\n * Function: installOverlayListeners\n * \n * Installs the listeners for the given <mxCellState>, <mxCellOverlay> and\n * <mxShape> that represents the overlay.\n */\nmxCellRenderer.prototype.installCellOverlayListeners = function(state, overlay, shape)\n{\n\tvar graph  = state.view.graph;\n\t\n\tmxEvent.addListener(shape.node, 'click', function (evt)\n\t{\n\t\tif (graph.isEditing())\n\t\t{\n\t\t\tgraph.stopEditing(!graph.isInvokesStopCellEditing());\n\t\t}\n\t\t\n\t\toverlay.fireEvent(new mxEventObject(mxEvent.CLICK,\n\t\t\t\t'event', evt, 'cell', state.cell));\n\t});\n\t\n\tmxEvent.addGestureListeners(shape.node,\n\t\tfunction (evt)\n\t\t{\n\t\t\tmxEvent.consume(evt);\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE,\n\t\t\t\tnew mxMouseEvent(evt, state));\n\t\t});\n\t\n\tif (mxClient.IS_TOUCH)\n\t{\n\t\tmxEvent.addListener(shape.node, 'touchend', function (evt)\n\t\t{\n\t\t\toverlay.fireEvent(new mxEventObject(mxEvent.CLICK,\n\t\t\t\t\t'event', evt, 'cell', state.cell));\n\t\t});\n\t}\n};\n\n/**\n * Function: createControl\n * \n * Creates the control for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the control should be created.\n */\nmxCellRenderer.prototype.createControl = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar image = graph.getFoldingImage(state);\n\t\n\tif (graph.foldingEnabled && image != null)\n\t{\n\t\tif (state.control == null)\n\t\t{\n\t\t\tvar b = new mxRectangle(0, 0, image.width, image.height);\n\t\t\tstate.control = new mxImageShape(b, image.src);\n\t\t\tstate.control.preserveImageAspect = false;\n\t\t\tstate.control.dialect = graph.dialect;\n\n\t\t\tthis.initControl(state, state.control, true, this.createControlClickHandler(state));\n\t\t}\n\t}\n\telse if (state.control != null)\n\t{\n\t\tstate.control.destroy();\n\t\tstate.control = null;\n\t}\n};\n\n/**\n * Function: createControlClickHandler\n * \n * Hook for creating the click handler for the folding icon.\n * \n * Parameters:\n * \n * state - <mxCellState> whose control click handler should be returned.\n */\nmxCellRenderer.prototype.createControlClickHandler = function(state)\n{\n\tvar graph = state.view.graph;\n\t\n\treturn mxUtils.bind(this, function (evt)\n\t{\n\t\tif (this.forceControlClickHandler || graph.isEnabled())\n\t\t{\n\t\t\tvar collapse = !graph.isCellCollapsed(state.cell);\n\t\t\tgraph.foldCells(collapse, false, [state.cell], null, evt);\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t});\n};\n\n/**\n * Function: initControl\n * \n * Initializes the given control and returns the corresponding DOM node.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the control should be initialized.\n * control - <mxShape> to be initialized.\n * handleEvents - Boolean indicating if mousedown and mousemove should fire events via the graph.\n * clickHandler - Optional function to implement clicks on the control.\n */\nmxCellRenderer.prototype.initControl = function(state, control, handleEvents, clickHandler)\n{\n\tvar graph = state.view.graph;\n\t\n\t// In the special case where the label is in HTML and the display is SVG the image\n\t// should go into the graph container directly in order to be clickable. Otherwise\n\t// it is obscured by the HTML label that overlaps the cell.\n\tvar isForceHtml = graph.isHtmlLabel(state.cell) && mxClient.NO_FO &&\n\t\tgraph.dialect == mxConstants.DIALECT_SVG;\n\n\tif (isForceHtml)\n\t{\n\t\tcontrol.dialect = mxConstants.DIALECT_PREFERHTML;\n\t\tcontrol.init(graph.container);\n\t\tcontrol.node.style.zIndex = 1;\n\t}\n\telse\n\t{\n\t\tcontrol.init(state.view.getOverlayPane());\n\t}\n\n\tvar node = control.innerNode || control.node;\n\t\n\t// Workaround for missing click event on iOS is to check tolerance below\n\tif (clickHandler != null && !mxClient.IS_IOS)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\tnode.style.cursor = 'pointer';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(node, 'click', clickHandler);\n\t}\n\t\n\tif (handleEvents)\n\t{\n\t\tvar first = null;\n\n\t\tmxEvent.addGestureListeners(node,\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tfirst = new mxPoint(mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t},\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, state));\n\t\t\t},\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, state));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\n\t\t// Uses capture phase for event interception to stop bubble phase\n\t\tif (clickHandler != null && mxClient.IS_IOS)\n\t\t{\n\t\t\tnode.addEventListener('touchend', function(evt)\n\t\t\t{\n\t\t\t\tif (first != null)\n\t\t\t\t{\n\t\t\t\t\tvar tol = graph.tolerance;\n\t\t\t\t\t\n\t\t\t\t\tif (Math.abs(first.x - mxEvent.getClientX(evt)) < tol &&\n\t\t\t\t\t\tMath.abs(first.y - mxEvent.getClientY(evt)) < tol)\n\t\t\t\t\t{\n\t\t\t\t\t\tclickHandler.call(clickHandler, evt);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, true);\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: isShapeEvent\n * \n * Returns true if the event is for the shape of the given state. This\n * implementation always returns true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose shape fired the event.\n * evt - Mouse event which was fired.\n */\nmxCellRenderer.prototype.isShapeEvent = function(state, evt)\n{\n\treturn true;\n};\n\n/**\n * Function: isLabelEvent\n * \n * Returns true if the event is for the label of the given state. This\n * implementation always returns true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label fired the event.\n * evt - Mouse event which was fired.\n */\nmxCellRenderer.prototype.isLabelEvent = function(state, evt)\n{\n\treturn true;\n};\n\n/**\n * Function: installListeners\n * \n * Installs the event listeners for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the event listeners should be isntalled.\n */\nmxCellRenderer.prototype.installListeners = function(state)\n{\n\tvar graph = state.view.graph;\n\n\t// Workaround for touch devices routing all events for a mouse\n\t// gesture (down, move, up) via the initial DOM node. Same for\n\t// HTML images in all IE versions (VML images are working).\n\tvar getState = function(evt)\n\t{\n\t\tvar result = state;\n\t\t\n\t\tif ((graph.dialect != mxConstants.DIALECT_SVG && mxEvent.getSource(evt).nodeName == 'IMG') || mxClient.IS_TOUCH)\n\t\t{\n\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\n\t\t\t// Dispatches the drop event to the graph which\n\t\t\t// consumes and executes the source function\n\t\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\tresult = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\n\tmxEvent.addGestureListeners(state.shape.node,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t})\n\t);\n\t\n\t// Uses double click timeout in mxGraph for quirks mode\n\tif (graph.nativeDblClickEnabled)\n\t{\n\t\tmxEvent.addListener(state.shape.node, 'dblclick',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.dblClick(evt, state.cell);\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n};\n\n/**\n * Function: redrawLabel\n * \n * Redraws the label for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be redrawn.\n */\nmxCellRenderer.prototype.redrawLabel = function(state, forced)\n{\n\tvar graph = state.view.graph;\n\tvar value = this.getLabelValue(state);\n\tvar wrapping = graph.isWrapping(state.cell);\n\tvar clipping = graph.isLabelClipped(state.cell);\n\tvar isForceHtml = (state.view.graph.isHtmlLabel(state.cell) || (value != null && mxUtils.isNode(value)));\n\tvar dialect = (isForceHtml) ? mxConstants.DIALECT_STRICTHTML : state.view.graph.dialect;\n\tvar overflow = state.style[mxConstants.STYLE_OVERFLOW] || 'visible';\n\n\tif (state.text != null && (state.text.wrap != wrapping || state.text.clipped != clipping ||\n\t\tstate.text.overflow != overflow || state.text.dialect != dialect))\n\t{\n\t\tstate.text.destroy();\n\t\tstate.text = null;\n\t}\n\t\n\tif (state.text == null && value != null && (mxUtils.isNode(value) || value.length > 0))\n\t{\n\t\tthis.createLabel(state, value);\n\t}\n\telse if (state.text != null && (value == null || value.length == 0))\n\t{\n\t\tstate.text.destroy();\n\t\tstate.text = null;\n\t}\n\n\tif (state.text != null)\n\t{\n\t\t// Forced is true if the style has changed, so to get the updated\n\t\t// result in getLabelBounds we apply the new style to the shape\n\t\tif (forced)\n\t\t{\n\t\t\t// Checks if a full repaint is needed\n\t\t\tif (state.text.lastValue != null && this.isTextShapeInvalid(state, state.text))\n\t\t\t{\n\t\t\t\t// Forces a full repaint\n\t\t\t\tstate.text.lastValue = null;\n\t\t\t}\n\t\t\t\n\t\t\tstate.text.resetStyles();\n\t\t\tstate.text.apply(state);\n\t\t\t\n\t\t\t// Special case where value is obtained via hook in graph\n\t\t\tstate.text.valign = graph.getVerticalAlign(state);\n\t\t}\n\t\t\n\t\tvar bounds = this.getLabelBounds(state);\n\t\tvar nextScale = this.getTextScale(state);\n\t\t\n\t\tif (forced || state.text.value != value || state.text.isWrapping != wrapping ||\n\t\t\tstate.text.overflow != overflow || state.text.isClipping != clipping ||\n\t\t\tstate.text.scale != nextScale || state.text.dialect != dialect ||\n\t\t\t!state.text.bounds.equals(bounds))\n\t\t{\n\t\t\t// Forces an update of the text bounding box\n\t\t\tif (state.text.bounds.width != 0 && state.unscaledWidth != null &&\n\t\t\t\tMath.round((state.text.bounds.width /\n\t\t\t\tstate.text.scale * nextScale) - bounds.width) != 0)\n\t\t\t{\n\t\t\t\tstate.unscaledWidth = null;\n\t\t\t}\n\t\t\t\n\t\t\tstate.text.dialect = dialect;\n\t\t\tstate.text.value = value;\n\t\t\tstate.text.bounds = bounds;\n\t\t\tstate.text.scale = nextScale;\n\t\t\tstate.text.wrap = wrapping;\n\t\t\tstate.text.clipped = clipping;\n\t\t\tstate.text.overflow = overflow;\n\t\t\t\n\t\t\t// Preserves visible state\n\t\t\tvar vis = state.text.node.style.visibility;\n\t\t\tthis.redrawLabelShape(state.text);\n\t\t\tstate.text.node.style.visibility = vis;\n\t\t}\n\t}\n};\n\n/**\n * Function: isTextShapeInvalid\n * \n * Returns true if the style for the text shape has changed.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be checked.\n * shape - <mxText> shape to be checked.\n */\nmxCellRenderer.prototype.isTextShapeInvalid = function(state, shape)\n{\n\tfunction check(property, stylename, defaultValue)\n\t{\n\t\tvar result = false;\n\t\t\n\t\t// Workaround for spacing added to directional spacing\n\t\tif (stylename == 'spacingTop' || stylename == 'spacingRight' ||\n\t\t\tstylename == 'spacingBottom' || stylename == 'spacingLeft')\n\t\t{\n\t\t\tresult = parseFloat(shape[property]) - parseFloat(shape.spacing) !=\n\t\t\t\t(state.style[stylename] || defaultValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = shape[property] != (state.style[stylename] || defaultValue);\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\n\treturn check('fontStyle', mxConstants.STYLE_FONTSTYLE, mxConstants.DEFAULT_FONTSTYLE) ||\n\t\tcheck('family', mxConstants.STYLE_FONTFAMILY, mxConstants.DEFAULT_FONTFAMILY) ||\n\t\tcheck('size', mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE) ||\n\t\tcheck('color', mxConstants.STYLE_FONTCOLOR, 'black') ||\n\t\tcheck('align', mxConstants.STYLE_ALIGN, '') ||\n\t\tcheck('valign', mxConstants.STYLE_VERTICAL_ALIGN, '') ||\n\t\tcheck('spacing', mxConstants.STYLE_SPACING, 2) ||\n\t\tcheck('spacingTop', mxConstants.STYLE_SPACING_TOP, 0) ||\n\t\tcheck('spacingRight', mxConstants.STYLE_SPACING_RIGHT, 0) ||\n\t\tcheck('spacingBottom', mxConstants.STYLE_SPACING_BOTTOM, 0) ||\n\t\tcheck('spacingLeft', mxConstants.STYLE_SPACING_LEFT, 0) ||\n\t\tcheck('horizontal', mxConstants.STYLE_HORIZONTAL, true) ||\n\t\tcheck('background', mxConstants.STYLE_LABEL_BACKGROUNDCOLOR) ||\n\t\tcheck('border', mxConstants.STYLE_LABEL_BORDERCOLOR) ||\n\t\tcheck('opacity', mxConstants.STYLE_TEXT_OPACITY, 100) ||\n\t\tcheck('textDirection', mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n};\n\n/**\n * Function: redrawLabelShape\n * \n * Called to invoked redraw on the given text shape.\n * \n * Parameters:\n * \n * shape - <mxText> shape to be redrawn.\n */\nmxCellRenderer.prototype.redrawLabelShape = function(shape)\n{\n\tshape.redraw();\n};\n\n/**\n * Function: getTextScale\n * \n * Returns the scaling used for the label of the given state\n * \n * Parameters:\n * \n * state - <mxCellState> whose label scale should be returned.\n */\nmxCellRenderer.prototype.getTextScale = function(state)\n{\n\treturn state.view.scale;\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the bounds to be used to draw the label of the given state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label bounds should be returned.\n */\nmxCellRenderer.prototype.getLabelBounds = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar scale = state.view.scale;\n\tvar isEdge = graph.getModel().isEdge(state.cell);\n\tvar bounds = new mxRectangle(state.absoluteOffset.x, state.absoluteOffset.y);\n\n\tif (isEdge)\n\t{\n\t\tvar spacing = state.text.getSpacing();\n\t\tbounds.x += spacing.x * scale;\n\t\tbounds.y += spacing.y * scale;\n\t\t\n\t\tvar geo = graph.getCellGeometry(state.cell);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tbounds.width = Math.max(0, geo.width * scale);\n\t\t\tbounds.height = Math.max(0, geo.height * scale);\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Inverts label position\n\t\tif (state.text.isPaintBoundsInverted())\n\t\t{\n\t\t\tvar tmp = bounds.x;\n\t\t\tbounds.x = bounds.y;\n\t\t\tbounds.y = tmp;\n\t\t}\n\t\t\n\t\tbounds.x += state.x;\n\t\tbounds.y += state.y;\n\t\t\n\t\t// Minimum of 1 fixes alignment bug in HTML labels\n\t\tbounds.width = Math.max(1, state.width);\n\t\tbounds.height = Math.max(1, state.height);\n\n\t\tvar sc = mxUtils.getValue(state.style, mxConstants.STYLE_STROKECOLOR, mxConstants.NONE);\n\t\t\n\t\tif (sc != mxConstants.NONE && sc != '')\n\t\t{\n\t\t\tvar s = parseFloat(mxUtils.getValue(state.style, mxConstants.STYLE_STROKEWIDTH, 1)) * scale;\n\t\t\tvar dx = 1 + Math.floor((s - 1) / 2);\n\t\t\tvar dh = Math.floor(s + 1);\n\t\t\t\n\t\t\tbounds.x += dx;\n\t\t\tbounds.y += dx;\n\t\t\tbounds.width -= dh;\n\t\t\tbounds.height -= dh;\n\t\t}\n\t}\n\n\tif (state.text.isPaintBoundsInverted())\n\t{\n\t\t// Rotates around center of state\n\t\tvar t = (state.width - state.height) / 2;\n\t\tbounds.x += t;\n\t\tbounds.y -= t;\n\t\tvar tmp = bounds.width;\n\t\tbounds.width = bounds.height;\n\t\tbounds.height = tmp;\n\t}\n\t\n\t// Shape can modify its label bounds\n\tif (state.shape != null)\n\t{\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\t\n\t\tif (hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tbounds = state.shape.getLabelBounds(bounds);\n\t\t}\n\t}\n\t\n\t// Label width style overrides actual label width\n\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\n\tif (lw != null)\n\t{\n\t\tbounds.width = parseFloat(lw) * scale;\n\t}\n\t\n\tif (!isEdge)\n\t{\n\t\tthis.rotateLabelBounds(state, bounds);\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: rotateLabelBounds\n * \n * Adds the shape rotation to the given label bounds and\n * applies the alignment and offsets.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label bounds should be rotated.\n * bounds - <mxRectangle> the rectangle to be rotated.\n */\nmxCellRenderer.prototype.rotateLabelBounds = function(state, bounds)\n{\n\tbounds.y -= state.text.margin.y * bounds.height;\n\tbounds.x -= state.text.margin.x * bounds.width;\n\t\n\tif (!this.legacySpacing || (state.style[mxConstants.STYLE_OVERFLOW] != 'fill' && state.style[mxConstants.STYLE_OVERFLOW] != 'width'))\n\t{\n\t\tvar s = state.view.scale;\n\t\tvar spacing = state.text.getSpacing();\n\t\tbounds.x += spacing.x * s;\n\t\tbounds.y += spacing.y * s;\n\t\t\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tbounds.width = Math.max(0, bounds.width - ((hpos == mxConstants.ALIGN_CENTER && lw == null) ? (state.text.spacingLeft * s + state.text.spacingRight * s) : 0));\n\t\tbounds.height = Math.max(0, bounds.height - ((vpos == mxConstants.ALIGN_MIDDLE) ? (state.text.spacingTop * s + state.text.spacingBottom * s) : 0));\n\t}\n\n\tvar theta = state.text.getTextRotation();\n\n\t// Only needed if rotated around another center\n\tif (theta != 0 && state != null && state.view.graph.model.isVertex(state.cell))\n\t{\n\t\tvar cx = state.getCenterX();\n\t\tvar cy = state.getCenterY();\n\t\t\n\t\tif (bounds.x != cx || bounds.y != cy)\n\t\t{\n\t\t\tvar rad = theta * (Math.PI / 180);\n\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(bounds.x, bounds.y),\n\t\t\t\t\tMath.cos(rad), Math.sin(rad), new mxPoint(cx, cy));\n\t\t\t\n\t\t\tbounds.x = pt.x;\n\t\t\tbounds.y = pt.y;\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawCellOverlays\n * \n * Redraws the overlays for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose overlays should be redrawn.\n */\nmxCellRenderer.prototype.redrawCellOverlays = function(state, forced)\n{\n\tthis.createCellOverlays(state);\n\n\tif (state.overlays != null)\n\t{\n\t\tvar rot = mxUtils.mod(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0), 90);\n        var rad = mxUtils.toRadians(rot);\n        var cos = Math.cos(rad);\n        var sin = Math.sin(rad);\n\t\t\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tvar bounds = shape.overlay.getBounds(state);\n\t\t\n\t\t\tif (!state.view.graph.getModel().isEdge(state.cell))\n\t\t\t{\n\t\t\t\tif (state.shape != null && rot != 0)\n\t\t\t\t{\n\t\t\t\t\tvar cx = bounds.getCenterX();\n\t\t\t\t\tvar cy = bounds.getCenterY();\n\n\t\t\t\t\tvar point = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin,\n\t\t\t        \t\tnew mxPoint(state.getCenterX(), state.getCenterY()));\n\n\t\t\t        cx = point.x;\n\t\t\t        cy = point.y;\n\t\t\t        bounds.x = Math.round(cx - bounds.width / 2);\n\t\t\t        bounds.y = Math.round(cy - bounds.height / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (forced || shape.bounds == null || shape.scale != state.view.scale ||\n\t\t\t\t!shape.bounds.equals(bounds))\n\t\t\t{\n\t\t\t\tshape.bounds = bounds;\n\t\t\t\tshape.scale = state.view.scale;\n\t\t\t\tshape.redraw();\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * Function: redrawControl\n * \n * Redraws the control for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose control should be redrawn.\n */\nmxCellRenderer.prototype.redrawControl = function(state, forced)\n{\n\tvar image = state.view.graph.getFoldingImage(state);\n\t\n\tif (state.control != null && image != null)\n\t{\n\t\tvar bounds = this.getControlBounds(state, image.width, image.height);\n\t\tvar r = (this.legacyControlPosition) ?\n\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0) :\n\t\t\t\tstate.shape.getTextRotation();\n\t\tvar s = state.view.scale;\n\t\t\n\t\tif (forced || state.control.scale != s || !state.control.bounds.equals(bounds) ||\n\t\t\tstate.control.rotation != r)\n\t\t{\n\t\t\tstate.control.rotation = r;\n\t\t\tstate.control.bounds = bounds;\n\t\t\tstate.control.scale = s;\n\t\t\t\n\t\t\tstate.control.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getControlBounds\n * \n * Returns the bounds to be used to draw the control (folding icon) of the\n * given state.\n */\nmxCellRenderer.prototype.getControlBounds = function(state, w, h)\n{\n\tif (state.control != null)\n\t{\n\t\tvar s = state.view.scale;\n\t\tvar cx = state.getCenterX();\n\t\tvar cy = state.getCenterY();\n\t\n\t\tif (!state.view.graph.getModel().isEdge(state.cell))\n\t\t{\n\t\t\tcx = state.x + w * s;\n\t\t\tcy = state.y + h * s;\n\t\t\t\n\t\t\tif (state.shape != null)\n\t\t\t{\n\t\t\t\t// TODO: Factor out common code\n\t\t\t\tvar rot = state.shape.getShapeRotation();\n\t\t\t\t\n\t\t\t\tif (this.legacyControlPosition)\n\t\t\t\t{\n\t\t\t\t\trot = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (state.shape.isPaintBoundsInverted())\n\t\t\t\t\t{\n\t\t\t\t\t\tvar t = (state.width - state.height) / 2;\n\t\t\t\t\t\tcx += t;\n\t\t\t\t\t\tcy -= t;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (rot != 0)\n\t\t\t\t{\n\t\t\t        var rad = mxUtils.toRadians(rot);\n\t\t\t        var cos = Math.cos(rad);\n\t\t\t        var sin = Math.sin(rad);\n\t\t\t        \n\t\t\t        var point = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin,\n\t\t\t        \t\tnew mxPoint(state.getCenterX(), state.getCenterY()));\n\t\t\t        cx = point.x;\n\t\t\t        cy = point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (state.view.graph.getModel().isEdge(state.cell)) ? \n\t\t\tnew mxRectangle(Math.round(cx - w / 2 * s), Math.round(cy - h / 2 * s), Math.round(w * s), Math.round(h * s))\n\t\t\t: new mxRectangle(Math.round(cx - w / 2 * s), Math.round(cy - h / 2 * s), Math.round(w * s), Math.round(h * s));\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: insertStateAfter\n * \n * Inserts the given array of <mxShapes> after the given nodes in the DOM.\n * \n * Parameters:\n * \n * shapes - Array of <mxShapes> to be inserted.\n * node - Node in <drawPane> after which the shapes should be inserted.\n * htmlNode - Node in the graph container after which the shapes should be inserted that\n * will not go into the <drawPane> (eg. HTML labels without foreignObjects).\n */\nmxCellRenderer.prototype.insertStateAfter = function(state, node, htmlNode)\n{\n\tvar shapes = this.getShapesForState(state);\n\t\n\tfor (var i = 0; i < shapes.length; i++)\n\t{\n\t\tif (shapes[i] != null && shapes[i].node != null)\n\t\t{\n\t\t\tvar html = shapes[i].node.parentNode != state.view.getDrawPane() &&\n\t\t\t\tshapes[i].node.parentNode != state.view.getOverlayPane();\n\t\t\tvar temp = (html) ? htmlNode : node;\n\t\t\t\n\t\t\tif (temp != null && temp.nextSibling != shapes[i].node)\n\t\t\t{\n\t\t\t\tif (temp.nextSibling == null)\n\t\t\t\t{\n\t\t\t\t\ttemp.parentNode.appendChild(shapes[i].node);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttemp.parentNode.insertBefore(shapes[i].node, temp.nextSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (temp == null)\n\t\t\t{\n\t\t\t\t// Special case: First HTML node should be first sibling after canvas\n\t\t\t\tif (shapes[i].node.parentNode == state.view.graph.container)\n\t\t\t\t{\n\t\t\t\t\tvar canvas = state.view.canvas;\n\t\t\t\t\t\n\t\t\t\t\twhile (canvas != null && canvas.parentNode != state.view.graph.container)\n\t\t\t\t\t{\n\t\t\t\t\t\tcanvas = canvas.parentNode;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (canvas != null && canvas.nextSibling != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (canvas.nextSibling != shapes[i].node)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshapes[i].node.parentNode.insertBefore(shapes[i].node, canvas.nextSibling);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tshapes[i].node.parentNode.appendChild(shapes[i].node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (shapes[i].node.parentNode.firstChild != null && shapes[i].node.parentNode.firstChild != shapes[i].node)\n\t\t\t\t{\n\t\t\t\t\t// Inserts the node as the first child of the parent to implement the order\n\t\t\t\t\tshapes[i].node.parentNode.insertBefore(shapes[i].node, shapes[i].node.parentNode.firstChild);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (html)\n\t\t\t{\n\t\t\t\thtmlNode = shapes[i].node;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode = shapes[i].node;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [node, htmlNode];\n};\n\n/**\n * Function: getShapesForState\n * \n * Returns the <mxShapes> for the given cell state in the order in which they should\n * appear in the DOM.\n * \n * Parameters:\n * \n * state - <mxCellState> whose shapes should be returned.\n */\nmxCellRenderer.prototype.getShapesForState = function(state)\n{\n\treturn [state.shape, state.text, state.control];\n};\n\n/**\n * Function: redraw\n * \n * Updates the bounds or points and scale of the shapes for the given cell\n * state. This is called in mxGraphView.validatePoints as the last step of\n * updating all cells.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shapes should be updated.\n * force - Optional boolean that specifies if the cell should be reconfiured\n * and redrawn without any additional checks.\n * rendering - Optional boolean that specifies if the cell should actually\n * be drawn into the DOM. If this is false then redraw and/or reconfigure\n * will not be called on the shape.\n */\nmxCellRenderer.prototype.redraw = function(state, force, rendering)\n{\n\tvar shapeChanged = this.redrawShape(state, force, rendering);\n\t\n\tif (state.shape != null && (rendering == null || rendering))\n\t{\n\t\tthis.redrawLabel(state, shapeChanged);\n\t\tthis.redrawCellOverlays(state, shapeChanged);\n\t\tthis.redrawControl(state, shapeChanged);\n\t}\n};\n\n/**\n * Function: redrawShape\n * \n * Redraws the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be redrawn.\n */\nmxCellRenderer.prototype.redrawShape = function(state, force, rendering)\n{\n\tvar model = state.view.graph.model;\n\tvar shapeChanged = false;\n\n\t// Forces creation of new shape if shape style has changed\n\tif (state.shape != null && state.shape.style != null && state.style != null &&\n\t\tstate.shape.style[mxConstants.STYLE_SHAPE] != state.style[mxConstants.STYLE_SHAPE])\n\t{\n\t\tstate.shape.destroy();\n\t\tstate.shape = null;\n\t}\n\t\n\tif (state.shape == null && state.view.graph.container != null &&\n\t\tstate.cell != state.view.currentRoot &&\n\t\t(model.isVertex(state.cell) || model.isEdge(state.cell)))\n\t{\n\t\tstate.shape = this.createShape(state);\n\t\t\n\t\tif (state.shape != null)\n\t\t{\n\t\t\tstate.shape.minSvgStrokeWidth = this.minSvgStrokeWidth;\n\t\t\tstate.shape.antiAlias = this.antiAlias;\n\t\n\t\t\tthis.createIndicatorShape(state);\n\t\t\tthis.initializeShape(state);\n\t\t\tthis.createCellOverlays(state);\n\t\t\tthis.installListeners(state);\n\t\t\t\n\t\t\t// Forces a refresh of the handler if one exists\n\t\t\tstate.view.graph.selectionCellsHandler.updateHandler(state);\n\t\t}\n\t}\n\telse if (!force && state.shape != null && (!mxUtils.equalEntries(state.shape.style,\n\t\tstate.style) || this.checkPlaceholderStyles(state)))\n\t{\n\t\tstate.shape.resetStyles();\n\t\tthis.configureShape(state);\n\t\t// LATER: Ignore update for realtime to fix reset of current gesture\n\t\tstate.view.graph.selectionCellsHandler.updateHandler(state);\n\t\tforce = true;\n\t}\n\n\tif (state.shape != null)\n\t{\n\t\t// Handles changes of the collapse icon\n\t\tthis.createControl(state);\n\t\t\n\t\t// Redraws the cell if required, ignores changes to bounds if points are\n\t\t// defined as the bounds are updated for the given points inside the shape\n\t\tif (force || this.isShapeInvalid(state, state.shape))\n\t\t{\n\t\t\tif (state.absolutePoints != null)\n\t\t\t{\n\t\t\t\tstate.shape.points = state.absolutePoints.slice();\n\t\t\t\tstate.shape.bounds = null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape.points = null;\n\t\t\t\tstate.shape.bounds = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\t}\n\n\t\t\tstate.shape.scale = state.view.scale;\n\t\t\t\n\t\t\tif (rendering == null || rendering)\n\t\t\t{\n\t\t\t\tthis.doRedrawShape(state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape.updateBoundingBox();\n\t\t\t}\n\t\t\t\n\t\t\tshapeChanged = true;\n\t\t}\n\t}\n\n\treturn shapeChanged;\n};\n\n/**\n * Function: doRedrawShape\n * \n * Invokes redraw on the shape of the given state.\n */\nmxCellRenderer.prototype.doRedrawShape = function(state)\n{\n\tstate.shape.redraw();\n};\n\n/**\n * Function: isShapeInvalid\n * \n * Returns true if the given shape must be repainted.\n */\nmxCellRenderer.prototype.isShapeInvalid = function(state, shape)\n{\n\treturn shape.bounds == null || shape.scale != state.view.scale ||\n\t\t(state.absolutePoints == null && !shape.bounds.equals(state)) ||\n\t\t(state.absolutePoints != null && !mxUtils.equalPoints(shape.points, state.absolutePoints))\n};\n\n/**\n * Function: destroy\n * \n * Destroys the shapes associated with the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shapes should be destroyed.\n */\nmxCellRenderer.prototype.destroy = function(state)\n{\n\tif (state.shape != null)\n\t{\n\t\tif (state.text != null)\n\t\t{\t\t\n\t\t\tstate.text.destroy();\n\t\t\tstate.text = null;\n\t\t}\n\t\t\n\t\tif (state.overlays != null)\n\t\t{\n\t\t\tstate.overlays.visit(function(id, shape)\n\t\t\t{\n\t\t\t\tshape.destroy();\n\t\t\t});\n\t\t\t\n\t\t\tstate.overlays = null;\n\t\t}\n\n\t\tif (state.control != null)\n\t\t{\n\t\t\tstate.control.destroy();\n\t\t\tstate.control = null;\n\t\t}\n\t\t\n\t\tstate.shape.destroy();\n\t\tstate.shape = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEdgeStyle =\n{\n\t/**\n\t * Class: mxEdgeStyle\n\t * \n\t * Provides various edge styles to be used as the values for\n\t * <mxConstants.STYLE_EDGE> in a cell style.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * var style = stylesheet.getDefaultEdgeStyle();\n\t * style[mxConstants.STYLE_EDGE] = mxEdgeStyle.ElbowConnector;\n\t * (end)\n\t * \n\t * Sets the default edge style to <ElbowConnector>.\n\t * \n\t * Custom edge style:\n\t * \n\t * To write a custom edge style, a function must be added to the mxEdgeStyle\n\t * object as follows:\n\t * \n\t * (code)\n\t * mxEdgeStyle.MyStyle = function(state, source, target, points, result)\n\t * {\n\t *   if (source != null && target != null)\n\t *   {\n\t *     var pt = new mxPoint(target.getCenterX(), source.getCenterY());\n\t * \n\t *     if (mxUtils.contains(source, pt.x, pt.y))\n\t *     {\n\t *       pt.y = source.y + source.height;\n\t *     }\n\t * \n\t *     result.push(pt);\n\t *   }\n\t * };\n\t * (end)\n\t * \n\t * In the above example, a right angle is created using a point on the\n\t * horizontal center of the target vertex and the vertical center of the source\n\t * vertex. The code checks if that point intersects the source vertex and makes\n\t * the edge straight if it does. The point is then added into the result array,\n\t * which acts as the return value of the function.\n\t *\n\t * The new edge style should then be registered in the <mxStyleRegistry> as follows:\n\t * (code)\n\t * mxStyleRegistry.putValue('myEdgeStyle', mxEdgeStyle.MyStyle);\n\t * (end)\n\t * \n\t * The custom edge style above can now be used in a specific edge as follows:\n\t * \n\t * (code)\n\t * model.setStyle(edge, 'edgeStyle=myEdgeStyle');\n\t * (end)\n\t * \n\t * Note that the key of the <mxStyleRegistry> entry for the function should\n\t * be used in string values, unless <mxGraphView.allowEval> is true, in\n\t * which case you can also use mxEdgeStyle.MyStyle for the value in the\n\t * cell style above.\n\t * \n\t * Or it can be used for all edges in the graph as follows:\n\t * \n\t * (code)\n\t * var style = graph.getStylesheet().getDefaultEdgeStyle();\n\t * style[mxConstants.STYLE_EDGE] = mxEdgeStyle.MyStyle;\n\t * (end)\n\t * \n\t * Note that the object can be used directly when programmatically setting\n\t * the value, but the key in the <mxStyleRegistry> should be used when\n\t * setting the value via a key, value pair in a cell style.\n\t * \n\t * Function: EntityRelation\n\t * \n\t * Implements an entity relation style for edges (as used in database\n\t * schema diagrams). At the time the function is called, the result\n\t * array contains a placeholder (null) for the first absolute point,\n\t * that is, the point where the edge and source terminal are connected.\n\t * The implementation of the style then adds all intermediate waypoints\n\t * except for the last point, that is, the connection point between the\n\t * edge and the target terminal. The first ant the last point in the\n\t * result array are then replaced with mxPoints that take into account\n\t * the terminal's perimeter and next point on the edge.\n\t *\n\t * Parameters:\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * source - <mxCellState> that represents the source terminal.\n\t * target - <mxCellState> that represents the target terminal.\n\t * points - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t */\n\t EntityRelation: function (state, source, target, points, result)\n\t {\n\t\tvar view = state.view;\n\t \tvar graph = view.graph;\n\t \tvar segment = mxUtils.getValue(state.style,\n\t \t\t\tmxConstants.STYLE_SEGMENT,\n\t \t\t\tmxConstants.ENTITY_SEGMENT) * view.scale;\n\t \t\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t \tvar isSourceLeft = false;\n\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\telse if (source != null)\n\t\t{\n\t\t\tvar constraint = mxUtils.getPortConstraints(source, state, true, mxConstants.DIRECTION_MASK_NONE);\n\t\t\t\n\t\t\tif (constraint != mxConstants.DIRECTION_MASK_NONE && constraint != mxConstants.DIRECTION_MASK_WEST +\n\t\t\t\tmxConstants.DIRECTION_MASK_EAST)\n\t\t\t{\n\t\t\t\tisSourceLeft = constraint == mxConstants.DIRECTION_MASK_WEST;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t \tvar sourceGeometry = graph.getCellGeometry(source.cell);\n\t\t\n\t\t\t \tif (sourceGeometry.relative)\n\t\t\t \t{\n\t\t\t \t\tisSourceLeft = sourceGeometry.x <= 0.5;\n\t\t\t \t}\n\t\t\t \telse if (target != null)\n\t\t\t \t{\n\t\t\t \t\tisSourceLeft = target.x + target.width < source.x;\n\t\t\t \t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn;\n\t\t}\n\t \t\n\t \tvar isTargetLeft = true;\n\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\t\telse if (target != null)\n\t \t{\n\t\t\tvar constraint = mxUtils.getPortConstraints(target, state, false, mxConstants.DIRECTION_MASK_NONE);\n\n\t\t\tif (constraint != mxConstants.DIRECTION_MASK_NONE && constraint != mxConstants.DIRECTION_MASK_WEST +\n\t\t\t\tmxConstants.DIRECTION_MASK_EAST)\n\t\t\t{\n\t\t\t\tisTargetLeft = constraint == mxConstants.DIRECTION_MASK_WEST;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t \tvar targetGeometry = graph.getCellGeometry(target.cell);\n\t\n\t\t\t \tif (targetGeometry.relative)\n\t\t\t \t{\n\t\t\t \t\tisTargetLeft = targetGeometry.x <= 0.5;\n\t\t\t \t}\n\t\t\t \telse if (source != null)\n\t\t\t \t{\n\t\t\t \t\tisTargetLeft = source.x + source.width < target.x;\n\t\t\t \t}\n\t\t\t}\n\t \t}\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar x0 = (isSourceLeft) ? source.x : source.x + source.width;\n\t\t\tvar y0 = view.getRoutingCenterY(source);\n\t\t\t\n\t\t\tvar xe = (isTargetLeft) ? target.x : target.x + target.width;\n\t\t\tvar ye = view.getRoutingCenterY(target);\n\t\n\t\t\tvar seg = segment;\n\t\n\t\t\tvar dx = (isSourceLeft) ? -seg : seg;\n\t\t\tvar dep = new mxPoint(x0 + dx, y0);\n\t\t\t\t\t\n\t\t\tdx = (isTargetLeft) ? -seg : seg;\n\t\t\tvar arr = new mxPoint(xe + dx, ye);\n\t\n\t\t\t// Adds intermediate points if both go out on same side\n\t\t\tif (isSourceLeft == isTargetLeft)\n\t\t\t{\n\t\t\t\tvar x = (isSourceLeft) ?\n\t\t\t\t\tMath.min(x0, xe)-segment :\n\t\t\t\t\tMath.max(x0, xe)+segment;\n\t\n\t\t\t\tresult.push(new mxPoint(x, y0));\n\t\t\t\tresult.push(new mxPoint(x, ye));\n\t\t\t}\n\t\t\telse if ((dep.x < arr.x) == isSourceLeft)\n\t\t\t{\n\t\t\t\tvar midY = y0 + (ye - y0) / 2;\n\t\n\t\t\t\tresult.push(dep);\n\t\t\t\tresult.push(new mxPoint(dep.x, midY));\n\t\t\t\tresult.push(new mxPoint(arr.x, midY));\n\t\t\t\tresult.push(arr);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(dep);\n\t\t\t\tresult.push(arr);\n\t\t\t}\n\t\t}\n\t },\n\n\t /**\n\t * Function: Loop\n\t * \n\t * Implements a self-reference, aka. loop.\n\t */\n\tLoop: function (state, source, target, points, result)\n\t{\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tif (points != null && points.length > 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar pt = points[i];\n\t\t\t\t\tpt = state.view.transformControlPoint(state, pt);\n\t\t\t\t\tresult.push(new mxPoint(pt.x, pt.y));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tvar view = state.view;\n\t\t\tvar graph = view.graph;\n\t\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t\t\t\t\n\t\t\t\tif (mxUtils.contains(source, pt.x, pt.y))\n\t\t\t\t{\n\t\t\t\t\tpt = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = 0;\n\t\t\tvar dx = 0;\n\t\t\tvar y = 0;\n\t\t\tvar dy = 0;\n\t\t\t\n\t\t \tvar seg = mxUtils.getValue(state.style, mxConstants.STYLE_SEGMENT,\n\t\t \t\tgraph.gridSize) * view.scale;\n\t\t\tvar dir = mxUtils.getValue(state.style, mxConstants.STYLE_DIRECTION,\n\t\t\t\tmxConstants.DIRECTION_WEST);\n\t\t\t\n\t\t\tif (dir == mxConstants.DIRECTION_NORTH ||\n\t\t\t\tdir == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(source);\n\t\t\t\tdx = seg;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ty = view.getRoutingCenterY(source);\n\t\t\t\tdy = seg;\n\t\t\t}\n\t\t\t\n\t\t\tif (pt == null ||\n\t\t\t\tpt.x < source.x ||\n\t\t\t\tpt.x > source.x + source.width)\n\t\t\t{\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tx = pt.x;\n\t\t\t\t\tdy = Math.max(Math.abs(y - pt.y), dy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (dir == mxConstants.DIRECTION_NORTH)\n\t\t\t\t\t{\n\t\t\t\t\t\ty = source.y - 2 * dx;\n\t\t\t\t\t}\n\t\t\t\t\telse if (dir == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t\t{\n\t\t\t\t\t\ty = source.y + source.height + 2 * dx;\n\t\t\t\t\t}\n\t\t\t\t\telse if (dir == mxConstants.DIRECTION_EAST)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = source.x - 2 * dy;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = source.x + source.width + 2 * dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pt != null)\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(source);\n\t\t\t\tdx = Math.max(Math.abs(x - pt.x), dy);\n\t\t\t\ty = pt.y;\n\t\t\t\tdy = 0;\n\t\t\t}\n\t\t\t\n\t\t\tresult.push(new mxPoint(x - dx, y - dy));\n\t\t\tresult.push(new mxPoint(x + dx, y + dy));\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: ElbowConnector\n\t * \n\t * Uses either <SideToSide> or <TopToBottom> depending on the horizontal\n\t * flag in the cell style. <SideToSide> is used if horizontal is true or\n\t * unspecified. See <EntityRelation> for a description of the\n\t * parameters.\n\t */\n\tElbowConnector: function (state, source, target, points, result)\n\t{\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\n\t\tvar vertical = false;\n\t\tvar horizontal = false;\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar left = Math.min(source.x, target.x);\n\t\t\t\tvar right = Math.max(source.x + source.width,\n\t\t\t\t\ttarget.x + target.width);\n\t\n\t\t\t\tvar top = Math.min(source.y, target.y);\n\t\t\t\tvar bottom = Math.max(source.y + source.height,\n\t\t\t\t\ttarget.y + target.height);\n\n\t\t\t\tpt = state.view.transformControlPoint(state, pt);\n\t\t\t\t\t\n\t\t\t\tvertical = pt.y < top || pt.y > bottom;\n\t\t\t\thorizontal = pt.x < left || pt.x > right;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar left = Math.max(source.x, target.x);\n\t\t\t\tvar right = Math.min(source.x + source.width,\n\t\t\t\t\ttarget.x + target.width);\n\t\t\t\t\t\n\t\t\t\tvertical = left == right;\n\t\t\t\t\n\t\t\t\tif (!vertical)\n\t\t\t\t{\n\t\t\t\t\tvar top = Math.max(source.y, target.y);\n\t\t\t\t\tvar bottom = Math.min(source.y + source.height,\n\t\t\t\t\t\ttarget.y + target.height);\n\t\t\t\t\t\t\n\t\t\t\t\thorizontal = top == bottom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!horizontal && (vertical ||\n\t\t\tstate.style[mxConstants.STYLE_ELBOW] == mxConstants.ELBOW_VERTICAL))\n\t\t{\n\t\t\tmxEdgeStyle.TopToBottom(state, source, target, points, result);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxEdgeStyle.SideToSide(state, source, target, points, result);\n\t\t}\n\t},\n\n\t/**\n\t * Function: SideToSide\n\t * \n\t * Implements a vertical elbow edge. See <EntityRelation> for a description\n\t * of the parameters.\n\t */\n\tSideToSide: function (state, source, target, points, result)\n\t{\n\t\tvar view = state.view;\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t}\n\t\t\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar l = Math.max(source.x, target.x);\n\t\t\tvar r = Math.min(source.x + source.width,\n\t\t\t\t\t\t\t target.x + target.width);\n\t\n\t\t\tvar x = (pt != null) ? pt.x : Math.round(r + (l - r) / 2);\n\t\n\t\t\tvar y1 = view.getRoutingCenterY(source);\n\t\t\tvar y2 = view.getRoutingCenterY(target);\n\t\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tif (pt.y >= source.y && pt.y <= source.y + source.height)\n\t\t\t\t{\n\t\t\t\t\ty1 = pt.y;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (pt.y >= target.y && pt.y <= target.y + target.height)\n\t\t\t\t{\n\t\t\t\t\ty2 = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y1) &&\n\t\t\t\t!mxUtils.contains(source, x, y1))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x,  y1));\n\t\t\t}\n\t\n\t\t\tif (!mxUtils.contains(target, x, y2) &&\n\t\t\t\t!mxUtils.contains(source, x, y2))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y2));\n\t\t\t}\n\t\n\t\t\tif (result.length == 1)\n\t\t\t{\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.contains(target, x, pt.y) &&\n\t\t\t\t\t\t!mxUtils.contains(source, x, pt.y))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(new mxPoint(x, pt.y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\t\n\t\t\t\t\tvar t = Math.max(source.y, target.y);\n\t\t\t\t\tvar b = Math.min(source.y + source.height,\n\t\t\t\t\t\t\t target.y + target.height);\n\t\t\t\t\t\t \n\t\t\t\t\tresult.push(new mxPoint(x, t + (b - t) / 2));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: TopToBottom\n\t * \n\t * Implements a horizontal elbow edge. See <EntityRelation> for a\n\t * description of the parameters.\n\t */\n\tTopToBottom: function(state, source, target, points, result)\n\t{\n\t\tvar view = state.view;\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t}\n\t\t\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar t = Math.max(source.y, target.y);\n\t\t\tvar b = Math.min(source.y + source.height,\n\t\t\t\t\t\t\t target.y + target.height);\n\t\n\t\t\tvar x = view.getRoutingCenterX(source);\n\t\t\t\n\t\t\tif (pt != null &&\n\t\t\t\tpt.x >= source.x &&\n\t\t\t\tpt.x <= source.x + source.width)\n\t\t\t{\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\t\n\t\t\tvar y = (pt != null) ? pt.y : Math.round(b + (t - b) / 2);\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y) &&\n\t\t\t\t!mxUtils.contains(source, x, y))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y));\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (pt != null &&\n\t\t\t\tpt.x >= target.x &&\n\t\t\t\tpt.x <= target.x + target.width)\n\t\t\t{\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(target);\n\t\t\t}\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y) &&\n\t\t\t\t!mxUtils.contains(source, x, y))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y));\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (result.length == 1)\n\t\t\t{\n\t\t\t\tif (pt != null && result.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.contains(target, pt.x, y) &&\n\t\t\t\t\t\t!mxUtils.contains(source, pt.x, y))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(new mxPoint(pt.x, y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar l = Math.max(source.x, target.x);\n\t\t\t\t\tvar r = Math.min(source.x + source.width,\n\t\t\t\t\t\t\t target.x + target.width);\n\t\t\t\t\t\t \n\t\t\t\t\tresult.push(new mxPoint(l + (r - l) / 2, y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: SegmentConnector\n\t * \n\t * Implements an orthogonal edge style. Use <mxEdgeSegmentHandler>\n\t * as an interactive handler for this style.\n\t */\n\tSegmentConnector: function(state, source, target, hints, result)\n\t{\n\t\t// Creates array of all way- and terminalpoints\n\t\tvar pts = state.absolutePoints;\n\t\tvar tol = Math.max(1, state.view.scale);\n\t\t\n\t\t// Whether the first segment outgoing from the source end is horizontal\n\t\tvar lastPushed = (result.length > 0) ? result[0] : null;\n\t\tvar horizontal = true;\n\t\tvar hint = null;\n\t\t\n\t\t// Adds waypoints only if outside of tolerance\n\t\tfunction pushPoint(pt)\n\t\t{\n\t\t\tif (lastPushed == null || Math.abs(lastPushed.x - pt.x) >= tol || Math.abs(lastPushed.y - pt.y) >= tol)\n\t\t\t{\n\t\t\t\tresult.push(pt);\n\t\t\t\tlastPushed = pt;\n\t\t\t}\n\t\t\t\n\t\t\treturn lastPushed;\n\t\t};\n\n\t\t// Adds the first point\n\t\tvar pt = pts[0];\n\t\t\n\t\tif (pt == null && source != null)\n\t\t{\n\t\t\tpt = new mxPoint(state.view.getRoutingCenterX(source), state.view.getRoutingCenterY(source));\n\t\t}\n\t\telse if (pt != null)\n\t\t{\n\t\t\tpt = pt.clone();\n\t\t}\n\t\t\n\t\tpt.x = Math.round(pt.x);\n\t\tpt.y = Math.round(pt.y);\n\t\t\n\t\tvar lastInx = pts.length - 1;\n\n\t\t// Adds the waypoints\n\t\tif (hints != null && hints.length > 0)\n\t\t{\n\t\t\t// Converts all hints and removes nulls\n\t\t\tvar newHints = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < hints.length; i++)\n\t\t\t{\n\t\t\t\tvar tmp = state.view.transformControlPoint(state, hints[i]);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\ttmp.x = Math.round(tmp.x);\n\t\t\t\t\ttmp.y = Math.round(tmp.y);\n\t\t\t\t\tnewHints.push(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (newHints.length == 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\thints = newHints;\n\t\t\t\n\t\t\t// Aligns source and target hint to fixed points\n\t\t\tif (pt != null && hints[0] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(hints[0].x - pt.x) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[0].x = pt.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(hints[0].y - pt.y) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[0].y = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar pe = pts[lastInx];\n\t\t\t\n\t\t\tif (pe != null && hints[hints.length - 1] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(hints[hints.length - 1].x - pe.x) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[hints.length - 1].x = pe.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(hints[hints.length - 1].y - pe.y) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[hints.length - 1].y = pe.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\thint = hints[0];\n\n\t\t\tvar currentTerm = source;\n\t\t\tvar currentPt = pts[0];\n\t\t\tvar hozChan = false;\n\t\t\tvar vertChan = false;\n\t\t\tvar currentHint = hint;\n\t\t\t\n\t\t\tif (currentPt != null)\n\t\t\t{\n\t\t\t\tcurrentPt.x = Math.round(currentPt.x);\n\t\t\t\tcurrentPt.y = Math.round(currentPt.y);\n\t\t\t\tcurrentTerm = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Check for alignment with fixed points and with channels\n\t\t\t// at source and target segments only\n\t\t\tfor (var i = 0; i < 2; i++)\n\t\t\t{\n\t\t\t\tvar fixedVertAlign = currentPt != null && currentPt.x == currentHint.x;\n\t\t\t\tvar fixedHozAlign = currentPt != null && currentPt.y == currentHint.y;\n\t\t\t\t\n\t\t\t\tvar inHozChan = currentTerm != null && (currentHint.y >= currentTerm.y &&\n\t\t\t\t\t\tcurrentHint.y <= currentTerm.y + currentTerm.height);\n\t\t\t\tvar inVertChan = currentTerm != null && (currentHint.x >= currentTerm.x &&\n\t\t\t\t\t\tcurrentHint.x <= currentTerm.x + currentTerm.width);\n\n\t\t\t\thozChan = fixedHozAlign || (currentPt == null && inHozChan);\n\t\t\t\tvertChan = fixedVertAlign || (currentPt == null && inVertChan);\n\t\t\t\t\n\t\t\t\t// If the current hint falls in both the hor and vert channels in the case\n\t\t\t\t// of a floating port, or if the hint is exactly co-incident with a \n\t\t\t\t// fixed point, ignore the source and try to work out the orientation\n\t\t\t\t// from the target end\n\t\t\t\tif (i==0 && ((hozChan && vertChan) || (fixedVertAlign && fixedHozAlign)))\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (currentPt != null && (!fixedHozAlign && !fixedVertAlign) && (inHozChan || inVertChan)) \n\t\t\t\t\t{\n\t\t\t\t\t\thorizontal = inHozChan ? false : true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tif (vertChan || hozChan)\n\t\t\t\t\t{\n\t\t\t\t\t\thorizontal = hozChan;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (i == 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Work back from target end\n\t\t\t\t\t\t\thorizontal = hints.length % 2 == 0 ? hozChan : vertChan;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentTerm = target;\n\t\t\t\tcurrentPt = pts[lastInx];\n\t\t\t\t\n\t\t\t\tif (currentPt != null)\n\t\t\t\t{\n\t\t\t\t\tcurrentPt.x = Math.round(currentPt.x);\n\t\t\t\t\tcurrentPt.y = Math.round(currentPt.y);\n\t\t\t\t\tcurrentTerm = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentHint = hints[hints.length - 1];\n\t\t\t\t\n\t\t\t\tif (fixedVertAlign && fixedHozAlign)\n\t\t\t\t{\n\t\t\t\t\thints = hints.slice(1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (horizontal && ((pts[0] != null && pts[0].y != hint.y) ||\n\t\t\t\t(pts[0] == null && source != null &&\n\t\t\t\t(hint.y < source.y || hint.y > source.y + source.height))))\n\t\t\t{\n\t\t\t\tpushPoint(new mxPoint(pt.x, hint.y));\n\t\t\t}\n\t\t\telse if (!horizontal && ((pts[0] != null && pts[0].x != hint.x) ||\n\t\t\t\t\t(pts[0] == null && source != null &&\n\t\t\t\t\t(hint.x < source.x || hint.x > source.x + source.width))))\n\t\t\t{\n\t\t\t\tpushPoint(new mxPoint(hint.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\tif (horizontal)\n\t\t\t{\n\t\t\t\tpt.y = hint.y;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpt.x = hint.x;\n\t\t\t}\n\t\t\n\t\t\tfor (var i = 0; i < hints.length; i++)\n\t\t\t{\n\t\t\t\thorizontal = !horizontal;\n\t\t\t\thint = hints[i];\n\t\t\t\t\n//\t\t\t\tmxLog.show();\n//\t\t\t\tmxLog.debug('hint', i, hint.x, hint.y);\n\t\t\t\t\n\t\t\t\tif (horizontal)\n\t\t\t\t{\n\t\t\t\t\tpt.y = hint.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpt.x = hint.x;\n\t\t\t\t}\n\t\t\n\t\t\t\tpushPoint(pt.clone());\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\thint = pt;\n\t\t\t// FIXME: First click in connect preview toggles orientation\n\t\t\thorizontal = true;\n\t\t}\n\n\t\t// Adds the last point\n\t\tpt = pts[lastInx];\n\n\t\tif (pt == null && target != null)\n\t\t{\n\t\t\tpt = new mxPoint(state.view.getRoutingCenterX(target), state.view.getRoutingCenterY(target));\n\t\t}\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt.x = Math.round(pt.x);\n\t\t\tpt.y = Math.round(pt.y);\n\t\t\t\n\t\t\tif (hint != null)\n\t\t\t{\n\t\t\t\tif (horizontal && ((pts[lastInx] != null && pts[lastInx].y != hint.y) ||\n\t\t\t\t\t(pts[lastInx] == null && target != null &&\n\t\t\t\t\t(hint.y < target.y || hint.y > target.y + target.height))))\n\t\t\t\t{\n\t\t\t\t\tpushPoint(new mxPoint(pt.x, hint.y));\n\t\t\t\t}\n\t\t\t\telse if (!horizontal && ((pts[lastInx] != null && pts[lastInx].x != hint.x) ||\n\t\t\t\t\t\t(pts[lastInx] == null && target != null &&\n\t\t\t\t\t\t(hint.x < target.x || hint.x > target.x + target.width))))\n\t\t\t\t{\n\t\t\t\t\tpushPoint(new mxPoint(hint.x, pt.y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes bends inside the source terminal for floating ports\n\t\tif (pts[0] == null && source != null)\n\t\t{\n\t\t\twhile (result.length > 1 && result[1] != null &&\n\t\t\t\tmxUtils.contains(source, result[1].x, result[1].y))\n\t\t\t{\n\t\t\t\tresult.splice(1, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes bends inside the target terminal\n\t\tif (pts[lastInx] == null && target != null)\n\t\t{\n\t\t\twhile (result.length > 1 && result[result.length - 1] != null &&\n\t\t\t\tmxUtils.contains(target, result[result.length - 1].x, result[result.length - 1].y))\n\t\t\t{\n\t\t\t\tresult.splice(result.length - 1, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes last point if inside tolerance with end point\n\t\tif (pe != null && result[result.length - 1] != null &&\n\t\t\tMath.abs(pe.x - result[result.length - 1].x) <= tol &&\n\t\t\tMath.abs(pe.y - result[result.length - 1].y) <= tol)\n\t\t{\n\t\t\tresult.splice(result.length - 1, 1);\n\t\t\t\n\t\t\t// Lines up second last point in result with end point\n\t\t\tif (result[result.length - 1] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(result[result.length - 1].x - pe.x) < tol)\n\t\t\t\t{\n\t\t\t\t\tresult[result.length - 1].x = pe.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(result[result.length - 1].y - pe.y) < tol)\n\t\t\t\t{\n\t\t\t\t\tresult[result.length - 1].y = pe.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\torthBuffer: 10,\n\t\n\torthPointsFallback: true,\n\n\tdirVectors: [ [ -1, 0 ],\n\t\t\t[ 0, -1 ], [ 1, 0 ], [ 0, 1 ], [ -1, 0 ], [ 0, -1 ], [ 1, 0 ] ],\n\n\twayPoints1: [ [ 0, 0], [ 0, 0],  [ 0, 0], [ 0, 0], [ 0, 0],  [ 0, 0],\n\t              [ 0, 0],  [ 0, 0], [ 0, 0],  [ 0, 0], [ 0, 0],  [ 0, 0] ],\n\n\troutePatterns: [\n\t\t[ [ 513, 2308, 2081, 2562 ], [ 513, 1090, 514, 2184, 2114, 2561 ],\n\t\t\t[ 513, 1090, 514, 2564, 2184, 2562 ],\n\t\t\t[ 513, 2308, 2561, 1090, 514, 2568, 2308 ] ],\n\t[ [ 514, 1057, 513, 2308, 2081, 2562 ], [ 514, 2184, 2114, 2561 ],\n\t\t\t[ 514, 2184, 2562, 1057, 513, 2564, 2184 ],\n\t\t\t[ 514, 1057, 513, 2568, 2308, 2561 ] ],\n\t[ [ 1090, 514, 1057, 513, 2308, 2081, 2562 ], [ 2114, 2561 ],\n\t\t\t[ 1090, 2562, 1057, 513, 2564, 2184 ],\n\t\t\t[ 1090, 514, 1057, 513, 2308, 2561, 2568 ] ],\n\t[ [ 2081, 2562 ], [ 1057, 513, 1090, 514, 2184, 2114, 2561 ],\n\t\t\t[ 1057, 513, 1090, 514, 2184, 2562, 2564 ],\n\t\t\t[ 1057, 2561, 1090, 514, 2568, 2308 ] ] ],\n\t\n\tinlineRoutePatterns: [\n\t\t\t[ null, [ 2114, 2568 ], null, null ],\n\t\t\t[ null, [ 514, 2081, 2114, 2568 ] , null, null ],\n\t\t\t[ null, [ 2114, 2561 ], null, null ],\n\t\t\t[ [ 2081, 2562 ], [ 1057, 2114, 2568 ],\n\t\t\t\t\t[ 2184, 2562 ],\n\t\t\t\t\tnull ] ],\n\tvertexSeperations: [],\n\n\tlimits: [\n\t       [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n\t       [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ] ],\n\n\tLEFT_MASK: 32,\n\n\tTOP_MASK: 64,\n\n\tRIGHT_MASK: 128,\n\n\tBOTTOM_MASK: 256,\n\n\tLEFT: 1,\n\n\tTOP: 2,\n\n\tRIGHT: 4,\n\n\tBOTTOM: 8,\n\n\t// TODO remove magic numbers\n\tSIDE_MASK: 480,\n\t//mxEdgeStyle.LEFT_MASK | mxEdgeStyle.TOP_MASK | mxEdgeStyle.RIGHT_MASK\n\t//| mxEdgeStyle.BOTTOM_MASK,\n\n\tCENTER_MASK: 512,\n\n\tSOURCE_MASK: 1024,\n\n\tTARGET_MASK: 2048,\n\n\tVERTEX_MASK: 3072,\n\t// mxEdgeStyle.SOURCE_MASK | mxEdgeStyle.TARGET_MASK,\n\t\n\tgetJettySize: function(state, source, target, points, isSource)\n\t{\n\t\tvar value = mxUtils.getValue(state.style, (isSource) ? mxConstants.STYLE_SOURCE_JETTY_SIZE :\n\t\t\tmxConstants.STYLE_TARGET_JETTY_SIZE, mxUtils.getValue(state.style,\n\t\t\t\t\tmxConstants.STYLE_JETTY_SIZE, mxEdgeStyle.orthBuffer));\n\t\t\n\t\tif (value == 'auto')\n\t\t{\n\t\t\t// Computes the automatic jetty size\n\t\t\tvar type = mxUtils.getValue(state.style, (isSource) ? mxConstants.STYLE_STARTARROW : mxConstants.STYLE_ENDARROW, mxConstants.NONE);\n\t\t\t\n\t\t\tif (type != mxConstants.NONE)\n\t\t\t{\n\t\t\t\tvar size = mxUtils.getNumber(state.style, (isSource) ? mxConstants.STYLE_STARTSIZE : mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE);\n\t\t\t\tvalue = Math.max(2, Math.ceil((size + mxEdgeStyle.orthBuffer) / mxEdgeStyle.orthBuffer)) * mxEdgeStyle.orthBuffer;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvalue = 2 * mxEdgeStyle.orthBuffer;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: OrthConnector\n\t * \n\t * Implements a local orthogonal router between the given\n\t * cells.\n\t * \n\t * Parameters:\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * source - <mxCellState> that represents the source terminal.\n\t * target - <mxCellState> that represents the target terminal.\n\t * points - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t * \n\t */\n\tOrthConnector: function(state, source, target, points, result)\n\t{\n\t\tvar graph = state.view.graph;\n\t\tvar sourceEdge = source == null ? false : graph.getModel().isEdge(source.cell);\n\t\tvar targetEdge = target == null ? false : graph.getModel().isEdge(target.cell);\n\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t\tvar sourceX = source != null ? source.x : p0.x;\n\t\tvar sourceY = source != null ? source.y : p0.y;\n\t\tvar sourceWidth = source != null ? source.width : 0;\n\t\tvar sourceHeight = source != null ? source.height : 0;\n\t\t\n\t\tvar targetX = target != null ? target.x : pe.x;\n\t\tvar targetY = target != null ? target.y : pe.y;\n\t\tvar targetWidth = target != null ? target.width : 0;\n\t\tvar targetHeight = target != null ? target.height : 0;\n\n\t\tvar scaledSourceBuffer = state.view.scale * mxEdgeStyle.getJettySize(state, source, target, points, true);\n\t\tvar scaledTargetBuffer = state.view.scale * mxEdgeStyle.getJettySize(state, source, target, points, false);\n\t\t\n\t\t// Workaround for loop routing within buffer zone\n\t\tif (source != null && target == source)\n\t\t{\n\t\t\tscaledTargetBuffer = Math.max(scaledSourceBuffer, scaledTargetBuffer);\n\t\t\tscaledSourceBuffer = scaledTargetBuffer;\n\t\t}\n\t\t\n\t\tvar totalBuffer = scaledTargetBuffer + scaledSourceBuffer;\n\t\tvar tooShort = false;\n\t\t\n\t\t// Checks minimum distance for fixed points and falls back to segment connector\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tvar dx = pe.x - p0.x;\n\t\t\tvar dy = pe.y - p0.y;\n\t\t\t\n\t\t\ttooShort = dx * dx + dy * dy < totalBuffer * totalBuffer;\n\t\t}\n\n\t\tif (tooShort || (mxEdgeStyle.orthPointsFallback && (points != null &&\n\t\t\tpoints.length > 0)) || sourceEdge || targetEdge)\n\t\t{\n\t\t\tmxEdgeStyle.SegmentConnector(state, source, target, points, result);\n\t\t\t\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine the side(s) of the source and target vertices\n\t\t// that the edge may connect to\n\t\t// portConstraint [source, target]\n\t\tvar portConstraint = [mxConstants.DIRECTION_MASK_ALL, mxConstants.DIRECTION_MASK_ALL];\n\t\tvar rotation = 0;\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tportConstraint[0] = mxUtils.getPortConstraints(source, state, true, \n\t\t\t\t\tmxConstants.DIRECTION_MASK_ALL);\n\t\t\trotation = mxUtils.getValue(source.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\tvar newRect = mxUtils.getBoundingBox(new mxRectangle(sourceX, sourceY, sourceWidth, sourceHeight), rotation);\n\t\t\t\tsourceX = newRect.x; \n\t\t\t\tsourceY = newRect.y;\n\t\t\t\tsourceWidth = newRect.width;\n\t\t\t\tsourceHeight = newRect.height;\n\t\t\t}\n\t\t}\n\n\t\tif (target != null)\n\t\t{\n\t\t\tportConstraint[1] = mxUtils.getPortConstraints(target, state, false,\n\t\t\t\tmxConstants.DIRECTION_MASK_ALL);\n\t\t\trotation = mxUtils.getValue(target.style, mxConstants.STYLE_ROTATION, 0);\n\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\tvar newRect = mxUtils.getBoundingBox(new mxRectangle(targetX, targetY, targetWidth, targetHeight), rotation);\n\t\t\t\ttargetX = newRect.x;\n\t\t\t\ttargetY = newRect.y;\n\t\t\t\ttargetWidth = newRect.width;\n\t\t\t\ttargetHeight = newRect.height;\n\t\t\t}\n\t\t}\n\n\t\t// Avoids floating point number errors\n\t\tsourceX = Math.round(sourceX * 10) / 10;\n\t\tsourceY = Math.round(sourceY * 10) / 10;\n\t\tsourceWidth = Math.round(sourceWidth * 10) / 10;\n\t\tsourceHeight = Math.round(sourceHeight * 10) / 10;\n\t\t\n\t\ttargetX = Math.round(targetX * 10) / 10;\n\t\ttargetY = Math.round(targetY * 10) / 10;\n\t\ttargetWidth = Math.round(targetWidth * 10) / 10;\n\t\ttargetHeight = Math.round(targetHeight * 10) / 10;\n\t\t\n\t\tvar dir = [0, 0];\n\n\t\t// Work out which faces of the vertices present against each other\n\t\t// in a way that would allow a 3-segment connection if port constraints\n\t\t// permitted.\n\t\t// geo -> [source, target] [x, y, width, height]\n\t\tvar geo = [ [sourceX, sourceY, sourceWidth, sourceHeight] ,\n\t\t            [targetX, targetY, targetWidth, targetHeight] ];\n\t\tvar buffer = [scaledSourceBuffer, scaledTargetBuffer];\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tmxEdgeStyle.limits[i][1] = geo[i][0] - buffer[i];\n\t\t\tmxEdgeStyle.limits[i][2] = geo[i][1] - buffer[i];\n\t\t\tmxEdgeStyle.limits[i][4] = geo[i][0] + geo[i][2] + buffer[i];\n\t\t\tmxEdgeStyle.limits[i][8] = geo[i][1] + geo[i][3] + buffer[i];\n\t\t}\n\t\t\n\t\t// Work out which quad the target is in\n\t\tvar sourceCenX = geo[0][0] + geo[0][2] / 2.0;\n\t\tvar sourceCenY = geo[0][1] + geo[0][3] / 2.0;\n\t\tvar targetCenX = geo[1][0] + geo[1][2] / 2.0;\n\t\tvar targetCenY = geo[1][1] + geo[1][3] / 2.0;\n\t\t\n\t\tvar dx = sourceCenX - targetCenX;\n\t\tvar dy = sourceCenY - targetCenY;\n\n\t\tvar quad = 0;\n\n\t\tif (dx < 0)\n\t\t{\n\t\t\tif (dy < 0)\n\t\t\t{\n\t\t\t\tquad = 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tquad = 1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (dy <= 0)\n\t\t\t{\n\t\t\t\tquad = 3;\n\t\t\t\t\n\t\t\t\t// Special case on x = 0 and negative y\n\t\t\t\tif (dx == 0)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check for connection constraints\n\t\tvar currentTerm = null;\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tcurrentTerm = p0;\n\t\t}\n\n\t\tvar constraint = [ [0.5, 0.5] , [0.5, 0.5] ];\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (currentTerm != null)\n\t\t\t{\n\t\t\t\tconstraint[i][0] = (currentTerm.x - geo[i][0]) / geo[i][2];\n\t\t\t\t\n\t\t\t\tif (Math.abs(currentTerm.x - geo[i][0]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(currentTerm.x - geo[i][0] - geo[i][2]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t}\n\n\t\t\t\tconstraint[i][1] = (currentTerm.y - geo[i][1]) / geo[i][3];\n\n\t\t\t\tif (Math.abs(currentTerm.y - geo[i][1]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(currentTerm.y - geo[i][1] - geo[i][3]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrentTerm = null;\n\t\t\t\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tcurrentTerm = pe;\n\t\t\t}\n\t\t}\n\n\t\tvar sourceTopDist = geo[0][1] - (geo[1][1] + geo[1][3]);\n\t\tvar sourceLeftDist = geo[0][0] - (geo[1][0] + geo[1][2]);\n\t\tvar sourceBottomDist = geo[1][1] - (geo[0][1] + geo[0][3]);\n\t\tvar sourceRightDist = geo[1][0] - (geo[0][0] + geo[0][2]);\n\n\t\tmxEdgeStyle.vertexSeperations[1] = Math.max(sourceLeftDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[2] = Math.max(sourceTopDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[4] = Math.max(sourceBottomDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[3] = Math.max(sourceRightDist - totalBuffer, 0);\n\t\t\t\t\n\t\t//==============================================================\n\t\t// Start of source and target direction determination\n\n\t\t// Work through the preferred orientations by relative positioning\n\t\t// of the vertices and list them in preferred and available order\n\t\t\n\t\tvar dirPref = [];\n\t\tvar horPref = [];\n\t\tvar vertPref = [];\n\n\t\thorPref[0] = (sourceLeftDist >= sourceRightDist) ? mxConstants.DIRECTION_MASK_WEST\n\t\t\t\t: mxConstants.DIRECTION_MASK_EAST;\n\t\tvertPref[0] = (sourceTopDist >= sourceBottomDist) ? mxConstants.DIRECTION_MASK_NORTH\n\t\t\t\t: mxConstants.DIRECTION_MASK_SOUTH;\n\n\t\thorPref[1] = mxUtils.reversePortConstraints(horPref[0]);\n\t\tvertPref[1] = mxUtils.reversePortConstraints(vertPref[0]);\n\t\t\n\t\tvar preferredHorizDist = sourceLeftDist >= sourceRightDist ? sourceLeftDist\n\t\t\t\t: sourceRightDist;\n\t\tvar preferredVertDist = sourceTopDist >= sourceBottomDist ? sourceTopDist\n\t\t\t\t: sourceBottomDist;\n\n\t\tvar prefOrdering = [ [0, 0] , [0, 0] ];\n\t\tvar preferredOrderSet = false;\n\n\t\t// If the preferred port isn't available, switch it\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (dir[i] != 0x0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((horPref[i] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\thorPref[i] = mxUtils.reversePortConstraints(horPref[i]);\n\t\t\t}\n\n\t\t\tif ((vertPref[i] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\tvertPref[i] = mxUtils\n\t\t\t\t\t\t.reversePortConstraints(vertPref[i]);\n\t\t\t}\n\n\t\t\tprefOrdering[i][0] = vertPref[i];\n\t\t\tprefOrdering[i][1] = horPref[i];\n\t\t}\n\n\t\tif (preferredVertDist > 0\n\t\t\t\t&& preferredHorizDist > 0)\n\t\t{\n\t\t\t// Possibility of two segment edge connection\n\t\t\tif (((horPref[0] & portConstraint[0]) > 0)\n\t\t\t\t\t&& ((vertPref[1] & portConstraint[1]) > 0))\n\t\t\t{\n\t\t\t\tprefOrdering[0][0] = horPref[0];\n\t\t\t\tprefOrdering[0][1] = vertPref[0];\n\t\t\t\tprefOrdering[1][0] = vertPref[1];\n\t\t\t\tprefOrdering[1][1] = horPref[1];\n\t\t\t\tpreferredOrderSet = true;\n\t\t\t}\n\t\t\telse if (((vertPref[0] & portConstraint[0]) > 0)\n\t\t\t\t\t&& ((horPref[1] & portConstraint[1]) > 0))\n\t\t\t{\n\t\t\t\tprefOrdering[0][0] = vertPref[0];\n\t\t\t\tprefOrdering[0][1] = horPref[0];\n\t\t\t\tprefOrdering[1][0] = horPref[1];\n\t\t\t\tprefOrdering[1][1] = vertPref[1];\n\t\t\t\tpreferredOrderSet = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (preferredVertDist > 0 && !preferredOrderSet)\n\t\t{\n\t\t\tprefOrdering[0][0] = vertPref[0];\n\t\t\tprefOrdering[0][1] = horPref[0];\n\t\t\tprefOrdering[1][0] = vertPref[1];\n\t\t\tprefOrdering[1][1] = horPref[1];\n\t\t\tpreferredOrderSet = true;\n\n\t\t}\n\t\t\n\t\tif (preferredHorizDist > 0 && !preferredOrderSet)\n\t\t{\n\t\t\tprefOrdering[0][0] = horPref[0];\n\t\t\tprefOrdering[0][1] = vertPref[0];\n\t\t\tprefOrdering[1][0] = horPref[1];\n\t\t\tprefOrdering[1][1] = vertPref[1];\n\t\t\tpreferredOrderSet = true;\n\t\t}\n\n\t\t// The source and target prefs are now an ordered list of\n\t\t// the preferred port selections\n\t\t// If the list contains gaps, compact it\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (dir[i] != 0x0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((prefOrdering[i][0] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\tprefOrdering[i][0] = prefOrdering[i][1];\n\t\t\t}\n\n\t\t\tdirPref[i] = prefOrdering[i][0] & portConstraint[i];\n\t\t\tdirPref[i] |= (prefOrdering[i][1] & portConstraint[i]) << 8;\n\t\t\tdirPref[i] |= (prefOrdering[1 - i][i] & portConstraint[i]) << 16;\n\t\t\tdirPref[i] |= (prefOrdering[1 - i][1 - i] & portConstraint[i]) << 24;\n\n\t\t\tif ((dirPref[i] & 0xF) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = dirPref[i] << 8;\n\t\t\t}\n\t\t\t\n\t\t\tif ((dirPref[i] & 0xF00) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = (dirPref[i] & 0xF) | dirPref[i] >> 8;\n\t\t\t}\n\t\t\t\n\t\t\tif ((dirPref[i] & 0xF0000) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = (dirPref[i] & 0xFFFF)\n\t\t\t\t\t\t| ((dirPref[i] & 0xF000000) >> 8);\n\t\t\t}\n\n\t\t\tdir[i] = dirPref[i] & 0xF;\n\n\t\t\tif (portConstraint[i] == mxConstants.DIRECTION_MASK_WEST\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_NORTH\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_EAST\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_SOUTH)\n\t\t\t{\n\t\t\t\tdir[i] = portConstraint[i];\n\t\t\t}\n\t\t}\n\n\t\t//==============================================================\n\t\t// End of source and target direction determination\n\n\t\tvar sourceIndex = dir[0] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[0];\n\t\tvar targetIndex = dir[1] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[1];\n\n\t\tsourceIndex -= quad;\n\t\ttargetIndex -= quad;\n\n\t\tif (sourceIndex < 1)\n\t\t{\n\t\t\tsourceIndex += 4;\n\t\t}\n\t\t\n\t\tif (targetIndex < 1)\n\t\t{\n\t\t\ttargetIndex += 4;\n\t\t}\n\n\t\tvar routePattern = mxEdgeStyle.routePatterns[sourceIndex - 1][targetIndex - 1];\n\n\t\tmxEdgeStyle.wayPoints1[0][0] = geo[0][0];\n\t\tmxEdgeStyle.wayPoints1[0][1] = geo[0][1];\n\n\t\tswitch (dir[0])\n\t\t{\n\t\t\tcase mxConstants.DIRECTION_MASK_WEST:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] -= scaledSourceBuffer;\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += constraint[0][1] * geo[0][3];\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_SOUTH:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += constraint[0][0] * geo[0][2];\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += geo[0][3] + scaledSourceBuffer;\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_EAST:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += geo[0][2] + scaledSourceBuffer;\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += constraint[0][1] * geo[0][3];\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_NORTH:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += constraint[0][0] * geo[0][2];\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] -= scaledSourceBuffer;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvar currentIndex = 0;\n\n\t\t// Orientation, 0 horizontal, 1 vertical\n\t\tvar lastOrientation = (dir[0] & (mxConstants.DIRECTION_MASK_EAST | mxConstants.DIRECTION_MASK_WEST)) > 0 ? 0\n\t\t\t\t: 1;\n\t\tvar initialOrientation = lastOrientation;\n\t\tvar currentOrientation = 0;\n\n\t\tfor (var i = 0; i < routePattern.length; i++)\n\t\t{\n\t\t\tvar nextDirection = routePattern[i] & 0xF;\n\n\t\t\t// Rotate the index of this direction by the quad\n\t\t\t// to get the real direction\n\t\t\tvar directionIndex = nextDirection == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t\t: nextDirection;\n\n\t\t\tdirectionIndex += quad;\n\n\t\t\tif (directionIndex > 4)\n\t\t\t{\n\t\t\t\tdirectionIndex -= 4;\n\t\t\t}\n\n\t\t\tvar direction = mxEdgeStyle.dirVectors[directionIndex - 1];\n\n\t\t\tcurrentOrientation = (directionIndex % 2 > 0) ? 0 : 1;\n\t\t\t// Only update the current index if the point moved\n\t\t\t// in the direction of the current segment move,\n\t\t\t// otherwise the same point is moved until there is \n\t\t\t// a segment direction change\n\t\t\tif (currentOrientation != lastOrientation)\n\t\t\t{\n\t\t\t\tcurrentIndex++;\n\t\t\t\t// Copy the previous way point into the new one\n\t\t\t\t// We can't base the new position on index - 1\n\t\t\t\t// because sometime elbows turn out not to exist,\n\t\t\t\t// then we'd have to rewind.\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] = mxEdgeStyle.wayPoints1[currentIndex - 1][0];\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] = mxEdgeStyle.wayPoints1[currentIndex - 1][1];\n\t\t\t}\n\n\t\t\tvar tar = (routePattern[i] & mxEdgeStyle.TARGET_MASK) > 0;\n\t\t\tvar sou = (routePattern[i] & mxEdgeStyle.SOURCE_MASK) > 0;\n\t\t\tvar side = (routePattern[i] & mxEdgeStyle.SIDE_MASK) >> 5;\n\t\t\tside = side << quad;\n\n\t\t\tif (side > 0xF)\n\t\t\t{\n\t\t\t\tside = side >> 4;\n\t\t\t}\n\n\t\t\tvar center = (routePattern[i] & mxEdgeStyle.CENTER_MASK) > 0;\n\n\t\t\tif ((sou || tar) && side < 9)\n\t\t\t{\n\t\t\t\tvar limit = 0;\n\t\t\t\tvar souTar = sou ? 0 : 1;\n\n\t\t\t\tif (center && currentOrientation == 0)\n\t\t\t\t{\n\t\t\t\t\tlimit = geo[souTar][0] + constraint[souTar][0] * geo[souTar][2];\n\t\t\t\t}\n\t\t\t\telse if (center)\n\t\t\t\t{\n\t\t\t\t\tlimit = geo[souTar][1] + constraint[souTar][1] * geo[souTar][3];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlimit = mxEdgeStyle.limits[souTar][side];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (currentOrientation == 0)\n\t\t\t\t{\n\t\t\t\t\tvar lastX = mxEdgeStyle.wayPoints1[currentIndex][0];\n\t\t\t\t\tvar deltaX = (limit - lastX) * direction[0];\n\n\t\t\t\t\tif (deltaX > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] += direction[0]\n\t\t\t\t\t\t\t\t* deltaX;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar lastY = mxEdgeStyle.wayPoints1[currentIndex][1];\n\t\t\t\t\tvar deltaY = (limit - lastY) * direction[1];\n\n\t\t\t\t\tif (deltaY > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] += direction[1]\n\t\t\t\t\t\t\t\t* deltaY;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (center)\n\t\t\t{\n\t\t\t\t// Which center we're travelling to depend on the current direction\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] += direction[0]\n\t\t\t\t\t\t* Math.abs(mxEdgeStyle.vertexSeperations[directionIndex] / 2);\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] += direction[1]\n\t\t\t\t\t\t* Math.abs(mxEdgeStyle.vertexSeperations[directionIndex] / 2);\n\t\t\t}\n\n\t\t\tif (currentIndex > 0\n\t\t\t\t\t&& mxEdgeStyle.wayPoints1[currentIndex][currentOrientation] == mxEdgeStyle.wayPoints1[currentIndex - 1][currentOrientation])\n\t\t\t{\n\t\t\t\tcurrentIndex--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlastOrientation = currentOrientation;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= currentIndex; i++)\n\t\t{\n\t\t\tif (i == currentIndex)\n\t\t\t{\n\t\t\t\t// Last point can cause last segment to be in\n\t\t\t\t// same direction as jetty/approach. If so,\n\t\t\t\t// check the number of points is consistent\n\t\t\t\t// with the relative orientation of source and target\n\t\t\t\t// jx. Same orientation requires an even\n\t\t\t\t// number of turns (points), different requires\n\t\t\t\t// odd.\n\t\t\t\tvar targetOrientation = (dir[1] & (mxConstants.DIRECTION_MASK_EAST | mxConstants.DIRECTION_MASK_WEST)) > 0 ? 0\n\t\t\t\t\t\t: 1;\n\t\t\t\tvar sameOrient = targetOrientation == initialOrientation ? 0 : 1;\n\n\t\t\t\t// (currentIndex + 1) % 2 is 0 for even number of points,\n\t\t\t\t// 1 for odd\n\t\t\t\tif (sameOrient != (currentIndex + 1) % 2)\n\t\t\t\t{\n\t\t\t\t\t// The last point isn't required\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult.push(new mxPoint(Math.round(mxEdgeStyle.wayPoints1[i][0]), Math.round(mxEdgeStyle.wayPoints1[i][1])));\n\t\t}\n\t\t\n\t\t// Removes duplicates\n\t\tvar index = 1;\n\t\t\n\t\twhile (index < result.length)\n\t\t{\n\t\t\tif (result[index - 1] == null || result[index] == null ||\n\t\t\t\tresult[index - 1].x != result[index].x ||\n\t\t\t\tresult[index - 1].y != result[index].y)\n\t\t\t{\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.splice(index, 1);\n\t\t\t}\n\t\t}\n\t},\n\t\n\tgetRoutePattern: function(dir, quad, dx, dy)\n\t{\n\t\tvar sourceIndex = dir[0] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[0];\n\t\tvar targetIndex = dir[1] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[1];\n\n\t\tsourceIndex -= quad;\n\t\ttargetIndex -= quad;\n\n\t\tif (sourceIndex < 1)\n\t\t{\n\t\t\tsourceIndex += 4;\n\t\t}\n\t\tif (targetIndex < 1)\n\t\t{\n\t\t\ttargetIndex += 4;\n\t\t}\n\n\t\tvar result = routePatterns[sourceIndex - 1][targetIndex - 1];\n\n\t\tif (dx == 0 || dy == 0)\n\t\t{\n\t\t\tif (inlineRoutePatterns[sourceIndex - 1][targetIndex - 1] != null)\n\t\t\t{\n\t\t\t\tresult = inlineRoutePatterns[sourceIndex - 1][targetIndex - 1];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxStyleRegistry =\n{\n\t/**\n\t * Class: mxStyleRegistry\n\t *\n\t * Singleton class that acts as a global converter from string to object values\n\t * in a style. This is currently only used to perimeters and edge styles.\n\t * \n\t * Variable: values\n\t *\n\t * Maps from strings to objects.\n\t */\n\tvalues: [],\n\n\t/**\n\t * Function: putValue\n\t *\n\t * Puts the given object into the registry under the given name.\n\t */\n\tputValue: function(name, obj)\n\t{\n\t\tmxStyleRegistry.values[name] = obj;\n\t},\n\n\t/**\n\t * Function: getValue\n\t *\n\t * Returns the value associated with the given name.\n\t */\n\tgetValue: function(name)\n\t{\n\t\treturn mxStyleRegistry.values[name];\n\t},\n\t\n\t/**\n\t * Function: getName\n\t * \n\t * Returns the name for the given value.\n\t */\n\tgetName: function(value)\n\t{\n\t\tfor (var key in mxStyleRegistry.values)\n\t\t{\n\t\t\tif (mxStyleRegistry.values[key] == value)\n\t\t\t{\n\t\t\t\treturn key;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\n};\n\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ELBOW, mxEdgeStyle.ElbowConnector);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ENTITY_RELATION, mxEdgeStyle.EntityRelation);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_LOOP, mxEdgeStyle.Loop);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_SIDETOSIDE, mxEdgeStyle.SideToSide);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_TOPTOBOTTOM, mxEdgeStyle.TopToBottom);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ORTHOGONAL, mxEdgeStyle.OrthConnector);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_SEGMENT, mxEdgeStyle.SegmentConnector);\n\nmxStyleRegistry.putValue(mxConstants.PERIMETER_ELLIPSE, mxPerimeter.EllipsePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_RECTANGLE, mxPerimeter.RectanglePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_RHOMBUS, mxPerimeter.RhombusPerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_TRIANGLE, mxPerimeter.TrianglePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_HEXAGON, mxPerimeter.HexagonPerimeter);\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphView\n *\n * Extends <mxEventSource> to implement a view for a graph. This class is in\n * charge of computing the absolute coordinates for the relative child\n * geometries, the points for perimeters and edge styles and keeping them\n * cached in <mxCellStates> for faster retrieval. The states are updated\n * whenever the model or the view state (translate, scale) changes. The scale\n * and translate are honoured in the bounds.\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the root was changed in <setCurrentRoot>. The <code>edit</code>\n * property contains the <mxUndoableEdit> which contains the\n * <mxCurrentRootChange>.\n * \n * Event: mxEvent.SCALE_AND_TRANSLATE\n * \n * Fires after the scale and translate have been changed in <scaleAndTranslate>.\n * The <code>scale</code>, <code>previousScale</code>, <code>translate</code>\n * and <code>previousTranslate</code> properties contain the new and previous\n * scale and translate, respectively.\n * \n * Event: mxEvent.SCALE\n * \n * Fires after the scale was changed in <setScale>. The <code>scale</code> and\n * <code>previousScale</code> properties contain the new and previous scale.\n * \n * Event: mxEvent.TRANSLATE\n * \n * Fires after the translate was changed in <setTranslate>. The\n * <code>translate</code> and <code>previousTranslate</code> properties contain\n * the new and previous value for translate.\n * \n * Event: mxEvent.DOWN and mxEvent.UP\n * \n * Fire if the current root is changed by executing an <mxCurrentRootChange>.\n * The event name depends on the location of the root in the cell hierarchy\n * with respect to the current root. The <code>root</code> and\n * <code>previous</code> properties contain the new and previous root,\n * respectively.\n * \n * Constructor: mxGraphView\n *\n * Constructs a new view for the given <mxGraph>.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphView(graph)\n{\n\tthis.graph = graph;\n\tthis.translate = new mxPoint();\n\tthis.graphBounds = new mxRectangle();\n\tthis.states = new mxDictionary();\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphView.prototype = new mxEventSource();\nmxGraphView.prototype.constructor = mxGraphView;\n\n/**\n *\n */\nmxGraphView.prototype.EMPTY_POINT = new mxPoint();\n\n/**\n * Variable: doneResource\n * \n * Specifies the resource key for the status message after a long operation.\n * If the resource for this key does not exist then the value is used as\n * the status message. Default is 'done'.\n */\nmxGraphView.prototype.doneResource = (mxClient.language != 'none') ? 'done' : '';\n\n/**\n * Function: updatingDocumentResource\n *\n * Specifies the resource key for the status message while the document is\n * being updated. If the resource for this key does not exist then the\n * value is used as the status message. Default is 'updatingDocument'.\n */\nmxGraphView.prototype.updatingDocumentResource = (mxClient.language != 'none') ? 'updatingDocument' : '';\n\n/**\n * Variable: allowEval\n * \n * Specifies if string values in cell styles should be evaluated using\n * <mxUtils.eval>. This will only be used if the string values can't be mapped\n * to objects using <mxStyleRegistry>. Default is false. NOTE: Enabling this\n * switch carries a possible security risk.\n */\nmxGraphView.prototype.allowEval = false;\n\n/**\n * Variable: captureDocumentGesture\n * \n * Specifies if a gesture should be captured when it goes outside of the\n * graph container. Default is true.\n */\nmxGraphView.prototype.captureDocumentGesture = true;\n\n/**\n * Variable: optimizeVmlReflows\n * \n * Specifies if the <canvas> should be hidden while rendering in IE8 standards\n * mode and quirks mode. This will significantly improve rendering performance.\n * Default is true.\n */\nmxGraphView.prototype.optimizeVmlReflows = true;\n\n/**\n * Variable: rendering\n * \n * Specifies if shapes should be created, updated and destroyed using the\n * methods of <mxCellRenderer> in <graph>. Default is true.\n */\nmxGraphView.prototype.rendering = true;\n\n/**\n * Variable: graph\n *\n * Reference to the enclosing <mxGraph>.\n */\nmxGraphView.prototype.graph = null;\n\n/**\n * Variable: currentRoot\n *\n * <mxCell> that acts as the root of the displayed cell hierarchy.\n */\nmxGraphView.prototype.currentRoot = null;\n\n/**\n * Variable: graphBounds\n *\n * <mxRectangle> that caches the scales, translated bounds of the current view.\n */\nmxGraphView.prototype.graphBounds = null;\n\n/**\n * Variable: scale\n * \n * Specifies the scale. Default is 1 (100%).\n */\nmxGraphView.prototype.scale = 1;\n\t\n/**\n * Variable: translate\n *\n * <mxPoint> that specifies the current translation. Default is a new\n * empty <mxPoint>.\n */\nmxGraphView.prototype.translate = null;\n\n/**\n * Variable: states\n * \n * <mxDictionary> that maps from cell IDs to <mxCellStates>.\n */\nmxGraphView.prototype.states = null;\n\n/**\n * Variable: updateStyle\n * \n * Specifies if the style should be updated in each validation step. If this\n * is false then the style is only updated if the state is created or if the\n * style of the cell was changed. Default is false.\n */\nmxGraphView.prototype.updateStyle = false;\n\n/**\n * Variable: lastNode\n * \n * During validation, this contains the last DOM node that was processed.\n */\nmxGraphView.prototype.lastNode = null;\n\n/**\n * Variable: lastHtmlNode\n * \n * During validation, this contains the last HTML DOM node that was processed.\n */\nmxGraphView.prototype.lastHtmlNode = null;\n\n/**\n * Variable: lastForegroundNode\n * \n * During validation, this contains the last edge's DOM node that was processed.\n */\nmxGraphView.prototype.lastForegroundNode = null;\n\n/**\n * Variable: lastForegroundHtmlNode\n * \n * During validation, this contains the last edge HTML DOM node that was processed.\n */\nmxGraphView.prototype.lastForegroundHtmlNode = null;\n\n/**\n * Function: getGraphBounds\n *\n * Returns <graphBounds>.\n */\nmxGraphView.prototype.getGraphBounds = function()\n{\n\treturn this.graphBounds;\n};\n\n/**\n * Function: setGraphBounds\n *\n * Sets <graphBounds>.\n */\nmxGraphView.prototype.setGraphBounds = function(value)\n{\n\tthis.graphBounds = value;\n};\n\n/**\n * Function: getBounds\n * \n * Returns the union of all <mxCellStates> for the given array of <mxCells>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounds should be returned.\n */\nmxGraphView.prototype.getBounds = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (model.isVertex(cells[i]) || model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar state = this.getState(cells[i]);\n\t\t\t\n\t\t\t\tif (state != null)\n\t\t\t\t{\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(state);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(state);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: setCurrentRoot\n *\n * Sets and returns the current root and fires an <undo> event before\n * calling <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * root - <mxCell> that specifies the root of the displayed cell hierarchy.\n */\nmxGraphView.prototype.setCurrentRoot = function(root)\n{\n\tif (this.currentRoot != root)\n\t{\n\t\tvar change = new mxCurrentRootChange(this, root);\n\t\tchange.execute();\n\t\tvar edit = new mxUndoableEdit(this, true);\n\t\tedit.add(change);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n\t\tthis.graph.sizeDidChange();\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: scaleAndTranslate\n *\n * Sets the scale and translation and fires a <scale> and <translate> event\n * before calling <revalidate> followed by <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * scale - Decimal value that specifies the new scale (1 is 100%).\n * dx - X-coordinate of the translation.\n * dy - Y-coordinate of the translation.\n */\nmxGraphView.prototype.scaleAndTranslate = function(scale, dx, dy)\n{\n\tvar previousScale = this.scale;\n\tvar previousTranslate = new mxPoint(this.translate.x, this.translate.y);\n\t\n\tif (this.scale != scale || this.translate.x != dx || this.translate.y != dy)\n\t{\n\t\tthis.scale = scale;\n\t\t\n\t\tthis.translate.x = dx;\n\t\tthis.translate.y = dy;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SCALE_AND_TRANSLATE,\n\t\t'scale', scale, 'previousScale', previousScale,\n\t\t'translate', this.translate, 'previousTranslate', previousTranslate));\n};\n\n/**\n * Function: getScale\n * \n * Returns the <scale>.\n */\nmxGraphView.prototype.getScale = function()\n{\n\treturn this.scale;\n};\n\n/**\n * Function: setScale\n *\n * Sets the scale and fires a <scale> event before calling <revalidate> followed\n * by <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * value - Decimal value that specifies the new scale (1 is 100%).\n */\nmxGraphView.prototype.setScale = function(value)\n{\n\tvar previousScale = this.scale;\n\t\n\tif (this.scale != value)\n\t{\n\t\tthis.scale = value;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SCALE,\n\t\t'scale', value, 'previousScale', previousScale));\n};\n\n/**\n * Function: getTranslate\n * \n * Returns the <translate>.\n */\nmxGraphView.prototype.getTranslate = function()\n{\n\treturn this.translate;\n};\n\n/**\n * Function: setTranslate\n *\n * Sets the translation and fires a <translate> event before calling\n * <revalidate> followed by <mxGraph.sizeDidChange>. The translation is the\n * negative of the origin.\n *\n * Parameters:\n *\n * dx - X-coordinate of the translation.\n * dy - Y-coordinate of the translation.\n */\nmxGraphView.prototype.setTranslate = function(dx, dy)\n{\n\tvar previousTranslate = new mxPoint(this.translate.x, this.translate.y);\n\t\n\tif (this.translate.x != dx || this.translate.y != dy)\n\t{\n\t\tthis.translate.x = dx;\n\t\tthis.translate.y = dy;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.TRANSLATE,\n\t\t'translate', this.translate, 'previousTranslate', previousTranslate));\n};\n\n/**\n * Function: viewStateChanged\n * \n * Invoked after <scale> and/or <translate> has changed.\n */\nmxGraphView.prototype.viewStateChanged = function()\n{\n\tthis.revalidate();\n\tthis.graph.sizeDidChange();\n};\n\n/**\n * Function: refresh\n *\n * Clears the view if <currentRoot> is not null and revalidates.\n */\nmxGraphView.prototype.refresh = function()\n{\n\tif (this.currentRoot != null)\n\t{\n\t\tthis.clear();\n\t}\n\t\n\tthis.revalidate();\n};\n\n/**\n * Function: revalidate\n *\n * Revalidates the complete view with all cell states.\n */\nmxGraphView.prototype.revalidate = function()\n{\n\tthis.invalidate();\n\tthis.validate();\n};\n\n/**\n * Function: clear\n *\n * Removes the state of the given cell and all descendants if the given\n * cell is not the current root.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> for which the state should be removed. Default\n * is the root of the model.\n * force - Boolean indicating if the current root should be ignored for\n * recursion.\n */\nmxGraphView.prototype.clear = function(cell, force, recurse)\n{\n\tvar model = this.graph.getModel();\n\tcell = cell || model.getRoot();\n\tforce = (force != null) ? force : false;\n\trecurse = (recurse != null) ? recurse : true;\n\t\n\tthis.removeState(cell);\n\t\n\tif (recurse && (force || cell != this.currentRoot))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.clear(model.getChildAt(cell, i), force);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.invalidate(cell);\n\t}\n};\n\n/**\n * Function: invalidate\n * \n * Invalidates the state of the given cell, all its descendants and\n * connected edges.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be invalidated. Default is the root of the\n * model.\n */\nmxGraphView.prototype.invalidate = function(cell, recurse, includeEdges)\n{\n\tvar model = this.graph.getModel();\n\tcell = cell || model.getRoot();\n\trecurse = (recurse != null) ? recurse : true;\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tvar state = this.getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\tstate.invalid = true;\n\t}\n\t\n\t// Avoids infinite loops for invalid graphs\n\tif (!cell.invalidating)\n\t{\n\t\tcell.invalidating = true;\n\t\t\n\t\t// Recursively invalidates all descendants\n\t\tif (recurse)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\tthis.invalidate(child, recurse, includeEdges);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Propagates invalidation to all connected edges\n\t\tif (includeEdges)\n\t\t{\n\t\t\tvar edgeCount = model.getEdgeCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t{\n\t\t\t\tthis.invalidate(model.getEdgeAt(cell, i), recurse, includeEdges);\n\t\t\t}\n\t\t}\n\t\t\n\t\tdelete cell.invalidating;\n\t}\n};\n\n/**\n * Function: validate\n * \n * Calls <validateCell> and <validateCellState> and updates the <graphBounds>\n * using <getBoundingBox>. Finally the background is validated using\n * <validateBackground>.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be used as the root of the validation.\n * Default is <currentRoot> or the root of the model.\n */\nmxGraphView.prototype.validate = function(cell)\n{\n\tvar t0 = mxLog.enter('mxGraphView.validate');\n\twindow.status = mxResources.get(this.updatingDocumentResource) ||\n\t\tthis.updatingDocumentResource;\n\t\n\tthis.resetValidationState();\n\t\n\t// Improves IE rendering speed by minimizing reflows\n\tvar prevDisplay = null;\n\t\n\tif (this.optimizeVmlReflows && this.canvas != null && this.textDiv == null &&\n\t\t((document.documentMode == 8 && !mxClient.IS_EM) || mxClient.IS_QUIRKS))\n\t{\n\t\t// Placeholder keeps scrollbar positions when canvas is hidden\n\t\tthis.placeholder = document.createElement('div');\n\t\tthis.placeholder.style.position = 'absolute';\n\t\tthis.placeholder.style.width = this.canvas.clientWidth + 'px';\n\t\tthis.placeholder.style.height = this.canvas.clientHeight + 'px';\n\t\tthis.canvas.parentNode.appendChild(this.placeholder);\n\n\t\tprevDisplay = this.drawPane.style.display;\n\t\tthis.canvas.style.display = 'none';\n\t\t\n\t\t// Creates temporary DIV used for text measuring in mxText.updateBoundingBox\n\t\tthis.textDiv = document.createElement('div');\n\t\tthis.textDiv.style.position = 'absolute';\n\t\tthis.textDiv.style.whiteSpace = 'nowrap';\n\t\tthis.textDiv.style.visibility = 'hidden';\n\t\tthis.textDiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\tthis.textDiv.style.zoom = '1';\n\t\t\n\t\tdocument.body.appendChild(this.textDiv);\n\t}\n\t\n\tvar graphBounds = this.getBoundingBox(this.validateCellState(\n\t\tthis.validateCell(cell || ((this.currentRoot != null) ?\n\t\t\tthis.currentRoot : this.graph.getModel().getRoot()))));\n\tthis.setGraphBounds((graphBounds != null) ? graphBounds : this.getEmptyBounds());\n\tthis.validateBackground();\n\t\n\tif (prevDisplay != null)\n\t{\n\t\tthis.canvas.style.display = prevDisplay;\n\t\tthis.textDiv.parentNode.removeChild(this.textDiv);\n\t\t\n\t\tif (this.placeholder != null)\n\t\t{\n\t\t\tthis.placeholder.parentNode.removeChild(this.placeholder);\n\t\t}\n\t\t\t\t\n\t\t// Textdiv cannot be reused\n\t\tthis.textDiv = null;\n\t}\n\t\n\tthis.resetValidationState();\n\t\n\twindow.status = mxResources.get(this.doneResource) ||\n\t\tthis.doneResource;\n\tmxLog.leave('mxGraphView.validate', t0);\n};\n\n/**\n * Function: getEmptyBounds\n * \n * Returns the bounds for an empty graph. This returns a rectangle at\n * <translate> with the size of 0 x 0.\n */\nmxGraphView.prototype.getEmptyBounds = function()\n{\n\treturn new mxRectangle(this.translate.x * this.scale, this.translate.y * this.scale);\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the bounding box of the shape and the label for the given\n * <mxCellState> and its children if recurse is true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose bounding box should be returned.\n * recurse - Optional boolean indicating if the children should be included.\n * Default is true.\n */\nmxGraphView.prototype.getBoundingBox = function(state, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\tvar bbox = null;\n\t\n\tif (state != null)\n\t{\n\t\tif (state.shape != null && state.shape.boundingBox != null)\n\t\t{\n\t\t\tbbox = state.shape.boundingBox.clone();\n\t\t}\n\t\t\n\t\t// Adds label bounding box to graph bounds\n\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tif (bbox != null)\n\t\t\t{\n\t\t\t\tbbox.add(state.text.boundingBox);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbbox = state.text.boundingBox.clone();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (recurse)\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\tvar childCount = model.getChildCount(state.cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar bounds = this.getBoundingBox(this.getState(model.getChildAt(state.cell, i)));\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tif (bbox == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox = bounds;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox.add(bounds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn bbox;\n};\n\n/**\n * Function: createBackgroundPageShape\n *\n * Creates and returns the shape used as the background page.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that represents the bounds of the shape.\n */\nmxGraphView.prototype.createBackgroundPageShape = function(bounds)\n{\n\treturn new mxRectangleShape(bounds, 'white', 'black');\n};\n\n/**\n * Function: validateBackground\n *\n * Calls <validateBackgroundImage> and <validateBackgroundPage>.\n */\nmxGraphView.prototype.validateBackground = function()\n{\n\tthis.validateBackgroundImage();\n\tthis.validateBackgroundPage();\n};\n\n/**\n * Function: validateBackgroundImage\n * \n * Validates the background image.\n */\nmxGraphView.prototype.validateBackgroundImage = function()\n{\n\tvar bg = this.graph.getBackgroundImage();\n\t\n\tif (bg != null)\n\t{\n\t\tif (this.backgroundImage == null || this.backgroundImage.image != bg.src)\n\t\t{\n\t\t\tif (this.backgroundImage != null)\n\t\t\t{\n\t\t\t\tthis.backgroundImage.destroy();\n\t\t\t}\n\t\t\t\n\t\t\tvar bounds = new mxRectangle(0, 0, 1, 1);\n\t\t\t\n\t\t\tthis.backgroundImage = new mxImageShape(bounds, bg.src);\n\t\t\tthis.backgroundImage.dialect = this.graph.dialect;\n\t\t\tthis.backgroundImage.init(this.backgroundPane);\n\t\t\tthis.backgroundImage.redraw();\n\n\t\t\t// Workaround for ignored event on background in IE8 standards mode\n\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tmxEvent.addGestureListeners(this.backgroundImage.node,\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t\t\t}),\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t\t\t}),\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.redrawBackgroundImage(this.backgroundImage, bg);\n\t}\n\telse if (this.backgroundImage != null)\n\t{\n\t\tthis.backgroundImage.destroy();\n\t\tthis.backgroundImage = null;\n\t}\n};\n\n/**\n * Function: validateBackgroundPage\n * \n * Validates the background page.\n */\nmxGraphView.prototype.validateBackgroundPage = function()\n{\n\tif (this.graph.pageVisible)\n\t{\n\t\tvar bounds = this.getBackgroundPageBounds();\n\t\t\n\t\tif (this.backgroundPageShape == null)\n\t\t{\n\t\t\tthis.backgroundPageShape = this.createBackgroundPageShape(bounds);\n\t\t\tthis.backgroundPageShape.scale = this.scale;\n\t\t\tthis.backgroundPageShape.isShadow = true;\n\t\t\tthis.backgroundPageShape.dialect = this.graph.dialect;\n\t\t\tthis.backgroundPageShape.init(this.backgroundPane);\n\t\t\tthis.backgroundPageShape.redraw();\n\t\t\t\n\t\t\t// Adds listener for double click handling on background\n\t\t\tif (this.graph.nativeDblClickEnabled)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(this.backgroundPageShape.node, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.dblClick(evt);\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\t// Adds basic listeners for graph event dispatching outside of the\n\t\t\t// container and finishing the handling of a single gesture\n\t\t\tmxEvent.addGestureListeners(this.backgroundPageShape.node,\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t\t}),\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\t// Hides the tooltip if mouse is outside container\n\t\t\t\t\tif (this.graph.tooltipHandler != null && this.graph.tooltipHandler.isHideOnHover())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.tooltipHandler.hide();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.graph.isMouseDown && !mxEvent.isConsumed(evt))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.backgroundPageShape.scale = this.scale;\n\t\t\tthis.backgroundPageShape.bounds = bounds;\n\t\t\tthis.backgroundPageShape.redraw();\n\t\t}\n\t}\n\telse if (this.backgroundPageShape != null)\n\t{\n\t\tthis.backgroundPageShape.destroy();\n\t\tthis.backgroundPageShape = null;\n\t}\n};\n\n/**\n * Function: getBackgroundPageBounds\n * \n * Returns the bounds for the background page.\n */\nmxGraphView.prototype.getBackgroundPageBounds = function()\n{\n\tvar fmt = this.graph.pageFormat;\n\tvar ps = this.scale * this.graph.pageScale;\n\tvar bounds = new mxRectangle(this.scale * this.translate.x, this.scale * this.translate.y,\n\t\t\tfmt.width * ps, fmt.height * ps);\n\t\n\treturn bounds;\n};\n\n/**\n * Function: redrawBackgroundImage\n *\n * Updates the bounds and redraws the background image.\n * \n * Example:\n * \n * If the background image should not be scaled, this can be replaced with\n * the following.\n * \n * (code)\n * mxGraphView.prototype.redrawBackground = function(backgroundImage, bg)\n * {\n *   backgroundImage.bounds.x = this.translate.x;\n *   backgroundImage.bounds.y = this.translate.y;\n *   backgroundImage.bounds.width = bg.width;\n *   backgroundImage.bounds.height = bg.height;\n *\n *   backgroundImage.redraw();\n * };\n * (end)\n * \n * Parameters:\n * \n * backgroundImage - <mxImageShape> that represents the background image.\n * bg - <mxImage> that specifies the image and its dimensions.\n */\nmxGraphView.prototype.redrawBackgroundImage = function(backgroundImage, bg)\n{\n\tbackgroundImage.scale = this.scale;\n\tbackgroundImage.bounds.x = this.scale * this.translate.x;\n\tbackgroundImage.bounds.y = this.scale * this.translate.y;\n\tbackgroundImage.bounds.width = this.scale * bg.width;\n\tbackgroundImage.bounds.height = this.scale * bg.height;\n\n\tbackgroundImage.redraw();\n};\n\n/**\n * Function: validateCell\n * \n * Recursively creates the cell state for the given cell if visible is true and\n * the given cell is visible. If the cell is not visible but the state exists\n * then it is removed using <removeState>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose <mxCellState> should be created.\n * visible - Optional boolean indicating if the cell should be visible. Default\n * is true.\n */\nmxGraphView.prototype.validateCell = function(cell, visible)\n{\n\tvisible = (visible != null) ? visible : true;\n\t\n\tif (cell != null)\n\t{\n\t\tvisible = visible && this.graph.isCellVisible(cell);\n\t\tvar state = this.getState(cell, visible);\n\t\t\n\t\tif (state != null && !visible)\n\t\t{\n\t\t\tthis.removeState(cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tthis.validateCell(model.getChildAt(cell, i), visible &&\n\t\t\t\t\t(!this.isCellCollapsed(cell) || cell == this.currentRoot));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: validateCellState\n * \n * Validates and repaints the <mxCellState> for the given <mxCell>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose <mxCellState> should be validated.\n * recurse - Optional boolean indicating if the children of the cell should be\n * validated. Default is true.\n */\nmxGraphView.prototype.validateCellState = function(cell, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\t\n\t\t\tif (state.invalid)\n\t\t\t{\n\t\t\t\tstate.invalid = false;\n\t\t\t\t\n\t\t\t\tif (state.style == null || state.invalidStyle)\n\t\t\t\t{\n\t\t\t\t\tstate.style = this.graph.getCellStyle(state.cell);\n\t\t\t\t\tstate.invalidStyle = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (cell != this.currentRoot)\n\t\t\t\t{\n\t\t\t\t\tthis.validateCellState(model.getParent(cell), false);\n\t\t\t\t}\n\n\t\t\t\tstate.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell, true), false), true);\n\t\t\t\tstate.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell, false), false), false);\n\t\t\t\t\n\t\t\t\tthis.updateCellState(state);\n\t\t\t\t\n\t\t\t\t// Repaint happens immediately after the cell is validated\n\t\t\t\tif (cell != this.currentRoot && !state.invalid)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.cellRenderer.redraw(state, false, this.isRendering());\n\n\t\t\t\t\t// Handles changes to invertex paintbounds after update of rendering shape\n\t\t\t\t\tstate.updateCachedBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (recurse && !state.invalid)\n\t\t\t{\n\t\t\t\t// Updates order in DOM if recursively traversing\n\t\t\t\tif (state.shape != null)\n\t\t\t\t{\n\t\t\t\t\tthis.stateValidated(state);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.validateCellState(model.getChildAt(cell, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: updateCellState\n * \n * Updates the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to be updated.\n */\nmxGraphView.prototype.updateCellState = function(state)\n{\n\tstate.absoluteOffset.x = 0;\n\tstate.absoluteOffset.y = 0;\n\tstate.origin.x = 0;\n\tstate.origin.y = 0;\n\tstate.length = 0;\n\t\n\tif (state.cell != this.currentRoot)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\tvar pState = this.getState(model.getParent(state.cell)); \n\t\t\n\t\tif (pState != null && pState.cell != this.currentRoot)\n\t\t{\n\t\t\tstate.origin.x += pState.origin.x;\n\t\t\tstate.origin.y += pState.origin.y;\n\t\t}\n\t\t\n\t\tvar offset = this.graph.getChildOffsetForCell(state.cell);\n\t\t\n\t\tif (offset != null)\n\t\t{\n\t\t\tstate.origin.x += offset.x;\n\t\t\tstate.origin.y += offset.y;\n\t\t}\n\t\t\n\t\tvar geo = this.graph.getCellGeometry(state.cell);\t\t\t\t\n\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tif (!model.isEdge(state.cell))\n\t\t\t{\n\t\t\t\toffset = geo.offset || this.EMPTY_POINT;\n\t\n\t\t\t\tif (geo.relative && pState != null)\n\t\t\t\t{\n\t\t\t\t\tif (model.isEdge(pState.cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar origin = this.getPoint(pState, geo);\n\n\t\t\t\t\t\tif (origin != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.origin.x += (origin.x / this.scale) - pState.origin.x - this.translate.x;\n\t\t\t\t\t\t\tstate.origin.y += (origin.y / this.scale) - pState.origin.y - this.translate.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.origin.x += geo.x * pState.width / this.scale + offset.x;\n\t\t\t\t\t\tstate.origin.y += geo.y * pState.height / this.scale + offset.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstate.absoluteOffset.x = this.scale * offset.x;\n\t\t\t\t\tstate.absoluteOffset.y = this.scale * offset.y;\n\t\t\t\t\tstate.origin.x += geo.x;\n\t\t\t\t\tstate.origin.y += geo.y;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tstate.x = this.scale * (this.translate.x + state.origin.x);\n\t\t\tstate.y = this.scale * (this.translate.y + state.origin.y);\n\t\t\tstate.width = this.scale * geo.width;\n\t\t\tstate.unscaledWidth = geo.width;\n\t\t\tstate.height = this.scale * geo.height;\n\t\t\t\n\t\t\tif (model.isVertex(state.cell))\n\t\t\t{\n\t\t\t\tthis.updateVertexState(state, geo);\n\t\t\t}\n\t\t\t\n\t\t\tif (model.isEdge(state.cell))\n\t\t\t{\n\t\t\t\tthis.updateEdgeState(state, geo);\n\t\t\t}\n\t\t}\n\t}\n\n\tstate.updateCachedBounds();\n};\n\n/**\n * Function: isCellCollapsed\n * \n * Returns true if the children of the given cell should not be visible in the\n * view. This implementation uses <mxGraph.isCellVisible> but it can be\n * overidden to use a separate condition.\n */\nmxGraphView.prototype.isCellCollapsed = function(cell)\n{\n\treturn this.graph.isCellCollapsed(cell);\n};\n\n/**\n * Function: updateVertexState\n * \n * Validates the given cell state.\n */\nmxGraphView.prototype.updateVertexState = function(state, geo)\n{\n\tvar model = this.graph.getModel();\n\tvar pState = this.getState(model.getParent(state.cell));\n\t\n\tif (geo.relative && pState != null && !model.isEdge(pState.cell))\n\t{\n\t\tvar alpha = mxUtils.toRadians(pState.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(alpha);\n\t\t\tvar sin = Math.sin(alpha);\n\n\t\t\tvar ct = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\tvar cx = new mxPoint(pState.getCenterX(), pState.getCenterY());\n\t\t\tvar pt = mxUtils.getRotatedPoint(ct, cos, sin, cx);\n\t\t\tstate.x = pt.x - state.width / 2;\n\t\t\tstate.y = pt.y - state.height / 2;\n\t\t}\n\t}\n\t\n\tthis.updateVertexLabelOffset(state);\n};\n\n/**\n * Function: updateEdgeState\n * \n * Validates the given cell state.\n */\nmxGraphView.prototype.updateEdgeState = function(state, geo)\n{\n\tvar source = state.getVisibleTerminalState(true);\n\tvar target = state.getVisibleTerminalState(false);\n\t\n\t// This will remove edges with no terminals and no terminal points\n\t// as such edges are invalid and produce NPEs in the edge styles.\n\t// Also removes connected edges that have no visible terminals.\n\tif ((this.graph.model.getTerminal(state.cell, true) != null && source == null) ||\n\t\t(source == null && geo.getTerminalPoint(true) == null) ||\n\t\t(this.graph.model.getTerminal(state.cell, false) != null && target == null) ||\n\t\t(target == null && geo.getTerminalPoint(false) == null))\n\t{\n\t\tthis.clear(state.cell, true);\n\t}\n\telse\n\t{\n\t\tthis.updateFixedTerminalPoints(state, source, target);\n\t\tthis.updatePoints(state, geo.points, source, target);\n\t\tthis.updateFloatingTerminalPoints(state, source, target);\n\t\t\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tif (state.cell != this.currentRoot && (pts == null || pts.length < 2 ||\n\t\t\tpts[0] == null || pts[pts.length - 1] == null))\n\t\t{\n\t\t\t// This will remove edges with invalid points from the list of states in the view.\n\t\t\t// Happens if the one of the terminals and the corresponding terminal point is null.\n\t\t\tthis.clear(state.cell, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.updateEdgeBounds(state);\n\t\t\tthis.updateEdgeLabelOffset(state);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateVertexLabelOffset\n * \n * Updates the absoluteOffset of the given vertex cell state. This takes\n * into account the label position styles.\n * \n * Parameters:\n * \n * state - <mxCellState> whose absolute offset should be updated.\n */\nmxGraphView.prototype.updateVertexLabelOffset = function(state)\n{\n\tvar h = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\n\tif (h == mxConstants.ALIGN_LEFT)\n\t{\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tif (lw != null)\n\t\t{\n\t\t\tlw *= this.scale;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlw = state.width;\n\t\t}\n\t\t\n\t\tstate.absoluteOffset.x -= lw;\n\t}\n\telse if (h == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstate.absoluteOffset.x += state.width;\n\t}\n\telse if (h == mxConstants.ALIGN_CENTER)\n\t{\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tif (lw != null)\n\t\t{\n\t\t\t// Aligns text block with given width inside the vertex width\n\t\t\tvar align = mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_CENTER);\n\t\t\tvar dx = 0;\n\t\t\t\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tdx = 0.5;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tdx = 1;\n\t\t\t}\n\t\t\t\n\t\t\tif (dx != 0)\n\t\t\t{\n\t\t\t\tstate.absoluteOffset.x -= (lw * this.scale - state.width) * dx;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar v = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\n\tif (v == mxConstants.ALIGN_TOP)\n\t{\n\t\tstate.absoluteOffset.y -= state.height;\n\t}\n\telse if (v == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tstate.absoluteOffset.y += state.height;\n\t}\n};\n\n/**\n * Function: resetValidationState\n *\n * Resets the current validation state.\n */\nmxGraphView.prototype.resetValidationState = function()\n{\n\tthis.lastNode = null;\n\tthis.lastHtmlNode = null;\n\tthis.lastForegroundNode = null;\n\tthis.lastForegroundHtmlNode = null;\n};\n\n/**\n * Function: stateValidated\n * \n * Invoked when a state has been processed in <validatePoints>. This is used\n * to update the order of the DOM nodes of the shape.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the cell state.\n */\nmxGraphView.prototype.stateValidated = function(state)\n{\n\tvar fg = (this.graph.getModel().isEdge(state.cell) && this.graph.keepEdgesInForeground) ||\n\t\t(this.graph.getModel().isVertex(state.cell) && this.graph.keepEdgesInBackground);\n\tvar htmlNode = (fg) ? this.lastForegroundHtmlNode || this.lastHtmlNode : this.lastHtmlNode;\n\tvar node = (fg) ? this.lastForegroundNode || this.lastNode : this.lastNode;\n\tvar result = this.graph.cellRenderer.insertStateAfter(state, node, htmlNode);\n\n\tif (fg)\n\t{\n\t\tthis.lastForegroundHtmlNode = result[1];\n\t\tthis.lastForegroundNode = result[0];\n\t}\n\telse\n\t{\n\t\tthis.lastHtmlNode = result[1];\n\t\tthis.lastNode = result[0];\n\t}\n};\n\n/**\n * Function: updateFixedTerminalPoints\n *\n * Sets the initial absolute terminal points in the given state before the edge\n * style is computed.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose initial terminal points should be updated.\n * source - <mxCellState> which represents the source terminal.\n * target - <mxCellState> which represents the target terminal.\n */\nmxGraphView.prototype.updateFixedTerminalPoints = function(edge, source, target)\n{\n\tthis.updateFixedTerminalPoint(edge, source, true,\n\t\tthis.graph.getConnectionConstraint(edge, source, true));\n\tthis.updateFixedTerminalPoint(edge, target, false,\n\t\tthis.graph.getConnectionConstraint(edge, target, false));\n};\n\n/**\n * Function: updateFixedTerminalPoint\n *\n * Sets the fixed source or target terminal point on the given edge.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be updated.\n * terminal - <mxCellState> which represents the actual terminal.\n * source - Boolean that specifies if the terminal is the source.\n * constraint - <mxConnectionConstraint> that specifies the connection.\n */\nmxGraphView.prototype.updateFixedTerminalPoint = function(edge, terminal, source, constraint)\n{\n\tedge.setAbsoluteTerminalPoint(this.getFixedTerminalPoint(edge, terminal, source, constraint), source);\n};\n\n/**\n * Function: getFixedTerminalPoint\n *\n * Returns the fixed source or target terminal point for the given edge.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be returned.\n * terminal - <mxCellState> which represents the actual terminal.\n * source - Boolean that specifies if the terminal is the source.\n * constraint - <mxConnectionConstraint> that specifies the connection.\n */\nmxGraphView.prototype.getFixedTerminalPoint = function(edge, terminal, source, constraint)\n{\n\tvar pt = null;\n\t\n\tif (constraint != null)\n\t{\n\t\tpt = this.graph.getConnectionPoint(terminal, constraint, this.graph.isOrthogonal(edge));\n\t}\n\t\n\tif (pt == null && terminal == null)\n\t{\n\t\tvar s = this.scale;\n\t\tvar tr = this.translate;\n\t\tvar orig = edge.origin;\n\t\tvar geo = this.graph.getCellGeometry(edge.cell);\n\t\tpt = geo.getTerminalPoint(source);\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = new mxPoint(s * (tr.x + pt.x + orig.x),\n\t\t\t\t\t\t\t s * (tr.y + pt.y + orig.y));\n\t\t}\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: updateBoundsFromStencil\n * \n * Updates the bounds of the given cell state to reflect the bounds of the stencil\n * if it has a fixed aspect and returns the previous bounds as an <mxRectangle> if\n * the bounds have been modified or null otherwise.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose bounds should be updated.\n */\nmxGraphView.prototype.updateBoundsFromStencil = function(state)\n{\n\tvar previous = null;\n\t\n\tif (state != null && state.shape != null && state.shape.stencil != null && state.shape.stencil.aspect == 'fixed')\n\t{\n\t\tprevious = mxRectangle.fromRectangle(state);\n\t\tvar asp = state.shape.stencil.computeAspect(state.style, state.x, state.y, state.width, state.height);\n\t\tstate.setRect(asp.x, asp.y, state.shape.stencil.w0 * asp.width, state.shape.stencil.h0 * asp.height);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: updatePoints\n *\n * Updates the absolute points in the given state using the specified array\n * of <mxPoints> as the relative points.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose absolute points should be updated.\n * points - Array of <mxPoints> that constitute the relative points.\n * source - <mxCellState> that represents the source terminal.\n * target - <mxCellState> that represents the target terminal.\n */\nmxGraphView.prototype.updatePoints = function(edge, points, source, target)\n{\n\tif (edge != null)\n\t{\n\t\tvar pts = [];\n\t\tpts.push(edge.absolutePoints[0]);\n\t\tvar edgeStyle = this.getEdgeStyle(edge, points, source, target);\n\t\t\n\t\tif (edgeStyle != null)\n\t\t{\n\t\t\tvar src = this.getTerminalPort(edge, source, true);\n\t\t\tvar trg = this.getTerminalPort(edge, target, false);\n\t\t\t\n\t\t\t// Uses the stencil bounds for routing and restores after routing\n\t\t\tvar srcBounds = this.updateBoundsFromStencil(src);\n\t\t\tvar trgBounds = this.updateBoundsFromStencil(trg);\n\n\t\t\tedgeStyle(edge, src, trg, points, pts);\n\t\t\t\n\t\t\t// Restores previous bounds\n\t\t\tif (srcBounds != null)\n\t\t\t{\n\t\t\t\tsrc.setRect(srcBounds.x, srcBounds.y, srcBounds.width, srcBounds.height);\n\t\t\t}\n\t\t\t\n\t\t\tif (trgBounds != null)\n\t\t\t{\n\t\t\t\ttrg.setRect(trgBounds.x, trgBounds.y, trgBounds.width, trgBounds.height);\n\t\t\t}\n\t\t}\n\t\telse if (points != null)\n\t\t{\n\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t{\n\t\t\t\tif (points[i] != null)\n\t\t\t\t{\n\t\t\t\t\tvar pt = mxUtils.clone(points[i]);\n\t\t\t\t\tpts.push(this.transformControlPoint(edge, pt));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar tmp = edge.absolutePoints;\n\t\tpts.push(tmp[tmp.length-1]);\n\n\t\tedge.absolutePoints = pts;\n\t}\n};\n\n/**\n * Function: transformControlPoint\n *\n * Transforms the given control point to an absolute point.\n */\nmxGraphView.prototype.transformControlPoint = function(state, pt)\n{\n\tif (state != null && pt != null)\n\t{\n\t\tvar orig = state.origin;\n\t\t\n\t    return new mxPoint(this.scale * (pt.x + this.translate.x + orig.x),\n\t    \tthis.scale * (pt.y + this.translate.y + orig.y));\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: isLoopStyleEnabled\n * \n * Returns true if the given edge should be routed with <mxGraph.defaultLoopStyle>\n * or the <mxConstants.STYLE_LOOP> defined for the given edge. This implementation\n * returns true if the given edge is a loop and does not have connections constraints\n * associated.\n */\nmxGraphView.prototype.isLoopStyleEnabled = function(edge, points, source, target)\n{\n\tvar sc = this.graph.getConnectionConstraint(edge, source, true);\n\tvar tc = this.graph.getConnectionConstraint(edge, target, false);\n\t\n\tif ((points == null || points.length < 2) &&\n\t\t(!mxUtils.getValue(edge.style, mxConstants.STYLE_ORTHOGONAL_LOOP, false) ||\n\t\t((sc == null || sc.point == null) && (tc == null || tc.point == null))))\n\t{\n\t\treturn source != null && source == target;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getEdgeStyle\n * \n * Returns the edge style function to be used to render the given edge state.\n */\nmxGraphView.prototype.getEdgeStyle = function(edge, points, source, target)\n{\n\tvar edgeStyle = this.isLoopStyleEnabled(edge, points, source, target) ?\n\t\tmxUtils.getValue(edge.style, mxConstants.STYLE_LOOP, this.graph.defaultLoopStyle) :\n\t\t(!mxUtils.getValue(edge.style, mxConstants.STYLE_NOEDGESTYLE, false) ?\n\t\tedge.style[mxConstants.STYLE_EDGE] : null);\n\n\t// Converts string values to objects\n\tif (typeof(edgeStyle) == \"string\")\n\t{\n\t\tvar tmp = mxStyleRegistry.getValue(edgeStyle);\n\t\t\n\t\tif (tmp == null && this.isAllowEval())\n\t\t{\n \t\t\ttmp = mxUtils.eval(edgeStyle);\n\t\t}\n\t\t\n\t\tedgeStyle = tmp;\n\t}\n\t\n\tif (typeof(edgeStyle) == \"function\")\n\t{\n\t\treturn edgeStyle;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: updateFloatingTerminalPoints\n *\n * Updates the terminal points in the given state after the edge style was\n * computed for the edge.\n * \n * Parameters:\n * \n * state - <mxCellState> whose terminal points should be updated.\n * source - <mxCellState> that represents the source terminal.\n * target - <mxCellState> that represents the target terminal.\n */\nmxGraphView.prototype.updateFloatingTerminalPoints = function(state, source, target)\n{\n\tvar pts = state.absolutePoints;\n\tvar p0 = pts[0];\n\tvar pe = pts[pts.length - 1];\n\n\tif (pe == null && target != null)\n\t{\n\t\tthis.updateFloatingTerminalPoint(state, target, source, false);\n\t}\n\t\n\tif (p0 == null && source != null)\n\t{\n\t\tthis.updateFloatingTerminalPoint(state, source, target, true);\n\t}\n};\n\n/**\n * Function: updateFloatingTerminalPoint\n *\n * Updates the absolute terminal point in the given state for the given\n * start and end state, where start is the source if source is true.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be updated.\n * start - <mxCellState> for the terminal on \"this\" side of the edge.\n * end - <mxCellState> for the terminal on the other side of the edge.\n * source - Boolean indicating if start is the source terminal state.\n */\nmxGraphView.prototype.updateFloatingTerminalPoint = function(edge, start, end, source)\n{\n\tedge.setAbsoluteTerminalPoint(this.getFloatingTerminalPoint(edge, start, end, source), source);\n};\n\n/**\n * Function: getFloatingTerminalPoint\n * \n * Returns the floating terminal point for the given edge, start and end\n * state, where start is the source if source is true.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be returned.\n * start - <mxCellState> for the terminal on \"this\" side of the edge.\n * end - <mxCellState> for the terminal on the other side of the edge.\n * source - Boolean indicating if start is the source terminal state.\n */\nmxGraphView.prototype.getFloatingTerminalPoint = function(edge, start, end, source)\n{\n\tstart = this.getTerminalPort(edge, start, source);\n\tvar next = this.getNextPoint(edge, end, source);\n\t\n\tvar orth = this.graph.isOrthogonal(edge);\n\tvar alpha = mxUtils.toRadians(Number(start.style[mxConstants.STYLE_ROTATION] || '0'));\n\tvar center = new mxPoint(start.getCenterX(), start.getCenterY());\n\t\n\tif (alpha != 0)\n\t{\n\t\tvar cos = Math.cos(-alpha);\n\t\tvar sin = Math.sin(-alpha);\n\t\tnext = mxUtils.getRotatedPoint(next, cos, sin, center);\n\t}\n\t\n\tvar border = parseFloat(edge.style[mxConstants.STYLE_PERIMETER_SPACING] || 0);\n\tborder += parseFloat(edge.style[(source) ?\n\t\tmxConstants.STYLE_SOURCE_PERIMETER_SPACING :\n\t\tmxConstants.STYLE_TARGET_PERIMETER_SPACING] || 0);\n\tvar pt = this.getPerimeterPoint(start, next, alpha == 0 && orth, border);\n\n\tif (alpha != 0)\n\t{\n\t\tvar cos = Math.cos(alpha);\n\t\tvar sin = Math.sin(alpha);\n\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, center);\n\t}\n\n\treturn pt;\n};\n\n/**\n * Function: getTerminalPort\n * \n * Returns an <mxCellState> that represents the source or target terminal or\n * port for the given edge.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the edge.\n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean indicating if the given terminal is the source terminal.\n */\nmxGraphView.prototype.getTerminalPort = function(state, terminal, source)\n{\n\tvar key = (source) ? mxConstants.STYLE_SOURCE_PORT :\n\t\tmxConstants.STYLE_TARGET_PORT;\n\tvar id = mxUtils.getValue(state.style, key);\n\t\n\tif (id != null)\n\t{\n\t\tvar tmp = this.getState(this.graph.getModel().getCell(id));\n\t\t\n\t\t// Only uses ports where a cell state exists\n\t\tif (tmp != null)\n\t\t{\n\t\t\tterminal = tmp;\n\t\t}\n\t}\n\t\n\treturn terminal;\n};\n\n/**\n * Function: getPerimeterPoint\n *\n * Returns an <mxPoint> that defines the location of the intersection point between\n * the perimeter and the line between the center of the shape and the given point.\n * \n * Parameters:\n * \n * terminal - <mxCellState> for the source or target terminal.\n * next - <mxPoint> that lies outside of the given terminal.\n * orthogonal - Boolean that specifies if the orthogonal projection onto\n * the perimeter should be returned. If this is false then the intersection\n * of the perimeter and the line between the next and the center point is\n * returned.\n * border - Optional border between the perimeter and the shape.\n */\nmxGraphView.prototype.getPerimeterPoint = function(terminal, next, orthogonal, border)\n{\n\tvar point = null;\n\t\n\tif (terminal != null)\n\t{\n\t\tvar perimeter = this.getPerimeterFunction(terminal);\n\t\t\n\t\tif (perimeter != null && next != null)\n\t\t{\n\t\t\tvar bounds = this.getPerimeterBounds(terminal, border);\n\n\t\t\tif (bounds.width > 0 || bounds.height > 0)\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(next.x, next.y);\n\t\t\t\tvar flipH = false;\n\t\t\t\tvar flipV = false;\t\n\t\t\t\t\n\t\t\t\tif (this.graph.model.isVertex(terminal.cell))\n\t\t\t\t{\n\t\t\t\t\tflipH = mxUtils.getValue(terminal.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tflipV = mxUtils.getValue(terminal.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\n\t\t\t\t\t// Legacy support for stencilFlipH/V\n\t\t\t\t\tif (terminal.shape != null && terminal.shape.stencil != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tflipH = (mxUtils.getValue(terminal.style, 'stencilFlipH', 0) == 1) || flipH;\n\t\t\t\t\t\tflipV = (mxUtils.getValue(terminal.style, 'stencilFlipV', 0) == 1) || flipV;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (flipH)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpoint = perimeter(bounds, terminal, point, orthogonal);\n\n\t\t\t\tif (point != null)\n\t\t\t\t{\n\t\t\t\t\tif (flipH)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (point == null)\n\t\t{\n\t\t\tpoint = this.getPoint(terminal);\n\t\t}\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getRoutingCenterX\n * \n * Returns the x-coordinate of the center point for automatic routing.\n */\nmxGraphView.prototype.getRoutingCenterX = function (state)\n{\n\tvar f = (state.style != null) ? parseFloat(state.style\n\t\t[mxConstants.STYLE_ROUTING_CENTER_X]) || 0 : 0;\n\n\treturn state.getCenterX() + f * state.width;\n};\n\n/**\n * Function: getRoutingCenterY\n * \n * Returns the y-coordinate of the center point for automatic routing.\n */\nmxGraphView.prototype.getRoutingCenterY = function (state)\n{\n\tvar f = (state.style != null) ? parseFloat(state.style\n\t\t[mxConstants.STYLE_ROUTING_CENTER_Y]) || 0 : 0;\n\n\treturn state.getCenterY() + f * state.height;\n};\n\n/**\n * Function: getPerimeterBounds\n *\n * Returns the perimeter bounds for the given terminal, edge pair as an\n * <mxRectangle>.\n * \n * If you have a model where each terminal has a relative child that should\n * act as the graphical endpoint for a connection from/to the terminal, then\n * this method can be replaced as follows:\n * \n * (code)\n * var oldGetPerimeterBounds = mxGraphView.prototype.getPerimeterBounds;\n * mxGraphView.prototype.getPerimeterBounds = function(terminal, edge, isSource)\n * {\n *   var model = this.graph.getModel();\n *   var childCount = model.getChildCount(terminal.cell);\n * \n *   if (childCount > 0)\n *   {\n *     var child = model.getChildAt(terminal.cell, 0);\n *     var geo = model.getGeometry(child);\n *\n *     if (geo != null &&\n *         geo.relative)\n *     {\n *       var state = this.getState(child);\n *       \n *       if (state != null)\n *       {\n *         terminal = state;\n *       }\n *     }\n *   }\n *   \n *   return oldGetPerimeterBounds.apply(this, arguments);\n * };\n * (end)\n * \n * Parameters:\n * \n * terminal - <mxCellState> that represents the terminal.\n * border - Number that adds a border between the shape and the perimeter.\n */\nmxGraphView.prototype.getPerimeterBounds = function(terminal, border)\n{\n\tborder = (border != null) ? border : 0;\n\n\tif (terminal != null)\n\t{\n\t\tborder += parseFloat(terminal.style[mxConstants.STYLE_PERIMETER_SPACING] || 0);\n\t}\n\n\treturn terminal.getPerimeterBounds(border * this.scale);\n};\n\n/**\n * Function: getPerimeterFunction\n *\n * Returns the perimeter function for the given state.\n */\nmxGraphView.prototype.getPerimeterFunction = function(state)\n{\n\tvar perimeter = state.style[mxConstants.STYLE_PERIMETER];\n\n\t// Converts string values to objects\n\tif (typeof(perimeter) == \"string\")\n\t{\n\t\tvar tmp = mxStyleRegistry.getValue(perimeter);\n\t\t\n\t\tif (tmp == null && this.isAllowEval())\n\t\t{\n \t\t\ttmp = mxUtils.eval(perimeter);\n\t\t}\n\n\t\tperimeter = tmp;\n\t}\n\t\n\tif (typeof(perimeter) == \"function\")\n\t{\n\t\treturn perimeter;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getNextPoint\n *\n * Returns the nearest point in the list of absolute points or the center\n * of the opposite terminal.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n * opposite - <mxCellState> that represents the opposite terminal.\n * source - Boolean indicating if the next point for the source or target\n * should be returned.\n */\nmxGraphView.prototype.getNextPoint = function(edge, opposite, source)\n{\n\tvar pts = edge.absolutePoints;\n\tvar point = null;\n\t\n\tif (pts != null && pts.length >= 2)\n\t{\n\t\tvar count = pts.length;\n\t\tpoint = pts[(source) ? Math.min(1, count - 1) : Math.max(0, count - 2)];\n\t}\n\t\n\tif (point == null && opposite != null)\n\t{\n\t\tpoint = new mxPoint(opposite.getCenterX(), opposite.getCenterY());\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getVisibleTerminal\n *\n * Returns the nearest ancestor terminal that is visible. The edge appears\n * to be connected to this terminal on the display. The result of this method\n * is cached in <mxCellState.getVisibleTerminalState>.\n * \n * Parameters:\n * \n * edge - <mxCell> whose visible terminal should be returned.\n * source - Boolean that specifies if the source or target terminal\n * should be returned.\n */\nmxGraphView.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar model = this.graph.getModel();\n\tvar result = model.getTerminal(edge, source);\n\tvar best = result;\n\t\n\twhile (result != null && result != this.currentRoot)\n\t{\n\t\tif (!this.graph.isCellVisible(best) || this.isCellCollapsed(result))\n\t\t{\n\t\t\tbest = result;\n\t\t}\n\t\t\n\t\tresult = model.getParent(result);\n\t}\n\n\t// Checks if the result is valid for the current view state\n\tif (best != null && (!model.contains(best) ||\n\t\tmodel.getParent(best) == model.getRoot() ||\n\t\tbest == this.currentRoot))\n\t{\n\t\tbest = null;\n\t}\n\t\n\treturn best;\n};\n\n/**\n * Function: updateEdgeBounds\n *\n * Updates the given state using the bounding box of t\n * he absolute points.\n * Also updates <mxCellState.terminalDistance>, <mxCellState.length> and\n * <mxCellState.segments>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose bounds should be updated.\n */\nmxGraphView.prototype.updateEdgeBounds = function(state)\n{\n\tvar points = state.absolutePoints;\n\tvar p0 = points[0];\n\tvar pe = points[points.length - 1];\n\t\n\tif (p0.x != pe.x || p0.y != pe.y)\n\t{\n\t\tvar dx = pe.x - p0.x;\n\t\tvar dy = pe.y - p0.y;\n\t\tstate.terminalDistance = Math.sqrt(dx * dx + dy * dy);\n\t}\n\telse\n\t{\n\t\tstate.terminalDistance = 0;\n\t}\n\t\n\tvar length = 0;\n\tvar segments = [];\n\tvar pt = p0;\n\t\n\tif (pt != null)\n\t{\n\t\tvar minX = pt.x;\n\t\tvar minY = pt.y;\n\t\tvar maxX = minX;\n\t\tvar maxY = minY;\n\t\t\n\t\tfor (var i = 1; i < points.length; i++)\n\t\t{\n\t\t\tvar tmp = points[i];\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tvar dx = pt.x - tmp.x;\n\t\t\t\tvar dy = pt.y - tmp.y;\n\t\t\t\t\n\t\t\t\tvar segment = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tsegments.push(segment);\n\t\t\t\tlength += segment;\n\t\t\t\t\n\t\t\t\tpt = tmp;\n\t\t\t\t\n\t\t\t\tminX = Math.min(pt.x, minX);\n\t\t\t\tminY = Math.min(pt.y, minY);\n\t\t\t\tmaxX = Math.max(pt.x, maxX);\n\t\t\t\tmaxY = Math.max(pt.y, maxY);\n\t\t\t}\n\t\t}\n\t\t\n\t\tstate.length = length;\n\t\tstate.segments = segments;\n\t\t\n\t\tvar markerSize = 1; // TODO: include marker size\n\t\t\n\t\tstate.x = minX;\n\t\tstate.y = minY;\n\t\tstate.width = Math.max(markerSize, maxX - minX);\n\t\tstate.height = Math.max(markerSize, maxY - minY);\n\t}\n};\n\n/**\n * Function: getPoint\n *\n * Returns the absolute point on the edge for the given relative\n * <mxGeometry> as an <mxPoint>. The edge is represented by the given\n * <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the parent edge.\n * geometry - <mxGeometry> that represents the relative location.\n */\nmxGraphView.prototype.getPoint = function(state, geometry)\n{\n\tvar x = state.getCenterX();\n\tvar y = state.getCenterY();\n\t\n\tif (state.segments != null && (geometry == null || geometry.relative))\n\t{\n\t\tvar gx = (geometry != null) ? geometry.x / 2 : 0;\n\t\tvar pointCount = state.absolutePoints.length;\n\t\tvar dist = Math.round((gx + 0.5) * state.length);\n\t\tvar segment = state.segments[0];\n\t\tvar length = 0;\t\t\t\t\n\t\tvar index = 1;\n\n\t\twhile (dist >= Math.round(length + segment) && index < pointCount - 1)\n\t\t{\n\t\t\tlength += segment;\n\t\t\tsegment = state.segments[index++];\n\t\t}\n\n\t\tvar factor = (segment == 0) ? 0 : (dist - length) / segment;\n\t\tvar p0 = state.absolutePoints[index-1];\n\t\tvar pe = state.absolutePoints[index];\n\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tvar gy = 0;\n\t\t\tvar offsetX = 0;\n\t\t\tvar offsetY = 0;\n\n\t\t\tif (geometry != null)\n\t\t\t{\n\t\t\t\tgy = geometry.y;\n\t\t\t\tvar offset = geometry.offset;\n\t\t\t\t\n\t\t\t\tif (offset != null)\n\t\t\t\t{\n\t\t\t\t\toffsetX = offset.x;\n\t\t\t\t\toffsetY = offset.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar dx = pe.x - p0.x;\n\t\t\tvar dy = pe.y - p0.y;\n\t\t\tvar nx = (segment == 0) ? 0 : dy / segment;\n\t\t\tvar ny = (segment == 0) ? 0 : dx / segment;\n\t\t\t\n\t\t\tx = p0.x + dx * factor + (nx * gy + offsetX) * this.scale;\n\t\t\ty = p0.y + dy * factor - (ny * gy - offsetY) * this.scale;\n\t\t}\n\t}\n\telse if (geometry != null)\n\t{\n\t\tvar offset = geometry.offset;\n\t\t\n\t\tif (offset != null)\n\t\t{\n\t\t\tx += offset.x;\n\t\t\ty += offset.y;\n\t\t}\n\t}\n\t\n\treturn new mxPoint(x, y);\t\t\n};\n\n/**\n * Function: getRelativePoint\n *\n * Gets the relative point that describes the given, absolute label\n * position for the given edge state.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the parent edge.\n * x - Specifies the x-coordinate of the absolute label location.\n * y - Specifies the y-coordinate of the absolute label location.\n */\nmxGraphView.prototype.getRelativePoint = function(edgeState, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(edgeState.cell);\n\t\n\tif (geometry != null)\n\t{\n\t\tvar pointCount = edgeState.absolutePoints.length;\n\t\t\n\t\tif (geometry.relative && pointCount > 1)\n\t\t{\n\t\t\tvar totalLength = edgeState.length;\n\t\t\tvar segments = edgeState.segments;\n\n\t\t\t// Works which line segment the point of the label is closest to\n\t\t\tvar p0 = edgeState.absolutePoints[0];\n\t\t\tvar pe = edgeState.absolutePoints[1];\n\t\t\tvar minDist = mxUtils.ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\tvar index = 0;\n\t\t\tvar tmp = 0;\n\t\t\tvar length = 0;\n\t\t\t\n\t\t\tfor (var i = 2; i < pointCount; i++)\n\t\t\t{\n\t\t\t\ttmp += segments[i - 2];\n\t\t\t\tpe = edgeState.absolutePoints[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\t\tif (dist <= minDist)\n\t\t\t\t{\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tindex = i - 1;\n\t\t\t\t\tlength = tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tp0 = pe;\n\t\t\t}\n\t\t\t\n\t\t\tvar seg = segments[index];\n\t\t\tp0 = edgeState.absolutePoints[index];\n\t\t\tpe = edgeState.absolutePoints[index + 1];\n\t\t\t\n\t\t\tvar x2 = p0.x;\n\t\t\tvar y2 = p0.y;\n\t\t\t\n\t\t\tvar x1 = pe.x;\n\t\t\tvar y1 = pe.y;\n\t\t\t\n\t\t\tvar px = x;\n\t\t\tvar py = y;\n\t\t\t\n\t\t\tvar xSegment = x2 - x1;\n\t\t\tvar ySegment = y2 - y1;\n\t\t\t\n\t\t\tpx -= x1;\n\t\t\tpy -= y1;\n\t\t\tvar projlenSq = 0;\n\t\t\t\n\t\t\tpx = xSegment - px;\n\t\t\tpy = ySegment - py;\n\t\t\tvar dotprod = px * xSegment + py * ySegment;\n\n\t\t\tif (dotprod <= 0.0)\n\t\t\t{\n\t\t\t\tprojlenSq = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprojlenSq = dotprod * dotprod\n\t\t\t\t\t\t/ (xSegment * xSegment + ySegment * ySegment);\n\t\t\t}\n\n\t\t\tvar projlen = Math.sqrt(projlenSq);\n\n\t\t\tif (projlen > seg)\n\t\t\t{\n\t\t\t\tprojlen = seg;\n\t\t\t}\n\n\t\t\tvar yDistance = Math.sqrt(mxUtils.ptSegDistSq(p0.x, p0.y, pe\n\t\t\t\t\t.x, pe.y, x, y));\n\t\t\tvar direction = mxUtils.relativeCcw(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\tif (direction == -1)\n\t\t\t{\n\t\t\t\tyDistance = -yDistance;\n\t\t\t}\n\n\t\t\t// Constructs the relative point for the label\n\t\t\treturn new mxPoint(((totalLength / 2 - length - projlen) / totalLength) * -2,\n\t\t\t\t\t\tyDistance / this.scale);\n\t\t}\n\t}\n\t\n\treturn new mxPoint();\n};\n\n/**\n * Function: updateEdgeLabelOffset\n *\n * Updates <mxCellState.absoluteOffset> for the given state. The absolute\n * offset is normally used for the position of the edge label. Is is\n * calculated from the geometry as an absolute offset from the center\n * between the two endpoints if the geometry is absolute, or as the\n * relative distance between the center along the line and the absolute\n * orthogonal distance if the geometry is relative.\n * \n * Parameters:\n * \n * state - <mxCellState> whose absolute offset should be updated.\n */\nmxGraphView.prototype.updateEdgeLabelOffset = function(state)\n{\n\tvar points = state.absolutePoints;\n\t\n\tstate.absoluteOffset.x = state.getCenterX();\n\tstate.absoluteOffset.y = state.getCenterY();\n\n\tif (points != null && points.length > 0 && state.segments != null)\n\t{\n\t\tvar geometry = this.graph.getCellGeometry(state.cell);\n\t\t\n\t\tif (geometry.relative)\n\t\t{\n\t\t\tvar offset = this.getPoint(state, geometry);\n\t\t\t\n\t\t\tif (offset != null)\n\t\t\t{\n\t\t\t\tstate.absoluteOffset = offset;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar p0 = points[0];\n\t\t\tvar pe = points[points.length - 1];\n\t\t\t\n\t\t\tif (p0 != null && pe != null)\n\t\t\t{\n\t\t\t\tvar dx = pe.x - p0.x;\n\t\t\t\tvar dy = pe.y - p0.y;\n\t\t\t\tvar x0 = 0;\n\t\t\t\tvar y0 = 0;\n\n\t\t\t\tvar off = geometry.offset;\n\t\t\t\t\n\t\t\t\tif (off != null)\n\t\t\t\t{\n\t\t\t\t\tx0 = off.x;\n\t\t\t\t\ty0 = off.y;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar x = p0.x + dx / 2 + x0 * this.scale;\n\t\t\t\tvar y = p0.y + dy / 2 + y0 * this.scale;\n\t\t\t\t\n\t\t\t\tstate.absoluteOffset.x = x;\n\t\t\t\tstate.absoluteOffset.y = y;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getState\n *\n * Returns the <mxCellState> for the given cell. If create is true, then\n * the state is created if it does not yet exist.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the <mxCellState> should be returned.\n * create - Optional boolean indicating if a new state should be created\n * if it does not yet exist. Default is false.\n */\nmxGraphView.prototype.getState = function(cell, create)\n{\n\tcreate = create || false;\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.states.get(cell);\n\t\t\n\t\tif (create && (state == null || this.updateStyle) && this.graph.isCellVisible(cell))\n\t\t{\n\t\t\tif (state == null)\n\t\t\t{\n\t\t\t\tstate = this.createState(cell);\n\t\t\t\tthis.states.put(cell, state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.style = this.graph.getCellStyle(cell);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn state;\n};\n\n/**\n * Function: isRendering\n *\n * Returns <rendering>.\n */\nmxGraphView.prototype.isRendering = function()\n{\n\treturn this.rendering;\n};\n\n/**\n * Function: setRendering\n *\n * Sets <rendering>.\n */\nmxGraphView.prototype.setRendering = function(value)\n{\n\tthis.rendering = value;\n};\n\n/**\n * Function: isAllowEval\n *\n * Returns <allowEval>.\n */\nmxGraphView.prototype.isAllowEval = function()\n{\n\treturn this.allowEval;\n};\n\n/**\n * Function: setAllowEval\n *\n * Sets <allowEval>.\n */\nmxGraphView.prototype.setAllowEval = function(value)\n{\n\tthis.allowEval = value;\n};\n\n/**\n * Function: getStates\n *\n * Returns <states>.\n */\nmxGraphView.prototype.getStates = function()\n{\n\treturn this.states;\n};\n\n/**\n * Function: setStates\n *\n * Sets <states>.\n */\nmxGraphView.prototype.setStates = function(value)\n{\n\tthis.states = value;\n};\n\n/**\n * Function: getCellStates\n *\n * Returns the <mxCellStates> for the given array of <mxCells>. The array\n * contains all states that are not null, that is, the returned array may\n * have less elements than the given array. If no argument is given, then\n * this returns <states>.\n */\nmxGraphView.prototype.getCellStates = function(cells)\n{\n\tif (cells == null)\n\t{\n\t\treturn this.states;\n\t}\n\telse\n\t{\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar state = this.getState(cells[i]);\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\tresult.push(state);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: removeState\n *\n * Removes and returns the <mxCellState> for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the <mxCellState> should be removed.\n */\nmxGraphView.prototype.removeState = function(cell)\n{\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.states.remove(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.graph.cellRenderer.destroy(state);\n\t\t\tstate.invalid = true;\n\t\t\tstate.destroy();\n\t\t}\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: createState\n *\n * Creates and returns an <mxCellState> for the given cell and initializes\n * it using <mxCellRenderer.initialize>.\n * \n * Parameters:\n * \n * cell - <mxCell> for which a new <mxCellState> should be created.\n */\nmxGraphView.prototype.createState = function(cell)\n{\n\treturn new mxCellState(this, cell, this.graph.getCellStyle(cell));\n};\n\n/**\n * Function: getCanvas\n *\n * Returns the DOM node that contains the background-, draw- and\n * overlay- and decoratorpanes.\n */\nmxGraphView.prototype.getCanvas = function()\n{\n\treturn this.canvas;\n};\n\n/**\n * Function: getBackgroundPane\n *\n * Returns the DOM node that represents the background layer.\n */\nmxGraphView.prototype.getBackgroundPane = function()\n{\n\treturn this.backgroundPane;\n};\n\n/**\n * Function: getDrawPane\n *\n * Returns the DOM node that represents the main drawing layer.\n */\nmxGraphView.prototype.getDrawPane = function()\n{\n\treturn this.drawPane;\n};\n\n/**\n * Function: getOverlayPane\n *\n * Returns the DOM node that represents the layer above the drawing layer.\n */\nmxGraphView.prototype.getOverlayPane = function()\n{\n\treturn this.overlayPane;\n};\n\n/**\n * Function: getDecoratorPane\n *\n * Returns the DOM node that represents the topmost drawing layer.\n */\nmxGraphView.prototype.getDecoratorPane = function()\n{\n\treturn this.decoratorPane;\n};\n\n/**\n * Function: isContainerEvent\n * \n * Returns true if the event origin is one of the drawing panes or\n * containers of the view.\n */\nmxGraphView.prototype.isContainerEvent = function(evt)\n{\n\tvar source = mxEvent.getSource(evt);\n\n\treturn (source == this.graph.container ||\n\t\tsource.parentNode == this.backgroundPane ||\n\t\t(source.parentNode != null &&\n\t\tsource.parentNode.parentNode == this.backgroundPane) ||\n\t\tsource == this.canvas.parentNode ||\n\t\tsource == this.canvas ||\n\t\tsource == this.backgroundPane ||\n\t\tsource == this.drawPane ||\n\t\tsource == this.overlayPane ||\n\t\tsource == this.decoratorPane);\n};\n\n/**\n * Function: isScrollEvent\n * \n * Returns true if the event origin is one of the scrollbars of the\n * container in IE. Such events are ignored.\n */\n mxGraphView.prototype.isScrollEvent = function(evt)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar pt = new mxPoint(evt.clientX - offset.x, evt.clientY - offset.y);\n\n\tvar outWidth = this.graph.container.offsetWidth;\n\tvar inWidth = this.graph.container.clientWidth;\n\n\tif (outWidth > inWidth && pt.x > inWidth + 2 && pt.x <= outWidth)\n\t{\n\t\treturn true;\n\t}\n\n\tvar outHeight = this.graph.container.offsetHeight;\n\tvar inHeight = this.graph.container.clientHeight;\n\t\n\tif (outHeight > inHeight && pt.y > inHeight + 2 && pt.y <= outHeight)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: init\n *\n * Initializes the graph event dispatch loop for the specified container\n * and invokes <create> to create the required DOM nodes for the display.\n */\nmxGraphView.prototype.init = function()\n{\n\tthis.installListeners();\n\t\n\t// Creates the DOM nodes for the respective display dialect\n\tvar graph = this.graph;\n\t\n\tif (graph.dialect == mxConstants.DIALECT_SVG)\n\t{\n\t\tthis.createSvg();\n\t}\n\telse if (graph.dialect == mxConstants.DIALECT_VML)\n\t{\n\t\tthis.createVml();\n\t}\n\telse\n\t{\n\t\tthis.createHtml();\n\t}\n};\n\n/**\n * Function: installListeners\n *\n * Installs the required listeners in the container.\n */\nmxGraphView.prototype.installListeners = function()\n{\n\tvar graph = this.graph;\n\tvar container = graph.container;\n\t\n\tif (container != null)\n\t{\n\t\t// Support for touch device gestures (eg. pinch to zoom)\n\t\t// Double-tap handling is implemented in mxGraph.fireMouseEvent\n\t\tif (mxClient.IS_TOUCH)\n\t\t{\n\t\t\tmxEvent.addListener(container, 'gesturestart', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\t\t\t\n\t\t\tmxEvent.addListener(container, 'gesturechange', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\n\t\t\tmxEvent.addListener(container, 'gestureend', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\t\t}\n\t\t\n\t\t// Adds basic listeners for graph event dispatching\n\t\tmxEvent.addGestureListeners(container, mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\t// Condition to avoid scrollbar events starting a rubberband selection\n\t\t\tif (this.isContainerEvent(evt) && ((!mxClient.IS_IE && !mxClient.IS_IE11 && !mxClient.IS_GC &&\n\t\t\t\t!mxClient.IS_OP && !mxClient.IS_SF) || !this.isScrollEvent(evt)))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}));\n\t\t\n\t\t// Adds listener for double click handling on background, this does always\n\t\t// use native event handler, we assume that the DOM of the background\n\t\t// does not change during the double click\n\t\tmxEvent.addListener(container, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.dblClick(evt);\n\t\t\t}\n\t\t}));\n\n\t\t// Workaround for touch events which started on some DOM node\n\t\t// on top of the container, in which case the cells under the\n\t\t// mouse for the move and up events are not detected.\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\tvar state = null;\n\t\t\t\n\t\t\t// Workaround for touch events which started on some DOM node\n\t\t\t// on top of the container, in which case the cells under the\n\t\t\t// mouse for the move and up events are not detected.\n\t\t\tif (mxClient.IS_TOUCH)\n\t\t\t{\n\t\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\t\n\t\t\t\t// Dispatches the drop event to the graph which\n\t\t\t\t// consumes and executes the source function\n\t\t\t\tvar pt = mxUtils.convertPoint(container, x, y);\n\t\t\t\tstate = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\treturn state;\n\t\t};\n\t\t\n\t\t// Adds basic listeners for graph event dispatching outside of the\n\t\t// container and finishing the handling of a single gesture\n\t\t// Implemented via graph event dispatch loop to avoid duplicate events\n\t\t// in Firefox and Chrome\n\t\tgraph.addMouseListener(\n\t\t{\n\t\t\tmouseDown: function(sender, me)\n\t\t\t{\n\t\t\t\tgraph.popupMenuHandler.hideMenu();\n\t\t\t},\n\t\t\tmouseMove: function() { },\n\t\t\tmouseUp: function() { }\n\t\t});\n\t\t\n\t\tthis.moveHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\t// Hides the tooltip if mouse is outside container\n\t\t\tif (graph.tooltipHandler != null && graph.tooltipHandler.isHideOnHover())\n\t\t\t{\n\t\t\t\tgraph.tooltipHandler.hide();\n\t\t\t}\n\n\t\t\tif (this.captureDocumentGesture && graph.isMouseDown && graph.container != null &&\n\t\t\t\t!this.isContainerEvent(evt) && graph.container.style.display != 'none' &&\n\t\t\t\tgraph.container.style.visibility != 'hidden' && !mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.endHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.captureDocumentGesture && graph.isMouseDown && graph.container != null &&\n\t\t\t\t!this.isContainerEvent(evt) && graph.container.style.display != 'none' &&\n\t\t\t\tgraph.container.style.visibility != 'hidden')\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t}\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(document, null, this.moveHandler, this.endHandler);\n\t}\n};\n\n/**\n * Function: create\n *\n * Creates the DOM nodes for the HTML display.\n */\nmxGraphView.prototype.createHtml = function()\n{\n\tvar container = this.graph.container;\n\t\n\tif (container != null)\n\t{\n\t\tthis.canvas = this.createHtmlPane('100%', '100%');\n\t\tthis.canvas.style.overflow = 'hidden';\n\t\n\t\t// Uses minimal size for inner DIVs on Canvas. This is required\n\t\t// for correct event processing in IE. If we have an overlapping\n\t\t// DIV then the events on the cells are only fired for labels.\n\t\tthis.backgroundPane = this.createHtmlPane('1px', '1px');\n\t\tthis.drawPane = this.createHtmlPane('1px', '1px');\n\t\tthis.overlayPane = this.createHtmlPane('1px', '1px');\n\t\tthis.decoratorPane = this.createHtmlPane('1px', '1px');\n\t\t\n\t\tthis.canvas.appendChild(this.backgroundPane);\n\t\tthis.canvas.appendChild(this.drawPane);\n\t\tthis.canvas.appendChild(this.overlayPane);\n\t\tthis.canvas.appendChild(this.decoratorPane);\n\n\t\tcontainer.appendChild(this.canvas);\n\t\tthis.updateContainerStyle(container);\n\t\t\n\t\t// Implements minWidth/minHeight in quirks mode\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tvar onResize = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tvar bounds = this.getGraphBounds();\n\t\t\t\tvar width = bounds.x + bounds.width + this.graph.border;\n\t\t\t\tvar height = bounds.y + bounds.height + this.graph.border;\n\t\t\t\t\n\t\t\t\tthis.updateHtmlCanvasSize(width, height);\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addListener(window, 'resize', onResize);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateHtmlCanvasSize\n * \n * Updates the size of the HTML canvas.\n */\nmxGraphView.prototype.updateHtmlCanvasSize = function(width, height)\n{\n\tif (this.graph.container != null)\n\t{\n\t\tvar ow = this.graph.container.offsetWidth;\n\t\tvar oh = this.graph.container.offsetHeight;\n\n\t\tif (ow < width)\n\t\t{\n\t\t\tthis.canvas.style.width = width + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.canvas.style.width = '100%';\n\t\t}\n\n\t\tif (oh < height)\n\t\t{\n\t\t\tthis.canvas.style.height = height + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.canvas.style.height = '100%';\n\t\t}\n\t}\n};\n\n/**\n * Function: createHtmlPane\n * \n * Creates and returns a drawing pane in HTML (DIV).\n */\nmxGraphView.prototype.createHtmlPane = function(width, height)\n{\n\tvar pane = document.createElement('DIV');\n\t\n\tif (width != null && height != null)\n\t{\n\t\tpane.style.position = 'absolute';\n\t\tpane.style.left = '0px';\n\t\tpane.style.top = '0px';\n\n\t\tpane.style.width = width;\n\t\tpane.style.height = height;\n\t}\n\telse\n\t{\n\t\tpane.style.position = 'relative';\n\t}\n\t\n\treturn pane;\n};\n\n/**\n * Function: create\n *\n * Creates the DOM nodes for the VML display.\n */\nmxGraphView.prototype.createVml = function()\n{\n\tvar container = this.graph.container;\n\n\tif (container != null)\n\t{\n\t\tvar width = container.offsetWidth;\n\t\tvar height = container.offsetHeight;\n\t\tthis.canvas = this.createVmlPane(width, height);\n\t\tthis.canvas.style.overflow = 'hidden';\n\t\t\n\t\tthis.backgroundPane = this.createVmlPane(width, height);\n\t\tthis.drawPane = this.createVmlPane(width, height);\n\t\tthis.overlayPane = this.createVmlPane(width, height);\n\t\tthis.decoratorPane = this.createVmlPane(width, height);\n\t\t\n\t\tthis.canvas.appendChild(this.backgroundPane);\n\t\tthis.canvas.appendChild(this.drawPane);\n\t\tthis.canvas.appendChild(this.overlayPane);\n\t\tthis.canvas.appendChild(this.decoratorPane);\n\t\t\n\t\tcontainer.appendChild(this.canvas);\n\t}\n};\n\n/**\n * Function: createVmlPane\n * \n * Creates a drawing pane in VML (group).\n */\nmxGraphView.prototype.createVmlPane = function(width, height)\n{\n\tvar pane = document.createElement(mxClient.VML_PREFIX + ':group');\n\t\n\t// At this point the width and height are potentially\n\t// uninitialized. That's OK.\n\tpane.style.position = 'absolute';\n\tpane.style.left = '0px';\n\tpane.style.top = '0px';\n\n\tpane.style.width = width + 'px';\n\tpane.style.height = height + 'px';\n\n\tpane.setAttribute('coordsize', width + ',' + height);\n\tpane.setAttribute('coordorigin', '0,0');\n\t\n\treturn pane;\n};\n\n/**\n * Function: create\n *\n * Creates and returns the DOM nodes for the SVG display.\n */\nmxGraphView.prototype.createSvg = function()\n{\n\tvar container = this.graph.container;\n\tthis.canvas = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\n\t// For background image\n\tthis.backgroundPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.backgroundPane);\n\n\t// Adds two layers (background is early feature)\n\tthis.drawPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.drawPane);\n\n\tthis.overlayPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.overlayPane);\n\t\n\tthis.decoratorPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.decoratorPane);\n\t\n\tvar root = document.createElementNS(mxConstants.NS_SVG, 'svg');\n\troot.style.left = '0px';\n\troot.style.top = '0px';\n\troot.style.width = '100%';\n\troot.style.height = '100%';\n\t\n\t// NOTE: In standards mode, the SVG must have block layout\n\t// in order for the container DIV to not show scrollbars.\n\troot.style.display = 'block';\n\troot.appendChild(this.canvas);\n\t\n\t// Workaround for scrollbars in IE11 and below\n\tif (mxClient.IS_IE || mxClient.IS_IE11)\n\t{\n\t\troot.style.overflow = 'hidden';\n\t}\n\n\tif (container != null)\n\t{\n\t\tcontainer.appendChild(root);\n\t\tthis.updateContainerStyle(container);\n\t}\n};\n\n/**\n * Function: updateContainerStyle\n * \n * Updates the style of the container after installing the SVG DOM elements.\n */\nmxGraphView.prototype.updateContainerStyle = function(container)\n{\n\t// Workaround for offset of container\n\tvar style = mxUtils.getCurrentStyle(container);\n\t\n\tif (style != null && style.position == 'static')\n\t{\n\t\tcontainer.style.position = 'relative';\n\t}\n\t\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tcontainer.style.touchAction = 'none';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the view and all its resources.\n */\nmxGraphView.prototype.destroy = function()\n{\n\tvar root = (this.canvas != null) ? this.canvas.ownerSVGElement : null;\n\t\n\tif (root == null)\n\t{\n\t\troot = this.canvas;\n\t}\n\t\n\tif (root != null && root.parentNode != null)\n\t{\n\t\tthis.clear(this.currentRoot, true);\n\t\tmxEvent.removeGestureListeners(document, null, this.moveHandler, this.endHandler);\n\t\tmxEvent.release(this.graph.container);\n\t\troot.parentNode.removeChild(root);\n\t\t\n\t\tthis.moveHandler = null;\n\t\tthis.endHandler = null;\n\t\tthis.canvas = null;\n\t\tthis.backgroundPane = null;\n\t\tthis.drawPane = null;\n\t\tthis.overlayPane = null;\n\t\tthis.decoratorPane = null;\n\t}\n};\n\n/**\n * Class: mxCurrentRootChange\n *\n * Action to change the current root in a view.\n *\n * Constructor: mxCurrentRootChange\n *\n * Constructs a change of the current root in the given view.\n */\nfunction mxCurrentRootChange(view, root)\n{\n\tthis.view = view;\n\tthis.root = root;\n\tthis.previous = root;\n\tthis.isUp = root == null;\n\t\n\tif (!this.isUp)\n\t{\n\t\tvar tmp = this.view.currentRoot;\n\t\tvar model = this.view.graph.getModel();\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp == root)\n\t\t\t{\n\t\t\t\tthis.isUp = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\ttmp = model.getParent(tmp);\n\t\t}\n\t}\n};\n\n/**\n * Function: execute\n *\n * Changes the current root of the view.\n */\nmxCurrentRootChange.prototype.execute = function()\n{\n\tvar tmp = this.view.currentRoot;\n\tthis.view.currentRoot = this.previous;\n\tthis.previous = tmp;\n\n\tvar translate = this.view.graph.getTranslateForRoot(this.view.currentRoot);\n\t\n\tif (translate != null)\n\t{\n\t\tthis.view.translate = new mxPoint(-translate.x, -translate.y);\n\t}\n\n\tif (this.isUp)\n\t{\n\t\tthis.view.clear(this.view.currentRoot, true);\n\t\tthis.view.validate();\n\t}\n\telse\n\t{\n\t\tthis.view.refresh();\n\t}\n\t\n\tvar name = (this.isUp) ? mxEvent.UP : mxEvent.DOWN;\n\tthis.view.fireEvent(new mxEventObject(name,\n\t\t'root', this.view.currentRoot, 'previous', this.previous));\n\tthis.isUp = !this.isUp;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraph\n *\n * Extends <mxEventSource> to implement a graph component for\n * the browser. This is the main class of the package. To activate\n * panning and connections use <setPanning> and <setConnectable>.\n * For rubberband selection you must create a new instance of\n * <mxRubberband>. The following listeners are added to\n * <mouseListeners> by default:\n * \n * - <tooltipHandler>: <mxTooltipHandler> that displays tooltips\n * - <panningHandler>: <mxPanningHandler> for panning and popup menus\n * - <connectionHandler>: <mxConnectionHandler> for creating connections\n * - <graphHandler>: <mxGraphHandler> for moving and cloning cells\n * \n * These listeners will be called in the above order if they are enabled.\n *\n * Background Images:\n * \n * To display a background image, set the image, image width and\n * image height using <setBackgroundImage>. If one of the\n * above values has changed then the <view>'s <mxGraphView.validate>\n * should be invoked.\n * \n * Cell Images:\n * \n * To use images in cells, a shape must be specified in the default\n * vertex style (or any named style). Possible shapes are\n * <mxConstants.SHAPE_IMAGE> and <mxConstants.SHAPE_LABEL>.\n * The code to change the shape used in the default vertex style,\n * the following code is used:\n * \n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_IMAGE;\n * (end)\n * \n * For the default vertex style, the image to be displayed can be\n * specified in a cell's style using the <mxConstants.STYLE_IMAGE>\n * key and the image URL as a value, for example:\n * \n * (code)\n * image=http://www.example.com/image.gif\n * (end)\n * \n * For a named style, the the stylename must be the first element\n * of the cell style:\n * \n * (code)\n * stylename;image=http://www.example.com/image.gif\n * (end)\n * \n * A cell style can have any number of key=value pairs added, divided\n * by a semicolon as follows:\n * \n * (code)\n * [stylename;|key=value;]\n * (end)\n *\n * Labels:\n * \n * The cell labels are defined by <getLabel> which uses <convertValueToString>\n * if <labelsVisible> is true. If a label must be rendered as HTML markup, then\n * <isHtmlLabel> should return true for the respective cell. If all labels\n * contain HTML markup, <htmlLabels> can be set to true. NOTE: Enabling HTML\n * labels carries a possible security risk (see the section on security in\n * the manual).\n * \n * If wrapping is needed for a label, then <isHtmlLabel> and <isWrapping> must\n * return true for the cell whose label should be wrapped. See <isWrapping> for\n * an example.\n * \n * If clipping is needed to keep the rendering of a HTML label inside the\n * bounds of its vertex, then <isClipping> should return true for the\n * respective cell.\n * \n * By default, edge labels are movable and vertex labels are fixed. This can be\n * changed by setting <edgeLabelsMovable> and <vertexLabelsMovable>, or by\n * overriding <isLabelMovable>.\n *\n * In-place Editing:\n * \n * In-place editing is started with a doubleclick or by typing F2.\n * Programmatically, <edit> is used to check if the cell is editable\n * (<isCellEditable>) and call <startEditingAtCell>, which invokes\n * <mxCellEditor.startEditing>. The editor uses the value returned\n * by <getEditingValue> as the editing value.\n * \n * After in-place editing, <labelChanged> is called, which invokes\n * <mxGraphModel.setValue>, which in turn calls\n * <mxGraphModel.valueForCellChanged> via <mxValueChange>.\n * \n * The event that triggers in-place editing is passed through to the\n * <cellEditor>, which may take special actions depending on the type of the\n * event or mouse location, and is also passed to <getEditingValue>. The event\n * is then passed back to the event processing functions which can perform\n * specific actions based on the trigger event.\n * \n * Tooltips:\n * \n * Tooltips are implemented by <getTooltip>, which calls <getTooltipForCell>\n * if a cell is under the mousepointer. The default implementation checks if\n * the cell has a getTooltip function and calls it if it exists. Hence, in order\n * to provide custom tooltips, the cell must provide a getTooltip function, or \n * one of the two above functions must be overridden.\n * \n * Typically, for custom cell tooltips, the latter function is overridden as\n * follows:\n * \n * (code)\n * graph.getTooltipForCell = function(cell)\n * {\n *   var label = this.convertValueToString(cell);\n *   return 'Tooltip for '+label;\n * }\n * (end)\n * \n * When using a config file, the function is overridden in the mxGraph section\n * using the following entry:\n * \n * (code)\n * <add as=\"getTooltipForCell\"><![CDATA[\n *   function(cell)\n *   {\n *     var label = this.convertValueToString(cell);\n *     return 'Tooltip for '+label;\n *   }\n * ]]></add>\n * (end)\n * \n * \"this\" refers to the graph in the implementation, so for example to check if \n * a cell is an edge, you use this.getModel().isEdge(cell)\n *\n * For replacing the default implementation of <getTooltipForCell> (rather than \n * replacing the function on a specific instance), the following code should be \n * used after loading the JavaScript files, but before creating a new mxGraph \n * instance using <mxGraph>:\n * \n * (code)\n * mxGraph.prototype.getTooltipForCell = function(cell)\n * {\n *   var label = this.convertValueToString(cell);\n *   return 'Tooltip for '+label;\n * }\n * (end)\n * \n * Shapes & Styles:\n * \n * The implementation of new shapes is demonstrated in the examples. We'll assume\n * that we have implemented a custom shape with the name BoxShape which we want\n * to use for drawing vertices. To use this shape, it must first be registered in\n * the cell renderer as follows:\n * \n * (code)\n * mxCellRenderer.registerShape('box', BoxShape);\n * (end)\n * \n * The code registers the BoxShape constructor under the name box in the cell\n * renderer of the graph. The shape can now be referenced using the shape-key in\n * a style definition. (The cell renderer contains a set of additional shapes,\n * namely one for each constant with a SHAPE-prefix in <mxConstants>.)\n *\n * Styles are a collection of key, value pairs and a stylesheet is a collection\n * of named styles. The names are referenced by the cellstyle, which is stored\n * in <mxCell.style> with the following format: [stylename;|key=value;]. The\n * string is resolved to a collection of key, value pairs, where the keys are\n * overridden with the values in the string.\n *\n * When introducing a new shape, the name under which the shape is registered\n * must be used in the stylesheet. There are three ways of doing this:\n * \n *   - By changing the default style, so that all vertices will use the new\n * \t\tshape\n *   - By defining a new style, so that only vertices with the respective\n * \t\tcellstyle will use the new shape\n *   - By using shape=box in the cellstyle's optional list of key, value pairs\n * \t\tto be overridden\n *\n * In the first case, the code to fetch and modify the default style for\n * vertices is as follows:\n * \n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = 'box';\n * (end)\n * \n * The code takes the default vertex style, which is used for all vertices that\n * do not have a specific cellstyle, and modifies the value for the shape-key\n * in-place to use the new BoxShape for drawing vertices. This is done by\n * assigning the box value in the second line, which refers to the name of the\n * BoxShape in the cell renderer.\n * \n * In the second case, a collection of key, value pairs is created and then\n * added to the stylesheet under a new name. In order to distinguish the\n * shapename and the stylename we'll use boxstyle for the stylename:\n * \n * (code)\n * var style = new Object();\n * style[mxConstants.STYLE_SHAPE] = 'box';\n * style[mxConstants.STYLE_STROKECOLOR] = '#000000';\n * style[mxConstants.STYLE_FONTCOLOR] = '#000000';\n * graph.getStylesheet().putCellStyle('boxstyle', style);\n * (end)\n * \n * The code adds a new style with the name boxstyle to the stylesheet. To use\n * this style with a cell, it must be referenced from the cellstyle as follows:\n * \n * (code)\n * var vertex = graph.insertVertex(parent, null, 'Hello, World!', 20, 20, 80, 20,\n * \t\t\t\t'boxstyle');\n * (end)\n * \n * To summarize, each new shape must be registered in the <mxCellRenderer> with\n * a unique name. That name is then used as the value of the shape-key in a\n * default or custom style. If there are multiple custom shapes, then there\n * should be a separate style for each shape.\n * \n * Inheriting Styles:\n * \n * For fill-, stroke-, gradient- and indicatorColors special keywords can be\n * used. The inherit keyword for one of these colors will inherit the color\n * for the same key from the parent cell. The swimlane keyword does the same,\n * but inherits from the nearest swimlane in the ancestor hierarchy. Finally,\n * the indicated keyword will use the color of the indicator as the color for\n * the given key.\n * \n * Scrollbars:\n * \n * The <containers> overflow CSS property defines if scrollbars are used to\n * display the graph. For values of 'auto' or 'scroll', the scrollbars will\n * be shown. Note that the <resizeContainer> flag is normally not used\n * together with scrollbars, as it will resize the container to match the\n * size of the graph after each change.\n * \n * Multiplicities and Validation:\n * \n * To control the possible connections in mxGraph, <getEdgeValidationError> is\n * used. The default implementation of the function uses <multiplicities>,\n * which is an array of <mxMultiplicity>. Using this class allows to establish\n * simple multiplicities, which are enforced by the graph.\n * \n * The <mxMultiplicity> uses <mxCell.is> to determine for which terminals it\n * applies. The default implementation of <mxCell.is> works with DOM nodes (XML\n * nodes) and checks if the given type parameter matches the nodeName of the\n * node (case insensitive). Optionally, an attributename and value can be\n * specified which are also checked.\n * \n * <getEdgeValidationError> is called whenever the connectivity of an edge\n * changes. It returns an empty string or an error message if the edge is\n * invalid or null if the edge is valid. If the returned string is not empty\n * then it is displayed as an error message.\n * \n * <mxMultiplicity> allows to specify the multiplicity between a terminal and\n * its possible neighbors. For example, if any rectangle may only be connected\n * to, say, a maximum of two circles you can add the following rule to\n * <multiplicities>:\n * \n * (code)\n * graph.multiplicities.push(new mxMultiplicity(\n *   true, 'rectangle', null, null, 0, 2, ['circle'],\n *   'Only 2 targets allowed',\n *   'Only shape targets allowed'));\n * (end)\n * \n * This will display the first error message whenever a rectangle is connected\n * to more than two circles and the second error message if a rectangle is\n * connected to anything but a circle.\n * \n * For certain multiplicities, such as a minimum of 1 connection, which cannot\n * be enforced at cell creation time (unless the cell is created together with\n * the connection), mxGraph offers <validate> which checks all multiplicities\n * for all cells and displays the respective error messages in an overlay icon\n * on the cells.\n * \n * If a cell is collapsed and contains validation errors, a respective warning\n * icon is attached to the collapsed cell.\n * \n * Auto-Layout:\n * \n * For automatic layout, the <getLayout> hook is provided in <mxLayoutManager>.\n * It can be overridden to return a layout algorithm for the children of a\n * given cell.\n * \n * Unconnected edges:\n * \n * The default values for all switches are designed to meet the requirements of\n * general diagram drawing applications. A very typical set of settings to\n * avoid edges that are not connected is the following:\n * \n * (code)\n * graph.setAllowDanglingEdges(false);\n * graph.setDisconnectOnMove(false);\n * (end)\n * \n * Setting the <cloneInvalidEdges> switch to true is optional. This switch\n * controls if edges are inserted after a copy, paste or clone-drag if they are\n * invalid. For example, edges are invalid if copied or control-dragged without \n * having selected the corresponding terminals and allowDanglingEdges is\n * false, in which case the edges will not be cloned if the switch is false.\n * \n * Output:\n * \n * To produce an XML representation for a diagram, the following code can be\n * used.\n * \n * (code)\n * var enc = new mxCodec(mxUtils.createXmlDocument());\n * var node = enc.encode(graph.getModel());\n * (end)\n * \n * This will produce an XML node than can be handled using the DOM API or\n * turned into a string representation using the following code:\n * \n * (code)\n * var xml = mxUtils.getXml(node);\n * (end)\n * \n * To obtain a formatted string, mxUtils.getPrettyXml can be used instead.\n * \n * This string can now be stored in a local persistent storage (for example\n * using Google Gears) or it can be passed to a backend using mxUtils.post as\n * follows. The url variable is the URL of the Java servlet, PHP page or HTTP\n * handler, depending on the server.\n * \n * (code)\n * var xmlString = encodeURIComponent(mxUtils.getXml(node));\n * mxUtils.post(url, 'xml='+xmlString, function(req)\n * {\n *   // Process server response using req of type mxXmlRequest\n * });\n * (end)\n * \n * Input:\n * \n * To load an XML representation of a diagram into an existing graph object\n * mxUtils.load can be used as follows. The url variable is the URL of the Java\n * servlet, PHP page or HTTP handler that produces the XML string.\n * \n * (code)\n * var xmlDoc = mxUtils.load(url).getXml();\n * var node = xmlDoc.documentElement;\n * var dec = new mxCodec(node.ownerDocument);\n * dec.decode(node, graph.getModel());\n * (end)\n * \n * For creating a page that loads the client and a diagram using a single\n * request please refer to the deployment examples in the backends.\n * \n * Functional dependencies:\n * \n * (see images/callgraph.png)\n * \n * Resources:\n *\n * resources/graph - Language resources for mxGraph\n *\n * Group: Events\n * \n * Event: mxEvent.ROOT\n * \n * Fires if the root in the model has changed. This event has no properties.\n * \n * Event: mxEvent.ALIGN_CELLS\n * \n * Fires between begin- and endUpdate in <alignCells>. The <code>cells</code>\n * and <code>align</code> properties contain the respective arguments that were\n * passed to <alignCells>.\n *\n * Event: mxEvent.FLIP_EDGE\n *\n * Fires between begin- and endUpdate in <flipEdge>. The <code>edge</code>\n * property contains the edge passed to <flipEdge>.\n * \n * Event: mxEvent.ORDER_CELLS\n * \n * Fires between begin- and endUpdate in <orderCells>. The <code>cells</code>\n * and <code>back</code> properties contain the respective arguments that were\n * passed to <orderCells>.\n *\n * Event: mxEvent.CELLS_ORDERED\n *\n * Fires between begin- and endUpdate in <cellsOrdered>. The <code>cells</code>\n * and <code>back</code> arguments contain the respective arguments that were\n * passed to <cellsOrdered>.\n * \n * Event: mxEvent.GROUP_CELLS\n * \n * Fires between begin- and endUpdate in <groupCells>. The <code>group</code>,\n * <code>cells</code> and <code>border</code> arguments contain the respective\n * arguments that were passed to <groupCells>.\n * \n * Event: mxEvent.UNGROUP_CELLS\n * \n * Fires between begin- and endUpdate in <ungroupCells>. The <code>cells</code>\n * property contains the array of cells that was passed to <ungroupCells>.\n * \n * Event: mxEvent.REMOVE_CELLS_FROM_PARENT\n * \n * Fires between begin- and endUpdate in <removeCellsFromParent>. The\n * <code>cells</code> property contains the array of cells that was passed to\n * <removeCellsFromParent>.\n * \n * Event: mxEvent.ADD_CELLS\n * \n * Fires between begin- and endUpdate in <addCells>. The <code>cells</code>,\n * <code>parent</code>, <code>index</code>, <code>source</code> and\n * <code>target</code> properties contain the respective arguments that were\n * passed to <addCells>.\n * \n * Event: mxEvent.CELLS_ADDED\n * \n * Fires between begin- and endUpdate in <cellsAdded>. The <code>cells</code>,\n * <code>parent</code>, <code>index</code>, <code>source</code>,\n * <code>target</code> and <code>absolute</code> properties contain the\n * respective arguments that were passed to <cellsAdded>.\n * \n * Event: mxEvent.REMOVE_CELLS\n * \n * Fires between begin- and endUpdate in <removeCells>. The <code>cells</code>\n * and <code>includeEdges</code> arguments contain the respective arguments\n * that were passed to <removeCells>.\n * \n * Event: mxEvent.CELLS_REMOVED\n * \n * Fires between begin- and endUpdate in <cellsRemoved>. The <code>cells</code>\n * argument contains the array of cells that was removed.\n * \n * Event: mxEvent.SPLIT_EDGE\n * \n * Fires between begin- and endUpdate in <splitEdge>. The <code>edge</code>\n * property contains the edge to be splitted, the <code>cells</code>,\n * <code>newEdge</code>, <code>dx</code> and <code>dy</code> properties contain\n * the respective arguments that were passed to <splitEdge>.\n * \n * Event: mxEvent.TOGGLE_CELLS\n * \n * Fires between begin- and endUpdate in <toggleCells>. The <code>show</code>,\n * <code>cells</code> and <code>includeEdges</code> properties contain the\n * respective arguments that were passed to <toggleCells>.\n * \n * Event: mxEvent.FOLD_CELLS\n * \n * Fires between begin- and endUpdate in <foldCells>. The\n * <code>collapse</code>, <code>cells</code> and <code>recurse</code>\n * properties contain the respective arguments that were passed to <foldCells>.\n * \n * Event: mxEvent.CELLS_FOLDED\n * \n * Fires between begin- and endUpdate in cellsFolded. The\n * <code>collapse</code>, <code>cells</code> and <code>recurse</code>\n * properties contain the respective arguments that were passed to\n * <cellsFolded>.\n * \n * Event: mxEvent.UPDATE_CELL_SIZE\n * \n * Fires between begin- and endUpdate in <updateCellSize>. The\n * <code>cell</code> and <code>ignoreChildren</code> properties contain the\n * respective arguments that were passed to <updateCellSize>.\n * \n * Event: mxEvent.RESIZE_CELLS\n * \n * Fires between begin- and endUpdate in <resizeCells>. The <code>cells</code>\n * and <code>bounds</code> properties contain the respective arguments that\n * were passed to <resizeCells>.\n * \n * Event: mxEvent.CELLS_RESIZED\n * \n * Fires between begin- and endUpdate in <cellsResized>. The <code>cells</code>\n * and <code>bounds</code> properties contain the respective arguments that\n * were passed to <cellsResized>.\n * \n * Event: mxEvent.MOVE_CELLS\n * \n * Fires between begin- and endUpdate in <moveCells>. The <code>cells</code>,\n * <code>dx</code>, <code>dy</code>, <code>clone</code>, <code>target</code>\n * and <code>event</code> properties contain the respective arguments that\n * were passed to <moveCells>.\n * \n * Event: mxEvent.CELLS_MOVED\n * \n * Fires between begin- and endUpdate in <cellsMoved>. The <code>cells</code>,\n * <code>dx</code>, <code>dy</code> and <code>disconnect</code> properties\n * contain the respective arguments that were passed to <cellsMoved>.\n * \n * Event: mxEvent.CONNECT_CELL\n * \n * Fires between begin- and endUpdate in <connectCell>. The <code>edge</code>,\n * <code>terminal</code> and <code>source</code> properties contain the\n * respective arguments that were passed to <connectCell>.\n * \n * Event: mxEvent.CELL_CONNECTED\n * \n * Fires between begin- and endUpdate in <cellConnected>. The\n * <code>edge</code>, <code>terminal</code> and <code>source</code> properties\n * contain the respective arguments that were passed to <cellConnected>.\n * \n * Event: mxEvent.REFRESH\n * \n * Fires after <refresh> was executed. This event has no properties.\n *\n * Event: mxEvent.CLICK\n * \n * Fires in <click> after a click event. The <code>event</code> property\n * contains the original mouse event and <code>cell</code> property contains\n * the cell under the mouse or null if the background was clicked.\n * \n * Event: mxEvent.DOUBLE_CLICK\n *\n * Fires in <dblClick> after a double click. The <code>event</code> property\n * contains the original mouse event and the <code>cell</code> property\n * contains the cell under the mouse or null if the background was clicked.\n * \n * Event: mxEvent.GESTURE\n *\n * Fires in <fireGestureEvent> after a touch gesture. The <code>event</code>\n * property contains the original gesture end event and the <code>cell</code>\n * property contains the optional cell associated with the gesture.\n *\n * Event: mxEvent.TAP_AND_HOLD\n *\n * Fires in <tapAndHold> if a tap and hold event was detected. The <code>event</code>\n * property contains the initial touch event and the <code>cell</code> property\n * contains the cell under the mouse or null if the background was clicked.\n *\n * Event: mxEvent.FIRE_MOUSE_EVENT\n *\n * Fires in <fireMouseEvent> before the mouse listeners are invoked. The\n * <code>eventName</code> property contains the event name and the\n * <code>event</code> property contains the <mxMouseEvent>.\n *\n * Event: mxEvent.SIZE\n *\n * Fires after <sizeDidChange> was executed. The <code>bounds</code> property\n * contains the new graph bounds.\n *\n * Event: mxEvent.START_EDITING\n *\n * Fires before the in-place editor starts in <startEditingAtCell>. The\n * <code>cell</code> property contains the cell that is being edited and the\n * <code>event</code> property contains the optional event argument that was\n * passed to <startEditingAtCell>.\n * \n * Event: mxEvent.EDITING_STARTED\n *\n * Fires after the in-place editor starts in <startEditingAtCell>. The\n * <code>cell</code> property contains the cell that is being edited and the\n * <code>event</code> property contains the optional event argument that was\n * passed to <startEditingAtCell>.\n * \n * Event: mxEvent.EDITING_STOPPED\n *\n * Fires after the in-place editor stops in <stopEditing>.\n *\n * Event: mxEvent.LABEL_CHANGED\n *\n * Fires between begin- and endUpdate in <cellLabelChanged>. The\n * <code>cell</code> property contains the cell, the <code>value</code>\n * property contains the new value for the cell, the <code>old</code> property\n * contains the old value and the optional <code>event</code> property contains\n * the mouse event that started the edit.\n * \n * Event: mxEvent.ADD_OVERLAY\n *\n * Fires after an overlay is added in <addCellOverlay>. The <code>cell</code>\n * property contains the cell and the <code>overlay</code> property contains\n * the <mxCellOverlay> that was added.\n *\n * Event: mxEvent.REMOVE_OVERLAY\n *\n * Fires after an overlay is removed in <removeCellOverlay> and\n * <removeCellOverlays>. The <code>cell</code> property contains the cell and\n * the <code>overlay</code> property contains the <mxCellOverlay> that was\n * removed.\n * \n * Constructor: mxGraph\n * \n * Constructs a new mxGraph in the specified container. Model is an optional\n * mxGraphModel. If no model is provided, a new mxGraphModel instance is \n * used as the model. The container must have a valid owner document prior \n * to calling this function in Internet Explorer. RenderHint is a string to\n * affect the display performance and rendering in IE, but not in SVG-based \n * browsers. The parameter is mapped to <dialect>, which may \n * be one of <mxConstants.DIALECT_SVG> for SVG-based browsers, \n * <mxConstants.DIALECT_STRICTHTML> for fastest display mode,\n * <mxConstants.DIALECT_PREFERHTML> for faster display mode,\n * <mxConstants.DIALECT_MIXEDHTML> for fast and <mxConstants.DIALECT_VML> \n * for exact display mode (slowest). The dialects are defined in mxConstants.\n * The default values are DIALECT_SVG for SVG-based browsers and\n * DIALECT_MIXED for IE.\n *\n * The possible values for the renderingHint parameter are explained below:\n * \n * fast - The parameter is based on the fact that the display performance is \n * highly improved in IE if the VML is not contained within a VML group \n * element. The lack of a group element only slightly affects the display while \n * panning, but improves the performance by almost a factor of 2, while keeping \n * the display sufficiently accurate. This also allows to render certain shapes as HTML \n * if the display accuracy is not affected, which is implemented by \n * <mxShape.isMixedModeHtml>. This is the default setting and is mapped to\n * DIALECT_MIXEDHTML.\n * faster - Same as fast, but more expensive shapes are avoided. This is \n * controlled by <mxShape.preferModeHtml>. The default implementation will \n * avoid gradients and rounded rectangles, but more significant shapes, such \n * as rhombus, ellipse, actor and cylinder will be rendered accurately. This \n * setting is mapped to DIALECT_PREFERHTML.\n * fastest - Almost anything will be rendered in Html. This allows for \n * rectangles, labels and images. This setting is mapped to\n * DIALECT_STRICTHTML.\n * exact - If accurate panning is required and if the diagram is small (up\n * to 100 cells), then this value should be used. In this mode, a group is \n * created that contains the VML. This allows for accurate panning and is \n * mapped to DIALECT_VML.\n *\n * Example:\n * \n * To create a graph inside a DOM node with an id of graph:\n * (code)\n * var container = document.getElementById('graph');\n * var graph = new mxGraph(container);\n * (end)\n * \n * Parameters:\n * \n * container - Optional DOM node that acts as a container for the graph.\n * If this is null then the container can be initialized later using\n * <init>.\n * model - Optional <mxGraphModel> that constitutes the graph data.\n * renderHint - Optional string that specifies the display accuracy and\n * performance. Default is mxConstants.DIALECT_MIXEDHTML (for IE).\n * stylesheet - Optional <mxStylesheet> to be used in the graph.\n */\nfunction mxGraph(container, model, renderHint, stylesheet)\n{\n\t// Initializes the variable in case the prototype has been\n\t// modified to hold some listeners (which is possible because\n\t// the createHandlers call is executed regardless of the\n\t// arguments passed into the ctor).\n\tthis.mouseListeners = null;\n\t\n\t// Converts the renderHint into a dialect\n\tthis.renderHint = renderHint;\n\n\tif (mxClient.IS_SVG)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_SVG;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_EXACT && mxClient.IS_VML)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_VML;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_FASTEST)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_STRICTHTML;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_FASTER)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_PREFERHTML;\n\t}\n\telse // default for VML\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_MIXEDHTML;\n\t}\n\t\n\t// Initializes the main members that do not require a container\n\tthis.model = (model != null) ? model : new mxGraphModel();\n\tthis.multiplicities = [];\n\tthis.imageBundles = [];\n\tthis.cellRenderer = this.createCellRenderer();\n\tthis.setSelectionModel(this.createSelectionModel());\n\tthis.setStylesheet((stylesheet != null) ? stylesheet : this.createStylesheet());\n\tthis.view = this.createGraphView();\n\t\n\t// Adds a graph model listener to update the view\n\tthis.graphModelChangeListener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tthis.graphModelChanged(evt.getProperty('edit').changes);\n\t});\n\t\n\tthis.model.addListener(mxEvent.CHANGE, this.graphModelChangeListener);\n\n\t// Installs basic event handlers with disabled default settings.\n\tthis.createHandlers();\n\t\n\t// Initializes the display if a container was specified\n\tif (container != null)\n\t{\n\t\tthis.init(container);\n\t}\n\t\n\tthis.view.revalidate();\n};\n\n/**\n * Installs the required language resources at class\n * loading time.\n */\nif (mxLoadResources)\n{\n\tmxResources.add(mxClient.basePath + '/resources/graph');\n}\nelse\n{\n\tmxClient.defaultBundles.push(mxClient.basePath + '/resources/graph');\n}\n\n/**\n * Extends mxEventSource.\n */\nmxGraph.prototype = new mxEventSource();\nmxGraph.prototype.constructor = mxGraph;\n\n/**\n * Group: Variables\n */\n\n/**\n * Variable: mouseListeners\n * \n * Holds the mouse event listeners. See <fireMouseEvent>.\n */\nmxGraph.prototype.mouseListeners = null;\n\n/**\n * Variable: isMouseDown\n * \n * Holds the state of the mouse button.\n */\nmxGraph.prototype.isMouseDown = false;\n\n/**\n * Variable: model\n * \n * Holds the <mxGraphModel> that contains the cells to be displayed.\n */\nmxGraph.prototype.model = null;\n\n/**\n * Variable: view\n * \n * Holds the <mxGraphView> that caches the <mxCellStates> for the cells.\n */\nmxGraph.prototype.view = null;\n\n/**\n * Variable: stylesheet\n * \n * Holds the <mxStylesheet> that defines the appearance of the cells.\n * \n * \n * Example:\n * \n * Use the following code to read a stylesheet into an existing graph.\n * \n * (code)\n * var req = mxUtils.load('stylesheet.xml');\n * var root = req.getDocumentElement();\n * var dec = new mxCodec(root.ownerDocument);\n * dec.decode(root, graph.stylesheet);\n * (end)\n */\nmxGraph.prototype.stylesheet = null;\n\t\n/**\n * Variable: selectionModel\n * \n * Holds the <mxGraphSelectionModel> that models the current selection.\n */\nmxGraph.prototype.selectionModel = null;\n\n/**\n * Variable: cellEditor\n * \n * Holds the <mxCellEditor> that is used as the in-place editing.\n */\nmxGraph.prototype.cellEditor = null;\n\n/**\n * Variable: cellRenderer\n * \n * Holds the <mxCellRenderer> for rendering the cells in the graph.\n */\nmxGraph.prototype.cellRenderer = null;\n\n/**\n * Variable: multiplicities\n * \n * An array of <mxMultiplicities> describing the allowed\n * connections in a graph.\n */\nmxGraph.prototype.multiplicities = null;\n\n/**\n * Variable: renderHint\n * \n * RenderHint as it was passed to the constructor.\n */\nmxGraph.prototype.renderHint = null;\n\n/**\n * Variable: dialect\n * \n * Dialect to be used for drawing the graph. Possible values are all\n * constants in <mxConstants> with a DIALECT-prefix.\n */\nmxGraph.prototype.dialect = null;\n\n/**\n * Variable: gridSize\n * \n * Specifies the grid size. Default is 10.\n */\nmxGraph.prototype.gridSize = 10;\n\t\n/**\n * Variable: gridEnabled\n * \n * Specifies if the grid is enabled. This is used in <snap>. Default is\n * true.\n */\nmxGraph.prototype.gridEnabled = true;\n\n/**\n * Variable: portsEnabled\n * \n * Specifies if ports are enabled. This is used in <cellConnected> to update\n * the respective style. Default is true.\n */\nmxGraph.prototype.portsEnabled = true;\n\n/**\n * Variable: nativeDoubleClickEnabled\n * \n * Specifies if native double click events should be detected. Default is true.\n */\nmxGraph.prototype.nativeDblClickEnabled = true;\n\n/**\n * Variable: doubleTapEnabled\n * \n * Specifies if double taps on touch-based devices should be handled as a\n * double click. Default is true.\n */\nmxGraph.prototype.doubleTapEnabled = true;\n\n/**\n * Variable: doubleTapTimeout\n * \n * Specifies the timeout for double taps and non-native double clicks. Default\n * is 500 ms.\n */\nmxGraph.prototype.doubleTapTimeout = 500;\n\n/**\n * Variable: doubleTapTolerance\n * \n * Specifies the tolerance for double taps and double clicks in quirks mode.\n * Default is 25 pixels.\n */\nmxGraph.prototype.doubleTapTolerance = 25;\n\n/**\n * Variable: lastTouchX\n * \n * Holds the x-coordinate of the last touch event for double tap detection.\n */\nmxGraph.prototype.lastTouchY = 0;\n\n/**\n * Variable: lastTouchX\n * \n * Holds the y-coordinate of the last touch event for double tap detection.\n */\nmxGraph.prototype.lastTouchY = 0;\n\n/**\n * Variable: lastTouchTime\n * \n * Holds the time of the last touch event for double click detection.\n */\nmxGraph.prototype.lastTouchTime = 0;\n\n/**\n * Variable: tapAndHoldEnabled\n * \n * Specifies if tap and hold should be used for starting connections on touch-based\n * devices. Default is true.\n */\nmxGraph.prototype.tapAndHoldEnabled = true;\n\n/**\n * Variable: tapAndHoldDelay\n * \n * Specifies the time for a tap and hold. Default is 500 ms.\n */\nmxGraph.prototype.tapAndHoldDelay = 500;\n\n/**\n * Variable: tapAndHoldInProgress\n * \n * True if the timer for tap and hold events is running.\n */\nmxGraph.prototype.tapAndHoldInProgress = false;\n\n/**\n * Variable: tapAndHoldValid\n * \n * True as long as the timer is running and the touch events\n * stay within the given <tapAndHoldTolerance>.\n */\nmxGraph.prototype.tapAndHoldValid = false;\n\n/**\n * Variable: initialTouchX\n * \n * Holds the x-coordinate of the intial touch event for tap and hold.\n */\nmxGraph.prototype.initialTouchX = 0;\n\n/**\n * Variable: initialTouchY\n * \n * Holds the y-coordinate of the intial touch event for tap and hold.\n */\nmxGraph.prototype.initialTouchY = 0;\n\n/**\n * Variable: tolerance\n * \n * Tolerance for a move to be handled as a single click.\n * Default is 4 pixels.\n */\nmxGraph.prototype.tolerance = 4;\n\n/**\n * Variable: defaultOverlap\n * \n * Value returned by <getOverlap> if <isAllowOverlapParent> returns\n * true for the given cell. <getOverlap> is used in <constrainChild> if\n * <isConstrainChild> returns true. The value specifies the\n * portion of the child which is allowed to overlap the parent.\n */\nmxGraph.prototype.defaultOverlap = 0.5;\n\n/**\n * Variable: defaultParent\n * \n * Specifies the default parent to be used to insert new cells.\n * This is used in <getDefaultParent>. Default is null.\n */\nmxGraph.prototype.defaultParent = null;\n\n/**\n * Variable: alternateEdgeStyle\n * \n * Specifies the alternate edge style to be used if the main control point\n * on an edge is being doubleclicked. Default is null.\n */\nmxGraph.prototype.alternateEdgeStyle = null;\n\n/**\n * Variable: backgroundImage\n *\n * Specifies the <mxImage> to be returned by <getBackgroundImage>. Default\n * is null.\n * \n * Example:\n *\n * (code)\n * var img = new mxImage('http://www.example.com/maps/examplemap.jpg', 1024, 768);\n * graph.setBackgroundImage(img);\n * graph.view.validate();\n * (end)\n */\nmxGraph.prototype.backgroundImage = null;\n\n/**\n * Variable: pageVisible\n *\n * Specifies if the background page should be visible. Default is false.\n * Not yet implemented.\n */\nmxGraph.prototype.pageVisible = false;\n\n/**\n * Variable: pageBreaksVisible\n * \n * Specifies if a dashed line should be drawn between multiple pages. Default\n * is false. If you change this value while a graph is being displayed then you\n * should call <sizeDidChange> to force an update of the display.\n */\nmxGraph.prototype.pageBreaksVisible = false;\n\n/**\n * Variable: pageBreakColor\n * \n * Specifies the color for page breaks. Default is 'gray'.\n */\nmxGraph.prototype.pageBreakColor = 'gray';\n\n/**\n * Variable: pageBreakDashed\n * \n * Specifies the page breaks should be dashed. Default is true.\n */\nmxGraph.prototype.pageBreakDashed = true;\n\n/**\n * Variable: minPageBreakDist\n * \n * Specifies the minimum distance for page breaks to be visible. Default is\n * 20 (in pixels).\n */\nmxGraph.prototype.minPageBreakDist = 20;\n\n/**\n * Variable: preferPageSize\n * \n * Specifies if the graph size should be rounded to the next page number in\n * <sizeDidChange>. This is only used if the graph container has scrollbars.\n * Default is false.\n */\nmxGraph.prototype.preferPageSize = false;\n\n/**\n * Variable: pageFormat\n *\n * Specifies the page format for the background page. Default is\n * <mxConstants.PAGE_FORMAT_A4_PORTRAIT>. This is used as the default in\n * <mxPrintPreview> and for painting the background page if <pageVisible> is\n * true and the pagebreaks if <pageBreaksVisible> is true.\n */\nmxGraph.prototype.pageFormat = mxConstants.PAGE_FORMAT_A4_PORTRAIT;\n\n/**\n * Variable: pageScale\n *\n * Specifies the scale of the background page. Default is 1.5.\n * Not yet implemented.\n */\nmxGraph.prototype.pageScale = 1.5;\n\n/**\n * Variable: enabled\n * \n * Specifies the return value for <isEnabled>. Default is true.\n */\nmxGraph.prototype.enabled = true;\n\n/**\n * Variable: escapeEnabled\n * \n * Specifies if <mxKeyHandler> should invoke <escape> when the escape key\n * is pressed. Default is true.\n */\nmxGraph.prototype.escapeEnabled = true;\n\n/**\n * Variable: invokesStopCellEditing\n * \n * If true, when editing is to be stopped by way of selection changing,\n * data in diagram changing or other means stopCellEditing is invoked, and\n * changes are saved. This is implemented in a focus handler in\n * <mxCellEditor>. Default is true.\n */\nmxGraph.prototype.invokesStopCellEditing = true;\n\n/**\n * Variable: enterStopsCellEditing\n * \n * If true, pressing the enter key without pressing control or shift will stop\n * editing and accept the new value. This is used in <mxCellEditor> to stop\n * cell editing. Note: You can always use F2 and escape to stop editing.\n * Default is false.\n */\nmxGraph.prototype.enterStopsCellEditing = false;\n\n/**\n * Variable: useScrollbarsForPanning\n * \n * Specifies if scrollbars should be used for panning in <panGraph> if\n * any scrollbars are available. If scrollbars are enabled in CSS, but no\n * scrollbars appear because the graph is smaller than the container size,\n * then no panning occurs if this is true. Default is true.\n */\nmxGraph.prototype.useScrollbarsForPanning = true;\n\n/**\n * Variable: exportEnabled\n * \n * Specifies the return value for <canExportCell>. Default is true.\n */\nmxGraph.prototype.exportEnabled = true;\n\n/**\n * Variable: importEnabled\n * \n * Specifies the return value for <canImportCell>. Default is true.\n */\nmxGraph.prototype.importEnabled = true;\n\n/**\n * Variable: cellsLocked\n * \n * Specifies the return value for <isCellLocked>. Default is false.\n */\nmxGraph.prototype.cellsLocked = false;\n\n/**\n * Variable: cellsCloneable\n * \n * Specifies the return value for <isCellCloneable>. Default is true.\n */\nmxGraph.prototype.cellsCloneable = true;\n\n/**\n * Variable: foldingEnabled\n * \n * Specifies if folding (collapse and expand via an image icon in the graph\n * should be enabled). Default is true.\n */\nmxGraph.prototype.foldingEnabled = true;\n\n/**\n * Variable: cellsEditable\n * \n * Specifies the return value for <isCellEditable>. Default is true.\n */\nmxGraph.prototype.cellsEditable = true;\n\t\t\n/**\n * Variable: cellsDeletable\n * \n * Specifies the return value for <isCellDeletable>. Default is true.\n */\nmxGraph.prototype.cellsDeletable = true;\n\n/**\n * Variable: cellsMovable\n * \n * Specifies the return value for <isCellMovable>. Default is true.\n */\nmxGraph.prototype.cellsMovable = true;\n\t\n/**\n * Variable: edgeLabelsMovable\n * \n * Specifies the return value for edges in <isLabelMovable>. Default is true.\n */\nmxGraph.prototype.edgeLabelsMovable = true;\n\t\n/**\n * Variable: vertexLabelsMovable\n * \n * Specifies the return value for vertices in <isLabelMovable>. Default is false.\n */\nmxGraph.prototype.vertexLabelsMovable = false;\n\n/**\n * Variable: dropEnabled\n * \n * Specifies the return value for <isDropEnabled>. Default is false.\n */\nmxGraph.prototype.dropEnabled = false;\n\n/**\n * Variable: splitEnabled\n * \n * Specifies if dropping onto edges should be enabled. This is ignored if\n * <dropEnabled> is false. If enabled, it will call <splitEdge> to carry\n * out the drop operation. Default is true.\n */\nmxGraph.prototype.splitEnabled = true;\n\n/**\n * Variable: cellsResizable\n * \n * Specifies the return value for <isCellResizable>. Default is true.\n */\nmxGraph.prototype.cellsResizable = true;\n\n/**\n * Variable: cellsBendable\n * \n * Specifies the return value for <isCellsBendable>. Default is true.\n */\nmxGraph.prototype.cellsBendable = true;\n\n/**\n * Variable: cellsSelectable\n * \n * Specifies the return value for <isCellSelectable>. Default is true.\n */\nmxGraph.prototype.cellsSelectable = true;\n\n/**\n * Variable: cellsDisconnectable\n * \n * Specifies the return value for <isCellDisconntable>. Default is true.\n */\nmxGraph.prototype.cellsDisconnectable = true;\n\n/**\n * Variable: autoSizeCells\n * \n * Specifies if the graph should automatically update the cell size after an\n * edit. This is used in <isAutoSizeCell>. Default is false.\n */\nmxGraph.prototype.autoSizeCells = false;\n\n/**\n * Variable: autoSizeCellsOnAdd\n * \n * Specifies if autoSize style should be applied when cells are added. Default is false.\n */\nmxGraph.prototype.autoSizeCellsOnAdd = false;\n\n/**\n * Variable: autoScroll\n * \n * Specifies if the graph should automatically scroll if the mouse goes near\n * the container edge while dragging. This is only taken into account if the\n * container has scrollbars. Default is true.\n * \n * If you need this to work without scrollbars then set <ignoreScrollbars> to\n * true. Please consult the <ignoreScrollbars> for details. In general, with\n * no scrollbars, the use of <allowAutoPanning> is recommended.\n */\nmxGraph.prototype.autoScroll = true;\n\n/**\n * Variable: ignoreScrollbars\n * \n * Specifies if the graph should automatically scroll regardless of the\n * scrollbars. This will scroll the container using positive values for\n * scroll positions (ie usually only rightwards and downwards). To avoid\n * possible conflicts with panning, set <translateToScrollPosition> to true.\n */\nmxGraph.prototype.ignoreScrollbars = false;\n\n/**\n * Variable: translateToScrollPosition\n * \n * Specifies if the graph should automatically convert the current scroll\n * position to a translate in the graph view when a mouseUp event is received.\n * This can be used to avoid conflicts when using <autoScroll> and\n * <ignoreScrollbars> with no scrollbars in the container.\n */\nmxGraph.prototype.translateToScrollPosition = false;\n\n/**\n * Variable: timerAutoScroll\n * \n * Specifies if autoscrolling should be carried out via mxPanningManager even\n * if the container has scrollbars. This disables <scrollPointToVisible> and\n * uses <mxPanningManager> instead. If this is true then <autoExtend> is\n * disabled. It should only be used with a scroll buffer or when scollbars\n * are visible and scrollable in all directions. Default is false.\n */\nmxGraph.prototype.timerAutoScroll = false;\n\n/**\n * Variable: allowAutoPanning\n * \n * Specifies if panning via <panGraph> should be allowed to implement autoscroll\n * if no scrollbars are available in <scrollPointToVisible>. To enable panning\n * inside the container, near the edge, set <mxPanningManager.border> to a\n * positive value. Default is false.\n */\nmxGraph.prototype.allowAutoPanning = false;\n\n/**\n * Variable: autoExtend\n * \n * Specifies if the size of the graph should be automatically extended if the\n * mouse goes near the container edge while dragging. This is only taken into\n * account if the container has scrollbars. Default is true. See <autoScroll>.\n */\nmxGraph.prototype.autoExtend = true;\n\n/**\n * Variable: maximumGraphBounds\n * \n * <mxRectangle> that specifies the area in which all cells in the diagram\n * should be placed. Uses in <getMaximumGraphBounds>. Use a width or height of\n * 0 if you only want to give a upper, left corner.\n */\nmxGraph.prototype.maximumGraphBounds = null;\n\n/**\n * Variable: minimumGraphSize\n * \n * <mxRectangle> that specifies the minimum size of the graph. This is ignored\n * if the graph container has no scrollbars. Default is null.\n */\nmxGraph.prototype.minimumGraphSize = null;\n\n/**\n * Variable: minimumContainerSize\n * \n * <mxRectangle> that specifies the minimum size of the <container> if\n * <resizeContainer> is true.\n */\nmxGraph.prototype.minimumContainerSize = null;\n\t\t\n/**\n * Variable: maximumContainerSize\n * \n * <mxRectangle> that specifies the maximum size of the container if\n * <resizeContainer> is true.\n */\nmxGraph.prototype.maximumContainerSize = null;\n\n/**\n * Variable: resizeContainer\n * \n * Specifies if the container should be resized to the graph size when\n * the graph size has changed. Default is false.\n */\nmxGraph.prototype.resizeContainer = false;\n\n/**\n * Variable: border\n * \n * Border to be added to the bottom and right side when the container is\n * being resized after the graph has been changed. Default is 0.\n */\nmxGraph.prototype.border = 0;\n\t\t\n/**\n * Variable: keepEdgesInForeground\n * \n * Specifies if edges should appear in the foreground regardless of their order\n * in the model. If <keepEdgesInForeground> and <keepEdgesInBackground> are\n * both true then the normal order is applied. Default is false.\n */\nmxGraph.prototype.keepEdgesInForeground = false;\n\n/**\n * Variable: keepEdgesInBackground\n * \n * Specifies if edges should appear in the background regardless of their order\n * in the model. If <keepEdgesInForeground> and <keepEdgesInBackground> are\n * both true then the normal order is applied. Default is false.\n */\nmxGraph.prototype.keepEdgesInBackground = false;\n\n/**\n * Variable: allowNegativeCoordinates\n * \n * Specifies if negative coordinates for vertices are allowed. Default is true.\n */\nmxGraph.prototype.allowNegativeCoordinates = true;\n\n/**\n * Variable: constrainChildren\n * \n * Specifies if a child should be constrained inside the parent bounds after a\n * move or resize of the child. Default is true.\n */\nmxGraph.prototype.constrainChildren = true;\n\n/**\n * Variable: constrainRelativeChildren\n * \n * Specifies if child cells with relative geometries should be constrained\n * inside the parent bounds, if <constrainChildren> is true, and/or the\n * <maximumGraphBounds>. Default is false.\n */\nmxGraph.prototype.constrainRelativeChildren = false;\n\n/**\n * Variable: extendParents\n * \n * Specifies if a parent should contain the child bounds after a resize of\n * the child. Default is true. This has precedence over <constrainChildren>.\n */\nmxGraph.prototype.extendParents = true;\n\n/**\n * Variable: extendParentsOnAdd\n * \n * Specifies if parents should be extended according to the <extendParents>\n * switch if cells are added. Default is true.\n */\nmxGraph.prototype.extendParentsOnAdd = true;\n\n/**\n * Variable: extendParentsOnAdd\n * \n * Specifies if parents should be extended according to the <extendParents>\n * switch if cells are added. Default is false for backwards compatiblity.\n */\nmxGraph.prototype.extendParentsOnMove = false;\n\n/**\n * Variable: recursiveResize\n * \n * Specifies the return value for <isRecursiveResize>. Default is\n * false for backwards compatiblity.\n */\nmxGraph.prototype.recursiveResize = false;\n\n/**\n * Variable: collapseToPreferredSize\n * \n * Specifies if the cell size should be changed to the preferred size when\n * a cell is first collapsed. Default is true.\n */\nmxGraph.prototype.collapseToPreferredSize = true;\n\n/**\n * Variable: zoomFactor\n * \n * Specifies the factor used for <zoomIn> and <zoomOut>. Default is 1.2\n * (120%).\n */\nmxGraph.prototype.zoomFactor = 1.2;\n\n/**\n * Variable: keepSelectionVisibleOnZoom\n * \n * Specifies if the viewport should automatically contain the selection cells\n * after a zoom operation. Default is false.\n */\nmxGraph.prototype.keepSelectionVisibleOnZoom = false;\n\n/**\n * Variable: centerZoom\n * \n * Specifies if the zoom operations should go into the center of the actual\n * diagram rather than going from top, left. Default is true.\n */\nmxGraph.prototype.centerZoom = true;\n\n/**\n * Variable: resetViewOnRootChange\n * \n * Specifies if the scale and translate should be reset if the root changes in\n * the model. Default is true.\n */\nmxGraph.prototype.resetViewOnRootChange = true;\n\n/**\n * Variable: resetEdgesOnResize\n * \n * Specifies if edge control points should be reset after the resize of a\n * connected cell. Default is false.\n */\nmxGraph.prototype.resetEdgesOnResize = false;\n\n/**\n * Variable: resetEdgesOnMove\n * \n * Specifies if edge control points should be reset after the move of a\n * connected cell. Default is false.\n */\nmxGraph.prototype.resetEdgesOnMove = false;\n\n/**\n * Variable: resetEdgesOnConnect\n * \n * Specifies if edge control points should be reset after the the edge has been\n * reconnected. Default is true.\n */\nmxGraph.prototype.resetEdgesOnConnect = true;\n\n/**\n * Variable: allowLoops\n * \n * Specifies if loops (aka self-references) are allowed. Default is false.\n */\nmxGraph.prototype.allowLoops = false;\n\t\n/**\n * Variable: defaultLoopStyle\n * \n * <mxEdgeStyle> to be used for loops. This is a fallback for loops if the\n * <mxConstants.STYLE_LOOP> is undefined. Default is <mxEdgeStyle.Loop>.\n */\nmxGraph.prototype.defaultLoopStyle = mxEdgeStyle.Loop;\n\n/**\n * Variable: multigraph\n * \n * Specifies if multiple edges in the same direction between the same pair of\n * vertices are allowed. Default is true.\n */\nmxGraph.prototype.multigraph = true;\n\n/**\n * Variable: connectableEdges\n * \n * Specifies if edges are connectable. Default is false. This overrides the\n * connectable field in edges.\n */\nmxGraph.prototype.connectableEdges = false;\n\n/**\n * Variable: allowDanglingEdges\n * \n * Specifies if edges with disconnected terminals are allowed in the graph.\n * Default is true.\n */\nmxGraph.prototype.allowDanglingEdges = true;\n\n/**\n * Variable: cloneInvalidEdges\n * \n * Specifies if edges that are cloned should be validated and only inserted\n * if they are valid. Default is true.\n */\nmxGraph.prototype.cloneInvalidEdges = false;\n\n/**\n * Variable: disconnectOnMove\n * \n * Specifies if edges should be disconnected from their terminals when they\n * are moved. Default is true.\n */\nmxGraph.prototype.disconnectOnMove = true;\n\n/**\n * Variable: labelsVisible\n * \n * Specifies if labels should be visible. This is used in <getLabel>. Default\n * is true.\n */\nmxGraph.prototype.labelsVisible = true;\n\t\n/**\n * Variable: htmlLabels\n * \n * Specifies the return value for <isHtmlLabel>. Default is false.\n */\nmxGraph.prototype.htmlLabels = false;\n\n/**\n * Variable: swimlaneSelectionEnabled\n * \n * Specifies if swimlanes should be selectable via the content if the\n * mouse is released. Default is true.\n */\nmxGraph.prototype.swimlaneSelectionEnabled = true;\n\n/**\n * Variable: swimlaneNesting\n * \n * Specifies if nesting of swimlanes is allowed. Default is true.\n */\nmxGraph.prototype.swimlaneNesting = true;\n\t\n/**\n * Variable: swimlaneIndicatorColorAttribute\n * \n * The attribute used to find the color for the indicator if the indicator\n * color is set to 'swimlane'. Default is <mxConstants.STYLE_FILLCOLOR>.\n */\nmxGraph.prototype.swimlaneIndicatorColorAttribute = mxConstants.STYLE_FILLCOLOR;\n\n/**\n * Variable: imageBundles\n * \n * Holds the list of image bundles.\n */\nmxGraph.prototype.imageBundles = null;\n\n/**\n * Variable: minFitScale\n * \n * Specifies the minimum scale to be applied in <fit>. Default is 0.1. Set this\n * to null to allow any value.\n */\nmxGraph.prototype.minFitScale = 0.1;\n\n/**\n * Variable: maxFitScale\n * \n * Specifies the maximum scale to be applied in <fit>. Default is 8. Set this\n * to null to allow any value.\n */\nmxGraph.prototype.maxFitScale = 8;\n\n/**\n * Variable: panDx\n * \n * Current horizontal panning value. Default is 0.\n */\nmxGraph.prototype.panDx = 0;\n\n/**\n * Variable: panDy\n * \n * Current vertical panning value. Default is 0.\n */\nmxGraph.prototype.panDy = 0;\n\n/**\n * Variable: collapsedImage\n * \n * Specifies the <mxImage> to indicate a collapsed state.\n * Default value is mxClient.imageBasePath + '/collapsed.gif'\n */\nmxGraph.prototype.collapsedImage = new mxImage(mxClient.imageBasePath + '/collapsed.gif', 9, 9);\n\n/**\n * Variable: expandedImage\n * \n * Specifies the <mxImage> to indicate a expanded state.\n * Default value is mxClient.imageBasePath + '/expanded.gif'\n */\nmxGraph.prototype.expandedImage = new mxImage(mxClient.imageBasePath + '/expanded.gif', 9, 9);\n\n/**\n * Variable: warningImage\n * \n * Specifies the <mxImage> for the image to be used to display a warning\n * overlay. See <setCellWarning>. Default value is mxClient.imageBasePath +\n * '/warning'.  The extension for the image depends on the platform. It is\n * '.png' on the Mac and '.gif' on all other platforms.\n */\nmxGraph.prototype.warningImage = new mxImage(mxClient.imageBasePath + '/warning'+\n\t((mxClient.IS_MAC) ? '.png' : '.gif'), 16, 16);\n\n/**\n * Variable: alreadyConnectedResource\n * \n * Specifies the resource key for the error message to be displayed in\n * non-multigraphs when two vertices are already connected. If the resource\n * for this key does not exist then the value is used as the error message.\n * Default is 'alreadyConnected'.\n */\nmxGraph.prototype.alreadyConnectedResource = (mxClient.language != 'none') ? 'alreadyConnected' : '';\n\n/**\n * Variable: containsValidationErrorsResource\n * \n * Specifies the resource key for the warning message to be displayed when\n * a collapsed cell contains validation errors. If the resource for this\n * key does not exist then the value is used as the warning message.\n * Default is 'containsValidationErrors'.\n */\nmxGraph.prototype.containsValidationErrorsResource = (mxClient.language != 'none') ? 'containsValidationErrors' : '';\n\n/**\n * Variable: collapseExpandResource\n * \n * Specifies the resource key for the tooltip on the collapse/expand icon.\n * If the resource for this key does not exist then the value is used as\n * the tooltip. Default is 'collapse-expand'.\n */\nmxGraph.prototype.collapseExpandResource = (mxClient.language != 'none') ? 'collapse-expand' : '';\n\n/**\n * Function: init\n * \n * Initializes the <container> and creates the respective datastructures.\n * \n * Parameters:\n * \n * container - DOM node that will contain the graph display.\n */\nmxGraph.prototype.init = function(container)\n{\n\tthis.container = container;\n\t\n\t// Initializes the in-place editor\n\tthis.cellEditor = this.createCellEditor();\t\n\n\t// Initializes the container using the view\n\tthis.view.init();\n\t\n\t// Updates the size of the container for the current graph\n\tthis.sizeDidChange();\n\t\n\t// Hides tooltips and resets tooltip timer if mouse leaves container\n\tmxEvent.addListener(container, 'mouseleave', mxUtils.bind(this, function()\n\t{\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.hide();\n\t\t}\n\t}));\n\n\t// Automatic deallocation of memory\n\tif (mxClient.IS_IE)\n\t{\n\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.destroy();\n\t\t}));\n\t\t\n\t\t// Disable shift-click for text\n\t\tmxEvent.addListener(container, 'selectstart',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\treturn this.isEditing() || (!this.isMouseDown && !mxEvent.isShiftDown(evt));\n\t\t\t})\n\t\t);\n\t}\n\t\n\t// Workaround for missing last shape and connect preview in IE8 standards\n\t// mode if no initial graph displayed or no label for shape defined\n\tif (document.documentMode == 8)\n\t{\n\t\tcontainer.insertAdjacentHTML('beforeend', '<' + mxClient.VML_PREFIX + ':group' +\n\t\t\t' style=\"DISPLAY: none;\"></' + mxClient.VML_PREFIX + ':group>');\n\t}\n};\n\n/**\n * Function: createHandlers\n * \n * Creates the tooltip-, panning-, connection- and graph-handler (in this\n * order). This is called in the constructor before <init> is called.\n */\nmxGraph.prototype.createHandlers = function()\n{\n\tthis.tooltipHandler = this.createTooltipHandler();\n\tthis.tooltipHandler.setEnabled(false);\n\tthis.selectionCellsHandler = this.createSelectionCellsHandler();\n\tthis.connectionHandler = this.createConnectionHandler();\n\tthis.connectionHandler.setEnabled(false);\n\tthis.graphHandler = this.createGraphHandler();\n\tthis.panningHandler = this.createPanningHandler();\n\tthis.panningHandler.panningEnabled = false;\n\tthis.popupMenuHandler = this.createPopupMenuHandler();\n};\n\n/**\n * Function: createTooltipHandler\n * \n * Creates and returns a new <mxTooltipHandler> to be used in this graph.\n */\nmxGraph.prototype.createTooltipHandler = function()\n{\n\treturn new mxTooltipHandler(this);\n};\n\n/**\n * Function: createSelectionCellsHandler\n * \n * Creates and returns a new <mxTooltipHandler> to be used in this graph.\n */\nmxGraph.prototype.createSelectionCellsHandler = function()\n{\n\treturn new mxSelectionCellsHandler(this);\n};\n\n/**\n * Function: createConnectionHandler\n * \n * Creates and returns a new <mxConnectionHandler> to be used in this graph.\n */\nmxGraph.prototype.createConnectionHandler = function()\n{\n\treturn new mxConnectionHandler(this);\n};\n\n/**\n * Function: createGraphHandler\n * \n * Creates and returns a new <mxGraphHandler> to be used in this graph.\n */\nmxGraph.prototype.createGraphHandler = function()\n{\n\treturn new mxGraphHandler(this);\n};\n\n/**\n * Function: createPanningHandler\n * \n * Creates and returns a new <mxPanningHandler> to be used in this graph.\n */\nmxGraph.prototype.createPanningHandler = function()\n{\n\treturn new mxPanningHandler(this);\n};\n\n/**\n * Function: createPopupMenuHandler\n * \n * Creates and returns a new <mxPopupMenuHandler> to be used in this graph.\n */\nmxGraph.prototype.createPopupMenuHandler = function()\n{\n\treturn new mxPopupMenuHandler(this);\n};\n\n/**\n * Function: createSelectionModel\n * \n * Creates a new <mxGraphSelectionModel> to be used in this graph.\n */\nmxGraph.prototype.createSelectionModel = function()\n{\n\treturn new mxGraphSelectionModel(this);\n};\n\n/**\n * Function: createStylesheet\n * \n * Creates a new <mxGraphSelectionModel> to be used in this graph.\n */\nmxGraph.prototype.createStylesheet = function()\n{\n\treturn new mxStylesheet();\n};\n\n/**\n * Function: createGraphView\n * \n * Creates a new <mxGraphView> to be used in this graph.\n */\nmxGraph.prototype.createGraphView = function()\n{\n\treturn new mxGraphView(this);\n};\n \n/**\n * Function: createCellRenderer\n * \n * Creates a new <mxCellRenderer> to be used in this graph.\n */\nmxGraph.prototype.createCellRenderer = function()\n{\n\treturn new mxCellRenderer();\n};\n\n/**\n * Function: createCellEditor\n * \n * Creates a new <mxCellEditor> to be used in this graph.\n */\nmxGraph.prototype.createCellEditor = function()\n{\n\treturn new mxCellEditor(this);\n};\n\n/**\n * Function: getModel\n * \n * Returns the <mxGraphModel> that contains the cells.\n */\nmxGraph.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: getView\n * \n * Returns the <mxGraphView> that contains the <mxCellStates>.\n */\nmxGraph.prototype.getView = function()\n{\n\treturn this.view;\n};\n\n/**\n * Function: getStylesheet\n * \n * Returns the <mxStylesheet> that defines the style.\n */\nmxGraph.prototype.getStylesheet = function()\n{\n\treturn this.stylesheet;\n};\n\n/**\n * Function: setStylesheet\n * \n * Sets the <mxStylesheet> that defines the style.\n */\nmxGraph.prototype.setStylesheet = function(stylesheet)\n{\n\tthis.stylesheet = stylesheet;\n};\n\n/**\n * Function: getSelectionModel\n * \n * Returns the <mxGraphSelectionModel> that contains the selection.\n */\nmxGraph.prototype.getSelectionModel = function()\n{\n\treturn this.selectionModel;\n};\n\n/**\n * Function: setSelectionModel\n * \n * Sets the <mxSelectionModel> that contains the selection.\n */\nmxGraph.prototype.setSelectionModel = function(selectionModel)\n{\n\tthis.selectionModel = selectionModel;\n};\n\n/**\n * Function: getSelectionCellsForChanges\n * \n * Returns the cells to be selected for the given array of changes.\n */\nmxGraph.prototype.getSelectionCellsForChanges = function(changes)\n{\n\tvar dict = new mxDictionary();\n\tvar cells = [];\n\t\n\tvar addCell = mxUtils.bind(this, function(cell)\n\t{\n\t\tif (!dict.get(cell) && this.model.contains(cell))\n\t\t{\n\t\t\tif (this.model.isEdge(cell) || this.model.isVertex(cell))\n\t\t\t{\n\t\t\t\tdict.put(cell, true);\n\t\t\t\tcells.push(cell);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t{\n\t\t\t\t\taddCell(this.model.getChildAt(cell, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tvar change = changes[i];\n\t\t\n\t\tif (change.constructor != mxRootChange)\n\t\t{\n\t\t\tvar cell = null;\n\n\t\t\tif (change instanceof mxChildChange)\n\t\t\t{\n\t\t\t\tcell = change.child;\n\t\t\t}\n\t\t\telse if (change.cell != null && change.cell instanceof mxCell)\n\t\t\t{\n\t\t\t\tcell = change.cell;\n\t\t\t}\n\t\t\t\n\t\t\tif (cell != null)\n\t\t\t{\n\t\t\t\taddCell(cell);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: graphModelChanged\n * \n * Called when the graph model changes. Invokes <processChange> on each\n * item of the given array to update the view accordingly.\n * \n * Parameters:\n * \n * changes - Array that contains the individual changes.\n */\nmxGraph.prototype.graphModelChanged = function(changes)\n{\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tthis.processChange(changes[i]);\n\t}\n\n\tthis.updateSelection();\n\tthis.view.validate();\n\tthis.sizeDidChange();\n};\n\n/**\n * Function: updateSelection\n * \n * Removes selection cells that are not in the model from the selection.\n */\nmxGraph.prototype.updateSelection = function()\n{\n\tvar cells = this.getSelectionCells();\n\tvar removed = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (!this.model.contains(cells[i]) || !this.isCellVisible(cells[i]))\n\t\t{\n\t\t\tremoved.push(cells[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar par = this.model.getParent(cells[i]);\n\t\t\t\n\t\t\twhile (par != null && par != this.view.currentRoot)\n\t\t\t{\n\t\t\t\tif (this.isCellCollapsed(par) || !this.isCellVisible(par))\n\t\t\t\t{\n\t\t\t\t\tremoved.push(cells[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpar = this.model.getParent(par);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.removeSelectionCells(removed);\n};\n\n/**\n * Function: processChange\n * \n * Processes the given change and invalidates the respective cached data\n * in <view>. This fires a <root> event if the root has changed in the\n * model.\n * \n * Parameters:\n * \n * change - Object that represents the change on the model.\n */\nmxGraph.prototype.processChange = function(change)\n{\n\t// Resets the view settings, removes all cells and clears\n\t// the selection if the root changes.\n\tif (change instanceof mxRootChange)\n\t{\n\t\tthis.clearSelection();\n\t\tthis.setDefaultParent(null);\n\t\tthis.removeStateForCell(change.previous);\n\t\t\n\t\tif (this.resetViewOnRootChange)\n\t\t{\n\t\t\tthis.view.scale = 1;\n\t\t\tthis.view.translate.x = 0;\n\t\t\tthis.view.translate.y = 0;\n\t\t}\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t}\n\t\n\t// Adds or removes a child to the view by online invaliding\n\t// the minimal required portions of the cache, namely, the\n\t// old and new parent and the child.\n\telse if (change instanceof mxChildChange)\n\t{\n\t\tvar newParent = this.model.getParent(change.child);\n\t\tthis.view.invalidate(change.child, true, true);\n\t\t\n\t\tif (!this.model.contains(newParent) || this.isCellCollapsed(newParent))\n\t\t{\n\t\t\tthis.view.invalidate(change.child, true, true);\n\t\t\tthis.removeStateForCell(change.child);\n\t\t\t\n\t\t\t// Handles special case of current root of view being removed\n\t\t\tif (this.view.currentRoot == change.child)\n\t\t\t{\n\t\t\t\tthis.home();\n\t\t\t}\n\t\t}\n \n\t\tif (newParent != change.previous)\n\t\t{\n\t\t\t// Refreshes the collapse/expand icons on the parents\n\t\t\tif (newParent != null)\n\t\t\t{\n\t\t\t\tthis.view.invalidate(newParent, false, false);\n\t\t\t}\n\t\t\t\n\t\t\tif (change.previous != null)\n\t\t\t{\n\t\t\t\tthis.view.invalidate(change.previous, false, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handles two special cases where the shape does not need to be\n\t// recreated from scratch, it only needs to be invalidated.\n\telse if (change instanceof mxTerminalChange || change instanceof mxGeometryChange)\n\t{\n\t\t// Checks if the geometry has changed to avoid unnessecary revalidation\n\t\tif (change instanceof mxTerminalChange || ((change.previous == null && change.geometry != null) ||\n\t\t\t(change.previous != null && !change.previous.equals(change.geometry))))\n\t\t{\n\t\t\tthis.view.invalidate(change.cell);\n\t\t}\n\t}\n\n\t// Handles two special cases where only the shape, but no\n\t// descendants need to be recreated\n\telse if (change instanceof mxValueChange)\n\t{\n\t\tthis.view.invalidate(change.cell, false, false);\n\t}\n\t\n\t// Requires a new mxShape in JavaScript\n\telse if (change instanceof mxStyleChange)\n\t{\n\t\tthis.view.invalidate(change.cell, true, true);\n\t\tvar state = this.view.getState(change.cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tstate.invalidStyle = true;\n\t\t}\n\t}\n\t\n\t// Removes the state from the cache by default\n\telse if (change.cell != null && change.cell instanceof mxCell)\n\t{\n\t\tthis.removeStateForCell(change.cell);\n\t}\n};\n\n/**\n * Function: removeStateForCell\n * \n * Removes all cached information for the given cell and its descendants.\n * This is called when a cell was removed from the model.\n * \n * Paramters:\n * \n * cell - <mxCell> that was removed from the model.\n */\nmxGraph.prototype.removeStateForCell = function(cell)\n{\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.removeStateForCell(this.model.getChildAt(cell, i));\n\t}\n\n\tthis.view.invalidate(cell, false, true);\n\tthis.view.removeState(cell);\n};\n\n/**\n * Group: Overlays\n */\n\n/**\n * Function: addCellOverlay\n * \n * Adds an <mxCellOverlay> for the specified cell. This method fires an\n * <addoverlay> event and returns the new <mxCellOverlay>.\n * \n * Parameters:\n * \n * cell - <mxCell> to add the overlay for.\n * overlay - <mxCellOverlay> to be added for the cell.\n */\nmxGraph.prototype.addCellOverlay = function(cell, overlay)\n{\n\tif (cell.overlays == null)\n\t{\n\t\tcell.overlays = [];\n\t}\n\t\n\tcell.overlays.push(overlay);\n\n\tvar state = this.view.getState(cell);\n\n\t// Immediately updates the cell display if the state exists\n\tif (state != null)\n\t{\n\t\tthis.cellRenderer.redraw(state);\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.ADD_OVERLAY,\n\t\t\t'cell', cell, 'overlay', overlay));\n\t\n\treturn overlay;\n};\n\n/**\n * Function: getCellOverlays\n * \n * Returns the array of <mxCellOverlays> for the given cell or null, if\n * no overlays are defined.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlays should be returned.\n */\nmxGraph.prototype.getCellOverlays = function(cell)\n{\n\treturn cell.overlays;\n};\n\n/**\n * Function: removeCellOverlay\n * \n * Removes and returns the given <mxCellOverlay> from the given cell. This\n * method fires a <removeoverlay> event. If no overlay is given, then all\n * overlays are removed using <removeOverlays>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlay should be removed.\n * overlay - Optional <mxCellOverlay> to be removed.\n */\nmxGraph.prototype.removeCellOverlay = function(cell, overlay)\n{\n\tif (overlay == null)\n\t{\n\t\tthis.removeCellOverlays(cell);\n\t}\n\telse\n\t{\n\t\tvar index = mxUtils.indexOf(cell.overlays, overlay);\n\t\t\n\t\tif (index >= 0)\n\t\t{\n\t\t\tcell.overlays.splice(index, 1);\n\t\t\t\n\t\t\tif (cell.overlays.length == 0)\n\t\t\t{\n\t\t\t\tcell.overlays = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Immediately updates the cell display if the state exists\n\t\t\tvar state = this.view.getState(cell);\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\tthis.cellRenderer.redraw(state);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_OVERLAY,\n\t\t\t\t\t'cell', cell, 'overlay', overlay));\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\toverlay = null;\n\t\t}\n\t}\n\t\n\treturn overlay;\n};\n\n/**\n * Function: removeCellOverlays\n * \n * Removes all <mxCellOverlays> from the given cell. This method\n * fires a <removeoverlay> event for each <mxCellOverlay> and returns\n * the array of <mxCellOverlays> that was removed from the cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlays should be removed\n */\nmxGraph.prototype.removeCellOverlays = function(cell)\n{\n\tvar overlays = cell.overlays;\n\t\n\tif (overlays != null)\n\t{\n\t\tcell.overlays = null;\n\t\t\n\t\t// Immediately updates the cell display if the state exists\n\t\tvar state = this.view.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.cellRenderer.redraw(state);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < overlays.length; i++)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_OVERLAY,\n\t\t\t\t\t'cell', cell, 'overlay', overlays[i]));\n\t\t}\n\t}\n\t\n\treturn overlays;\n};\n\n/**\n * Function: clearCellOverlays\n * \n * Removes all <mxCellOverlays> in the graph for the given cell and all its\n * descendants. If no cell is specified then all overlays are removed from\n * the graph. This implementation uses <removeCellOverlays> to remove the\n * overlays from the individual cells.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> that represents the root of the subtree to\n * remove the overlays from. Default is the root in the model.\n */\nmxGraph.prototype.clearCellOverlays = function(cell)\n{\n\tcell = (cell != null) ? cell : this.model.getRoot();\n\tthis.removeCellOverlays(cell);\n\t\n\t// Recursively removes all overlays from the children\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.model.getChildAt(cell, i);\n\t\tthis.clearCellOverlays(child); // recurse\n\t}\n};\n\n/**\n * Function: setCellWarning\n * \n * Creates an overlay for the given cell using the warning and image or\n * <warningImage> and returns the new <mxCellOverlay>. The warning is\n * displayed as a tooltip in a red font and may contain HTML markup. If\n * the warning is null or a zero length string, then all overlays are\n * removed from the cell.\n * \n * Example:\n * \n * (code)\n * graph.setCellWarning(cell, '<b>Warning:</b>: Hello, World!');\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose warning should be set.\n * warning - String that represents the warning to be displayed.\n * img - Optional <mxImage> to be used for the overlay. Default is\n * <warningImage>.\n * isSelect - Optional boolean indicating if a click on the overlay\n * should select the corresponding cell. Default is false.\n */\nmxGraph.prototype.setCellWarning = function(cell, warning, img, isSelect)\n{\n\tif (warning != null && warning.length > 0)\n\t{\n\t\timg = (img != null) ? img : this.warningImage;\n\t\t\n\t\t// Creates the overlay with the image and warning\n\t\tvar overlay = new mxCellOverlay(img,\n\t\t\t'<font color=red>'+warning+'</font>');\n\t\t\n\t\t// Adds a handler for single mouseclicks to select the cell\n\t\tif (isSelect)\n\t\t{\n\t\t\toverlay.addListener(mxEvent.CLICK,\n\t\t\t\tmxUtils.bind(this, function(sender, evt)\n\t\t\t\t{\n\t\t\t\t\tif (this.isEnabled())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setSelectionCell(cell);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\t\n\t\t// Sets and returns the overlay in the graph\n\t\treturn this.addCellOverlay(cell, overlay);\n\t}\n\telse\n\t{\n\t\tthis.removeCellOverlays(cell);\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Group: In-place editing\n */\n\n/**\n * Function: startEditing\n * \n * Calls <startEditingAtCell> using the given cell or the first selection\n * cell.\n * \n * Parameters:\n * \n * evt - Optional mouse event that triggered the editing.\n */\nmxGraph.prototype.startEditing = function(evt)\n{\n\tthis.startEditingAtCell(null, evt);\n};\n\n/**\n * Function: startEditingAtCell\n * \n * Fires a <startEditing> event and invokes <mxCellEditor.startEditing>\n * on <editor>. After editing was started, a <editingStarted> event is\n * fired.\n * \n * Parameters:\n * \n * cell - <mxCell> to start the in-place editor for.\n * evt - Optional mouse event that triggered the editing.\n */\nmxGraph.prototype.startEditingAtCell = function(cell, evt)\n{\n\tif (evt == null || !mxEvent.isMultiTouchEvent(evt))\n\t{\n\t\tif (cell == null)\n\t\t{\n\t\t\tcell = this.getSelectionCell();\n\t\t\t\n\t\t\tif (cell != null && !this.isCellEditable(cell))\n\t\t\t{\n\t\t\t\tcell = null;\n\t\t\t}\n\t\t}\n\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.START_EDITING,\n\t\t\t\t\t'cell', cell, 'event', evt));\n\t\t\tthis.cellEditor.startEditing(cell, evt);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.EDITING_STARTED,\n\t\t\t\t\t'cell', cell, 'event', evt));\n\t\t}\n\t}\n};\n\n/**\n * Function: getEditingValue\n * \n * Returns the initial value for in-place editing. This implementation\n * returns <convertValueToString> for the given cell. If this function is\n * overridden, then <mxGraphModel.valueForCellChanged> should take care\n * of correctly storing the actual new value inside the user object.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the initial editing value should be returned.\n * evt - Optional mouse event that triggered the editor.\n */\nmxGraph.prototype.getEditingValue = function(cell, evt)\n{\n\treturn this.convertValueToString(cell);\n};\n\n/**\n * Function: stopEditing\n * \n * Stops the current editing  and fires a <editingStopped> event.\n * \n * Parameters:\n * \n * cancel - Boolean that specifies if the current editing value\n * should be stored.\n */\nmxGraph.prototype.stopEditing = function(cancel)\n{\n\tthis.cellEditor.stopEditing(cancel);\n\tthis.fireEvent(new mxEventObject(mxEvent.EDITING_STOPPED, 'cancel', cancel));\n};\n\n/**\n * Function: labelChanged\n * \n * Sets the label of the specified cell to the given value using\n * <cellLabelChanged> and fires <mxEvent.LABEL_CHANGED> while the\n * transaction is in progress. Returns the cell whose label was changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be changed.\n * value - New label to be assigned.\n * evt - Optional event that triggered the change.\n */\nmxGraph.prototype.labelChanged = function(cell, value, evt)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar old = cell.value;\n\t\tthis.cellLabelChanged(cell, value, this.isAutoSizeCell(cell));\n\t\tthis.fireEvent(new mxEventObject(mxEvent.LABEL_CHANGED,\n\t\t\t'cell', cell, 'value', value, 'old', old, 'event', evt));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellLabelChanged\n * \n * Sets the new label for a cell. If autoSize is true then\n * <cellSizeUpdated> will be called.\n * \n * In the following example, the function is extended to map changes to\n * attributes in an XML node, as shown in <convertValueToString>.\n * Alternatively, the handling of this can be implemented as shown in\n * <mxGraphModel.valueForCellChanged> without the need to clone the\n * user object.\n * \n * (code)\n * var graphCellLabelChanged = graph.cellLabelChanged;\n * graph.cellLabelChanged = function(cell, newValue, autoSize)\n * {\n * \t// Cloned for correct undo/redo\n * \tvar elt = cell.value.cloneNode(true);\n *  elt.setAttribute('label', newValue);\n *  \n *  newValue = elt;\n *  graphCellLabelChanged.apply(this, arguments);\n * };\n * (end) \n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be changed.\n * value - New label to be assigned.\n * autoSize - Boolean that specifies if <cellSizeUpdated> should be called.\n */\nmxGraph.prototype.cellLabelChanged = function(cell, value, autoSize)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.model.setValue(cell, value);\n\t\t\n\t\tif (autoSize)\n\t\t{\n\t\t\tthis.cellSizeUpdated(cell, false);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n};\n\n/**\n * Group: Event processing\n */\n\n/**\n * Function: escape\n * \n * Processes an escape keystroke.\n * \n * Parameters:\n * \n * evt - Mouseevent that represents the keystroke.\n */\nmxGraph.prototype.escape = function(evt)\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.ESCAPE, 'event', evt));\n};\n\n/**\n * Function: click\n * \n * Processes a singleclick on an optional cell and fires a <click> event.\n * The click event is fired initially. If the graph is enabled and the\n * event has not been consumed, then the cell is selected using\n * <selectCellForEvent> or the selection is cleared using\n * <clearSelection>. The events consumed state is set to true if the\n * corresponding <mxMouseEvent> has been consumed.\n *\n * To handle a click event, use the following code.\n * \n * (code)\n * graph.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var e = evt.getProperty('event'); // mouse event\n *   var cell = evt.getProperty('cell'); // cell may be null\n *   \n *   if (cell != null)\n *   {\n *     // Do something useful with cell and consume the event\n *     evt.consume();\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the single click.\n */\nmxGraph.prototype.click = function(me)\n{\n\tvar evt = me.getEvent();\n\tvar cell = me.getCell();\n\tvar mxe = new mxEventObject(mxEvent.CLICK, 'event', evt, 'cell', cell);\n\t\n\tif (me.isConsumed())\n\t{\n\t\tmxe.consume();\n\t}\n\t\n\tthis.fireEvent(mxe);\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed())\n\t{\n\t\tif (cell != null)\n\t\t{\n\t\t\tif (this.isTransparentClickEvent(evt))\n\t\t\t{\n\t\t\t\tvar active = false;\n\t\t\t\t\n\t\t\t\tvar tmp = this.getCellAt(me.graphX, me.graphY, null, null, null, mxUtils.bind(this, function(state)\n\t\t\t\t{\n\t\t\t\t\tvar selected = this.isCellSelected(state.cell);\n\t\t\t\t\tactive = active || selected;\n\t\t\t\t\t\n\t\t\t\t\treturn !active || selected;\n\t\t\t\t}));\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tcell = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.selectCellForEvent(cell, evt);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar swimlane = null;\n\t\t\t\n\t\t\tif (this.isSwimlaneSelectionEnabled())\n\t\t\t{\n\t\t\t\t// Gets the swimlane at the location (includes\n\t\t\t\t// content area of swimlanes)\n\t\t\t\tswimlane = this.getSwimlaneAt(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\n\t\t\t// Selects the swimlane and consumes the event\n\t\t\tif (swimlane != null)\n\t\t\t{\n\t\t\t\tthis.selectCellForEvent(swimlane, evt);\n\t\t\t}\n\t\t\t\n\t\t\t// Ignores the event if the control key is pressed\n\t\t\telse if (!this.isToggleEvent(evt))\n\t\t\t{\n\t\t\t\tthis.clearSelection();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: dblClick\n * \n * Processes a doubleclick on an optional cell and fires a <dblclick>\n * event. The event is fired initially. If the graph is enabled and the\n * event has not been consumed, then <edit> is called with the given\n * cell. The event is ignored if no cell was specified.\n *\n * Example for overriding this method.\n *\n * (code)\n * graph.dblClick = function(evt, cell)\n * {\n *   var mxe = new mxEventObject(mxEvent.DOUBLE_CLICK, 'event', evt, 'cell', cell);\n *   this.fireEvent(mxe);\n *   \n *   if (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed())\n *   {\n * \t   mxUtils.alert('Hello, World!');\n *     mxe.consume();\n *   }\n * }\n * (end)\n * \n * Example listener for this event.\n * \n * (code)\n * graph.addListener(mxEvent.DOUBLE_CLICK, function(sender, evt)\n * {\n *   var cell = evt.getProperty('cell');\n *   // do something with the cell and consume the\n *   // event to prevent in-place editing from start\n * });\n * (end) \n * \n * Parameters:\n * \n * evt - Mouseevent that represents the doubleclick.\n * cell - Optional <mxCell> under the mousepointer.\n */\nmxGraph.prototype.dblClick = function(evt, cell)\n{\n\tvar mxe = new mxEventObject(mxEvent.DOUBLE_CLICK, 'event', evt, 'cell', cell);\n\tthis.fireEvent(mxe);\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed() &&\n\t\tcell != null && this.isCellEditable(cell) && !this.isEditing(cell))\n\t{\n\t\tthis.startEditingAtCell(cell, evt);\n\t\tmxEvent.consume(evt);\n\t}\n};\n\n/**\n * Function: tapAndHold\n * \n * Handles the <mxMouseEvent> by highlighting the <mxCellState>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the touch event.\n * state - Optional <mxCellState> that is associated with the event.\n */\nmxGraph.prototype.tapAndHold = function(me)\n{\n\tvar evt = me.getEvent();\n\tvar mxe = new mxEventObject(mxEvent.TAP_AND_HOLD, 'event', evt, 'cell', me.getCell());\n\n\t// LATER: Check if event should be consumed if me is consumed\n\tthis.fireEvent(mxe);\n\n\tif (mxe.isConsumed())\n\t{\n\t\t// Resets the state of the panning handler\n\t\tthis.panningHandler.panningTrigger = false;\n\t}\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed() && this.connectionHandler.isEnabled())\n\t{\n\t\tvar state = this.view.getState(this.connectionHandler.marker.getCell(me));\n\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.connectionHandler.marker.currentColor = this.connectionHandler.marker.validColor;\n\t\t\tthis.connectionHandler.marker.markedState = state;\n\t\t\tthis.connectionHandler.marker.mark();\n\t\t\t\n\t\t\tthis.connectionHandler.first = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\tthis.connectionHandler.edgeState = this.connectionHandler.createEdgeState(me);\n\t\t\tthis.connectionHandler.previous = state;\n\t\t\tthis.connectionHandler.fireEvent(new mxEventObject(mxEvent.START, 'state', this.connectionHandler.previous));\n\t\t}\n\t}\n};\n\n/**\n * Function: scrollPointToVisible\n * \n * Scrolls the graph to the given point, extending the graph container if\n * specified.\n */\nmxGraph.prototype.scrollPointToVisible = function(x, y, extend, border)\n{\n\tif (!this.timerAutoScroll && (this.ignoreScrollbars || mxUtils.hasScrollbars(this.container)))\n\t{\n\t\tvar c = this.container;\n\t\tborder = (border != null) ? border : 20;\n\t\t\n\t\tif (x >= c.scrollLeft && y >= c.scrollTop && x <= c.scrollLeft + c.clientWidth &&\n\t\t\ty <= c.scrollTop + c.clientHeight)\n\t\t{\n\t\t\tvar dx = c.scrollLeft + c.clientWidth - x;\n\t\t\t\n\t\t\tif (dx < border)\n\t\t\t{\n\t\t\t\tvar old = c.scrollLeft;\n\t\t\t\tc.scrollLeft += border - dx;\n\n\t\t\t\t// Automatically extends the canvas size to the bottom, right\n\t\t\t\t// if the event is outside of the canvas and the edge of the\n\t\t\t\t// canvas has been reached. Notes: Needs fix for IE.\n\t\t\t\tif (extend && old == c.scrollLeft)\n\t\t\t\t{\n\t\t\t\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\t\t\tvar width = this.container.scrollWidth + border - dx;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Updates the clipping region. This is an expensive\n\t\t\t\t\t\t// operation that should not be executed too often.\n\t\t\t\t\t\troot.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar width = Math.max(c.clientWidth, c.scrollWidth) + border - dx;\n\t\t\t\t\t\tvar canvas = this.view.getCanvas();\n\t\t\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tc.scrollLeft += border - dx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdx = x - c.scrollLeft;\n\t\t\t\t\n\t\t\t\tif (dx < border)\n\t\t\t\t{\n\t\t\t\t\tc.scrollLeft -= border - dx;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar dy = c.scrollTop + c.clientHeight - y;\n\t\t\t\n\t\t\tif (dy < border)\n\t\t\t{\n\t\t\t\tvar old = c.scrollTop;\n\t\t\t\tc.scrollTop += border - dy;\n\n\t\t\t\tif (old == c.scrollTop && extend)\n\t\t\t\t{\n\t\t\t\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\t\t\tvar height = this.container.scrollHeight + border - dy;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Updates the clipping region. This is an expensive\n\t\t\t\t\t\t// operation that should not be executed too often.\n\t\t\t\t\t\troot.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar height = Math.max(c.clientHeight, c.scrollHeight) + border - dy;\n\t\t\t\t\t\tvar canvas = this.view.getCanvas();\n\t\t\t\t\t\tcanvas.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tc.scrollTop += border - dy;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdy = y - c.scrollTop;\n\t\t\t\t\n\t\t\t\tif (dy < border)\n\t\t\t\t{\n\t\t\t\t\tc.scrollTop -= border - dy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if (this.allowAutoPanning && !this.panningHandler.isActive())\n\t{\n\t\tif (this.panningManager == null)\n\t\t{\n\t\t\tthis.panningManager = this.createPanningManager();\n\t\t}\n\n\t\tthis.panningManager.panTo(x + this.panDx, y + this.panDy);\n\t}\n};\n\n\n/**\n * Function: createPanningManager\n * \n * Creates and returns an <mxPanningManager>.\n */\nmxGraph.prototype.createPanningManager = function()\n{\n\treturn new mxPanningManager(this);\n};\n\n/**\n * Function: getBorderSizes\n * \n * Returns the size of the border and padding on all four sides of the\n * container. The left, top, right and bottom borders are stored in the x, y,\n * width and height of the returned <mxRectangle>, respectively.\n */\nmxGraph.prototype.getBorderSizes = function()\n{\n\tvar css = mxUtils.getCurrentStyle(this.container);\n\t\n\treturn new mxRectangle(mxUtils.parseCssNumber(css.paddingLeft) +\n\t\t\t((css.borderLeftStyle != 'none') ? mxUtils.parseCssNumber(css.borderLeftWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingTop) +\n\t\t\t((css.borderTopStyle != 'none') ? mxUtils.parseCssNumber(css.borderTopWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingRight) +\n\t\t\t((css.borderRightStyle != 'none') ? mxUtils.parseCssNumber(css.borderRightWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingBottom) +\n\t\t\t((css.borderBottomStyle != 'none') ? mxUtils.parseCssNumber(css.borderBottomWidth) : 0));\n};\n\n/**\n * Function: getPreferredPageSize\n * \n * Returns the preferred size of the background page if <preferPageSize> is true.\n */\nmxGraph.prototype.getPreferredPageSize = function(bounds, width, height)\n{\n\tvar scale = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar fmt = this.pageFormat;\n\tvar ps = this.pageScale;\n\tvar page = new mxRectangle(0, 0, Math.ceil(fmt.width * ps), Math.ceil(fmt.height * ps));\n\t\n\tvar hCount = (this.pageBreaksVisible) ? Math.ceil(width / page.width) : 1;\n\tvar vCount = (this.pageBreaksVisible) ? Math.ceil(height / page.height) : 1;\n\t\n\treturn new mxRectangle(0, 0, hCount * page.width + 2 + tr.x, vCount * page.height + 2 + tr.y);\n};\n\n/**\n * Function: fit\n *\n * Scales the graph such that the complete diagram fits into <container> and\n * returns the current scale in the view. To fit an initial graph prior to\n * rendering, set <mxGraphView.rendering> to false prior to changing the model\n * and execute the following after changing the model.\n * \n * (code)\n * graph.fit();\n * graph.view.rendering = true;\n * graph.refresh();\n * (end)\n * \n * To fit and center the graph, the following code can be used.\n * \n * (code)\n * var margin = 2;\n * var max = 3;\n * \n * var bounds = graph.getGraphBounds();\n * var cw = graph.container.clientWidth - margin;\n * var ch = graph.container.clientHeight - margin;\n * var w = bounds.width / graph.view.scale;\n * var h = bounds.height / graph.view.scale;\n * var s = Math.min(max, Math.min(cw / w, ch / h));\n * \n * graph.view.scaleAndTranslate(s,\n *   (margin + cw - w * s) / (2 * s) - bounds.x / graph.view.scale,\n *   (margin + ch - h * s) / (2 * s) - bounds.y / graph.view.scale);\n * (end)\n * \n * Parameters:\n * \n * border - Optional number that specifies the border. Default is <border>.\n * keepOrigin - Optional boolean that specifies if the translate should be\n * changed. Default is false.\n * margin - Optional margin in pixels. Default is 0.\n * enabled - Optional boolean that specifies if the scale should be set or\n * just returned. Default is true.\n * ignoreWidth - Optional boolean that specifies if the width should be\n * ignored. Default is false.\n * ignoreHeight - Optional boolean that specifies if the height should be\n * ignored. Default is false.\n * maxHeight - Optional maximum height.\n */\nmxGraph.prototype.fit = function(border, keepOrigin, margin, enabled, ignoreWidth, ignoreHeight, maxHeight)\n{\n\tif (this.container != null)\n\t{\n\t\tborder = (border != null) ? border : this.getBorder();\n\t\tkeepOrigin = (keepOrigin != null) ? keepOrigin : false;\n\t\tmargin = (margin != null) ? margin : 0;\n\t\tenabled = (enabled != null) ? enabled : true;\n\t\tignoreWidth = (ignoreWidth != null) ? ignoreWidth : false;\n\t\tignoreHeight = (ignoreHeight != null) ? ignoreHeight : false;\n\t\t\n\t\t// Adds spacing and border from css\n\t\tvar cssBorder = this.getBorderSizes();\n\t\tvar w1 = this.container.offsetWidth - cssBorder.x - cssBorder.width - 1;\n\t\tvar h1 = (maxHeight != null) ? maxHeight : this.container.offsetHeight - cssBorder.y - cssBorder.height - 1;\n\t\tvar bounds = this.view.getGraphBounds();\n\t\t\n\t\tif (bounds.width > 0 && bounds.height > 0)\n\t\t{\n\t\t\tif (keepOrigin && bounds.x != null && bounds.y != null)\n\t\t\t{\n\t\t\t\tbounds = bounds.clone();\n\t\t\t\tbounds.width += bounds.x;\n\t\t\t\tbounds.height += bounds.y;\n\t\t\t\tbounds.x = 0;\n\t\t\t\tbounds.y = 0;\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Use unscaled bounding boxes to fix rounding errors\n\t\t\tvar s = this.view.scale;\n\t\t\tvar w2 = bounds.width / s;\n\t\t\tvar h2 = bounds.height / s;\n\t\t\t\n\t\t\t// Fits to the size of the background image if required\n\t\t\tif (this.backgroundImage != null)\n\t\t\t{\n\t\t\t\tw2 = Math.max(w2, this.backgroundImage.width - bounds.x / s);\n\t\t\t\th2 = Math.max(h2, this.backgroundImage.height - bounds.y / s);\n\t\t\t}\n\t\t\t\n\t\t\tvar b = ((keepOrigin) ? border : 2 * border) + margin + 1;\n\n\t\t\tw1 -= b;\n\t\t\th1 -= b;\n\t\t\t\n\t\t\tvar s2 = (((ignoreWidth) ? h1 / h2 : (ignoreHeight) ? w1 / w2 :\n\t\t\t\tMath.min(w1 / w2, h1 / h2)));\n\t\t\t\n\t\t\tif (this.minFitScale != null)\n\t\t\t{\n\t\t\t\ts2 = Math.max(s2, this.minFitScale);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.maxFitScale != null)\n\t\t\t{\n\t\t\t\ts2 = Math.min(s2, this.maxFitScale);\n\t\t\t}\n\t\n\t\t\tif (enabled)\n\t\t\t{\n\t\t\t\tif (!keepOrigin)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.hasScrollbars(this.container))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar x0 = (bounds.x != null) ? Math.floor(this.view.translate.x - bounds.x / s + border / s2 + margin / 2) : border;\n\t\t\t\t\t\tvar y0 = (bounds.y != null) ? Math.floor(this.view.translate.y - bounds.y / s + border / s2 + margin / 2) : border;\n\n\t\t\t\t\t\tthis.view.scaleAndTranslate(s2, x0, y0);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.view.setScale(s2);\n\t\t\t\t\t\tvar b2 = this.getGraphBounds();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (b2.x != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.container.scrollLeft = b2.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (b2.y != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.container.scrollTop = b2.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.view.scale != s2)\n\t\t\t\t{\n\t\t\t\t\tthis.view.setScale(s2);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn s2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.view.scale;\n};\n\n/**\n * Function: sizeDidChange\n * \n * Called when the size of the graph has changed. This implementation fires\n * a <size> event after updating the clipping region of the SVG element in\n * SVG-bases browsers.\n */\nmxGraph.prototype.sizeDidChange = function()\n{\n\tvar bounds = this.getGraphBounds();\n\t\n\tif (this.container != null)\n\t{\n\t\tvar border = this.getBorder();\n\t\t\n\t\tvar width = Math.max(0, bounds.x + bounds.width + border);\n\t\tvar height = Math.max(0, bounds.y + bounds.height + border);\n\t\t\n\t\tif (this.minimumContainerSize != null)\n\t\t{\n\t\t\twidth = Math.max(width, this.minimumContainerSize.width);\n\t\t\theight = Math.max(height, this.minimumContainerSize.height);\n\t\t}\n\n\t\tif (this.resizeContainer)\n\t\t{\n\t\t\tthis.doResizeContainer(width, height);\n\t\t}\n\n\t\tif (this.preferPageSize || (!mxClient.IS_IE && this.pageVisible))\n\t\t{\n\t\t\tvar size = this.getPreferredPageSize(bounds, Math.max(1, width), Math.max(1, height));\n\t\t\t\n\t\t\tif (size != null)\n\t\t\t{\n\t\t\t\twidth = size.width * this.view.scale;\n\t\t\t\theight = size.height * this.view.scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.minimumGraphSize != null)\n\t\t{\n\t\t\twidth = Math.max(width, this.minimumGraphSize.width * this.view.scale);\n\t\t\theight = Math.max(height, this.minimumGraphSize.height * this.view.scale);\n\t\t}\n\n\t\twidth = Math.ceil(width);\n\t\theight = Math.ceil(height);\n\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\n\t\t\tif (root != null)\n\t\t\t{\n\t\t\t\troot.style.minWidth = Math.max(1, width) + 'px';\n\t\t\t\troot.style.minHeight = Math.max(1, height) + 'px';\n\t\t\t\troot.style.width = '100%';\n\t\t\t\troot.style.height = '100%';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\t// Quirks mode does not support minWidth/-Height\n\t\t\t\tthis.view.updateHtmlCanvasSize(Math.max(1, width), Math.max(1, height));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.view.canvas.style.minWidth = Math.max(1, width) + 'px';\n\t\t\t\tthis.view.canvas.style.minHeight = Math.max(1, height) + 'px';\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.updatePageBreaks(this.pageBreaksVisible, width, height);\n\t}\n\n\tthis.fireEvent(new mxEventObject(mxEvent.SIZE, 'bounds', bounds));\n};\n\n/**\n * Function: doResizeContainer\n * \n * Resizes the container for the given graph width and height.\n */\nmxGraph.prototype.doResizeContainer = function(width, height)\n{\n\tif (this.maximumContainerSize != null)\n\t{\n\t\twidth = Math.min(this.maximumContainerSize.width, width);\n\t\theight = Math.min(this.maximumContainerSize.height, height);\n\t}\n\n\tthis.container.style.width = Math.ceil(width) + 'px';\n\tthis.container.style.height = Math.ceil(height) + 'px';\n};\n\n/**\n * Function: updatePageBreaks\n * \n * Invokes from <sizeDidChange> to redraw the page breaks.\n * \n * Parameters:\n * \n * visible - Boolean that specifies if page breaks should be shown.\n * width - Specifies the width of the container in pixels.\n * height - Specifies the height of the container in pixels.\n */\nmxGraph.prototype.updatePageBreaks = function(visible, width, height)\n{\n\tvar scale = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar fmt = this.pageFormat;\n\tvar ps = scale * this.pageScale;\n\tvar bounds = new mxRectangle(0, 0, fmt.width * ps, fmt.height * ps);\n\n\tvar gb = mxRectangle.fromRectangle(this.getGraphBounds());\n\tgb.width = Math.max(1, gb.width);\n\tgb.height = Math.max(1, gb.height);\n\t\n\tbounds.x = Math.floor((gb.x - tr.x * scale) / bounds.width) * bounds.width + tr.x * scale;\n\tbounds.y = Math.floor((gb.y - tr.y * scale) / bounds.height) * bounds.height + tr.y * scale;\n\t\n\tgb.width = Math.ceil((gb.width + (gb.x - bounds.x)) / bounds.width) * bounds.width;\n\tgb.height = Math.ceil((gb.height + (gb.y - bounds.y)) / bounds.height) * bounds.height;\n\t\n\t// Does not show page breaks if the scale is too small\n\tvisible = visible && Math.min(bounds.width, bounds.height) > this.minPageBreakDist;\n\n\tvar horizontalCount = (visible) ? Math.ceil(gb.height / bounds.height) + 1 : 0;\n\tvar verticalCount = (visible) ? Math.ceil(gb.width / bounds.width) + 1 : 0;\n\tvar right = (verticalCount - 1) * bounds.width;\n\tvar bottom = (horizontalCount - 1) * bounds.height;\n\t\n\tif (this.horizontalPageBreaks == null && horizontalCount > 0)\n\t{\n\t\tthis.horizontalPageBreaks = [];\n\t}\n\n\tif (this.verticalPageBreaks == null && verticalCount > 0)\n\t{\n\t\tthis.verticalPageBreaks = [];\n\t}\n\t\n\tvar drawPageBreaks = mxUtils.bind(this, function(breaks)\n\t{\n\t\tif (breaks != null)\n\t\t{\n\t\t\tvar count = (breaks == this.horizontalPageBreaks) ? horizontalCount : verticalCount; \n\t\t\t\n\t\t\tfor (var i = 0; i <= count; i++)\n\t\t\t{\n\t\t\t\tvar pts = (breaks == this.horizontalPageBreaks) ?\n\t\t\t\t\t[new mxPoint(Math.round(bounds.x), Math.round(bounds.y + i * bounds.height)),\n\t\t\t         new mxPoint(Math.round(bounds.x + right), Math.round(bounds.y + i * bounds.height))] :\n\t\t\t        [new mxPoint(Math.round(bounds.x + i * bounds.width), Math.round(bounds.y)),\n\t\t\t         new mxPoint(Math.round(bounds.x + i * bounds.width), Math.round(bounds.y + bottom))];\n\n\t\t\t\tif (breaks[i] != null)\n\t\t\t\t{\n\t\t\t\t\tbreaks[i].points = pts;\n\t\t\t\t\tbreaks[i].redraw();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar pageBreak = new mxPolyline(pts, this.pageBreakColor);\n\t\t\t\t\tpageBreak.dialect = this.dialect;\n\t\t\t\t\tpageBreak.pointerEvents = false;\n\t\t\t\t\tpageBreak.isDashed = this.pageBreakDashed;\n\t\t\t\t\tpageBreak.init(this.view.backgroundPane);\n\t\t\t\t\tpageBreak.redraw();\n\t\t\t\t\t\n\t\t\t\t\tbreaks[i] = pageBreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = count; i < breaks.length; i++)\n\t\t\t{\n\t\t\t\tbreaks[i].destroy();\n\t\t\t}\n\t\t\t\n\t\t\tbreaks.splice(count, breaks.length - count);\n\t\t}\n\t});\n\t\n\tdrawPageBreaks(this.horizontalPageBreaks);\n\tdrawPageBreaks(this.verticalPageBreaks);\n};\n\n/**\n * Group: Cell styles\n */\n\n/**\n * Function: getCellStyle\n * \n * Returns an array of key, value pairs representing the cell style for the\n * given cell. If no string is defined in the model that specifies the\n * style, then the default style for the cell is returned or an empty object,\n * if no style can be found. Note: You should try and get the cell state\n * for the given cell and use the cached style in the state before using\n * this method.\n * \n * Parameters:\n * \n * cell - <mxCell> whose style should be returned as an array.\n */\nmxGraph.prototype.getCellStyle = function(cell)\n{\n\tvar stylename = this.model.getStyle(cell);\n\tvar style = null;\n\t\n\t// Gets the default style for the cell\n\tif (this.model.isEdge(cell))\n\t{\n\t\tstyle = this.stylesheet.getDefaultEdgeStyle();\n\t}\n\telse\n\t{\n\t\tstyle = this.stylesheet.getDefaultVertexStyle();\n\t}\n\t\n\t// Resolves the stylename using the above as the default\n\tif (stylename != null)\n\t{\n\t\tstyle = this.postProcessCellStyle(this.stylesheet.getCellStyle(stylename, style));\n\t}\n\t\n\t// Returns a non-null value if no style can be found\n\tif (style == null)\n\t{\n\t\tstyle = new Object();\n\t}\n\t\n\treturn style;\n};\n\n/**\n * Function: postProcessCellStyle\n * \n * Tries to resolve the value for the image style in the image bundles and\n * turns short data URIs as defined in mxImageBundle to data URIs as\n * defined in RFC 2397 of the IETF.\n */\nmxGraph.prototype.postProcessCellStyle = function(style)\n{\n\tif (style != null)\n\t{\n\t\tvar key = style[mxConstants.STYLE_IMAGE];\n\t\tvar image = this.getImageFromBundles(key);\n\n\t\tif (image != null)\n\t\t{\n\t\t\tstyle[mxConstants.STYLE_IMAGE] = image;\n\t\t}\n\t\telse\n\t\t{\n\t\t\timage = key;\n\t\t}\n\t\t\n\t\t// Converts short data uris to normal data uris\n\t\tif (image != null && image.substring(0, 11) == 'data:image/')\n\t\t{\n\t\t\tif (image.substring(0, 20) == 'data:image/svg+xml,<')\n\t\t\t{\n\t\t\t\t// Required for FF and IE11\n\t\t\t\timage = image.substring(0, 19) + encodeURIComponent(image.substring(19));\n\t\t\t}\n\t\t\telse if (image.substring(0, 22) != 'data:image/svg+xml,%3C')\n\t\t\t{\n\t\t\t\tvar comma = image.indexOf(',');\n\t\t\t\t\n\t\t\t\t// Adds base64 encoding prefix if needed\n\t\t\t\tif (comma > 0 && image.substring(comma - 7, comma + 1) != ';base64,')\n\t\t\t\t{\n\t\t\t\t\timage = image.substring(0, comma) + ';base64,'\n\t\t\t\t\t\t+ image.substring(comma + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tstyle[mxConstants.STYLE_IMAGE] = image;\n\t\t}\n\t}\n\n\treturn style;\n};\n\n/**\n * Function: setCellStyle\n * \n * Sets the style of the specified cells. If no cells are given, then the\n * selection cells are changed.\n * \n * Parameters:\n * \n * style - String representing the new style of the cells.\n * cells - Optional array of <mxCells> to set the style for. Default is the\n * selection cells.\n */\nmxGraph.prototype.setCellStyle = function(style, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\t\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.model.setStyle(cells[i], style);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: toggleCellStyle\n * \n * Toggles the boolean value for the given key in the style of the given cell\n * and returns the new value as 0 or 1. If no cell is specified then the\n * selection cell is used.\n * \n * Parameter:\n * \n * key - String representing the key for the boolean value to be toggled.\n * defaultValue - Optional boolean default value if no value is defined.\n * Default is false.\n * cell - Optional <mxCell> whose style should be modified. Default is\n * the selection cell.\n */\nmxGraph.prototype.toggleCellStyle = function(key, defaultValue, cell)\n{\n\tcell = cell || this.getSelectionCell();\n\t\n\treturn this.toggleCellStyles(key, defaultValue, [cell]);\n};\n\n/**\n * Function: toggleCellStyles\n * \n * Toggles the boolean value for the given key in the style of the given cells\n * and returns the new value as 0 or 1. If no cells are specified, then the\n * selection cells are used. For example, this can be used to toggle\n * <mxConstants.STYLE_ROUNDED> or any other style with a boolean value.\n * \n * Parameter:\n * \n * key - String representing the key for the boolean value to be toggled.\n * defaultValue - Optional boolean default value if no value is defined.\n * Default is false.\n * cells - Optional array of <mxCells> whose styles should be modified.\n * Default is the selection cells.\n */\nmxGraph.prototype.toggleCellStyles = function(key, defaultValue, cells)\n{\n\tdefaultValue = (defaultValue != null) ? defaultValue : false;\n\tcells = cells || this.getSelectionCells();\n\tvar value = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar state = this.view.getState(cells[0]);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cells[0]);\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvalue = (mxUtils.getValue(style, key, defaultValue)) ? 0 : 1;\n\t\t\tthis.setCellStyles(key, value, cells);\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: setCellStyles\n * \n * Sets the key to value in the styles of the given cells. This will modify\n * the existing cell styles in-place and override any existing assignment\n * for the given key. If no cells are specified, then the selection cells\n * are changed. If no value is specified, then the respective key is\n * removed from the styles.\n * \n * Parameters:\n * \n * key - String representing the key to be assigned.\n * value - String representing the new value for the key.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.setCellStyles = function(key, value, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\tmxUtils.setCellStyles(this.model, cells, key, value);\n};\n\n/**\n * Function: toggleCellStyleFlags\n * \n * Toggles the given bit for the given key in the styles of the specified\n * cells.\n * \n * Parameters:\n * \n * key - String representing the key to toggle the flag in.\n * flag - Integer that represents the bit to be toggled.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.toggleCellStyleFlags = function(key, flag, cells)\n{\n\tthis.setCellStyleFlags(key, flag, null, cells);\n};\n\n/**\n * Function: setCellStyleFlags\n * \n * Sets or toggles the given bit for the given key in the styles of the\n * specified cells.\n * \n * Parameters:\n * \n * key - String representing the key to toggle the flag in.\n * flag - Integer that represents the bit to be toggled.\n * value - Boolean value to be used or null if the value should be toggled.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.setCellStyleFlags = function(key, flag, value, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tif (value == null)\n\t\t{\n\t\t\tvar state = this.view.getState(cells[0]);\n\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(cells[0]);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tvar current = parseInt(style[key] || 0);\n\t\t\t\tvalue = !((current & flag) == flag);\n\t\t\t}\n\t\t}\n\n\t\tmxUtils.setCellStyleFlags(this.model, cells, key, flag, value);\n\t}\n};\n\n/**\n * Group: Cell alignment and orientation\n */\n\n/**\n * Function: alignCells\n * \n * Aligns the given cells vertically or horizontally according to the given\n * alignment using the optional parameter as the coordinate.\n * \n * Parameters:\n * \n * align - Specifies the alignment. Possible values are all constants in\n * mxConstants with an ALIGN prefix.\n * cells - Array of <mxCells> to be aligned.\n * param - Optional coordinate for the alignment.\n */\nmxGraph.prototype.alignCells = function(align, cells, param)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tif (cells != null && cells.length > 1)\n\t{\n\t\t// Finds the required coordinate for the alignment\n\t\tif (param == null)\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\n\t\t\t\tif (state != null && !this.model.isEdge(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tif (param == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x + state.width / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x + state.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y + state.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y + state.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.max(param, state.x + state.width);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.min(param, state.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.max(param, state.y + state.height);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.min(param, state.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Aligns the cells to the coordinate\n\t\tif (param != null)\n\t\t{\n\t\t\tvar s = this.view.scale;\n\n\t\t\tthis.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (geo != null && !this.model.isEdge(cells[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x - state.width / 2) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x - state.width) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y - state.height / 2) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y - state.height) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.resizeCell(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ALIGN_CELLS,\n\t\t\t\t\t\t'align', align, 'cells', cells));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.model.endUpdate();\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: flipEdge\n * \n * Toggles the style of the given edge between null (or empty) and\n * <alternateEdgeStyle>. This method fires <mxEvent.FLIP_EDGE> while the\n * transaction is in progress. Returns the edge that was flipped.\n * \n * Here is an example that overrides this implementation to invert the\n * value of <mxConstants.STYLE_ELBOW> without removing any existing styles.\n * \n * (code)\n * graph.flipEdge = function(edge)\n * {\n *   if (edge != null)\n *   {\n *     var state = this.view.getState(edge);\n *     var style = (state != null) ? state.style : this.getCellStyle(edge);\n *     \n *     if (style != null)\n *     {\n *       var elbow = mxUtils.getValue(style, mxConstants.STYLE_ELBOW,\n *           mxConstants.ELBOW_HORIZONTAL);\n *       var value = (elbow == mxConstants.ELBOW_HORIZONTAL) ?\n *           mxConstants.ELBOW_VERTICAL : mxConstants.ELBOW_HORIZONTAL;\n *       this.setCellStyles(mxConstants.STYLE_ELBOW, value, [edge]);\n *     }\n *   }\n * };\n * (end)\n * \n * Parameters:\n * \n * edge - <mxCell> whose style should be changed.\n */\nmxGraph.prototype.flipEdge = function(edge)\n{\n\tif (edge != null &&\n\t\tthis.alternateEdgeStyle != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar style = this.model.getStyle(edge);\n\n\t\t\tif (style == null || style.length == 0)\n\t\t\t{\n\t\t\t\tthis.model.setStyle(edge, this.alternateEdgeStyle);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.model.setStyle(edge, null);\n\t\t\t}\n\n\t\t\t// Removes all existing control points\n\t\t\tthis.resetEdge(edge);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.FLIP_EDGE, 'edge', edge));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: addImageBundle\n *\n * Adds the specified <mxImageBundle>.\n */\nmxGraph.prototype.addImageBundle = function(bundle)\n{\n\tthis.imageBundles.push(bundle);\n};\n\n/**\n * Function: removeImageBundle\n * \n * Removes the specified <mxImageBundle>.\n */\nmxGraph.prototype.removeImageBundle = function(bundle)\n{\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < this.imageBundles.length; i++)\n\t{\n\t\tif (this.imageBundles[i] != bundle)\n\t\t{\n\t\t\ttmp.push(this.imageBundles[i]);\n\t\t}\n\t}\n\t\n\tthis.imageBundles = tmp;\n};\n\n/**\n * Function: getImageFromBundles\n *\n * Searches all <imageBundles> for the specified key and returns the value\n * for the first match or null if the key is not found.\n */\nmxGraph.prototype.getImageFromBundles = function(key)\n{\n\tif (key != null)\n\t{\n\t\tfor (var i = 0; i < this.imageBundles.length; i++)\n\t\t{\n\t\t\tvar image = this.imageBundles[i].getImage(key);\n\t\t\t\n\t\t\tif (image != null)\n\t\t\t{\n\t\t\t\treturn image;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Group: Order\n */\n\n/**\n * Function: orderCells\n * \n * Moves the given cells to the front or back. The change is carried out\n * using <cellsOrdered>. This method fires <mxEvent.ORDER_CELLS> while the\n * transaction is in progress.\n * \n * Parameters:\n * \n * back - Boolean that specifies if the cells should be moved to back.\n * cells - Array of <mxCells> to move to the background. If null is\n * specified then the selection cells are used.\n */\nmxGraph.prototype.orderCells = function(back, cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = mxUtils.sortCells(this.getSelectionCells(), true);\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsOrdered(cells, back);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ORDER_CELLS,\n\t\t\t\t'back', back, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsOrdered\n * \n * Moves the given cells to the front or back. This method fires\n * <mxEvent.CELLS_ORDERED> while the transaction is in progress.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose order should be changed.\n * back - Boolean that specifies if the cells should be moved to back.\n */\nmxGraph.prototype.cellsOrdered = function(cells, back)\n{\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\n\t\t\t\tif (back)\n\t\t\t\t{\n\t\t\t\t\tthis.model.add(parent, cells[i], i);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.model.add(parent, cells[i],\n\t\t\t\t\t\t\tthis.model.getChildCount(parent) - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_ORDERED,\n\t\t\t\t\t'back', back, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Grouping\n */\n\n/**\n * Function: groupCells\n * \n * Adds the cells into the given group. The change is carried out using\n * <cellsAdded>, <cellsMoved> and <cellsResized>. This method fires\n * <mxEvent.GROUP_CELLS> while the transaction is in progress. Returns the\n * new group. A group is only created if there is at least one entry in the\n * given array of cells.\n * \n * Parameters:\n * \n * group - <mxCell> that represents the target group. If null is specified\n * then a new group is created using <createGroupCell>.\n * border - Optional integer that specifies the border between the child\n * area and the group bounds. Default is 0.\n * cells - Optional array of <mxCells> to be grouped. If null is specified\n * then the selection cells are used.\n */\nmxGraph.prototype.groupCells = function(group, border, cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = mxUtils.sortCells(this.getSelectionCells(), true);\n\t}\n\n\tcells = this.getCellsForGroup(cells);\n\n\tif (group == null)\n\t{\n\t\tgroup = this.createGroupCell(cells);\n\t}\n\n\tvar bounds = this.getBoundsForGroup(group, cells, border);\n\n\tif (cells.length > 0 && bounds != null)\n\t{\n\t\t// Uses parent of group or previous parent of first child\n\t\tvar parent = this.model.getParent(group);\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.model.getParent(cells[0]);\n\t\t}\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Checks if the group has a geometry and\n\t\t\t// creates one if one does not exist\n\t\t\tif (this.getCellGeometry(group) == null)\n\t\t\t{\n\t\t\t\tthis.model.setGeometry(group, new mxGeometry());\n\t\t\t}\n\n\t\t\t// Adds the group into the parent\n\t\t\tvar index = this.model.getChildCount(parent);\n\t\t\tthis.cellsAdded([group], parent, index, null, null, false, false, false);\n\n\t\t\t// Adds the children into the group and moves\n\t\t\tindex = this.model.getChildCount(group);\n\t\t\tthis.cellsAdded(cells, group, index, null, null, false, false, false);\n\t\t\tthis.cellsMoved(cells, -bounds.x, -bounds.y, false, false, false);\n\n\t\t\t// Resizes the group\n\t\t\tthis.cellsResized([group], [bounds], false);\n\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.GROUP_CELLS,\n\t\t\t\t\t'group', group, 'border', border, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn group;\n};\n\n/**\n * Function: getCellsForGroup\n * \n * Returns the cells with the same parent as the first cell\n * in the given array.\n */\nmxGraph.prototype.getCellsForGroup = function(cells)\n{\n\tvar result = [];\n\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar parent = this.model.getParent(cells[0]);\n\t\tresult.push(cells[0]);\n\n\t\t// Filters selection cells with the same parent\n\t\tfor (var i = 1; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.getParent(cells[i]) == parent)\n\t\t\t{\n\t\t\t\tresult.push(cells[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getBoundsForGroup\n * \n * Returns the bounds to be used for the given group and children.\n */\nmxGraph.prototype.getBoundsForGroup = function(group, children, border)\n{\n\tvar result = this.getBoundingBoxFromGeometry(children, true);\n\t\n\tif (result != null)\n\t{\n\t\tif (this.isSwimlane(group))\n\t\t{\n\t\t\tvar size = this.getStartSize(group);\n\t\t\t\n\t\t\tresult.x -= size.width;\n\t\t\tresult.y -= size.height;\n\t\t\tresult.width += size.width;\n\t\t\tresult.height += size.height;\n\t\t}\n\t\t\n\t\t// Adds the border\n\t\tif (border != null)\n\t\t{\n\t\t\tresult.x -= border;\n\t\t\tresult.y -= border;\n\t\t\tresult.width += 2 * border;\n\t\t\tresult.height += 2 * border;\n\t\t}\n\t}\t\t\t\n\t\n\treturn result;\n};\n\n/**\n * Function: createGroupCell\n * \n * Hook for creating the group cell to hold the given array of <mxCells> if\n * no group cell was given to the <group> function.\n * \n * The following code can be used to set the style of new group cells.\n * \n * (code)\n * var graphCreateGroupCell = graph.createGroupCell;\n * graph.createGroupCell = function(cells)\n * {\n *   var group = graphCreateGroupCell.apply(this, arguments);\n *   group.setStyle('group');\n *   \n *   return group;\n * };\n */\nmxGraph.prototype.createGroupCell = function(cells)\n{\n\tvar group = new mxCell('');\n\tgroup.setVertex(true);\n\tgroup.setConnectable(false);\n\t\n\treturn group;\n};\n\n/**\n * Function: ungroupCells\n * \n * Ungroups the given cells by moving the children the children to their\n * parents parent and removing the empty groups. Returns the children that\n * have been removed from the groups.\n * \n * Parameters:\n * \n * cells - Array of cells to be ungrouped. If null is specified then the\n * selection cells are used.\n */\nmxGraph.prototype.ungroupCells = function(cells)\n{\n\tvar result = [];\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\n\t\t// Finds the cells with children\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.getChildCount(cells[i]) > 0)\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\n\t\t}\n\n\t\tcells = tmp;\n\t}\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\t\t\n\t\t\t\tif (children != null && children.length > 0)\n\t\t\t\t{\n\t\t\t\t\tchildren = children.slice();\n\t\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\t\t\tvar index = this.model.getChildCount(parent);\n\n\t\t\t\t\tthis.cellsAdded(children, parent, index, null, null, true);\n\t\t\t\t\tresult = result.concat(children);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.removeCellsAfterUngroup(cells);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.UNGROUP_CELLS, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: removeCellsAfterUngroup\n * \n * Hook to remove the groups after <ungroupCells>.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> that were ungrouped.\n */\nmxGraph.prototype.removeCellsAfterUngroup = function(cells)\n{\n\tthis.cellsRemoved(this.addAllEdges(cells));\n};\n\n/**\n * Function: removeCellsFromParent\n * \n * Removes the specified cells from their parents and adds them to the\n * default parent. Returns the cells that were removed from their parents.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be removed from their parents.\n */\nmxGraph.prototype.removeCellsFromParent = function(cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar parent = this.getDefaultParent();\n\t\tvar index = this.model.getChildCount(parent);\n\n\t\tthis.cellsAdded(cells, parent, index, null, null, true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_CELLS_FROM_PARENT, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: updateGroupBounds\n * \n * Updates the bounds of the given groups to include all children and returns\n * the passed-in cells. Call this with the groups in parent to child order,\n * top-most group first, the cells are processed in reverse order and cells\n * with no children are ignored.\n * \n * Parameters:\n * \n * cells - The groups whose bounds should be updated. If this is null, then\n * the selection cells are used.\n * border - Optional border to be added in the group. Default is 0.\n * moveGroup - Optional boolean that allows the group to be moved. Default\n * is false.\n * topBorder - Optional top border to be added in the group. Default is 0.\n * rightBorder - Optional top border to be added in the group. Default is 0.\n * bottomBorder - Optional top border to be added in the group. Default is 0.\n * leftBorder - Optional top border to be added in the group. Default is 0.\n */\nmxGraph.prototype.updateGroupBounds = function(cells, border, moveGroup, topBorder, rightBorder, bottomBorder, leftBorder)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tborder = (border != null) ? border : 0;\n\tmoveGroup = (moveGroup != null) ? moveGroup : false;\n\ttopBorder = (topBorder != null) ? topBorder : 0;\n\trightBorder = (rightBorder != null) ? rightBorder : 0;\n\tbottomBorder = (bottomBorder != null) ? bottomBorder : 0;\n\tleftBorder = (leftBorder != null) ? leftBorder : 0;\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = cells.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar children = this.getChildCells(cells[i]);\n\t\t\t\t\n\t\t\t\tif (children != null && children.length > 0)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = this.getBoundingBoxFromGeometry(children, true);\n\t\t\t\t\t\n\t\t\t\t\tif (bounds != null && bounds.width > 0 && bounds.height > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar left = 0;\n\t\t\t\t\t\tvar top = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Adds the size of the title area for swimlanes\n\t\t\t\t\t\tif (this.isSwimlane(cells[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar size = this.getStartSize(cells[i]);\n\t\t\t\t\t\t\tleft = size.width;\n\t\t\t\t\t\t\ttop = size.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (moveGroup)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = Math.round(geo.x + bounds.x - border - left - leftBorder);\n\t\t\t\t\t\t\tgeo.y = Math.round(geo.y + bounds.y - border - top - topBorder);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo.width = Math.round(bounds.width + 2 * border + left + leftBorder + rightBorder);\n\t\t\t\t\t\tgeo.height = Math.round(bounds.height + 2 * border + top + topBorder + bottomBorder);\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\tthis.moveCells(children, border + left - bounds.x + leftBorder,\n\t\t\t\t\t\t\t\tborder + top - bounds.y + topBorder);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the bounding box for the given array of <mxCells>. The bounding box for\n * each cell and its descendants is computed using <mxGraphView.getBoundingBox>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounding box should be returned.\n */\nmxGraph.prototype.getBoundingBox = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.isVertex(cells[i]) || this.model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar bbox = this.view.getBoundingBox(this.view.getState(cells[i]), true);\n\t\t\t\n\t\t\t\tif (bbox != null)\n\t\t\t\t{\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Group: Cell cloning, insertion and removal\n */\n\n/**\n * Function: cloneCell\n * \n * Returns the clone for the given cell. Uses <cloneCells>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be cloned.\n * allowInvalidEdges - Optional boolean that specifies if invalid edges\n * should be cloned. Default is true.\n * mapping - Optional mapping for existing clones.\n * keepPosition - Optional boolean indicating if the position of the cells should\n * be updated to reflect the lost parent cell. Default is false.\n */\nmxGraph.prototype.cloneCell = function(cell, allowInvalidEdges, mapping, keepPosition)\n{\n\treturn this.cloneCells([cell], allowInvalidEdges, mapping, keepPosition)[0];\n};\n\n/**\n * Function: cloneCells\n * \n * Returns the clones for the given cells. The clones are created recursively\n * using <mxGraphModel.cloneCells>. If the terminal of an edge is not in the\n * given array, then the respective end is assigned a terminal point and the\n * terminal is removed.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be cloned.\n * allowInvalidEdges - Optional boolean that specifies if invalid edges\n * should be cloned. Default is true.\n * mapping - Optional mapping for existing clones.\n * keepPosition - Optional boolean indicating if the position of the cells should\n * be updated to reflect the lost parent cell. Default is false.\n */\nmxGraph.prototype.cloneCells = function(cells, allowInvalidEdges, mapping, keepPosition)\n{\n\tallowInvalidEdges = (allowInvalidEdges != null) ? allowInvalidEdges : true;\n\tvar clones = null;\n\t\n\tif (cells != null)\n\t{\n\t\t// Creates a dictionary for fast lookups\n\t\tvar dict = new mxDictionary();\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t\ttmp.push(cells[i]);\n\t\t}\n\t\t\n\t\tif (tmp.length > 0)\n\t\t{\n\t\t\tvar scale = this.view.scale;\n\t\t\tvar trans = this.view.translate;\n\t\t\tclones = this.model.cloneCells(cells, true, mapping);\n\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!allowInvalidEdges && this.model.isEdge(clones[i]) &&\n\t\t\t\t\tthis.getEdgeValidationError(clones[i],\n\t\t\t\t\t\tthis.model.getTerminal(clones[i], true),\n\t\t\t\t\t\tthis.model.getTerminal(clones[i], false)) != null)\n\t\t\t\t{\n\t\t\t\t\tclones[i] = null;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar g = this.model.getGeometry(clones[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (g != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\tvar pstate = this.view.getState(this.model.getParent(cells[i]));\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null && pstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar dx = (keepPosition) ? 0 : pstate.origin.x;\n\t\t\t\t\t\t\tvar dy = (keepPosition) ? 0 : pstate.origin.y;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.model.isEdge(clones[i]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (pts != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// Checks if the source is cloned or sets the terminal point\n\t\t\t\t\t\t\t\t\tvar src = this.model.getTerminal(cells[i], true);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\twhile (src != null && !dict.get(src))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tsrc = this.model.getParent(src);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (src == null && pts[0] != null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tg.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[0].x / scale - trans.x,\n\t\t\t\t\t\t\t\t\t\t\t\tpts[0].y / scale - trans.y), true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// Checks if the target is cloned or sets the terminal point\n\t\t\t\t\t\t\t\t\tvar trg = this.model.getTerminal(cells[i], false);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\twhile (trg != null && !dict.get(trg))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttrg = this.model.getParent(trg);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tvar n = pts.length - 1;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (trg == null && pts[n] != null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tg.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[n].x / scale - trans.x,\n\t\t\t\t\t\t\t\t\t\t\t\tpts[n].y / scale - trans.y), false);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// Translates the control points\n\t\t\t\t\t\t\t\t\tvar points = g.points;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (points != null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfor (var j = 0; j < points.length; j++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tpoints[j].x += dx;\n\t\t\t\t\t\t\t\t\t\t\tpoints[j].y += dy;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tg.translate(dx, dy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tclones = [];\n\t\t}\n\t}\n\t\n\treturn clones;\n};\n\n/**\n * Function: insertVertex\n * \n * Adds a new vertex into the given parent <mxCell> using value as the user\n * object and the given coordinates as the <mxGeometry> of the new vertex.\n * The id and style are used for the respective properties of the new\n * <mxCell>, which is returned.\n *\n * When adding new vertices from a mouse event, one should take into\n * account the offset of the graph container and the scale and translation\n * of the view in order to find the correct unscaled, untranslated\n * coordinates using <mxGraph.getPointForEvent> as follows:\n * \n * (code)\n * var pt = graph.getPointForEvent(evt);\n * var parent = graph.getDefaultParent();\n * graph.insertVertex(parent, null,\n * \t\t\t'Hello, World!', x, y, 220, 30);\n * (end)\n * \n * For adding image cells, the style parameter can be assigned as\n * \n * (code)\n * stylename;image=imageUrl\n * (end)\n * \n * See <mxGraph> for more information on using images.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent of the new vertex.\n * id - Optional string that defines the Id of the new vertex.\n * value - Object to be used as the user object.\n * x - Integer that defines the x coordinate of the vertex.\n * y - Integer that defines the y coordinate of the vertex.\n * width - Integer that defines the width of the vertex.\n * height - Integer that defines the height of the vertex.\n * style - Optional string that defines the cell style.\n * relative - Optional boolean that specifies if the geometry is relative.\n * Default is false.\n */\nmxGraph.prototype.insertVertex = function(parent, id, value,\n\tx, y, width, height, style, relative)\n{\n\tvar vertex = this.createVertex(parent, id, value, x, y, width, height, style, relative);\n\n\treturn this.addCell(vertex, parent);\n};\n\n/**\n * Function: createVertex\n * \n * Hook method that creates the new vertex for <insertVertex>.\n */\nmxGraph.prototype.createVertex = function(parent, id, value,\n\t\tx, y, width, height, style, relative)\n{\n\t// Creates the geometry for the vertex\n\tvar geometry = new mxGeometry(x, y, width, height);\n\tgeometry.relative = (relative != null) ? relative : false;\n\t\n\t// Creates the vertex\n\tvar vertex = new mxCell(value, geometry, style);\n\tvertex.setId(id);\n\tvertex.setVertex(true);\n\tvertex.setConnectable(true);\n\t\n\treturn vertex;\n};\n\t\n/**\n * Function: insertEdge\n * \n * Adds a new edge into the given parent <mxCell> using value as the user\n * object and the given source and target as the terminals of the new edge.\n * The id and style are used for the respective properties of the new\n * <mxCell>, which is returned.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent of the new edge.\n * id - Optional string that defines the Id of the new edge.\n * value - JavaScript object to be used as the user object.\n * source - <mxCell> that defines the source of the edge.\n * target - <mxCell> that defines the target of the edge.\n * style - Optional string that defines the cell style.\n */\nmxGraph.prototype.insertEdge = function(parent, id, value, source, target, style)\n{\n\tvar edge = this.createEdge(parent, id, value, source, target, style);\n\t\n\treturn this.addEdge(edge, parent, source, target);\n};\n\n/**\n * Function: createEdge\n * \n * Hook method that creates the new edge for <insertEdge>. This\n * implementation does not set the source and target of the edge, these\n * are set when the edge is added to the model.\n * \n */\nmxGraph.prototype.createEdge = function(parent, id, value, source, target, style)\n{\n\t// Creates the edge\n\tvar edge = new mxCell(value, new mxGeometry(), style);\n\tedge.setId(id);\n\tedge.setEdge(true);\n\tedge.geometry.relative = true;\n\t\n\treturn edge;\n};\n\n/**\n * Function: addEdge\n * \n * Adds the edge to the parent and connects it to the given source and\n * target terminals. This is a shortcut method. Returns the edge that was\n * added.\n * \n * Parameters:\n * \n * edge - <mxCell> to be inserted into the given parent.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * source - Optional <mxCell> that represents the source terminal.\n * target - Optional <mxCell> that represents the target terminal.\n * index - Optional index to insert the cells at. Default is to append.\n */\nmxGraph.prototype.addEdge = function(edge, parent, source, target, index)\n{\n\treturn this.addCell(edge, parent, index, source, target);\n};\n\n/**\n * Function: addCell\n * \n * Adds the cell to the parent and connects it to the given source and\n * target terminals. This is a shortcut method. Returns the cell that was\n * added.\n * \n * Parameters:\n * \n * cell - <mxCell> to be inserted into the given parent.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * index - Optional index to insert the cells at. Default is to append.\n * source - Optional <mxCell> that represents the source terminal.\n * target - Optional <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.addCell = function(cell, parent, index, source, target)\n{\n\treturn this.addCells([cell], parent, index, source, target)[0];\n};\n\n/**\n * Function: addCells\n * \n * Adds the cells to the parent at the given index, connecting each cell to\n * the optional source and target terminal. The change is carried out using\n * <cellsAdded>. This method fires <mxEvent.ADD_CELLS> while the\n * transaction is in progress. Returns the cells that were added.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be inserted.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * index - Optional index to insert the cells at. Default is to append.\n * source - Optional source <mxCell> for all inserted cells.\n * target - Optional target <mxCell> for all inserted cells.\n */\nmxGraph.prototype.addCells = function(cells, parent, index, source, target)\n{\n\tif (parent == null)\n\t{\n\t\tparent = this.getDefaultParent();\n\t}\n\t\n\tif (index == null)\n\t{\n\t\tindex = this.model.getChildCount(parent);\n\t}\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsAdded(cells, parent, index, source, target, false, true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD_CELLS, 'cells', cells,\n\t\t\t\t'parent', parent, 'index', index, 'source', source, 'target', target));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsAdded\n * \n * Adds the specified cells to the given parent. This method fires\n * <mxEvent.CELLS_ADDED> while the transaction is in progress.\n */\nmxGraph.prototype.cellsAdded = function(cells, parent, index, source, target, absolute, constrain, extend)\n{\n\tif (cells != null && parent != null && index != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar parentState = (absolute) ? this.view.getState(parent) : null;\n\t\t\tvar o1 = (parentState != null) ? parentState.origin : null;\n\t\t\tvar zero = new mxPoint(0, 0);\n\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (cells[i] == null)\n\t\t\t\t{\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar previous = this.model.getParent(cells[i]);\n\t\n\t\t\t\t\t// Keeps the cell at its absolute location\n\t\t\t\t\tif (o1 != null && cells[i] != parent && parent != previous)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar oldState = this.view.getState(previous);\n\t\t\t\t\t\tvar o2 = (oldState != null) ? oldState.origin : zero;\n\t\t\t\t\t\tvar geo = this.model.getGeometry(cells[i]);\n\t\n\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar dx = o2.x - o1.x;\n\t\t\t\t\t\t\tvar dy = o2.y - o1.y;\n\t\n\t\t\t\t\t\t\t// FIXME: Cells should always be inserted first before any other edit\n\t\t\t\t\t\t\t// to avoid forward references in sessions.\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tgeo.translate(dx, dy);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!geo.relative && this.model.isVertex(cells[i]) &&\n\t\t\t\t\t\t\t\t!this.isAllowNegativeCoordinates())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x = Math.max(0, geo.x);\n\t\t\t\t\t\t\t\tgeo.y = Math.max(0, geo.y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Decrements all following indices\n\t\t\t\t\t// if cell is already in parent\n\t\t\t\t\tif (parent == previous && index + i > this.model.getChildCount(parent))\n\t\t\t\t\t{\n\t\t\t\t\t\tindex--;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.model.add(parent, cells[i], index + i);\n\t\t\t\t\t\n\t\t\t\t\tif (this.autoSizeCellsOnAdd)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.autoSizeCell(cells[i], true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Extends the parent or constrains the child\n\t\t\t\t\tif ((extend == null || extend) &&\n\t\t\t\t\t\tthis.isExtendParentsOnAdd(cells[i]) && this.isExtendParent(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Additionally constrains the child after extending the parent\n\t\t\t\t\tif (constrain == null || constrain)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Sets the source terminal\n\t\t\t\t\tif (source != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.cellConnected(cells[i], source, true);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Sets the target terminal\n\t\t\t\t\tif (target != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.cellConnected(cells[i], target, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_ADDED, 'cells', cells,\n\t\t\t\t'parent', parent, 'index', index, 'source', source, 'target', target,\n\t\t\t\t'absolute', absolute));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: autoSizeCell\n * \n * Resizes the specified cell to just fit around the its label and/or children\n * \n * Parameters:\n * \n * cell - <mxCells> to be resized.\n * recurse - Optional boolean which specifies if all descendants should be\n * autosized. Default is true.\n */\nmxGraph.prototype.autoSizeCell = function(cell, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\t\n\tif (recurse)\n\t{\n\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.autoSizeCell(this.model.getChildAt(cell, i));\n\t\t}\n\t}\n\n\tif (this.getModel().isVertex(cell) && this.isAutoSizeCell(cell))\n\t{\n\t\tthis.updateCellSize(cell);\n\t}\n};\n\n/**\n * Function: removeCells\n * \n * Removes the given cells from the graph including all connected edges if\n * includeEdges is true. The change is carried out using <cellsRemoved>.\n * This method fires <mxEvent.REMOVE_CELLS> while the transaction is in\n * progress. The removed cells are returned as an array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to remove. If null is specified then the\n * selection cells which are deletable are used.\n * includeEdges - Optional boolean which specifies if all connected edges\n * should be removed as well. Default is true.\n */\nmxGraph.prototype.removeCells = function(cells, includeEdges)\n{\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getDeletableCells(this.getSelectionCells());\n\t}\n\n\t// Adds all edges to the cells\n\tif (includeEdges)\n\t{\n\t\t// FIXME: Remove duplicate cells in result or do not add if\n\t\t// in cells or descendant of cells\n\t\tcells = this.getDeletableCells(this.addAllEdges(cells));\n\t}\n\telse\n\t{\n\t\tcells = cells.slice();\n\t\t\n\t\t// Removes edges that are currently not\n\t\t// visible as those cannot be updated\n\t\tvar edges = this.getDeletableCells(this.getAllEdges(cells));\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tif (this.view.getState(edges[i]) == null &&\n\t\t\t\t!dict.get(edges[i]))\n\t\t\t{\n\t\t\t\tdict.put(edges[i], true);\n\t\t\t\tcells.push(edges[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsRemoved(cells);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_CELLS, \n\t\t\t\t'cells', cells, 'includeEdges', includeEdges));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: cellsRemoved\n * \n * Removes the given cells from the model. This method fires\n * <mxEvent.CELLS_REMOVED> while the transaction is in progress.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to remove.\n */\nmxGraph.prototype.cellsRemoved = function(cells)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar scale = this.view.scale;\n\t\tvar tr = this.view.translate;\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Creates hashtable for faster lookup\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\t// Disconnects edges which are not being removed\n\t\t\t\tvar edges = this.getAllEdges([cells[i]]);\n\t\t\t\t\n\t\t\t\tvar disconnectTerminal = mxUtils.bind(this, function(edge, source)\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.model.getGeometry(edge);\n\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Checks if terminal is being removed\n\t\t\t\t\t\tvar terminal = this.model.getTerminal(edge, source);\n\t\t\t\t\t\tvar connected = false;\n\t\t\t\t\t\tvar tmp = terminal;\n\t\t\t\t\t\t\n\t\t\t\t\t\twhile (tmp != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (cells[i] == tmp)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconnected = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttmp = this.model.getParent(tmp);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (connected)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tvar state = this.view.getState(edge);\n\n\t\t\t\t\t\t\tif (state != null && state.absolutePoints != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\t\t\t\t\t\t\t\tvar n = (source) ? 0 : pts.length - 1;\n\n\t\t\t\t\t\t\t\tgeo.setTerminalPoint(new mxPoint(\n\t\t\t\t\t\t\t\t\tpts[n].x / scale - tr.x - state.origin.x,\n\t\t\t\t\t\t\t\t\tpts[n].y / scale - tr.y - state.origin.y), source);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Fallback to center of terminal if routing\n\t\t\t\t\t\t\t\t// points are not available to add new point\n\t\t\t\t\t\t\t\t// KNOWN: Should recurse to find parent offset\n\t\t\t\t\t\t\t\t// of edge for nested groups but invisible edges\n\t\t\t\t\t\t\t\t// should be removed in removeCells step\n\t\t\t\t\t\t\t\tvar tstate = this.view.getState(terminal);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (tstate != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(new mxPoint(\n\t\t\t\t\t\t\t\t\t\ttstate.getCenterX() / scale - tr.x,\n\t\t\t\t\t\t\t\t\t\ttstate.getCenterY() / scale - tr.y), source);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.model.setGeometry(edge, geo);\n\t\t\t\t\t\t\tthis.model.setTerminal(edge, null, source);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (!dict.get(edges[j]))\n\t\t\t\t\t{\n\t\t\t\t\t\tdict.put(edges[j], true);\n\t\t\t\t\t\tdisconnectTerminal(edges[j], true);\n\t\t\t\t\t\tdisconnectTerminal(edges[j], false);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.model.remove(cells[i]);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_REMOVED, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: splitEdge\n * \n * Splits the given edge by adding the newEdge between the previous source\n * and the given cell and reconnecting the source of the given edge to the\n * given cell. This method fires <mxEvent.SPLIT_EDGE> while the transaction\n * is in progress. Returns the new edge that was inserted.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be splitted.\n * cells - <mxCells> that represents the cells to insert into the edge.\n * newEdge - <mxCell> that represents the edge to be inserted.\n * dx - Optional integer that specifies the vector to move the cells.\n * dy - Optional integer that specifies the vector to move the cells.\n */\nmxGraph.prototype.splitEdge = function(edge, cells, newEdge, dx, dy)\n{\n\tdx = dx || 0;\n\tdy = dy || 0;\n\n\tvar parent = this.model.getParent(edge);\n\tvar source = this.model.getTerminal(edge, true);\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tif (newEdge == null)\n\t\t{\n\t\t\tnewEdge = this.cloneCell(edge);\n\t\t\t\n\t\t\t// Removes waypoints before/after new cell\n\t\t\tvar state = this.view.getState(edge);\n\t\t\tvar geo = this.getCellGeometry(newEdge);\n\t\t\t\n\t\t\tif (geo != null && geo.points != null && state != null)\n\t\t\t{\n\t\t\t\tvar t = this.view.translate;\n\t\t\t\tvar s = this.view.scale;\n\t\t\t\tvar idx = mxUtils.findNearestSegment(state, (dx + t.x) * s, (dy + t.y) * s);\n\t\t\t\tgeo.points = geo.points.slice(0, idx);\n\t\t\t\t\t\t\t\t\n\t\t\t\tgeo = this.getCellGeometry(edge);\n\t\t\t\t\n\t\t\t\tif (geo != null && geo.points != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\tgeo.points = geo.points.slice(idx);\n\t\t\t\t\tthis.model.setGeometry(edge, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.cellsMoved(cells, dx, dy, false, false);\n\t\tthis.cellsAdded(cells, parent, this.model.getChildCount(parent), null, null,\n\t\t\t\ttrue);\n\t\tthis.cellsAdded([newEdge], parent, this.model.getChildCount(parent),\n\t\t\t\tsource, cells[0], false);\n\t\tthis.cellConnected(edge, cells[0], true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SPLIT_EDGE, 'edge', edge,\n\t\t\t\t'cells', cells, 'newEdge', newEdge, 'dx', dx, 'dy', dy));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn newEdge;\n};\n\n/**\n * Group: Cell visibility\n */\n\n/**\n * Function: toggleCells\n * \n * Sets the visible state of the specified cells and all connected edges\n * if includeEdges is true. The change is carried out using <cellsToggled>.\n * This method fires <mxEvent.TOGGLE_CELLS> while the transaction is in\n * progress. Returns the cells whose visible state was changed.\n * \n * Parameters:\n * \n * show - Boolean that specifies the visible state to be assigned.\n * cells - Array of <mxCells> whose visible state should be changed. If\n * null is specified then the selection cells are used.\n * includeEdges - Optional boolean indicating if the visible state of all\n * connected edges should be changed as well. Default is true.\n */\nmxGraph.prototype.toggleCells = function(show, cells, includeEdges)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\n\t// Adds all connected edges recursively\n\tif (includeEdges)\n\t{\n\t\tcells = this.addAllEdges(cells);\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsToggled(cells, show);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.TOGGLE_CELLS,\n\t\t\t'show', show, 'cells', cells, 'includeEdges', includeEdges));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsToggled\n * \n * Sets the visible state of the specified cells.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose visible state should be changed.\n * show - Boolean that specifies the visible state to be assigned.\n */\nmxGraph.prototype.cellsToggled = function(cells, show)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.model.setVisible(cells[i], show);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Folding\n */\n\n/**\n * Function: foldCells\n * \n * Sets the collapsed state of the specified cells and all descendants\n * if recurse is true. The change is carried out using <cellsFolded>.\n * This method fires <mxEvent.FOLD_CELLS> while the transaction is in\n * progress. Returns the cells whose collapsed state was changed.\n * \n * Parameters:\n * \n * collapsed - Boolean indicating the collapsed state to be assigned.\n * recurse - Optional boolean indicating if the collapsed state of all\n * descendants should be set. Default is false.\n * cells - Array of <mxCells> whose collapsed state should be set. If\n * null is specified then the foldable selection cells are used.\n * checkFoldable - Optional boolean indicating of isCellFoldable should be\n * checked. Default is false.\n * evt - Optional native event that triggered the invocation.\n */\nmxGraph.prototype.foldCells = function(collapse, recurse, cells, checkFoldable, evt)\n{\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getFoldableCells(this.getSelectionCells(), collapse);\n\t}\n\n\tthis.stopEditing(false);\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsFolded(cells, collapse, recurse, checkFoldable);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.FOLD_CELLS,\n\t\t\t'collapse', collapse, 'recurse', recurse, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsFolded\n * \n * Sets the collapsed state of the specified cells. This method fires\n * <mxEvent.CELLS_FOLDED> while the transaction is in progress. Returns the\n * cells whose collapsed state was changed.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose collapsed state should be set.\n * collapsed - Boolean indicating the collapsed state to be assigned.\n * recurse - Boolean indicating if the collapsed state of all descendants\n * should be set.\n * checkFoldable - Optional boolean indicating of isCellFoldable should be\n * checked. Default is false.\n */\nmxGraph.prototype.cellsFolded = function(cells, collapse, recurse, checkFoldable)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif ((!checkFoldable || this.isCellFoldable(cells[i], collapse)) &&\n\t\t\t\t\tcollapse != this.isCellCollapsed(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.model.setCollapsed(cells[i], collapse);\n\t\t\t\t\tthis.swapBounds(cells[i], collapse);\n\n\t\t\t\t\tif (this.isExtendParent(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (recurse)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\t\t\t\tthis.cellsFolded(children, collapse, recurse);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_FOLDED,\n\t\t\t\t'cells', cells, 'collapse', collapse, 'recurse', recurse));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: swapBounds\n * \n * Swaps the alternate and the actual bounds in the geometry of the given\n * cell invoking <updateAlternateBounds> before carrying out the swap.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the bounds should be swapped.\n * willCollapse - Boolean indicating if the cell is going to be collapsed.\n */\nmxGraph.prototype.swapBounds = function(cell, willCollapse)\n{\n\tif (cell != null)\n\t{\n\t\tvar geo = this.model.getGeometry(cell);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\t\n\t\t\tthis.updateAlternateBounds(cell, geo, willCollapse);\n\t\t\tgeo.swap();\n\t\t\t\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateAlternateBounds\n * \n * Updates or sets the alternate bounds in the given geometry for the given\n * cell depending on whether the cell is going to be collapsed. If no\n * alternate bounds are defined in the geometry and\n * <collapseToPreferredSize> is true, then the preferred size is used for\n * the alternate bounds. The top, left corner is always kept at the same\n * location.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the geometry is being udpated.\n * g - <mxGeometry> for which the alternate bounds should be updated.\n * willCollapse - Boolean indicating if the cell is going to be collapsed.\n */\nmxGraph.prototype.updateAlternateBounds = function(cell, geo, willCollapse)\n{\n\tif (cell != null && geo != null)\n\t{\n\t\tvar state = this.view.getState(cell);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\t\tif (geo.alternateBounds == null)\n\t\t{\n\t\t\tvar bounds = geo;\n\t\t\t\n\t\t\tif (this.collapseToPreferredSize)\n\t\t\t{\n\t\t\t\tvar tmp = this.getPreferredSizeForCell(cell);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tbounds = tmp;\n\n\t\t\t\t\tvar startSize = mxUtils.getValue(style, mxConstants.STYLE_STARTSIZE);\n\n\t\t\t\t\tif (startSize > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbounds.height = Math.max(bounds.height, startSize);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tgeo.alternateBounds = new mxRectangle(0, 0, bounds.width, bounds.height);\n\t\t}\n\t\t\n\t\tif (geo.alternateBounds != null)\n\t\t{\n\t\t\tgeo.alternateBounds.x = geo.x;\n\t\t\tgeo.alternateBounds.y = geo.y;\n\t\t\t\n\t\t\tvar alpha = mxUtils.toRadians(style[mxConstants.STYLE_ROTATION] || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar dx = geo.alternateBounds.getCenterX() - geo.getCenterX();\n\t\t\t\tvar dy = geo.alternateBounds.getCenterY() - geo.getCenterY();\n\t\n\t\t\t\tvar cos = Math.cos(alpha);\n\t\t\t\tvar sin = Math.sin(alpha);\n\t\n\t\t\t\tvar dx2 = cos * dx - sin * dy;\n\t\t\t\tvar dy2 = sin * dx + cos * dy;\n\t\t\t\t\n\t\t\t\tgeo.alternateBounds.x += dx2 - dx;\n\t\t\t\tgeo.alternateBounds.y += dy2 - dy;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: addAllEdges\n * \n * Returns an array with the given cells and all edges that are connected\n * to a cell or one of its descendants.\n */\nmxGraph.prototype.addAllEdges = function(cells)\n{\n\tvar allCells = cells.slice();\n\t\n\treturn mxUtils.removeDuplicates(allCells.concat(this.getAllEdges(cells)));\n};\n\n/**\n * Function: getAllEdges\n * \n * Returns all edges connected to the given cells or its descendants.\n */\nmxGraph.prototype.getAllEdges = function(cells)\n{\n\tvar edges = [];\n\t\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar edgeCount = this.model.getEdgeCount(cells[i]);\n\t\t\t\n\t\t\tfor (var j = 0; j < edgeCount; j++)\n\t\t\t{\n\t\t\t\tedges.push(this.model.getEdgeAt(cells[i], j));\n\t\t\t}\n\n\t\t\t// Recurses\n\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\tedges = edges.concat(this.getAllEdges(children));\n\t\t}\n\t}\n\t\n\treturn edges;\n};\n\n/**\n * Group: Cell sizing\n */\n\n/**\n * Function: updateCellSize\n * \n * Updates the size of the given cell in the model using <cellSizeUpdated>.\n * This method fires <mxEvent.UPDATE_CELL_SIZE> while the transaction is in\n * progress. Returns the cell whose size was updated.\n * \n * Parameters:\n * \n * cell - <mxCell> whose size should be updated.\n */\nmxGraph.prototype.updateCellSize = function(cell, ignoreChildren)\n{\n\tignoreChildren = (ignoreChildren != null) ? ignoreChildren : false;\n\t\n\tthis.model.beginUpdate();\t\t\t\t\n\ttry\n\t{\n\t\tthis.cellSizeUpdated(cell, ignoreChildren);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UPDATE_CELL_SIZE,\n\t\t\t\t'cell', cell, 'ignoreChildren', ignoreChildren));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellSizeUpdated\n * \n * Updates the size of the given cell in the model using\n * <getPreferredSizeForCell> to get the new size.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the size should be changed.\n */\nmxGraph.prototype.cellSizeUpdated = function(cell, ignoreChildren)\n{\n\tif (cell != null)\n\t{\n\t\tthis.model.beginUpdate();\t\t\t\t\n\t\ttry\n\t\t{\n\t\t\tvar size = this.getPreferredSizeForCell(cell);\n\t\t\tvar geo = this.model.getGeometry(cell);\n\t\t\t\n\t\t\tif (size != null && geo != null)\n\t\t\t{\n\t\t\t\tvar collapsed = this.isCellCollapsed(cell);\n\t\t\t\tgeo = geo.clone();\n\n\t\t\t\tif (this.isSwimlane(cell))\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.getState(cell);\n\t\t\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\t\t\t\tvar cellStyle = this.model.getStyle(cell);\n\n\t\t\t\t\tif (cellStyle == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = mxUtils.setStyle(cellStyle,\n\t\t\t\t\t\t\t\tmxConstants.STYLE_STARTSIZE, size.height + 8);\n\n\t\t\t\t\t\tif (collapsed)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.height = size.height + 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeo.width = size.width;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = mxUtils.setStyle(cellStyle,\n\t\t\t\t\t\t\t\tmxConstants.STYLE_STARTSIZE, size.width + 8);\n\n\t\t\t\t\t\tif (collapsed)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.width = size.width + 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeo.height = size.height;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.model.setStyle(cell, cellStyle);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.getState(cell) || this.view.createState(cell);\n\t\t\t\t\tvar align = (state.style[mxConstants.STYLE_ALIGN] || mxConstants.ALIGN_CENTER);\n\t\t\t\t\t\n\t\t\t\t\tif (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.x += geo.width - size.width;\n\t\t\t\t\t}\n\t\t\t\t\telse if (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.x += Math.round((geo.width - size.width) / 2);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar valign = this.getVerticalAlign(state);\n\t\t\t\t\t\n\t\t\t\t\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.y += geo.height - size.height;\n\t\t\t\t\t}\n\t\t\t\t\telse if (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.y += Math.round((geo.height - size.height) / 2);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeo.width = size.width;\n\t\t\t\t\tgeo.height = size.height;\n\t\t\t\t}\n\n\t\t\t\tif (!ignoreChildren && !collapsed)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = this.view.getBounds(this.model.getChildren(cell));\n\n\t\t\t\t\tif (bounds != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tr = this.view.translate;\n\t\t\t\t\t\tvar scale = this.view.scale;\n\n\t\t\t\t\t\tvar width = (bounds.x + bounds.width) / scale - geo.x - tr.x;\n\t\t\t\t\t\tvar height = (bounds.y + bounds.height) / scale - geo.y - tr.y;\n\n\t\t\t\t\t\tgeo.width = Math.max(geo.width, width);\n\t\t\t\t\t\tgeo.height = Math.max(geo.height, height);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.cellsResized([cell], [geo], false);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: getPreferredSizeForCell\n * \n * Returns the preferred width and height of the given <mxCell> as an\n * <mxRectangle>. To implement a minimum width, add a new style eg.\n * minWidth in the vertex and override this method as follows.\n * \n * (code)\n * var graphGetPreferredSizeForCell = graph.getPreferredSizeForCell;\n * graph.getPreferredSizeForCell = function(cell)\n * {\n *   var result = graphGetPreferredSizeForCell.apply(this, arguments);\n *   var style = this.getCellStyle(cell);\n *   \n *   if (style['minWidth'] > 0)\n *   {\n *     result.width = Math.max(style['minWidth'], result.width);\n *   }\n * \n *   return result;\n * };\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> for which the preferred size should be returned.\n */\nmxGraph.prototype.getPreferredSizeForCell = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tvar state = this.view.getState(cell) || this.view.createState(cell);\n\t\tvar style = state.style;\n\n\t\tif (!this.model.isEdge(cell))\n\t\t{\n\t\t\tvar fontSize = style[mxConstants.STYLE_FONTSIZE] || mxConstants.DEFAULT_FONTSIZE;\n\t\t\tvar dx = 0;\n\t\t\tvar dy = 0;\n\t\t\t\n\t\t\t// Adds dimension of image if shape is a label\n\t\t\tif (this.getImage(state) != null || style[mxConstants.STYLE_IMAGE] != null)\n\t\t\t{\n\t\t\t\tif (style[mxConstants.STYLE_SHAPE] == mxConstants.SHAPE_LABEL)\n\t\t\t\t{\n\t\t\t\t\tif (style[mxConstants.STYLE_VERTICAL_ALIGN] == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx += parseFloat(style[mxConstants.STYLE_IMAGE_WIDTH]) || mxLabel.prototype.imageSize;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (style[mxConstants.STYLE_ALIGN] != mxConstants.ALIGN_CENTER)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy += parseFloat(style[mxConstants.STYLE_IMAGE_HEIGHT]) || mxLabel.prototype.imageSize;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Adds spacings\n\t\t\tdx += 2 * (style[mxConstants.STYLE_SPACING] || 0);\n\t\t\tdx += style[mxConstants.STYLE_SPACING_LEFT] || 0;\n\t\t\tdx += style[mxConstants.STYLE_SPACING_RIGHT] || 0;\n\n\t\t\tdy += 2 * (style[mxConstants.STYLE_SPACING] || 0);\n\t\t\tdy += style[mxConstants.STYLE_SPACING_TOP] || 0;\n\t\t\tdy += style[mxConstants.STYLE_SPACING_BOTTOM] || 0;\n\t\t\t\n\t\t\t// Add spacing for collapse/expand icon\n\t\t\t// LATER: Check alignment and use constants\n\t\t\t// for image spacing\n\t\t\tvar image = this.getFoldingImage(state);\n\t\t\t\n\t\t\tif (image != null)\n\t\t\t{\n\t\t\t\tdx += image.width + 8;\n\t\t\t}\n\n\t\t\t// Adds space for label\n\t\t\tvar value = this.cellRenderer.getLabelValue(state);\n\n\t\t\tif (value != null && value.length > 0)\n\t\t\t{\n\t\t\t\tif (!this.isHtmlLabel(state.cell))\n\t\t\t\t{\n\t\t\t\t\tvalue = mxUtils.htmlEntities(value);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue = value.replace(/\\n/g, '<br>');\n\t\t\t\t\n\t\t\t\tvar size = mxUtils.getSizeForString(value, fontSize, style[mxConstants.STYLE_FONTFAMILY]);\n\t\t\t\tvar width = size.width + dx;\n\t\t\t\tvar height = size.height + dy;\n\t\t\t\t\n\t\t\t\tif (!mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t{\n\t\t\t\t\tvar tmp = height;\n\t\t\t\t\t\n\t\t\t\t\theight = width;\n\t\t\t\t\twidth = tmp;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif (this.gridEnabled)\n\t\t\t\t{\n\t\t\t\t\twidth = this.snap(width + this.gridSize / 2);\n\t\t\t\t\theight = this.snap(height + this.gridSize / 2);\n\t\t\t\t}\n\n\t\t\t\tresult = new mxRectangle(0, 0, width, height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar gs2 = 4 * this.gridSize;\n\t\t\t\tresult = new mxRectangle(0, 0, gs2, gs2);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: resizeCell\n * \n * Sets the bounds of the given cell using <resizeCells>. Returns the\n * cell which was passed to the function.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be changed.\n * bounds - <mxRectangle> that represents the new bounds.\n */\nmxGraph.prototype.resizeCell = function(cell, bounds, recurse)\n{\n\treturn this.resizeCells([cell], [bounds], recurse)[0];\n};\n\n/**\n * Function: resizeCells\n * \n * Sets the bounds of the given cells and fires a <mxEvent.RESIZE_CELLS>\n * event while the transaction is in progress. Returns the cells which\n * have been passed to the function.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be changed.\n * bounds - Array of <mxRectangles> that represent the new bounds.\n */\nmxGraph.prototype.resizeCells = function(cells, bounds, recurse)\n{\n\trecurse = (recurse != null) ? recurse : this.isRecursiveResize();\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsResized(cells, bounds, recurse);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_CELLS,\n\t\t\t\t'cells', cells, 'bounds', bounds));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsResized\n * \n * Sets the bounds of the given cells and fires a <mxEvent.CELLS_RESIZED>\n * event. If <extendParents> is true, then the parent is extended if a\n * child size is changed so that it overlaps with the parent.\n * \n * The following example shows how to control group resizes to make sure\n * that all child cells stay within the group.\n * \n * (code)\n * graph.addListener(mxEvent.CELLS_RESIZED, function(sender, evt)\n * {\n *   var cells = evt.getProperty('cells');\n *   \n *   if (cells != null)\n *   {\n *     for (var i = 0; i < cells.length; i++)\n *     {\n *       if (graph.getModel().getChildCount(cells[i]) > 0)\n *       {\n *         var geo = graph.getCellGeometry(cells[i]);\n *         \n *         if (geo != null)\n *         {\n *           var children = graph.getChildCells(cells[i], true, true);\n *           var bounds = graph.getBoundingBoxFromGeometry(children, true);\n *           \n *           geo = geo.clone();\n *           geo.width = Math.max(geo.width, bounds.width);\n *           geo.height = Math.max(geo.height, bounds.height);\n *           \n *           graph.getModel().setGeometry(cells[i], geo);\n *         }\n *       }\n *     }\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be changed.\n * bounds - Array of <mxRectangles> that represent the new bounds.\n * recurse - Optional boolean that specifies if the children should be resized.\n */\nmxGraph.prototype.cellsResized = function(cells, bounds, recurse)\n{\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tif (cells != null && bounds != null && cells.length == bounds.length)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.cellResized(cells[i], bounds[i], false, recurse);\n\n\t\t\t\tif (this.isExtendParent(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t}\n\n\t\t\tif (this.resetEdgesOnResize)\n\t\t\t{\n\t\t\t\tthis.resetEdges(cells);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_RESIZED,\n\t\t\t\t\t'cells', cells, 'bounds', bounds));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: cellResized\n * \n * Resizes the parents recursively so that they contain the complete area\n * of the resized child cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be changed.\n * bounds - <mxRectangles> that represent the new bounds.\n * ignoreRelative - Boolean that indicates if relative cells should be ignored.\n * recurse - Optional boolean that specifies if the children should be resized.\n */\nmxGraph.prototype.cellResized = function(cell, bounds, ignoreRelative, recurse)\n{\n\tvar geo = this.model.getGeometry(cell);\n\n\tif (geo != null && (geo.x != bounds.x || geo.y != bounds.y ||\n\t\tgeo.width != bounds.width || geo.height != bounds.height))\n\t{\n\t\tgeo = geo.clone();\n\n\t\tif (!ignoreRelative && geo.relative)\n\t\t{\n\t\t\tvar offset = geo.offset;\n\n\t\t\tif (offset != null)\n\t\t\t{\n\t\t\t\toffset.x += bounds.x - geo.x;\n\t\t\t\toffset.y += bounds.y - geo.y;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeo.x = bounds.x;\n\t\t\tgeo.y = bounds.y;\n\t\t}\n\n\t\tgeo.width = bounds.width;\n\t\tgeo.height = bounds.height;\n\n\t\tif (!geo.relative && this.model.isVertex(cell) && !this.isAllowNegativeCoordinates())\n\t\t{\n\t\t\tgeo.x = Math.max(0, geo.x);\n\t\t\tgeo.y = Math.max(0, geo.y);\n\t\t}\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (recurse)\n\t\t\t{\n\t\t\t\tthis.resizeChildCells(cell, geo);\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t\tthis.constrainChildCells(cell);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resizeChildCells\n * \n * Resizes the child cells of the given cell for the given new geometry with\n * respect to the current geometry of the cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n * newGeo - <mxGeometry> that represents the new bounds.\n */\nmxGraph.prototype.resizeChildCells = function(cell, newGeo)\n{\n\tvar geo = this.model.getGeometry(cell);\n\tvar dx = newGeo.width / geo.width;\n\tvar dy = newGeo.height / geo.height;\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.scaleCell(this.model.getChildAt(cell, i), dx, dy, true);\n\t}\n};\n\n/**\n * Function: constrainChildCells\n * \n * Constrains the children of the given cell using <constrainChild>.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.constrainChildCells = function(cell)\n{\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.constrainChild(this.model.getChildAt(cell, i));\n\t}\n};\n\n/**\n * Function: scaleCell\n * \n * Scales the points, position and size of the given cell according to the\n * given vertical and horizontal scaling factors.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be scaled.\n * dx - Horizontal scaling factor.\n * dy - Vertical scaling factor.\n * recurse - Boolean indicating if the child cells should be scaled.\n */\nmxGraph.prototype.scaleCell = function(cell, dx, dy, recurse)\n{\n\tvar geo = this.model.getGeometry(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tvar state = this.view.getState(cell);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\t\n\t\tgeo = geo.clone();\n\t\t\n\t\t// Stores values for restoring based on style\n\t\tvar x = geo.x;\n\t\tvar y = geo.y\n\t\tvar w = geo.width;\n\t\tvar h = geo.height;\n\t\t\n\t\tgeo.scale(dx, dy, style[mxConstants.STYLE_ASPECT] == 'fixed');\n\t\t\n\t\tif (style[mxConstants.STYLE_RESIZE_WIDTH] == '1')\n\t\t{\n\t\t\tgeo.width = w * dx;\n\t\t}\n\t\telse if (style[mxConstants.STYLE_RESIZE_WIDTH] == '0')\n\t\t{\n\t\t\tgeo.width = w;\n\t\t}\n\t\t\n\t\tif (style[mxConstants.STYLE_RESIZE_HEIGHT] == '1')\n\t\t{\n\t\t\tgeo.height = h * dy;\n\t\t}\n\t\telse if (style[mxConstants.STYLE_RESIZE_HEIGHT] == '0')\n\t\t{\n\t\t\tgeo.height = h;\n\t\t}\n\t\t\n\t\tif (!this.isCellMovable(cell))\n\t\t{\n\t\t\tgeo.x = x;\n\t\t\tgeo.y = y;\n\t\t}\n\t\t\n\t\tif (!this.isCellResizable(cell))\n\t\t{\n\t\t\tgeo.width = w;\n\t\t\tgeo.height = h;\n\t\t}\n\n\t\tif (this.model.isVertex(cell))\n\t\t{\n\t\t\tthis.cellResized(cell, geo, true, recurse);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendParent\n * \n * Resizes the parents recursively so that they contain the complete area\n * of the resized child cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.extendParent = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tvar parent = this.model.getParent(cell);\n\t\tvar p = this.getCellGeometry(parent);\n\t\t\n\t\tif (parent != null && p != null && !this.isCellCollapsed(parent))\n\t\t{\n\t\t\tvar geo = this.getCellGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null && !geo.relative &&\n\t\t\t\t(p.width < geo.x + geo.width ||\n\t\t\t\tp.height < geo.y + geo.height))\n\t\t\t{\n\t\t\t\tp = p.clone();\n\t\t\t\t\n\t\t\t\tp.width = Math.max(p.width, geo.x + geo.width);\n\t\t\t\tp.height = Math.max(p.height, geo.y + geo.height);\n\t\t\t\t\n\t\t\t\tthis.cellsResized([parent], [p], false);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Group: Cell moving\n */\n\n/**\n * Function: importCells\n * \n * Clones and inserts the given cells into the graph using the move\n * method and returns the inserted cells. This shortcut is used if\n * cells are inserted via datatransfer.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be imported.\n * dx - Integer that specifies the x-coordinate of the vector. Default is 0.\n * dy - Integer that specifies the y-coordinate of the vector. Default is 0.\n * target - <mxCell> that represents the new parent of the cells.\n * evt - Mouseevent that triggered the invocation.\n * mapping - Optional mapping for existing clones.\n */\nmxGraph.prototype.importCells = function(cells, dx, dy, target, evt, mapping)\n{\t\n\treturn this.moveCells(cells, dx, dy, true, target, evt, mapping);\n};\n\n/**\n * Function: moveCells\n * \n * Moves or clones the specified cells and moves the cells or clones by the\n * given amount, adding them to the optional target cell. The evt is the\n * mouse event as the mouse was released. The change is carried out using\n * <cellsMoved>. This method fires <mxEvent.MOVE_CELLS> while the\n * transaction is in progress. Returns the cells that were moved.\n * \n * Use the following code to move all cells in the graph.\n * \n * (code)\n * graph.moveCells(graph.getChildCells(null, true, true), 10, 10);\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be moved, cloned or added to the target.\n * dx - Integer that specifies the x-coordinate of the vector. Default is 0.\n * dy - Integer that specifies the y-coordinate of the vector. Default is 0.\n * clone - Boolean indicating if the cells should be cloned. Default is false.\n * target - <mxCell> that represents the new parent of the cells.\n * evt - Mouseevent that triggered the invocation.\n * mapping - Optional mapping for existing clones.\n */\nmxGraph.prototype.moveCells = function(cells, dx, dy, clone, target, evt, mapping)\n{\n\tdx = (dx != null) ? dx : 0;\n\tdy = (dy != null) ? dy : 0;\n\tclone = (clone != null) ? clone : false;\n\t\n\tif (cells != null && (dx != 0 || dy != 0 || clone || target != null))\n\t{\n\t\t// Removes descendants with ancestors in cells to avoid multiple moving\n\t\tcells = this.model.getTopmostCells(cells);\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Faster cell lookups to remove relative edge labels with selected\n\t\t\t// terminals to avoid explicit and implicit move at same time\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tvar isSelected = mxUtils.bind(this, function(cell)\n\t\t\t{\n\t\t\t\twhile (cell != null)\n\t\t\t\t{\n\t\t\t\t\tif (dict.get(cell))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcell = this.model.getParent(cell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\t\n\t\t\t// Removes relative edge labels with selected terminals\n\t\t\tvar checked = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\n\t\t\t\tif ((geo == null || !geo.relative) || !this.model.isEdge(parent) ||\n\t\t\t\t\t(!isSelected(this.model.getTerminal(parent, true)) &&\n\t\t\t\t\t!isSelected(this.model.getTerminal(parent, false))))\n\t\t\t\t{\n\t\t\t\t\tchecked.push(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcells = checked;\n\t\t\t\n\t\t\tif (clone)\n\t\t\t{\n\t\t\t\tcells = this.cloneCells(cells, this.isCloneInvalidEdges(), mapping);\n\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\ttarget = this.getDefaultParent();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// FIXME: Cells should always be inserted first before any other edit\n\t\t\t// to avoid forward references in sessions.\n\t\t\t// Need to disable allowNegativeCoordinates if target not null to\n\t\t\t// allow for temporary negative numbers until cellsAdded is called.\n\t\t\tvar previous = this.isAllowNegativeCoordinates();\n\t\t\t\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tthis.setAllowNegativeCoordinates(true);\n\t\t\t}\n\t\t\t\n\t\t\tthis.cellsMoved(cells, dx, dy, !clone && this.isDisconnectOnMove()\n\t\t\t\t\t&& this.isAllowDanglingEdges(), target == null,\n\t\t\t\t\tthis.isExtendParentsOnMove() && target == null);\n\t\t\t\n\t\t\tthis.setAllowNegativeCoordinates(previous);\n\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tvar index = this.model.getChildCount(target);\n\t\t\t\tthis.cellsAdded(cells, target, index, null, null, true);\n\t\t\t}\n\n\t\t\t// Dispatches a move event\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_CELLS, 'cells', cells,\n\t\t\t\t'dx', dx, 'dy', dy, 'clone', clone, 'target', target, 'event', evt));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsMoved\n * \n * Moves the specified cells by the given vector, disconnecting the cells\n * using disconnectGraph is disconnect is true. This method fires\n * <mxEvent.CELLS_MOVED> while the transaction is in progress.\n */\nmxGraph.prototype.cellsMoved = function(cells, dx, dy, disconnect, constrain, extend)\n{\n\tif (cells != null && (dx != 0 || dy != 0))\n\t{\n\t\textend = (extend != null) ? extend : false;\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (disconnect)\n\t\t\t{\n\t\t\t\tthis.disconnectGraph(cells);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.translateCell(cells[i], dx, dy);\n\t\t\t\t\n\t\t\t\tif (extend && this.isExtendParent(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t}\n\t\t\t\telse if (constrain)\n\t\t\t\t{\n\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.resetEdgesOnMove)\n\t\t\t{\n\t\t\t\tthis.resetEdges(cells);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_MOVED,\n\t\t\t\t'cells', cells, 'dx', dx, 'dy', dy, 'disconnect', disconnect));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: translateCell\n * \n * Translates the geometry of the given cell and stores the new,\n * translated geometry in the model as an atomic change.\n */\nmxGraph.prototype.translateCell = function(cell, dx, dy)\n{\n\tvar geo = this.model.getGeometry(cell);\n\n\tif (geo != null)\n\t{\n\t\tdx = parseFloat(dx);\n\t\tdy = parseFloat(dy);\n\t\tgeo = geo.clone();\n\t\tgeo.translate(dx, dy);\n\n\t\tif (!geo.relative && this.model.isVertex(cell) && !this.isAllowNegativeCoordinates())\n\t\t{\n\t\t\tgeo.x = Math.max(0, parseFloat(geo.x));\n\t\t\tgeo.y = Math.max(0, parseFloat(geo.y));\n\t\t}\n\t\t\n\t\tif (geo.relative && !this.model.isEdge(cell))\n\t\t{\n\t\t\tvar parent = this.model.getParent(cell);\n\t\t\tvar angle = 0;\n\t\t\t\n\t\t\tif (this.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(parent);\n\t\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(parent);\n\t\t\t\t\n\t\t\t\tangle = mxUtils.getValue(style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t}\n\t\t\t\n\t\t\tif (angle != 0)\n\t\t\t{\n\t\t\t\tvar rad = mxUtils.toRadians(-angle);\n\t\t\t\tvar cos = Math.cos(rad);\n\t\t\t\tvar sin = Math.sin(rad);\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(dx, dy), cos, sin, new mxPoint(0, 0));\n\t\t\t\tdx = pt.x;\n\t\t\t\tdy = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (geo.offset == null)\n\t\t\t{\n\t\t\t\tgeo.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgeo.offset.x = parseFloat(geo.offset.x) + dx;\n\t\t\t\tgeo.offset.y = parseFloat(geo.offset.y) + dy;\n\t\t\t}\n\t\t}\n\n\t\tthis.model.setGeometry(cell, geo);\n\t}\n};\n\n/**\n * Function: getCellContainmentArea\n * \n * Returns the <mxRectangle> inside which a cell is to be kept.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the area should be returned.\n */\nmxGraph.prototype.getCellContainmentArea = function(cell)\n{\n\tif (cell != null && !this.model.isEdge(cell))\n\t{\n\t\tvar parent = this.model.getParent(cell);\n\t\t\n\t\tif (parent != null && parent != this.getDefaultParent())\n\t\t{\n\t\t\tvar g = this.model.getGeometry(parent);\n\t\t\t\n\t\t\tif (g != null)\n\t\t\t{\n\t\t\t\tvar x = 0;\n\t\t\t\tvar y = 0;\n\t\t\t\tvar w = g.width;\n\t\t\t\tvar h = g.height;\n\t\t\t\t\n\t\t\t\tif (this.isSwimlane(parent))\n\t\t\t\t{\n\t\t\t\t\tvar size = this.getStartSize(parent);\n\t\t\t\t\t\n\t\t\t\t\tvar state = this.view.getState(parent);\n\t\t\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(parent);\n\t\t\t\t\tvar dir = mxUtils.getValue(style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\t\t\t\t\tvar flipH = mxUtils.getValue(style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tvar flipV = mxUtils.getValue(style, mxConstants.STYLE_FLIPV, 0) == 1;\n\t\t\t\t\t\n\t\t\t\t\tif (dir == mxConstants.DIRECTION_SOUTH || dir == mxConstants.DIRECTION_NORTH)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = size.width;\n\t\t\t\t\t\tsize.width = size.height;\n\t\t\t\t\t\tsize.height = tmp;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif ((dir == mxConstants.DIRECTION_EAST && !flipV) || (dir == mxConstants.DIRECTION_NORTH && !flipH) ||\n\t\t\t\t\t\t(dir == mxConstants.DIRECTION_WEST && flipV) || (dir == mxConstants.DIRECTION_SOUTH && flipH))\n\t\t\t\t\t{\n\t\t\t\t\t\tx = size.width;\n\t\t\t\t\t\ty = size.height;\n\t\t\t\t\t}\n\n\t\t\t\t\tw -= size.width;\n\t\t\t\t\th -= size.height;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxRectangle(x, y, w, h);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getMaximumGraphBounds\n * \n * Returns the bounds inside which the diagram should be kept as an\n * <mxRectangle>.\n */\nmxGraph.prototype.getMaximumGraphBounds = function()\n{\n\treturn this.maximumGraphBounds;\n};\n\n/**\n * Function: constrainChild\n * \n * Keeps the given cell inside the bounds returned by\n * <getCellContainmentArea> for its parent, according to the rules defined by\n * <getOverlap> and <isConstrainChild>. This modifies the cell's geometry\n * in-place and does not clone it.\n * \n * Parameters:\n * \n * cells - <mxCell> which should be constrained.\n * sizeFirst - Specifies if the size should be changed first. Default is true.\n */\nmxGraph.prototype.constrainChild = function(cell, sizeFirst)\n{\n\tsizeFirst = (sizeFirst != null) ? sizeFirst : true;\n\t\n\tif (cell != null)\n\t{\n\t\tvar geo = this.getCellGeometry(cell);\n\t\t\n\t\tif (geo != null && (this.isConstrainRelativeChildren() || !geo.relative))\n\t\t{\n\t\t\tvar parent = this.model.getParent(cell);\n\t\t\tvar pgeo = this.getCellGeometry(parent);\n\t\t\tvar max = this.getMaximumGraphBounds();\n\t\t\t\n\t\t\t// Finds parent offset\n\t\t\tif (max != null)\n\t\t\t{\n\t\t\t\tvar off = this.getBoundingBoxFromGeometry([parent], false);\n\t\t\t\t\n\t\t\t\tif (off != null)\n\t\t\t\t{\n\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\t\n\t\t\t\t\tmax.x -= off.x;\n\t\t\t\t\tmax.y -= off.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (this.isConstrainChild(cell))\n\t\t\t{\n\t\t\t\tvar tmp = this.getCellContainmentArea(cell);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tvar overlap = this.getOverlap(cell);\n\t\n\t\t\t\t\tif (overlap > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = mxRectangle.fromRectangle(tmp);\n\t\t\t\t\t\t\n\t\t\t\t\t\ttmp.x -= tmp.width * overlap;\n\t\t\t\t\t\ttmp.y -= tmp.height * overlap;\n\t\t\t\t\t\ttmp.width += 2 * tmp.width * overlap;\n\t\t\t\t\t\ttmp.height += 2 * tmp.height * overlap;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Find the intersection between max and tmp\n\t\t\t\t\tif (max == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tmax = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\t\tmax.intersect(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (max != null)\n\t\t\t{\n\t\t\t\tvar cells = [cell];\n\t\t\t\t\n\t\t\t\tif (!this.isCellCollapsed(cell))\n\t\t\t\t{\n\t\t\t\t\tvar desc = this.model.getDescendants(cell);\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < desc.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.isCellVisible(desc[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcells.push(desc[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar bbox = this.getBoundingBoxFromGeometry(cells, false);\n\t\t\t\t\n\t\t\t\tif (bbox != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\t// Cumulative horizontal movement\n\t\t\t\t\tvar dx = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (geo.width > max.width)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx = geo.width - max.width;\n\t\t\t\t\t\tgeo.width -= dx;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.x + bbox.width > max.x + max.width)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx -= bbox.x + bbox.width - max.x - max.width - dx;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Cumulative vertical movement\n\t\t\t\t\tvar dy = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (geo.height > max.height)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy = geo.height - max.height;\n\t\t\t\t\t\tgeo.height -= dy;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.y + bbox.height > max.y + max.height)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy -= bbox.y + bbox.height - max.y - max.height - dy;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.x < max.x)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx -= bbox.x - max.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.y < max.y)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy -= bbox.y - max.y;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (dx != 0 || dy != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (geo.relative)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Relative geometries are moved via absolute offset\n\t\t\t\t\t\t\tif (geo.offset == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.offset = new mxPoint();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tgeo.offset.x += dx;\n\t\t\t\t\t\t\tgeo.offset.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x += dx;\n\t\t\t\t\t\t\tgeo.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.model.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: resetEdges\n * \n * Resets the control points of the edges that are connected to the given\n * cells if not both ends of the edge are in the given cells array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> for which the connected edges should be\n * reset.\n */\nmxGraph.prototype.resetEdges = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\t// Prepares faster cells lookup\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t}\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar edges = this.model.getEdges(cells[i]);\n\t\t\t\t\n\t\t\t\tif (edges != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(edges[j]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[j], true);\n\t\t\t\t\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[j], false);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if one of the terminals is not in the given array\n\t\t\t\t\t\tif (!dict.get(source) || !dict.get(target))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.resetEdge(edges[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.resetEdges(this.model.getChildren(cells[i]));\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resetEdge\n * \n * Resets the control points of the given edge.\n * \n * Parameters:\n * \n * edge - <mxCell> whose points should be reset.\n */\nmxGraph.prototype.resetEdge = function(edge)\n{\n\tvar geo = this.model.getGeometry(edge);\n\t\n\t// Resets the control points\n\tif (geo != null && geo.points != null && geo.points.length > 0)\n\t{\n\t\tgeo = geo.clone();\n\t\tgeo.points = [];\n\t\tthis.model.setGeometry(edge, geo);\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Group: Cell connecting and connection constraints\n */\n\n/**\n * Function: getOutlineConstraint\n * \n * Returns the constraint used to connect to the outline of the given state.\n */\nmxGraph.prototype.getOutlineConstraint = function(point, terminalState, me)\n{\n\tif (terminalState.shape != null)\n\t{\n\t\tvar bounds = this.view.getPerimeterBounds(terminalState);\n\t\tvar direction = terminalState.style[mxConstants.STYLE_DIRECTION];\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tbounds.x += bounds.width / 2 - bounds.height / 2;\n\t\t\tbounds.y += bounds.height / 2 - bounds.width / 2;\n\t\t\tvar tmp = bounds.width;\n\t\t\tbounds.width = bounds.height;\n\t\t\tbounds.height = tmp;\n\t\t}\n\t\n\t\tvar alpha = mxUtils.toRadians(terminalState.shape.getShapeRotation());\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(-alpha);\n\t\t\tvar sin = Math.sin(-alpha);\n\t\n\t\t\tvar ct = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\t\t\tpoint = mxUtils.getRotatedPoint(point, cos, sin, ct);\n\t\t}\n\n\t\tvar sx = 1;\n\t\tvar sy = 1;\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\t// LATER: Add flipping support for image shapes\n\t\tif (this.getModel().isVertex(terminalState.cell))\n\t\t{\n\t\t\tvar flipH = terminalState.style[mxConstants.STYLE_FLIPH];\n\t\t\tvar flipV = terminalState.style[mxConstants.STYLE_FLIPV];\n\t\t\t\n\t\t\t// Legacy support for stencilFlipH/V\n\t\t\tif (terminalState.shape != null && terminalState.shape.stencil != null)\n\t\t\t{\n\t\t\t\tflipH = mxUtils.getValue(terminalState.style, 'stencilFlipH', 0) == 1 || flipH;\n\t\t\t\tflipV = mxUtils.getValue(terminalState.style, 'stencilFlipV', 0) == 1 || flipV;\n\t\t\t}\n\t\t\t\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tvar tmp = flipH;\n\t\t\t\tflipH = flipV;\n\t\t\t\tflipV = tmp;\n\t\t\t}\n\t\t\t\n\t\t\tif (flipH)\n\t\t\t{\n\t\t\t\tsx = -1;\n\t\t\t\tdx = -bounds.width;\n\t\t\t}\n\t\t\t\n\t\t\tif (flipV)\n\t\t\t{\n\t\t\t\tsy = -1;\n\t\t\t\tdy = -bounds.height ;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpoint = new mxPoint((point.x - bounds.x) * sx - dx + bounds.x, (point.y - bounds.y) * sy - dy + bounds.y);\n\t\t\n\t\tvar x = (bounds.width == 0) ? 0 : Math.round((point.x - bounds.x) * 1000 / bounds.width) / 1000;\n\t\tvar y = (bounds.height == 0) ? 0 : Math.round((point.y - bounds.y) * 1000 / bounds.height) / 1000;\n\t\t\n\t\treturn new mxConnectionConstraint(new mxPoint(x, y), false);\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getAllConnectionConstraints\n * \n * Returns an array of all <mxConnectionConstraints> for the given terminal. If\n * the shape of the given terminal is a <mxStencilShape> then the constraints\n * of the corresponding <mxStencil> are returned.\n * \n * Parameters:\n * \n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean that specifies if the terminal is the source or target.\n */\nmxGraph.prototype.getAllConnectionConstraints = function(terminal, source)\n{\n\tif (terminal != null && terminal.shape != null && terminal.shape.stencil != null)\n\t{\n\t\treturn terminal.shape.stencil.constraints;\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: getConnectionConstraint\n * \n * Returns an <mxConnectionConstraint> that describes the given connection\n * point. This result can then be passed to <getConnectionPoint>.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean indicating if the terminal is the source or target.\n */\nmxGraph.prototype.getConnectionConstraint = function(edge, terminal, source)\n{\n\tvar point = null;\n\tvar x = edge.style[(source) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X];\n\n\tif (x != null)\n\t{\n\t\tvar y = edge.style[(source) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y];\n\t\t\n\t\tif (y != null)\n\t\t{\n\t\t\tpoint = new mxPoint(parseFloat(x), parseFloat(y));\n\t\t}\n\t}\n\t\n\tvar perimeter = false;\n\tvar dx = 0, dy = 0;\n\t\n\tif (point != null)\n\t{\n\t\tperimeter = mxUtils.getValue(edge.style, (source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, true);\n\n\t\t//Add entry/exit offset\n\t\tdx = parseFloat(edge.style[(source) ? mxConstants.STYLE_EXIT_DX : mxConstants.STYLE_ENTRY_DX]);\n\t\tdy = parseFloat(edge.style[(source) ? mxConstants.STYLE_EXIT_DY : mxConstants.STYLE_ENTRY_DY]);\n\t\t\n\t\tdx = isFinite(dx)? dx : 0;\n\t\tdy = isFinite(dy)? dy : 0;\n\t}\n\n\treturn new mxConnectionConstraint(point, perimeter, null, dx, dy);\n};\n\n/**\n * Function: setConnectionConstraint\n * \n * Sets the <mxConnectionConstraint> that describes the given connection point.\n * If no constraint is given then nothing is changed. To remove an existing\n * constraint from the given edge, use an empty constraint instead.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge.\n * terminal - <mxCell> that represents the terminal.\n * source - Boolean indicating if the terminal is the source or target.\n * constraint - Optional <mxConnectionConstraint> to be used for this\n * connection.\n */\nmxGraph.prototype.setConnectionConstraint = function(edge, terminal, source, constraint)\n{\n\tif (constraint != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\t\n\t\ttry\n\t\t{\n\t\t\tif (constraint == null || constraint.point == null)\n\t\t\t{\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_X :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_X, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_Y :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_Y, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_DX :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_DX, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_DY :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_DY, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, null, [edge]);\n\t\t\t}\n\t\t\telse if (constraint.point != null)\n\t\t\t{\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_X :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_X, constraint.point.x, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_Y :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_Y, constraint.point.y, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_DX :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_DX, constraint.dx, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_DY :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_DY, constraint.dy, [edge]);\n\t\t\t\t\n\t\t\t\t// Only writes 0 since 1 is default\n\t\t\t\tif (!constraint.perimeter)\n\t\t\t\t{\n\t\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, '0', [edge]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, null, [edge]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: getConnectionPoint\n *\n * Returns the nearest point in the list of absolute points or the center\n * of the opposite terminal.\n * \n * Parameters:\n * \n * vertex - <mxCellState> that represents the vertex.\n * constraint - <mxConnectionConstraint> that represents the connection point\n * constraint as returned by <getConnectionConstraint>.\n */\nmxGraph.prototype.getConnectionPoint = function(vertex, constraint, round)\n{\n\tround = (round != null) ? round : true;\n\tvar point = null;\n\t\n\tif (vertex != null && constraint.point != null)\n\t{\n\t\tvar bounds = this.view.getPerimeterBounds(vertex);\n        var cx = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\t\tvar direction = vertex.style[mxConstants.STYLE_DIRECTION];\n\t\tvar r1 = 0;\n\t\t\n\t\t// Bounds need to be rotated by 90 degrees for further computation\n\t\tif (direction != null && mxUtils.getValue(vertex.style,\n\t\t\tmxConstants.STYLE_ANCHOR_POINT_DIRECTION, 1) == 1)\n\t\t{\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t\t{\n\t\t\t\tr1 += 270;\n\t\t\t}\n\t\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t\t{\n\t\t\t\tr1 += 180;\n\t\t\t}\n\t\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tr1 += 90;\n\t\t\t}\n\n\t\t\t// Bounds need to be rotated by 90 degrees for further computation\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\t\tdirection == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tbounds.rotate90();\n\t\t\t}\n\t\t}\n\n\t\tvar scale = this.view.scale;\n\t\tpoint = new mxPoint(bounds.x + constraint.point.x * bounds.width + constraint.dx * scale,\n\t\t\t\tbounds.y + constraint.point.y * bounds.height + constraint.dy * scale);\n\t\t\n\t\t// Rotation for direction before projection on perimeter\n\t\tvar r2 = vertex.style[mxConstants.STYLE_ROTATION] || 0;\n\t\t\n\t\tif (constraint.perimeter)\n\t\t{\n\t\t\tif (r1 != 0)\n\t\t\t{\n\t\t\t\t// Only 90 degrees steps possible here so no trig needed\n\t\t\t\tvar cos = 0;\n\t\t\t\tvar sin = 0;\n\t\t\t\t\n\t\t\t\tif (r1 == 90)\n\t\t\t\t{\n\t\t\t\t\tsin = 1;\n\t\t\t\t}\n\t\t\t\telse if (r1 == 180)\n\t\t\t\t{\n\t\t\t\t\tcos = -1;\n\t\t\t\t}\n\t\t\t\telse if (r1 == 270)\n\t\t\t\t{\n\t\t\t\t\tsin = -1;\n\t\t\t\t}\n\t\t\t\t\n\t\t        point = mxUtils.getRotatedPoint(point, cos, sin, cx);\n\t\t\t}\n\t\n\t\t\tpoint = this.view.getPerimeterPoint(vertex, point, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr2 += r1;\n\t\t\t\n\t\t\tif (this.getModel().isVertex(vertex.cell))\n\t\t\t{\n\t\t\t\tvar flipH = vertex.style[mxConstants.STYLE_FLIPH] == 1;\n\t\t\t\tvar flipV = vertex.style[mxConstants.STYLE_FLIPV] == 1;\n\t\t\t\t\n\t\t\t\t// Legacy support for stencilFlipH/V\n\t\t\t\tif (vertex.shape != null && vertex.shape.stencil != null)\n\t\t\t\t{\n\t\t\t\t\tflipH = (mxUtils.getValue(vertex.style, 'stencilFlipH', 0) == 1) || flipH;\n\t\t\t\t\tflipV = (mxUtils.getValue(vertex.style, 'stencilFlipV', 0) == 1) || flipV;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\tdirection == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tvar temp = flipH;\n\t\t\t\t\tflipH = flipV\n\t\t\t\t\tflipV = temp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (flipH)\n\t\t\t\t{\n\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (flipV)\n\t\t\t\t{\n\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Generic rotation after projection on perimeter\n\t\tif (r2 != 0 && point != null)\n\t\t{\n\t        var rad = mxUtils.toRadians(r2);\n\t        var cos = Math.cos(rad);\n\t        var sin = Math.sin(rad);\n\t        \n\t        point = mxUtils.getRotatedPoint(point, cos, sin, cx);\n\t\t}\n\t}\n\t\n\tif (round && point != null)\n\t{\n\t\tpoint.x = Math.round(point.x);\n\t\tpoint.y = Math.round(point.y);\n\t}\n\n\treturn point;\n};\n\n/**\n * Function: connectCell\n * \n * Connects the specified end of the given edge to the given terminal\n * using <cellConnected> and fires <mxEvent.CONNECT_CELL> while the\n * transaction is in progress. Returns the updated edge.\n * \n * Parameters:\n * \n * edge - <mxCell> whose terminal should be updated.\n * terminal - <mxCell> that represents the new terminal to be used.\n * source - Boolean indicating if the new terminal is the source or target.\n * constraint - Optional <mxConnectionConstraint> to be used for this\n * connection.\n */\nmxGraph.prototype.connectCell = function(edge, terminal, source, constraint)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar previous = this.model.getTerminal(edge, source);\n\t\tthis.cellConnected(edge, terminal, source, constraint);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.CONNECT_CELL,\n\t\t\t'edge', edge, 'terminal', terminal, 'source', source,\n\t\t\t'previous', previous));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: cellConnected\n * \n * Sets the new terminal for the given edge and resets the edge points if\n * <resetEdgesOnConnect> is true. This method fires\n * <mxEvent.CELL_CONNECTED> while the transaction is in progress.\n * \n * Parameters:\n * \n * edge - <mxCell> whose terminal should be updated.\n * terminal - <mxCell> that represents the new terminal to be used.\n * source - Boolean indicating if the new terminal is the source or target.\n * constraint - <mxConnectionConstraint> to be used for this connection.\n */\nmxGraph.prototype.cellConnected = function(edge, terminal, source, constraint)\n{\n\tif (edge != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar previous = this.model.getTerminal(edge, source);\n\n\t\t\t// Updates the constraint\n\t\t\tthis.setConnectionConstraint(edge, terminal, source, constraint);\n\t\t\t\n\t\t\t// Checks if the new terminal is a port, uses the ID of the port in the\n\t\t\t// style and the parent of the port as the actual terminal of the edge.\n\t\t\tif (this.isPortsEnabled())\n\t\t\t{\n\t\t\t\tvar id = null;\n\t\n\t\t\t\tif (this.isPort(terminal))\n\t\t\t\t{\n\t\t\t\t\tid = terminal.getId();\n\t\t\t\t\tterminal = this.getTerminalForPort(terminal, source);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Sets or resets all previous information for connecting to a child port\n\t\t\t\tvar key = (source) ? mxConstants.STYLE_SOURCE_PORT :\n\t\t\t\t\tmxConstants.STYLE_TARGET_PORT;\n\t\t\t\tthis.setCellStyles(key, id, [edge]);\n\t\t\t}\n\t\t\t\n\t\t\tthis.model.setTerminal(edge, terminal, source);\n\t\t\t\n\t\t\tif (this.resetEdgesOnConnect)\n\t\t\t{\n\t\t\t\tthis.resetEdge(edge);\n\t\t\t}\n\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELL_CONNECTED,\n\t\t\t\t'edge', edge, 'terminal', terminal, 'source', source,\n\t\t\t\t'previous', previous));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: disconnectGraph\n * \n * Disconnects the given edges from the terminals which are not in the\n * given array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be disconnected.\n */\nmxGraph.prototype.disconnectGraph = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\t\t\t\t\t\t\t\n\t\t\tvar scale = this.view.scale;\n\t\t\tvar tr = this.view.translate;\n\t\t\t\n\t\t\t// Fast lookup for finding cells in array\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (this.model.isEdge(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.model.getGeometry(cells[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\tvar pstate = this.view.getState(\n\t\t\t\t\t\t\tthis.model.getParent(cells[i]));\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null &&\n\t\t\t\t\t\t\tpstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar dx = -pstate.origin.x;\n\t\t\t\t\t\t\tvar dy = -pstate.origin.y;\n\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\n\t\t\t\t\t\t\tvar src = this.model.getTerminal(cells[i], true);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (src != null && this.isCellDisconnectable(cells[i], src, true))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twhile (src != null && !dict.get(src))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsrc = this.model.getParent(src);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (src == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[0].x / scale - tr.x + dx,\n\t\t\t\t\t\t\t\t\t\t\tpts[0].y / scale - tr.y + dy), true);\n\t\t\t\t\t\t\t\t\tthis.model.setTerminal(cells[i], null, true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar trg = this.model.getTerminal(cells[i], false);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (trg != null && this.isCellDisconnectable(cells[i], trg, false))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twhile (trg != null && !dict.get(trg))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttrg = this.model.getParent(trg);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (trg == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar n = pts.length - 1;\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[n].x / scale - tr.x + dx,\n\t\t\t\t\t\t\t\t\t\t\tpts[n].y / scale - tr.y + dy), false);\n\t\t\t\t\t\t\t\t\tthis.model.setTerminal(cells[i], null, false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Drilldown\n */\n\n/**\n * Function: getCurrentRoot\n * \n * Returns the current root of the displayed cell hierarchy. This is a\n * shortcut to <mxGraphView.currentRoot> in <view>.\n */\nmxGraph.prototype.getCurrentRoot = function()\n{\n\treturn this.view.currentRoot;\n};\n \n/**\n * Function: getTranslateForRoot\n * \n * Returns the translation to be used if the given cell is the root cell as\n * an <mxPoint>. This implementation returns null.\n * \n * Example:\n * \n * To keep the children at their absolute position while stepping into groups,\n * this function can be overridden as follows.\n * \n * (code)\n * var offset = new mxPoint(0, 0);\n * \n * while (cell != null)\n * {\n *   var geo = this.model.getGeometry(cell);\n * \n *   if (geo != null)\n *   {\n *     offset.x -= geo.x;\n *     offset.y -= geo.y;\n *   }\n * \n *   cell = this.model.getParent(cell);\n * }\n * \n * return offset;\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the root.\n */\nmxGraph.prototype.getTranslateForRoot = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, the cell returned by getTerminalForPort should be used as the\n * terminal and the port should be referenced by the ID in either the\n * mxConstants.STYLE_SOURCE_PORT or the or the\n * mxConstants.STYLE_TARGET_PORT. Note that a port should not be movable.\n * This implementation always returns false.\n * \n * A typical implementation is the following:\n * \n * (code)\n * graph.isPort = function(cell)\n * {\n *   var geo = this.getCellGeometry(cell);\n *   \n *   return (geo != null) ? geo.relative : false;\n * };\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxGraph.prototype.isPort = function(cell)\n{\n\treturn false;\n};\n\n/**\n * Function: getTerminalForPort\n * \n * Returns the terminal to be used for a given port. This implementation\n * always returns the parent cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n * source - If the cell is the source or target port.\n */\nmxGraph.prototype.getTerminalForPort = function(cell, source)\n{\n\treturn this.model.getParent(cell);\n};\n\n/**\n * Function: getChildOffsetForCell\n * \n * Returns the offset to be used for the cells inside the given cell. The\n * root and layer cells may be identified using <mxGraphModel.isRoot> and\n * <mxGraphModel.isLayer>. For all other current roots, the\n * <mxGraphView.currentRoot> field points to the respective cell, so that\n * the following holds: cell == this.view.currentRoot. This implementation\n * returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose offset should be returned.\n */\nmxGraph.prototype.getChildOffsetForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: enterGroup\n * \n * Uses the given cell as the root of the displayed cell hierarchy. If no\n * cell is specified then the selection cell is used. The cell is only used\n * if <isValidRoot> returns true.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be used as the new root. Default is the\n * selection cell.\n */\nmxGraph.prototype.enterGroup = function(cell)\n{\n\tcell = cell || this.getSelectionCell();\n\t\n\tif (cell != null && this.isValidRoot(cell))\n\t{\n\t\tthis.view.setCurrentRoot(cell);\n\t\tthis.clearSelection();\n\t}\n};\n\n/**\n * Function: exitGroup\n * \n * Changes the current root to the next valid root in the displayed cell\n * hierarchy.\n */\nmxGraph.prototype.exitGroup = function()\n{\n\tvar root = this.model.getRoot();\n\tvar current = this.getCurrentRoot();\n\t\n\tif (current != null)\n\t{\n\t\tvar next = this.model.getParent(current);\n\t\t\n\t\t// Finds the next valid root in the hierarchy\n\t\twhile (next != root && !this.isValidRoot(next) &&\n\t\t\t\tthis.model.getParent(next) != root)\n\t\t{\n\t\t\tnext = this.model.getParent(next);\n\t\t}\n\t\t\n\t\t// Clears the current root if the new root is\n\t\t// the model's root or one of the layers.\n\t\tif (next == root || this.model.getParent(next) == root)\n\t\t{\n\t\t\tthis.view.setCurrentRoot(null);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.view.setCurrentRoot(next);\n\t\t}\n\t\t\n\t\tvar state = this.view.getState(current);\n\t\t\n\t\t// Selects the previous root in the graph\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.setSelectionCell(current);\n\t\t}\n\t}\n};\n\n/**\n * Function: home\n * \n * Uses the root of the model as the root of the displayed cell hierarchy\n * and selects the previous root.\n */\nmxGraph.prototype.home = function()\n{\n\tvar current = this.getCurrentRoot();\n\t\n\tif (current != null)\n\t{\n\t\tthis.view.setCurrentRoot(null);\n\t\tvar state = this.view.getState(current);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.setSelectionCell(current);\n\t\t}\n\t}\n};\n\n/**\n * Function: isValidRoot\n * \n * Returns true if the given cell is a valid root for the cell display\n * hierarchy. This implementation returns true for all non-null values.\n * \n * Parameters:\n * \n * cell - <mxCell> which should be checked as a possible root.\n */\nmxGraph.prototype.isValidRoot = function(cell)\n{\n\treturn (cell != null);\n};\n\n/**\n * Group: Graph display\n */\n \n/**\n * Function: getGraphBounds\n * \n * Returns the bounds of the visible graph. Shortcut to\n * <mxGraphView.getGraphBounds>. See also: <getBoundingBoxFromGeometry>.\n */\n mxGraph.prototype.getGraphBounds = function()\n {\n \treturn this.view.getGraphBounds();\n };\n\n/**\n * Function: getCellBounds\n * \n * Returns the scaled, translated bounds for the given cell. See\n * <mxGraphView.getBounds> for arrays.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be returned.\n * includeEdge - Optional boolean that specifies if the bounds of\n * the connected edges should be included. Default is false.\n * includeDescendants - Optional boolean that specifies if the bounds\n * of all descendants should be included. Default is false.\n */\nmxGraph.prototype.getCellBounds = function(cell, includeEdges, includeDescendants)\n{\n\tvar cells = [cell];\n\t\n\t// Includes all connected edges\n\tif (includeEdges)\n\t{\n\t\tcells = cells.concat(this.model.getEdges(cell));\n\t}\n\t\n\tvar result = this.view.getBounds(cells);\n\t\n\t// Recursively includes the bounds of the children\n\tif (includeDescendants)\n\t{\n\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar tmp = this.getCellBounds(this.model.getChildAt(cell, i),\n\t\t\t\tincludeEdges, true);\n\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\tresult.add(tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = tmp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getBoundingBoxFromGeometry\n * \n * Returns the bounding box for the geometries of the vertices in the\n * given array of cells. This can be used to find the graph bounds during\n * a layout operation (ie. before the last endUpdate) as follows:\n * \n * (code)\n * var cells = graph.getChildCells(graph.getDefaultParent(), true, true);\n * var bounds = graph.getBoundingBoxFromGeometry(cells, true);\n * (end)\n * \n * This can then be used to move cells to the origin:\n * \n * (code)\n * if (bounds.x < 0 || bounds.y < 0)\n * {\n *   graph.moveCells(cells, -Math.min(bounds.x, 0), -Math.min(bounds.y, 0))\n * }\n * (end)\n * \n * Or to translate the graph view:\n * \n * (code)\n * if (bounds.x < 0 || bounds.y < 0)\n * {\n *   graph.view.setTranslate(-Math.min(bounds.x, 0), -Math.min(bounds.y, 0));\n * }\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be returned.\n * includeEdges - Specifies if edge bounds should be included by computing\n * the bounding box for all points in geometry. Default is false.\n */\nmxGraph.prototype.getBoundingBoxFromGeometry = function(cells, includeEdges)\n{\n\tincludeEdges = (includeEdges != null) ? includeEdges : false;\n\tvar result = null;\n\t\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (includeEdges || this.model.isVertex(cells[i]))\n\t\t\t{\n\t\t\t\t// Computes the bounding box for the points in the geometry\n\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\t\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = null;\n\t\t\t\t\t\n\t\t\t\t\tif (this.model.isEdge(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar addPoint = function(pt)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pt != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (tmp == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp = new mxRectangle(pt.x, pt.y, 0, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp.add(new mxRectangle(pt.x, pt.y, 0, 0));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.model.getTerminal(cells[i], true) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddPoint(geo.getTerminalPoint(true));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.model.getTerminal(cells[i], false) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddPoint(geo.getTerminalPoint(false));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tvar pts = geo.points;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (pts != null && pts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar tmp = new mxRectangle(pts[0].x, pts[0].y, 0, 0);\n\n\t\t\t\t\t\t\tfor (var j = 1; j < pts.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taddPoint(pts[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tbbox = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (geo.relative)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (this.model.isVertex(parent) && parent != this.view.currentRoot)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar tmp = this.getBoundingBoxFromGeometry([parent], false);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbbox = new mxRectangle(geo.x * tmp.width, geo.y * tmp.height, geo.width, geo.height);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (mxUtils.indexOf(cells, parent) >= 0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tbbox.x += tmp.x;\n\t\t\t\t\t\t\t\t\t\tbbox.y += tmp.y;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbbox = mxRectangle.fromRectangle(geo);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.model.isVertex(parent) && mxUtils.indexOf(cells, parent) >= 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar tmp = this.getBoundingBoxFromGeometry([parent], false);\n\n\t\t\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbbox.x += tmp.x;\n\t\t\t\t\t\t\t\t\tbbox.y += tmp.y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bbox != null && geo.offset != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbbox.x += geo.offset.x;\n\t\t\t\t\t\t\tbbox.y += geo.offset.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (result == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: refresh\n * \n * Clears all cell states or the states for the hierarchy starting at the\n * given cell and validates the graph. This fires a refresh event as the\n * last step.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> for which the cell states should be cleared.\n */\nmxGraph.prototype.refresh = function(cell)\n{\n\tthis.view.clear(cell, cell == null);\n\tthis.view.validate();\n\tthis.sizeDidChange();\n\tthis.fireEvent(new mxEventObject(mxEvent.REFRESH));\n};\n\n/**\n * Function: snap\n * \n * Snaps the given numeric value to the grid if <gridEnabled> is true.\n * \n * Parameters:\n * \n * value - Numeric value to be snapped to the grid.\n */\nmxGraph.prototype.snap = function(value)\n{\n\tif (this.gridEnabled)\n\t{\n\t\tvalue = Math.round(value / this.gridSize ) * this.gridSize;\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: panGraph\n * \n * Shifts the graph display by the given amount. This is used to preview\n * panning operations, use <mxGraphView.setTranslate> to set a persistent\n * translation of the view. Fires <mxEvent.PAN>.\n * \n * Parameters:\n * \n * dx - Amount to shift the graph along the x-axis.\n * dy - Amount to shift the graph along the y-axis.\n */\nmxGraph.prototype.panGraph = function(dx, dy)\n{\n\tif (this.useScrollbarsForPanning && mxUtils.hasScrollbars(this.container))\n\t{\n\t\tthis.container.scrollLeft = -dx;\n\t\tthis.container.scrollTop = -dy;\n\t}\n\telse\n\t{\n\t\tvar canvas = this.view.getCanvas();\n\t\t\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\t// Puts everything inside the container in a DIV so that it\n\t\t\t// can be moved without changing the state of the container\n\t\t\tif (dx == 0 && dy == 0)\n\t\t\t{\n\t\t\t\t// Workaround for ignored removeAttribute on SVG element in IE9 standards\n\t\t\t\tif (mxClient.IS_IE)\n\t\t\t\t{\n\t\t\t\t\tcanvas.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcanvas.removeAttribute('transform');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.shiftPreview1 != null)\n\t\t\t\t{\n\t\t\t\t\tvar child = this.shiftPreview1.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\tthis.container.appendChild(child);\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shiftPreview1.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shiftPreview1.parentNode.removeChild(this.shiftPreview1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview1 = null;\n\t\t\t\t\t\n\t\t\t\t\tthis.container.appendChild(canvas.parentNode);\n\t\t\t\t\t\n\t\t\t\t\tchild = this.shiftPreview2.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\tthis.container.appendChild(child);\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shiftPreview2.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shiftPreview2.parentNode.removeChild(this.shiftPreview2);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview2 = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t\t\n\t\t\t\tif (this.shiftPreview1 == null)\n\t\t\t\t{\n\t\t\t\t\t// Needs two divs for stuff before and after the SVG element\n\t\t\t\t\tthis.shiftPreview1 = document.createElement('div');\n\t\t\t\t\tthis.shiftPreview1.style.position = 'absolute';\n\t\t\t\t\tthis.shiftPreview1.style.overflow = 'visible';\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview2 = document.createElement('div');\n\t\t\t\t\tthis.shiftPreview2.style.position = 'absolute';\n\t\t\t\t\tthis.shiftPreview2.style.overflow = 'visible';\n\n\t\t\t\t\tvar current = this.shiftPreview1;\n\t\t\t\t\tvar child = this.container.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// SVG element is moved via transform attribute\n\t\t\t\t\t\tif (child != canvas.parentNode)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent.appendChild(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent = this.shiftPreview2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Inserts elements only if not empty\n\t\t\t\t\tif (this.shiftPreview1.firstChild != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.container.insertBefore(this.shiftPreview1, canvas.parentNode);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.shiftPreview2.firstChild != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.container.appendChild(this.shiftPreview2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.shiftPreview1.style.left = dx + 'px';\n\t\t\t\tthis.shiftPreview1.style.top = dy + 'px';\n\t\t\t\tthis.shiftPreview2.style.left = dx + 'px';\n\t\t\t\tthis.shiftPreview2.style.top = dy + 'px';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcanvas.style.left = dx + 'px';\n\t\t\tcanvas.style.top = dy + 'px';\n\t\t}\n\t\t\n\t\tthis.panDx = dx;\n\t\tthis.panDy = dy;\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN));\n\t}\n};\n\n/**\n * Function: zoomIn\n * \n * Zooms into the graph by <zoomFactor>.\n */\nmxGraph.prototype.zoomIn = function()\n{\n\tthis.zoom(this.zoomFactor);\n};\n\n/**\n * Function: zoomOut\n * \n * Zooms out of the graph by <zoomFactor>.\n */\nmxGraph.prototype.zoomOut = function()\n{\n\tthis.zoom(1 / this.zoomFactor);\n};\n\n/**\n * Function: zoomActual\n * \n * Resets the zoom and panning in the view.\n */\nmxGraph.prototype.zoomActual = function()\n{\n\tif (this.view.scale == 1)\n\t{\n\t\tthis.view.setTranslate(0, 0);\n\t}\n\telse\n\t{\n\t\tthis.view.translate.x = 0;\n\t\tthis.view.translate.y = 0;\n\n\t\tthis.view.setScale(1);\n\t}\n};\n\n/**\n * Function: zoomTo\n * \n * Zooms the graph to the given scale with an optional boolean center\n * argument, which is passd to <zoom>.\n */\nmxGraph.prototype.zoomTo = function(scale, center)\n{\n\tthis.zoom(scale / this.view.scale, center);\n};\n\n/**\n * Function: center\n * \n * Centers the graph in the container.\n * \n * Parameters:\n * \n * horizontal - Optional boolean that specifies if the graph should be centered\n * horizontally. Default is true.\n * vertical - Optional boolean that specifies if the graph should be centered\n * vertically. Default is true.\n * cx - Optional float that specifies the horizontal center. Default is 0.5.\n * cy - Optional float that specifies the vertical center. Default is 0.5.\n */\nmxGraph.prototype.center = function(horizontal, vertical, cx, cy)\n{\n\thorizontal = (horizontal != null) ? horizontal : true;\n\tvertical = (vertical != null) ? vertical : true;\n\tcx = (cx != null) ? cx : 0.5;\n\tcy = (cy != null) ? cy : 0.5;\n\t\n\tvar hasScrollbars = mxUtils.hasScrollbars(this.container);\n\tvar padding = 2 * this.getBorder();\n\tvar cw = this.container.clientWidth - padding;\n\tvar ch = this.container.clientHeight - padding;\n\tvar bounds = this.getGraphBounds();\n\n\tvar t = this.view.translate;\n\tvar s = this.view.scale;\n\n\tvar dx = (horizontal) ? cw - bounds.width : 0;\n\tvar dy = (vertical) ? ch - bounds.height : 0;\n\t\n\tif (!hasScrollbars)\n\t{\n\t\tthis.view.setTranslate((horizontal) ? Math.floor(t.x - bounds.x * s + dx * cx / s) : t.x,\n\t\t\t(vertical) ? Math.floor(t.y - bounds.y * s + dy * cy / s) : t.y);\n\t}\n\telse\n\t{\n\t\tbounds.x -= t.x;\n\t\tbounds.y -= t.y;\n\t\n\t\tvar sw = this.container.scrollWidth;\n\t\tvar sh = this.container.scrollHeight;\n\t\t\n\t\tif (sw > cw)\n\t\t{\n\t\t\tdx = 0;\n\t\t}\n\t\t\n\t\tif (sh > ch)\n\t\t{\n\t\t\tdy = 0;\n\t\t}\n\n\t\tthis.view.setTranslate(Math.floor(dx / 2 - bounds.x), Math.floor(dy / 2 - bounds.y));\n\t\tthis.container.scrollLeft = (sw - cw) / 2;\n\t\tthis.container.scrollTop = (sh - ch) / 2;\n\t}\n};\n\n/**\n * Function: zoom\n * \n * Zooms the graph using the given factor. Center is an optional boolean\n * argument that keeps the graph scrolled to the center. If the center argument\n * is omitted, then <centerZoom> will be used as its value.\n */\nmxGraph.prototype.zoom = function(factor, center)\n{\n\tcenter = (center != null) ? center : this.centerZoom;\n\tvar scale = Math.round(this.view.scale * factor * 100) / 100;\n\tvar state = this.view.getState(this.getSelectionCell());\n\tfactor = scale / this.view.scale;\n\t\n\tif (this.keepSelectionVisibleOnZoom && state != null)\n\t{\n\t\tvar rect = new mxRectangle(state.x * factor, state.y * factor,\n\t\t\tstate.width * factor, state.height * factor);\n\t\t\n\t\t// Refreshes the display only once if a scroll is carried out\n\t\tthis.view.scale = scale;\n\t\t\n\t\tif (!this.scrollRectToVisible(rect))\n\t\t{\n\t\t\tthis.view.revalidate();\n\t\t\t\n\t\t\t// Forces an event to be fired but does not revalidate again\n\t\t\tthis.view.setScale(scale);\n\t\t}\n\t}\n\telse\n\t{\n\t\tvar hasScrollbars = mxUtils.hasScrollbars(this.container);\n\t\t\n\t\tif (center && !hasScrollbars)\n\t\t{\n\t\t\tvar dx = this.container.offsetWidth;\n\t\t\tvar dy = this.container.offsetHeight;\n\t\t\t\n\t\t\tif (factor > 1)\n\t\t\t{\n\t\t\t\tvar f = (factor - 1) / (scale * 2);\n\t\t\t\tdx *= -f;\n\t\t\t\tdy *= -f;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar f = (1 / factor - 1) / (this.view.scale * 2);\n\t\t\t\tdx *= f;\n\t\t\t\tdy *= f;\n\t\t\t}\n\n\t\t\tthis.view.scaleAndTranslate(scale,\n\t\t\t\tthis.view.translate.x + dx,\n\t\t\t\tthis.view.translate.y + dy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Allows for changes of translate and scrollbars during setscale\n\t\t\tvar tx = this.view.translate.x;\n\t\t\tvar ty = this.view.translate.y;\n\t\t\tvar sl = this.container.scrollLeft;\n\t\t\tvar st = this.container.scrollTop;\n\t\t\t\n\t\t\tthis.view.setScale(scale);\n\t\t\t\n\t\t\tif (hasScrollbars)\n\t\t\t{\n\t\t\t\tvar dx = 0;\n\t\t\t\tvar dy = 0;\n\t\t\t\t\n\t\t\t\tif (center)\n\t\t\t\t{\n\t\t\t\t\tdx = this.container.offsetWidth * (factor - 1) / 2;\n\t\t\t\t\tdy = this.container.offsetHeight * (factor - 1) / 2;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.container.scrollLeft = (this.view.translate.x - tx) * this.view.scale + Math.round(sl * factor + dx);\n\t\t\t\tthis.container.scrollTop = (this.view.translate.y - ty) * this.view.scale + Math.round(st * factor + dy);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: zoomToRect\n * \n * Zooms the graph to the specified rectangle. If the rectangle does not have same aspect\n * ratio as the display container, it is increased in the smaller relative dimension only\n * until the aspect match. The original rectangle is centralised within this expanded one.\n * \n * Note that the input rectangular must be un-scaled and un-translated.\n * \n * Parameters:\n * \n * rect - The un-scaled and un-translated rectangluar region that should be just visible \n * after the operation\n */\nmxGraph.prototype.zoomToRect = function(rect)\n{\n\tvar scaleX = this.container.clientWidth / rect.width;\n\tvar scaleY = this.container.clientHeight / rect.height;\n\tvar aspectFactor = scaleX / scaleY;\n\n\t// Remove any overlap of the rect outside the client area\n\trect.x = Math.max(0, rect.x);\n\trect.y = Math.max(0, rect.y);\n\tvar rectRight = Math.min(this.container.scrollWidth, rect.x + rect.width);\n\tvar rectBottom = Math.min(this.container.scrollHeight, rect.y + rect.height);\n\trect.width = rectRight - rect.x;\n\trect.height = rectBottom - rect.y;\n\n\t// The selection area has to be increased to the same aspect\n\t// ratio as the container, centred around the centre point of the \n\t// original rect passed in.\n\tif (aspectFactor < 1.0)\n\t{\n\t\t// Height needs increasing\n\t\tvar newHeight = rect.height / aspectFactor;\n\t\tvar deltaHeightBuffer = (newHeight - rect.height) / 2.0;\n\t\trect.height = newHeight;\n\t\t\n\t\t// Assign up to half the buffer to the upper part of the rect, not crossing 0\n\t\t// put the rest on the bottom\n\t\tvar upperBuffer = Math.min(rect.y , deltaHeightBuffer);\n\t\trect.y = rect.y - upperBuffer;\n\t\t\n\t\t// Check if the bottom has extended too far\n\t\trectBottom = Math.min(this.container.scrollHeight, rect.y + rect.height);\n\t\trect.height = rectBottom - rect.y;\n\t}\n\telse\n\t{\n\t\t// Width needs increasing\n\t\tvar newWidth = rect.width * aspectFactor;\n\t\tvar deltaWidthBuffer = (newWidth - rect.width) / 2.0;\n\t\trect.width = newWidth;\n\t\t\n\t\t// Assign up to half the buffer to the upper part of the rect, not crossing 0\n\t\t// put the rest on the bottom\n\t\tvar leftBuffer = Math.min(rect.x , deltaWidthBuffer);\n\t\trect.x = rect.x - leftBuffer;\n\t\t\n\t\t// Check if the right hand side has extended too far\n\t\trectRight = Math.min(this.container.scrollWidth, rect.x + rect.width);\n\t\trect.width = rectRight - rect.x;\n\t}\n\n\tvar scale = this.container.clientWidth / rect.width;\n\tvar newScale = this.view.scale * scale;\n\n\tif (!mxUtils.hasScrollbars(this.container))\n\t{\n\t\tthis.view.scaleAndTranslate(newScale, (this.view.translate.x - rect.x / this.view.scale), (this.view.translate.y - rect.y / this.view.scale));\n\t}\n\telse\n\t{\n\t\tthis.view.setScale(newScale);\n\t\tthis.container.scrollLeft = Math.round(rect.x * scale);\n\t\tthis.container.scrollTop = Math.round(rect.y * scale);\n\t}\n};\n\n/**\n * Function: scrollCellToVisible\n * \n * Pans the graph so that it shows the given cell. Optionally the cell may\n * be centered in the container.\n * \n * To center a given graph if the <container> has no scrollbars, use the following code.\n * \n * [code]\n * var bounds = graph.getGraphBounds();\n * graph.view.setTranslate(-bounds.x - (bounds.width - container.clientWidth) / 2,\n * \t\t\t\t\t\t   -bounds.y - (bounds.height - container.clientHeight) / 2);\n * [/code]\n * \n * Parameters:\n * \n * cell - <mxCell> to be made visible.\n * center - Optional boolean flag. Default is false.\n */\nmxGraph.prototype.scrollCellToVisible = function(cell, center)\n{\n\tvar x = -this.view.translate.x;\n\tvar y = -this.view.translate.y;\n\n\tvar state = this.view.getState(cell);\n\n\tif (state != null)\n\t{\n\t\tvar bounds = new mxRectangle(x + state.x, y + state.y, state.width,\n\t\t\tstate.height);\n\n\t\tif (center && this.container != null)\n\t\t{\n\t\t\tvar w = this.container.clientWidth;\n\t\t\tvar h = this.container.clientHeight;\n\n\t\t\tbounds.x = bounds.getCenterX() - w / 2;\n\t\t\tbounds.width = w;\n\t\t\tbounds.y = bounds.getCenterY() - h / 2;\n\t\t\tbounds.height = h;\n\t\t}\n\t\t\n\t\tvar tr = new mxPoint(this.view.translate.x, this.view.translate.y);\n\n\t\tif (this.scrollRectToVisible(bounds))\n\t\t{\n\t\t\t// Triggers an update via the view's event source\n\t\t\tvar tr2 = new mxPoint(this.view.translate.x, this.view.translate.y);\n\t\t\tthis.view.translate.x = tr.x;\n\t\t\tthis.view.translate.y = tr.y;\n\t\t\tthis.view.setTranslate(tr2.x, tr2.y);\n\t\t}\n\t}\n};\n\n/**\n * Function: scrollRectToVisible\n * \n * Pans the graph so that it shows the given rectangle.\n * \n * Parameters:\n * \n * rect - <mxRectangle> to be made visible.\n */\nmxGraph.prototype.scrollRectToVisible = function(rect)\n{\n\tvar isChanged = false;\n\t\n\tif (rect != null)\n\t{\n\t\tvar w = this.container.offsetWidth;\n\t\tvar h = this.container.offsetHeight;\n\n        var widthLimit = Math.min(w, rect.width);\n        var heightLimit = Math.min(h, rect.height);\n\n\t\tif (mxUtils.hasScrollbars(this.container))\n\t\t{\n\t\t\tvar c = this.container;\n\t\t\trect.x += this.view.translate.x;\n\t\t\trect.y += this.view.translate.y;\n\t\t\tvar dx = c.scrollLeft - rect.x;\n\t\t\tvar ddx = Math.max(dx - c.scrollLeft, 0);\n\n\t\t\tif (dx > 0)\n\t\t\t{\n\t\t\t\tc.scrollLeft -= dx + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdx = rect.x + widthLimit - c.scrollLeft - c.clientWidth;\n\n\t\t\t\tif (dx > 0)\n\t\t\t\t{\n\t\t\t\t\tc.scrollLeft += dx + 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar dy = c.scrollTop - rect.y;\n\t\t\tvar ddy = Math.max(0, dy - c.scrollTop);\n\n\t\t\tif (dy > 0)\n\t\t\t{\n\t\t\t\tc.scrollTop -= dy + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdy = rect.y + heightLimit - c.scrollTop - c.clientHeight;\n\n\t\t\t\tif (dy > 0)\n\t\t\t\t{\n\t\t\t\t\tc.scrollTop += dy + 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.useScrollbarsForPanning && (ddx != 0 || ddy != 0))\n\t\t\t{\n\t\t\t\tthis.view.setTranslate(ddx, ddy);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar x = -this.view.translate.x;\n\t\t\tvar y = -this.view.translate.y;\n\n\t\t\tvar s = this.view.scale;\n\n\t\t\tif (rect.x + widthLimit > x + w)\n\t\t\t{\n\t\t\t\tthis.view.translate.x -= (rect.x + widthLimit - w - x) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.y + heightLimit > y + h)\n\t\t\t{\n\t\t\t\tthis.view.translate.y -= (rect.y + heightLimit - h - y) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.x < x)\n\t\t\t{\n\t\t\t\tthis.view.translate.x += (x - rect.x) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.y  < y)\n\t\t\t{\n\t\t\t\tthis.view.translate.y += (y - rect.y) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (isChanged)\n\t\t\t{\n\t\t\t\tthis.view.refresh();\n\t\t\t\t\n\t\t\t\t// Repaints selection marker (ticket 18)\n\t\t\t\tif (this.selectionCellsHandler != null)\n\t\t\t\t{\n\t\t\t\t\tthis.selectionCellsHandler.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn isChanged;\n};\n\n/**\n * Function: getCellGeometry\n * \n * Returns the <mxGeometry> for the given cell. This implementation uses\n * <mxGraphModel.getGeometry>. Subclasses can override this to implement\n * specific geometries for cells in only one graph, that is, it can return\n * geometries that depend on the current state of the view.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be returned.\n */\nmxGraph.prototype.getCellGeometry = function(cell)\n{\n\treturn this.model.getGeometry(cell);\n};\n\n/**\n * Function: isCellVisible\n * \n * Returns true if the given cell is visible in this graph. This\n * implementation uses <mxGraphModel.isVisible>. Subclassers can override\n * this to implement specific visibility for cells in only one graph, that\n * is, without affecting the visible state of the cell.\n * \n * When using dynamic filter expressions for cell visibility, then the\n * graph should be revalidated after the filter expression has changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose visible state should be returned.\n */\nmxGraph.prototype.isCellVisible = function(cell)\n{\n\treturn this.model.isVisible(cell);\n};\n\n/**\n * Function: isCellCollapsed\n * \n * Returns true if the given cell is collapsed in this graph. This\n * implementation uses <mxGraphModel.isCollapsed>. Subclassers can override\n * this to implement specific collapsed states for cells in only one graph,\n * that is, without affecting the collapsed state of the cell.\n * \n * When using dynamic filter expressions for the collapsed state, then the\n * graph should be revalidated after the filter expression has changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be returned.\n */\nmxGraph.prototype.isCellCollapsed = function(cell)\n{\n\treturn this.model.isCollapsed(cell);\n};\n\n/**\n * Function: isCellConnectable\n * \n * Returns true if the given cell is connectable in this graph. This\n * implementation uses <mxGraphModel.isConnectable>. Subclassers can override\n * this to implement specific connectable states for cells in only one graph,\n * that is, without affecting the connectable state of the cell in the model.\n * \n * Parameters:\n * \n * cell - <mxCell> whose connectable state should be returned.\n */\nmxGraph.prototype.isCellConnectable = function(cell)\n{\n\treturn this.model.isConnectable(cell);\n};\n\n/**\n * Function: isOrthogonal\n * \n * Returns true if perimeter points should be computed such that the\n * resulting edge has only horizontal or vertical segments.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n */\nmxGraph.prototype.isOrthogonal = function(edge)\n{\n\tvar orthogonal = edge.style[mxConstants.STYLE_ORTHOGONAL];\n\t\n\tif (orthogonal != null)\n\t{\n\t\treturn orthogonal;\n\t}\n\t\n\tvar tmp = this.view.getEdgeStyle(edge);\n\t\n\treturn tmp == mxEdgeStyle.SegmentConnector ||\n\t\ttmp == mxEdgeStyle.ElbowConnector ||\n\t\ttmp == mxEdgeStyle.SideToSide ||\n\t\ttmp == mxEdgeStyle.TopToBottom ||\n\t\ttmp == mxEdgeStyle.EntityRelation ||\n\t\ttmp == mxEdgeStyle.OrthConnector;\n};\n\n/**\n * Function: isLoop\n * \n * Returns true if the given cell state is a loop.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents a potential loop.\n */\nmxGraph.prototype.isLoop = function(state)\n{\n\tvar src = state.getVisibleTerminalState(true);\n\tvar trg = state.getVisibleTerminalState(false);\n\t\n\treturn (src != null && src == trg);\n};\n\n/**\n * Function: isCloneEvent\n * \n * Returns true if the given event is a clone event. This implementation\n * returns true if control is pressed.\n */\nmxGraph.prototype.isCloneEvent = function(evt)\n{\n\treturn mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: isTransparentClickEvent\n * \n * Hook for implementing click-through behaviour on selected cells. If this\n * returns true the cell behind the selected cell will be selected. This\n * implementation returns false;\n */\nmxGraph.prototype.isTransparentClickEvent = function(evt)\n{\n\treturn false;\n};\n\n/**\n * Function: isToggleEvent\n * \n * Returns true if the given event is a toggle event. This implementation\n * returns true if the meta key (Cmd) is pressed on Macs or if control is\n * pressed on any other platform.\n */\nmxGraph.prototype.isToggleEvent = function(evt)\n{\n\treturn (mxClient.IS_MAC) ? mxEvent.isMetaDown(evt) : mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: isGridEnabledEvent\n * \n * Returns true if the given mouse event should be aligned to the grid.\n */\nmxGraph.prototype.isGridEnabledEvent = function(evt)\n{\n\treturn evt != null && !mxEvent.isAltDown(evt);\n};\n\n/**\n * Function: isConstrainedEvent\n * \n * Returns true if the given mouse event should be aligned to the grid.\n */\nmxGraph.prototype.isConstrainedEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: isIgnoreTerminalEvent\n * \n * Returns true if the given mouse event should not allow any connections to be\n * made. This implementation returns false.\n */\nmxGraph.prototype.isIgnoreTerminalEvent = function(evt)\n{\n\treturn false;\n};\n\n/**\n * Group: Validation\n */\n\n/**\n * Function: validationAlert\n * \n * Displays the given validation error in a dialog. This implementation uses\n * mxUtils.alert.\n */\nmxGraph.prototype.validationAlert = function(message)\n{\n\tmxUtils.alert(message);\n};\n\n/**\n * Function: isEdgeValid\n * \n * Checks if the return value of <getEdgeValidationError> for the given\n * arguments is null.\n *  \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.isEdgeValid = function(edge, source, target)\n{\n\treturn this.getEdgeValidationError(edge, source, target) == null;\n};\n\n/**\n * Function: getEdgeValidationError\n * \n * Returns the validation error message to be displayed when inserting or\n * changing an edges' connectivity. A return value of null means the edge\n * is valid, a return value of '' means it's not valid, but do not display\n * an error message. Any other (non-empty) string returned from this method\n * is displayed as an error message when trying to connect an edge to a\n * source and target. This implementation uses the <multiplicities>, and\n * checks <multigraph>, <allowDanglingEdges> and <allowLoops> to generate\n * validation errors.\n * \n * For extending this method with specific checks for source/target cells,\n * the method can be extended as follows. Returning an empty string means\n * the edge is invalid with no error message, a non-null string specifies\n * the error message, and null means the edge is valid.\n * \n * (code)\n * graph.getEdgeValidationError = function(edge, source, target)\n * {\n *   if (source != null && target != null &&\n *     this.model.getValue(source) != null &&\n *     this.model.getValue(target) != null)\n *   {\n *     if (target is not valid for source)\n *     {\n *       return 'Invalid Target';\n *     }\n *   }\n *   \n *   // \"Supercall\"\n *   return mxGraph.prototype.getEdgeValidationError.apply(this, arguments);\n * }\n * (end)\n *  \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.getEdgeValidationError = function(edge, source, target)\n{\n\tif (edge != null && !this.isAllowDanglingEdges() && (source == null || target == null))\n\t{\n\t\treturn '';\n\t}\n\t\n\tif (edge != null && this.model.getTerminal(edge, true) == null &&\n\t\tthis.model.getTerminal(edge, false) == null)\t\n\t{\n\t\treturn null;\n\t}\n\t\n\t// Checks if we're dealing with a loop\n\tif (!this.allowLoops && source == target && source != null)\n\t{\n\t\treturn '';\n\t}\n\t\n\t// Checks if the connection is generally allowed\n\tif (!this.isValidConnection(source, target))\n\t{\n\t\treturn '';\n\t}\n\n\tif (source != null && target != null)\n\t{\n\t\tvar error = '';\n\n\t\t// Checks if the cells are already connected\n\t\t// and adds an error message if required\t\t\t\n\t\tif (!this.multigraph)\n\t\t{\n\t\t\tvar tmp = this.model.getEdgesBetween(source, target, true);\n\t\t\t\n\t\t\t// Checks if the source and target are not connected by another edge\n\t\t\tif (tmp.length > 1 || (tmp.length == 1 && tmp[0] != edge))\n\t\t\t{\n\t\t\t\terror += (mxResources.get(this.alreadyConnectedResource) ||\n\t\t\t\t\tthis.alreadyConnectedResource)+'\\n';\n\t\t\t}\n\t\t}\n\n\t\t// Gets the number of outgoing edges from the source\n\t\t// and the number of incoming edges from the target\n\t\t// without counting the edge being currently changed.\n\t\tvar sourceOut = this.model.getDirectedEdgeCount(source, true, edge);\n\t\tvar targetIn = this.model.getDirectedEdgeCount(target, false, edge);\n\n\t\t// Checks the change against each multiplicity rule\n\t\tif (this.multiplicities != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.multiplicities.length; i++)\n\t\t\t{\n\t\t\t\tvar err = this.multiplicities[i].check(this, edge, source,\n\t\t\t\t\ttarget, sourceOut, targetIn);\n\t\t\t\t\n\t\t\t\tif (err != null)\n\t\t\t\t{\n\t\t\t\t\terror += err;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Validates the source and target terminals independently\n\t\tvar err = this.validateEdge(edge, source, target);\n\t\t\n\t\tif (err != null)\n\t\t{\n\t\t\terror += err;\n\t\t}\n\t\t\n\t\treturn (error.length > 0) ? error : null;\n\t}\n\t\n\treturn (this.allowDanglingEdges) ? null : '';\n};\n\n/**\n * Function: validateEdge\n * \n * Hook method for subclassers to return an error message for the given\n * edge and terminals. This implementation returns null.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.validateEdge = function(edge, source, target)\n{\n\treturn null;\n};\n\n/**\n * Function: validateGraph\n * \n * Validates the graph by validating each descendant of the given cell or\n * the root of the model. Context is an object that contains the validation\n * state for the complete validation run. The validation errors are\n * attached to their cells using <setCellWarning>. Returns null in the case of\n * successful validation or an array of strings (warnings) in the case of\n * failed validations.\n * \n * Paramters:\n * \n * cell - Optional <mxCell> to start the validation recursion. Default is\n * the graph root.\n * context - Object that represents the global validation state.\n */\nmxGraph.prototype.validateGraph = function(cell, context)\n{\n\tcell = (cell != null) ? cell : this.model.getRoot();\n\tcontext = (context != null) ? context : new Object();\n\t\n\tvar isValid = true;\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar tmp = this.model.getChildAt(cell, i);\n\t\tvar ctx = context;\n\t\t\n\t\tif (this.isValidRoot(tmp))\n\t\t{\n\t\t\tctx = new Object();\n\t\t}\n\t\t\n\t\tvar warn = this.validateGraph(tmp, ctx);\n\t\t\n\t\tif (warn != null)\n\t\t{\n\t\t\tthis.setCellWarning(tmp, warn.replace(/\\n/g, '<br>'));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setCellWarning(tmp, null);\n\t\t}\n\t\t\n\t\tisValid = isValid && warn == null;\n\t}\n\t\n\tvar warning = '';\n\t\n\t// Adds error for invalid children if collapsed (children invisible)\n\tif (this.isCellCollapsed(cell) && !isValid)\n\t{\n\t\twarning += (mxResources.get(this.containsValidationErrorsResource) ||\n\t\t\tthis.containsValidationErrorsResource) + '\\n';\n\t}\n\t\n\t// Checks edges and cells using the defined multiplicities\n\tif (this.model.isEdge(cell))\n\t{\n\t\twarning += this.getEdgeValidationError(cell,\n\t\tthis.model.getTerminal(cell, true),\n\t\tthis.model.getTerminal(cell, false)) || '';\n\t}\n\telse\n\t{\n\t\twarning += this.getCellValidationError(cell) || '';\n\t}\n\t\n\t// Checks custom validation rules\n\tvar err = this.validateCell(cell, context);\n\t\n\tif (err != null)\n\t{\n\t\twarning += err;\n\t}\n\t\n\t// Updates the display with the warning icons\n\t// before any potential alerts are displayed.\n\t// LATER: Move this into addCellOverlay. Redraw\n\t// should check if overlay was added or removed.\n\tif (this.model.getParent(cell) == null)\n\t{\n\t\tthis.view.validate();\n\t}\n\n\treturn (warning.length > 0 || !isValid) ? warning : null;\n};\n\n/**\n * Function: getCellValidationError\n * \n * Checks all <multiplicities> that cannot be enforced while the graph is\n * being modified, namely, all multiplicities that require a minimum of\n * 1 edge.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the multiplicities should be checked.\n */\nmxGraph.prototype.getCellValidationError = function(cell)\n{\n\tvar outCount = this.model.getDirectedEdgeCount(cell, true);\n\tvar inCount = this.model.getDirectedEdgeCount(cell, false);\n\tvar value = this.model.getValue(cell);\n\tvar error = '';\n\n\tif (this.multiplicities != null)\n\t{\n\t\tfor (var i = 0; i < this.multiplicities.length; i++)\n\t\t{\n\t\t\tvar rule = this.multiplicities[i];\n\t\t\t\n\t\t\tif (rule.source && mxUtils.isNode(value, rule.type,\n\t\t\t\trule.attr, rule.value) && (outCount > rule.max ||\n\t\t\t\toutCount < rule.min))\n\t\t\t{\n\t\t\t\terror += rule.countError + '\\n';\n\t\t\t}\n\t\t\telse if (!rule.source && mxUtils.isNode(value, rule.type,\n\t\t\t\t\trule.attr, rule.value) && (inCount > rule.max ||\n\t\t\t\t\tinCount < rule.min))\n\t\t\t{\n\t\t\t\terror += rule.countError + '\\n';\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (error.length > 0) ? error : null;\n};\n\n/**\n * Function: validateCell\n * \n * Hook method for subclassers to return an error message for the given\n * cell and validation context. This implementation returns null. Any HTML\n * breaks will be converted to linefeeds in the calling method.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to validate.\n * context - Object that represents the global validation state.\n */\nmxGraph.prototype.validateCell = function(cell, context)\n{\n\treturn null;\n};\n\n/**\n * Group: Graph appearance\n */\n\n/**\n * Function: getBackgroundImage\n * \n * Returns the <backgroundImage> as an <mxImage>.\n */\nmxGraph.prototype.getBackgroundImage = function()\n{\n\treturn this.backgroundImage;\n};\n\n/**\n * Function: setBackgroundImage\n * \n * Sets the new <backgroundImage>.\n * \n * Parameters:\n * \n * image - New <mxImage> to be used for the background.\n */\nmxGraph.prototype.setBackgroundImage = function(image)\n{\n\tthis.backgroundImage = image;\n};\n\n/**\n * Function: getFoldingImage\n * \n * Returns the <mxImage> used to display the collapsed state of\n * the specified cell state. This returns null for all edges.\n */\nmxGraph.prototype.getFoldingImage = function(state)\n{\n\tif (state != null && this.foldingEnabled && !this.getModel().isEdge(state.cell))\n\t{\n\t\tvar tmp = this.isCellCollapsed(state.cell);\n\t\t\n\t\tif (this.isCellFoldable(state.cell, !tmp))\n\t\t{\n\t\t\treturn (tmp) ? this.collapsedImage : this.expandedImage;\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: convertValueToString\n * \n * Returns the textual representation for the given cell. This\n * implementation returns the nodename or string-representation of the user\n * object.\n *\n * Example:\n * \n * The following returns the label attribute from the cells user\n * object if it is an XML node.\n * \n * (code)\n * graph.convertValueToString = function(cell)\n * {\n * \treturn cell.getAttribute('label');\n * }\n * (end)\n * \n * See also: <cellLabelChanged>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose textual representation should be returned.\n */\nmxGraph.prototype.convertValueToString = function(cell)\n{\n\tvar value = this.model.getValue(cell);\n\t\n\tif (value != null)\n\t{\n\t\tif (mxUtils.isNode(value))\n\t\t{\n\t\t\treturn value.nodeName;\n\t\t}\n\t\telse if (typeof(value.toString) == 'function')\n\t\t{\n\t\t\treturn value.toString();\n\t\t}\n\t}\n\t\n\treturn '';\n};\n\n/**\n * Function: getLabel\n * \n * Returns a string or DOM node that represents the label for the given\n * cell. This implementation uses <convertValueToString> if <labelsVisible>\n * is true. Otherwise it returns an empty string.\n * \n * To truncate a label to match the size of the cell, the following code\n * can be used.\n * \n * (code)\n * graph.getLabel = function(cell)\n * {\n *   var label = mxGraph.prototype.getLabel.apply(this, arguments);\n * \n *   if (label != null && this.model.isVertex(cell))\n *   {\n *     var geo = this.getCellGeometry(cell);\n * \n *     if (geo != null)\n *     {\n *       var max = parseInt(geo.width / 8);\n * \n *       if (label.length > max)\n *       {\n *         label = label.substring(0, max)+'...';\n *       }\n *     }\n *   } \n *   return mxUtils.htmlEntities(label);\n * }\n * (end)\n * \n * A resize listener is needed in the graph to force a repaint of the label\n * after a resize.\n * \n * (code)\n * graph.addListener(mxEvent.RESIZE_CELLS, function(sender, evt)\n * {\n *   var cells = evt.getProperty('cells');\n * \n *   for (var i = 0; i < cells.length; i++)\n *   {\n *     this.view.removeState(cells[i]);\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be returned.\n */\nmxGraph.prototype.getLabel = function(cell)\n{\n\tvar result = '';\n\t\n\tif (this.labelsVisible && cell != null)\n\t{\n\t\tvar state = this.view.getState(cell);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\t\n\t\tif (!mxUtils.getValue(style, mxConstants.STYLE_NOLABEL, false))\n\t\t{\n\t\t\tresult = this.convertValueToString(cell);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: isHtmlLabel\n * \n * Returns true if the label must be rendered as HTML markup. The default\n * implementation returns <htmlLabels>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be displayed as HTML markup.\n */\nmxGraph.prototype.isHtmlLabel = function(cell)\n{\n\treturn this.isHtmlLabels();\n};\n \n/**\n * Function: isHtmlLabels\n * \n * Returns <htmlLabels>.\n */\nmxGraph.prototype.isHtmlLabels = function()\n{\n\treturn this.htmlLabels;\n};\n \n/**\n * Function: setHtmlLabels\n * \n * Sets <htmlLabels>.\n */\nmxGraph.prototype.setHtmlLabels = function(value)\n{\n\tthis.htmlLabels = value;\n};\n\n/**\n * Function: isWrapping\n * \n * This enables wrapping for HTML labels.\n * \n * Returns true if no white-space CSS style directive should be used for\n * displaying the given cells label. This implementation returns true if\n * <mxConstants.STYLE_WHITE_SPACE> in the style of the given cell is 'wrap'.\n * \n * This is used as a workaround for IE ignoring the white-space directive\n * of child elements if the directive appears in a parent element. It\n * should be overridden to return true if a white-space directive is used\n * in the HTML markup that represents the given cells label. In order for\n * HTML markup to work in labels, <isHtmlLabel> must also return true\n * for the given cell.\n * \n * Example:\n * \n * (code)\n * graph.getLabel = function(cell)\n * {\n *   var tmp = mxGraph.prototype.getLabel.apply(this, arguments); // \"supercall\"\n *   \n *   if (this.model.isEdge(cell))\n *   {\n *     tmp = '<div style=\"width: 150px; white-space:normal;\">'+tmp+'</div>';\n *   }\n *   \n *   return tmp;\n * }\n * \n * graph.isWrapping = function(state)\n * {\n * \t return this.model.isEdge(state.cell);\n * }\n * (end)\n * \n * Makes sure no edge label is wider than 150 pixels, otherwise the content\n * is wrapped. Note: No width must be specified for wrapped vertex labels as\n * the vertex defines the width in its geometry.\n * \n * Parameters:\n * \n * state - <mxCell> whose label should be wrapped.\n */\nmxGraph.prototype.isWrapping = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn (style != null) ? style[mxConstants.STYLE_WHITE_SPACE] == 'wrap' : false;\n};\n\n/**\n * Function: isLabelClipped\n * \n * Returns true if the overflow portion of labels should be hidden. If this\n * returns true then vertex labels will be clipped to the size of the vertices.\n * This implementation returns true if <mxConstants.STYLE_OVERFLOW> in the\n * style of the given cell is 'hidden'.\n * \n * Parameters:\n * \n * state - <mxCell> whose label should be clipped.\n */\nmxGraph.prototype.isLabelClipped = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn (style != null) ? style[mxConstants.STYLE_OVERFLOW] == 'hidden' : false;\n};\n\n/**\n * Function: getTooltip\n * \n * Returns the string or DOM node that represents the tooltip for the given\n * state, node and coordinate pair. This implementation checks if the given\n * node is a folding icon or overlay and returns the respective tooltip. If\n * this does not result in a tooltip, the handler for the cell is retrieved\n * from <selectionCellsHandler> and the optional getTooltipForNode method is\n * called. If no special tooltip exists here then <getTooltipForCell> is used\n * with the cell in the given state as the argument to return a tooltip for the\n * given state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose tooltip should be returned.\n * node - DOM node that is currently under the mouse.\n * x - X-coordinate of the mouse.\n * y - Y-coordinate of the mouse.\n */\nmxGraph.prototype.getTooltip = function(state, node, x, y)\n{\n\tvar tip = null;\n\t\n\tif (state != null)\n\t{\n\t\t// Checks if the mouse is over the folding icon\n\t\tif (state.control != null && (node == state.control.node ||\n\t\t\tnode.parentNode == state.control.node))\n\t\t{\n\t\t\ttip = this.collapseExpandResource;\n\t\t\ttip = mxUtils.htmlEntities(mxResources.get(tip) || tip).replace(/\\\\n/g, '<br>');\n\t\t}\n\n\t\tif (tip == null && state.overlays != null)\n\t\t{\n\t\t\tstate.overlays.visit(function(id, shape)\n\t\t\t{\n\t\t\t\t// LATER: Exit loop if tip is not null\n\t\t\t\tif (tip == null && (node == shape.node || node.parentNode == shape.node))\n\t\t\t\t{\n\t\t\t\t\ttip = shape.overlay.toString();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\tif (tip == null)\n\t\t{\n\t\t\tvar handler = this.selectionCellsHandler.getHandler(state.cell);\n\t\t\t\n\t\t\tif (handler != null && typeof(handler.getTooltipForNode) == 'function')\n\t\t\t{\n\t\t\t\ttip = handler.getTooltipForNode(node);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (tip == null)\n\t\t{\n\t\t\ttip = this.getTooltipForCell(state.cell);\n\t\t}\n\t}\n\t\n\treturn tip;\n};\n\n/**\n * Function: getTooltipForCell\n * \n * Returns the string or DOM node to be used as the tooltip for the given\n * cell. This implementation uses the cells getTooltip function if it\n * exists, or else it returns <convertValueToString> for the cell.\n * \n * Example:\n * \n * (code)\n * graph.getTooltipForCell = function(cell)\n * {\n *   return 'Hello, World!';\n * }\n * (end)\n * \n * Replaces all tooltips with the string Hello, World!\n * \n * Parameters:\n * \n * cell - <mxCell> whose tooltip should be returned.\n */\nmxGraph.prototype.getTooltipForCell = function(cell)\n{\n\tvar tip = null;\n\t\n\tif (cell != null && cell.getTooltip != null)\n\t{\n\t\ttip = cell.getTooltip();\n\t}\n\telse\n\t{\n\t\ttip = this.convertValueToString(cell);\n\t}\n\t\n\treturn tip;\n};\n\n/**\n * Function: getLinkForCell\n * \n * Returns the string to be used as the link for the given cell. This\n * implementation returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose tooltip should be returned.\n */\nmxGraph.prototype.getLinkForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: getCursorForMouseEvent\n * \n * Returns the cursor value to be used for the CSS of the shape for the\n * given event. This implementation calls <getCursorForCell>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> whose cursor should be returned.\n */\nmxGraph.prototype.getCursorForMouseEvent = function(me)\n{\n\treturn this.getCursorForCell(me.getCell());\n};\n\n/**\n * Function: getCursorForCell\n * \n * Returns the cursor value to be used for the CSS of the shape for the\n * given cell. This implementation returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose cursor should be returned.\n */\nmxGraph.prototype.getCursorForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: getStartSize\n * \n * Returns the start size of the given swimlane, that is, the width or\n * height of the part that contains the title, depending on the\n * horizontal style. The return value is an <mxRectangle> with either\n * width or height set as appropriate.\n * \n * Parameters:\n * \n * swimlane - <mxCell> whose start size should be returned.\n */\nmxGraph.prototype.getStartSize = function(swimlane)\n{\n\tvar result = new mxRectangle();\n\tvar state = this.view.getState(swimlane);\n\tvar style = (state != null) ? state.style : this.getCellStyle(swimlane);\n\t\n\tif (style != null)\n\t{\n\t\tvar size = parseInt(mxUtils.getValue(style,\n\t\t\tmxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE));\n\t\t\n\t\tif (mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t{\n\t\t\tresult.height = size;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.width = size;\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getImage\n * \n * Returns the image URL for the given cell state. This implementation\n * returns the value stored under <mxConstants.STYLE_IMAGE> in the cell\n * style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose image URL should be returned.\n */\nmxGraph.prototype.getImage = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_IMAGE] : null;\n};\n\n/**\n * Function: getVerticalAlign\n * \n * Returns the vertical alignment for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_VERTICAL_ALIGN> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose vertical alignment should be\n * returned.\n */\nmxGraph.prototype.getVerticalAlign = function(state)\n{\n\treturn (state != null && state.style != null) ?\n\t\t(state.style[mxConstants.STYLE_VERTICAL_ALIGN] ||\n\t\tmxConstants.ALIGN_MIDDLE) : null;\n};\n\n/**\n * Function: getIndicatorColor\n * \n * Returns the indicator color for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_COLOR> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator color should be\n * returned.\n */\nmxGraph.prototype.getIndicatorColor = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_COLOR] : null;\n};\n\n/**\n * Function: getIndicatorGradientColor\n * \n * Returns the indicator gradient color for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_GRADIENTCOLOR> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator gradient color should be\n * returned.\n */\nmxGraph.prototype.getIndicatorGradientColor = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_GRADIENTCOLOR] : null;\n};\n\n/**\n * Function: getIndicatorShape\n * \n * Returns the indicator shape for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_SHAPE> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator shape should be returned.\n */\nmxGraph.prototype.getIndicatorShape = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_SHAPE] : null;\n};\n\n/**\n * Function: getIndicatorImage\n * \n * Returns the indicator image for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_IMAGE> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator image should be returned.\n */\nmxGraph.prototype.getIndicatorImage = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_IMAGE] : null;\n};\n\n/**\n * Function: getBorder\n * \n * Returns the value of <border>.\n */\nmxGraph.prototype.getBorder = function()\n{\n\treturn this.border;\n};\n\n/**\n * Function: setBorder\n * \n * Sets the value of <border>.\n * \n * Parameters:\n * \n * value - Positive integer that represents the border to be used.\n */\nmxGraph.prototype.setBorder = function(value)\n{\n\tthis.border = value;\n};\n\n/**\n * Function: isSwimlane\n * \n * Returns true if the given cell is a swimlane in the graph. A swimlane is\n * a container cell with some specific behaviour. This implementation\n * checks if the shape associated with the given cell is a <mxSwimlane>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be checked.\n */\nmxGraph.prototype.isSwimlane = function (cell)\n{\n\tif (cell != null)\n\t{\n\t\tif (this.model.getParent(cell) != this.model.getRoot())\n\t\t{\n\t\t\tvar state = this.view.getState(cell);\n\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\t\t\tif (style != null && !this.model.isEdge(cell))\n\t\t\t{\n\t\t\t\treturn style[mxConstants.STYLE_SHAPE] == mxConstants.SHAPE_SWIMLANE;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Group: Graph behaviour\n */\n\n/**\n * Function: isResizeContainer\n * \n * Returns <resizeContainer>.\n */\nmxGraph.prototype.isResizeContainer = function()\n{\n\treturn this.resizeContainer;\n};\n\n/**\n * Function: setResizeContainer\n * \n * Sets <resizeContainer>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the container should be resized.\n */\nmxGraph.prototype.setResizeContainer = function(value)\n{\n\tthis.resizeContainer = value;\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if the graph is <enabled>.\n */\nmxGraph.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Specifies if the graph should allow any interactions. This\n * implementation updates <enabled>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should be enabled.\n */\nmxGraph.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isEscapeEnabled\n * \n * Returns <escapeEnabled>.\n */\nmxGraph.prototype.isEscapeEnabled = function()\n{\n\treturn this.escapeEnabled;\n};\n\n/**\n * Function: setEscapeEnabled\n * \n * Sets <escapeEnabled>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if escape should be enabled.\n */\nmxGraph.prototype.setEscapeEnabled = function(value)\n{\n\tthis.escapeEnabled = value;\n};\n\n/**\n * Function: isInvokesStopCellEditing\n * \n * Returns <invokesStopCellEditing>.\n */\nmxGraph.prototype.isInvokesStopCellEditing = function()\n{\n\treturn this.invokesStopCellEditing;\n};\n\n/**\n * Function: setInvokesStopCellEditing\n * \n * Sets <invokesStopCellEditing>.\n */\nmxGraph.prototype.setInvokesStopCellEditing = function(value)\n{\n\tthis.invokesStopCellEditing = value;\n};\n\n/**\n * Function: isEnterStopsCellEditing\n * \n * Returns <enterStopsCellEditing>.\n */\nmxGraph.prototype.isEnterStopsCellEditing = function()\n{\n\treturn this.enterStopsCellEditing;\n};\n\n/**\n * Function: setEnterStopsCellEditing\n * \n * Sets <enterStopsCellEditing>.\n */\nmxGraph.prototype.setEnterStopsCellEditing = function(value)\n{\n\tthis.enterStopsCellEditing = value;\n};\n\n/**\n * Function: isCellLocked\n * \n * Returns true if the given cell may not be moved, sized, bended,\n * disconnected, edited or selected. This implementation returns true for\n * all vertices with a relative geometry if <locked> is false.\n * \n * Parameters:\n * \n * cell - <mxCell> whose locked state should be returned.\n */\nmxGraph.prototype.isCellLocked = function(cell)\n{\n\tvar geometry = this.model.getGeometry(cell);\n\t\n\treturn this.isCellsLocked() || (geometry != null && this.model.isVertex(cell) && geometry.relative);\n};\n\n/**\n * Function: isCellsLocked\n * \n * Returns true if the given cell may not be moved, sized, bended,\n * disconnected, edited or selected. This implementation returns true for\n * all vertices with a relative geometry if <locked> is false.\n * \n * Parameters:\n * \n * cell - <mxCell> whose locked state should be returned.\n */\nmxGraph.prototype.isCellsLocked = function()\n{\n\treturn this.cellsLocked;\n};\n\n/**\n * Function: setCellsLocked\n * \n * Sets if any cell may be moved, sized, bended, disconnected, edited or\n * selected.\n * \n * Parameters:\n * \n * value - Boolean that defines the new value for <cellsLocked>.\n */\nmxGraph.prototype.setCellsLocked = function(value)\n{\n\tthis.cellsLocked = value;\n};\n\n/**\n * Function: getCloneableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getCloneableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellCloneable(cell);\n\t}));\n};\n\n/**\n * Function: isCellCloneable\n * \n * Returns true if the given cell is cloneable. This implementation returns\n * <isCellsCloneable> for all cells unless a cell style specifies\n * <mxConstants.STYLE_CLONEABLE> to be 0. \n * \n * Parameters:\n * \n * cell - Optional <mxCell> whose cloneable state should be returned.\n */\nmxGraph.prototype.isCellCloneable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn this.isCellsCloneable() && style[mxConstants.STYLE_CLONEABLE] != 0;\n};\n\n/**\n * Function: isCellsCloneable\n * \n * Returns <cellsCloneable>, that is, if the graph allows cloning of cells\n * by using control-drag.\n */\nmxGraph.prototype.isCellsCloneable = function()\n{\n\treturn this.cellsCloneable;\n};\n\n/**\n * Function: setCellsCloneable\n * \n * Specifies if the graph should allow cloning of cells by holding down the\n * control key while cells are being moved. This implementation updates\n * <cellsCloneable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should be cloneable.\n */\nmxGraph.prototype.setCellsCloneable = function(value)\n{\n\tthis.cellsCloneable = value;\n};\n\n/**\n * Function: getExportableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getExportableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.canExportCell(cell);\n\t}));\n};\n\n/**\n * Function: canExportCell\n * \n * Returns true if the given cell may be exported to the clipboard. This\n * implementation returns <exportEnabled> for all cells.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to be exported.\n */\nmxGraph.prototype.canExportCell = function(cell)\n{\n\treturn this.exportEnabled;\n};\n\n/**\n * Function: getImportableCells\n * \n * Returns the cells which may be imported in the given array of cells.\n */\nmxGraph.prototype.getImportableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.canImportCell(cell);\n\t}));\n};\n\n/**\n * Function: canImportCell\n * \n * Returns true if the given cell may be imported from the clipboard.\n * This implementation returns <importEnabled> for all cells.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to be imported.\n */\nmxGraph.prototype.canImportCell = function(cell)\n{\n\treturn this.importEnabled;\n};\n\n/**\n * Function: isCellSelectable\n *\n * Returns true if the given cell is selectable. This implementation\n * returns <cellsSelectable>.\n * \n * To add a new style for making cells (un)selectable, use the following code.\n * \n * (code)\n * mxGraph.prototype.isCellSelectable = function(cell)\n * {\n *   var state = this.view.getState(cell);\n *   var style = (state != null) ? state.style : this.getCellStyle(cell);\n *   \n *   return this.isCellsSelectable() && !this.isCellLocked(cell) && style['selectable'] != 0;\n * };\n * (end)\n * \n * You can then use the new style as shown in this example.\n * \n * (code)\n * graph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30, 'selectable=0');\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose selectable state should be returned.\n */\nmxGraph.prototype.isCellSelectable = function(cell)\n{\n\treturn this.isCellsSelectable();\n};\n\n/**\n * Function: isCellsSelectable\n *\n * Returns <cellsSelectable>.\n */\nmxGraph.prototype.isCellsSelectable = function()\n{\n\treturn this.cellsSelectable;\n};\n\n/**\n * Function: setCellsSelectable\n *\n * Sets <cellsSelectable>.\n */\nmxGraph.prototype.setCellsSelectable = function(value)\n{\n\tthis.cellsSelectable = value;\n};\n\n/**\n * Function: getDeletableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getDeletableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellDeletable(cell);\n\t}));\n};\n\n/**\n * Function: isCellDeletable\n *\n * Returns true if the given cell is moveable. This returns\n * <cellsDeletable> for all given cells if a cells style does not specify\n * <mxConstants.STYLE_DELETABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose deletable state should be returned.\n */\nmxGraph.prototype.isCellDeletable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsDeletable() && style[mxConstants.STYLE_DELETABLE] != 0;\n};\n\n/**\n * Function: isCellsDeletable\n *\n * Returns <cellsDeletable>.\n */\nmxGraph.prototype.isCellsDeletable = function()\n{\n\treturn this.cellsDeletable;\n};\n\n/**\n * Function: setCellsDeletable\n * \n * Sets <cellsDeletable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow deletion of cells.\n */\nmxGraph.prototype.setCellsDeletable = function(value)\n{\n\tthis.cellsDeletable = value;\n};\n\n/**\n * Function: isLabelMovable\n *\n * Returns true if the given edges's label is moveable. This returns\n * <movable> for all given cells if <isLocked> does not return true\n * for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be moved.\n */\nmxGraph.prototype.isLabelMovable = function(cell)\n{\n\treturn !this.isCellLocked(cell) &&\n\t\t((this.model.isEdge(cell) && this.edgeLabelsMovable) ||\n\t\t(this.model.isVertex(cell) && this.vertexLabelsMovable));\n};\n\n/**\n * Function: isCellRotatable\n *\n * Returns true if the given cell is rotatable. This returns true for the given\n * cell if its style does not specify <mxConstants.STYLE_ROTATABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose rotatable state should be returned.\n */\nmxGraph.prototype.isCellRotatable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn style[mxConstants.STYLE_ROTATABLE] != 0;\n};\n\n/**\n * Function: getMovableCells\n * \n * Returns the cells which are movable in the given array of cells.\n */\nmxGraph.prototype.getMovableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellMovable(cell);\n\t}));\n};\n\n/**\n * Function: isCellMovable\n *\n * Returns true if the given cell is moveable. This returns <cellsMovable>\n * for all given cells if <isCellLocked> does not return true for the given\n * cell and its style does not specify <mxConstants.STYLE_MOVABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose movable state should be returned.\n */\nmxGraph.prototype.isCellMovable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsMovable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_MOVABLE] != 0;\n};\n\n/**\n * Function: isCellsMovable\n *\n * Returns <cellsMovable>.\n */\nmxGraph.prototype.isCellsMovable = function()\n{\n\treturn this.cellsMovable;\n};\n\n/**\n * Function: setCellsMovable\n * \n * Specifies if the graph should allow moving of cells. This implementation\n * updates <cellsMsovable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow moving of cells.\n */\nmxGraph.prototype.setCellsMovable = function(value)\n{\n\tthis.cellsMovable = value;\n};\n\n/**\n * Function: isGridEnabled\n *\n * Returns <gridEnabled> as a boolean.\n */\nmxGraph.prototype.isGridEnabled = function()\n{\n\treturn this.gridEnabled;\n};\n\n/**\n * Function: setGridEnabled\n * \n * Specifies if the grid should be enabled.\n * \n * Parameters:\n * \n * value - Boolean indicating if the grid should be enabled.\n */\nmxGraph.prototype.setGridEnabled = function(value)\n{\n\tthis.gridEnabled = value;\n};\n\n/**\n * Function: isPortsEnabled\n *\n * Returns <portsEnabled> as a boolean.\n */\nmxGraph.prototype.isPortsEnabled = function()\n{\n\treturn this.portsEnabled;\n};\n\n/**\n * Function: setPortsEnabled\n * \n * Specifies if the ports should be enabled.\n * \n * Parameters:\n * \n * value - Boolean indicating if the ports should be enabled.\n */\nmxGraph.prototype.setPortsEnabled = function(value)\n{\n\tthis.portsEnabled = value;\n};\n\n/**\n * Function: getGridSize\n *\n * Returns <gridSize>.\n */\nmxGraph.prototype.getGridSize = function()\n{\n\treturn this.gridSize;\n};\n\n/**\n * Function: setGridSize\n * \n * Sets <gridSize>.\n */\nmxGraph.prototype.setGridSize = function(value)\n{\n\tthis.gridSize = value;\n};\n\n/**\n * Function: getTolerance\n *\n * Returns <tolerance>.\n */\nmxGraph.prototype.getTolerance = function()\n{\n\treturn this.tolerance;\n};\n\n/**\n * Function: setTolerance\n * \n * Sets <tolerance>.\n */\nmxGraph.prototype.setTolerance = function(value)\n{\n\tthis.tolerance = value;\n};\n\n/**\n * Function: isVertexLabelsMovable\n *\n * Returns <vertexLabelsMovable>.\n */\nmxGraph.prototype.isVertexLabelsMovable = function()\n{\n\treturn this.vertexLabelsMovable;\n};\n\n/**\n * Function: setVertexLabelsMovable\n * \n * Sets <vertexLabelsMovable>.\n */\nmxGraph.prototype.setVertexLabelsMovable = function(value)\n{\n\tthis.vertexLabelsMovable = value;\n};\n\n/**\n * Function: isEdgeLabelsMovable\n *\n * Returns <edgeLabelsMovable>.\n */\nmxGraph.prototype.isEdgeLabelsMovable = function()\n{\n\treturn this.edgeLabelsMovable;\n};\n\n/**\n * Function: isEdgeLabelsMovable\n * \n * Sets <edgeLabelsMovable>.\n */\nmxGraph.prototype.setEdgeLabelsMovable = function(value)\n{\n\tthis.edgeLabelsMovable = value;\n};\n\n/**\n * Function: isSwimlaneNesting\n *\n * Returns <swimlaneNesting> as a boolean.\n */\nmxGraph.prototype.isSwimlaneNesting = function()\n{\n\treturn this.swimlaneNesting;\n};\n\n/**\n * Function: setSwimlaneNesting\n * \n * Specifies if swimlanes can be nested by drag and drop. This is only\n * taken into account if dropEnabled is true.\n * \n * Parameters:\n * \n * value - Boolean indicating if swimlanes can be nested.\n */\nmxGraph.prototype.setSwimlaneNesting = function(value)\n{\n\tthis.swimlaneNesting = value;\n};\n\n/**\n * Function: isSwimlaneSelectionEnabled\n *\n * Returns <swimlaneSelectionEnabled> as a boolean.\n */\nmxGraph.prototype.isSwimlaneSelectionEnabled = function()\n{\n\treturn this.swimlaneSelectionEnabled;\n};\n\n/**\n * Function: setSwimlaneSelectionEnabled\n * \n * Specifies if swimlanes should be selected if the mouse is released\n * over their content area.\n * \n * Parameters:\n * \n * value - Boolean indicating if swimlanes content areas\n * should be selected when the mouse is released over them.\n */\nmxGraph.prototype.setSwimlaneSelectionEnabled = function(value)\n{\n\tthis.swimlaneSelectionEnabled = value;\n};\n\n/**\n * Function: isMultigraph\n *\n * Returns <multigraph> as a boolean.\n */\nmxGraph.prototype.isMultigraph = function()\n{\n\treturn this.multigraph;\n};\n\n/**\n * Function: setMultigraph\n * \n * Specifies if the graph should allow multiple connections between the\n * same pair of vertices.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph allows multiple connections\n * between the same pair of vertices.\n */\nmxGraph.prototype.setMultigraph = function(value)\n{\n\tthis.multigraph = value;\n};\n\n/**\n * Function: isAllowLoops\n *\n * Returns <allowLoops> as a boolean.\n */\nmxGraph.prototype.isAllowLoops = function()\n{\n\treturn this.allowLoops;\n};\n\n/**\n * Function: setAllowDanglingEdges\n * \n * Specifies if dangling edges are allowed, that is, if edges are allowed\n * that do not have a source and/or target terminal defined.\n * \n * Parameters:\n * \n * value - Boolean indicating if dangling edges are allowed.\n */\nmxGraph.prototype.setAllowDanglingEdges = function(value)\n{\n\tthis.allowDanglingEdges = value;\n};\n\n/**\n * Function: isAllowDanglingEdges\n *\n * Returns <allowDanglingEdges> as a boolean.\n */\nmxGraph.prototype.isAllowDanglingEdges = function()\n{\n\treturn this.allowDanglingEdges;\n};\n\n/**\n * Function: setConnectableEdges\n * \n * Specifies if edges should be connectable.\n * \n * Parameters:\n * \n * value - Boolean indicating if edges should be connectable.\n */\nmxGraph.prototype.setConnectableEdges = function(value)\n{\n\tthis.connectableEdges = value;\n};\n\n/**\n * Function: isConnectableEdges\n *\n * Returns <connectableEdges> as a boolean.\n */\nmxGraph.prototype.isConnectableEdges = function()\n{\n\treturn this.connectableEdges;\n};\n\n/**\n * Function: setCloneInvalidEdges\n * \n * Specifies if edges should be inserted when cloned but not valid wrt.\n * <getEdgeValidationError>. If false such edges will be silently ignored.\n * \n * Parameters:\n * \n * value - Boolean indicating if cloned invalid edges should be\n * inserted into the graph or ignored.\n */\nmxGraph.prototype.setCloneInvalidEdges = function(value)\n{\n\tthis.cloneInvalidEdges = value;\n};\n\n/**\n * Function: isCloneInvalidEdges\n *\n * Returns <cloneInvalidEdges> as a boolean.\n */\nmxGraph.prototype.isCloneInvalidEdges = function()\n{\n\treturn this.cloneInvalidEdges;\n};\n\n/**\n * Function: setAllowLoops\n * \n * Specifies if loops are allowed.\n * \n * Parameters:\n * \n * value - Boolean indicating if loops are allowed.\n */\nmxGraph.prototype.setAllowLoops = function(value)\n{\n\tthis.allowLoops = value;\n};\n\n/**\n * Function: isDisconnectOnMove\n *\n * Returns <disconnectOnMove> as a boolean.\n */\nmxGraph.prototype.isDisconnectOnMove = function()\n{\n\treturn this.disconnectOnMove;\n};\n\n/**\n * Function: setDisconnectOnMove\n * \n * Specifies if edges should be disconnected when moved. (Note: Cloned\n * edges are always disconnected.)\n * \n * Parameters:\n * \n * value - Boolean indicating if edges should be disconnected\n * when moved.\n */\nmxGraph.prototype.setDisconnectOnMove = function(value)\n{\n\tthis.disconnectOnMove = value;\n};\n\n/**\n * Function: isDropEnabled\n *\n * Returns <dropEnabled> as a boolean.\n */\nmxGraph.prototype.isDropEnabled = function()\n{\n\treturn this.dropEnabled;\n};\n\n/**\n * Function: setDropEnabled\n * \n * Specifies if the graph should allow dropping of cells onto or into other\n * cells.\n * \n * Parameters:\n * \n * dropEnabled - Boolean indicating if the graph should allow dropping\n * of cells into other cells.\n */\nmxGraph.prototype.setDropEnabled = function(value)\n{\n\tthis.dropEnabled = value;\n};\n\n/**\n * Function: isSplitEnabled\n *\n * Returns <splitEnabled> as a boolean.\n */\nmxGraph.prototype.isSplitEnabled = function()\n{\n\treturn this.splitEnabled;\n};\n\n/**\n * Function: setSplitEnabled\n * \n * Specifies if the graph should allow dropping of cells onto or into other\n * cells.\n * \n * Parameters:\n * \n * dropEnabled - Boolean indicating if the graph should allow dropping\n * of cells into other cells.\n */\nmxGraph.prototype.setSplitEnabled = function(value)\n{\n\tthis.splitEnabled = value;\n};\n\n/**\n * Function: isCellResizable\n *\n * Returns true if the given cell is resizable. This returns\n * <cellsResizable> for all given cells if <isCellLocked> does not return\n * true for the given cell and its style does not specify\n * <mxConstants.STYLE_RESIZABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose resizable state should be returned.\n */\nmxGraph.prototype.isCellResizable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn this.isCellsResizable() && !this.isCellLocked(cell) &&\n\t\tmxUtils.getValue(style, mxConstants.STYLE_RESIZABLE, '1') != '0';\n};\n\n/**\n * Function: isCellsResizable\n *\n * Returns <cellsResizable>.\n */\nmxGraph.prototype.isCellsResizable = function()\n{\n\treturn this.cellsResizable;\n};\n\n/**\n * Function: setCellsResizable\n * \n * Specifies if the graph should allow resizing of cells. This\n * implementation updates <cellsResizable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow resizing of\n * cells.\n */\nmxGraph.prototype.setCellsResizable = function(value)\n{\n\tthis.cellsResizable = value;\n};\n\n/**\n * Function: isTerminalPointMovable\n *\n * Returns true if the given terminal point is movable. This is independent\n * from <isCellConnectable> and <isCellDisconnectable> and controls if terminal\n * points can be moved in the graph if the edge is not connected. Note that it\n * is required for this to return true to connect unconnected edges. This\n * implementation returns true.\n * \n * Parameters:\n * \n * cell - <mxCell> whose terminal point should be moved.\n * source - Boolean indicating if the source or target terminal should be moved.\n */\nmxGraph.prototype.isTerminalPointMovable = function(cell, source)\n{\n\treturn true;\n};\n\n/**\n * Function: isCellBendable\n *\n * Returns true if the given cell is bendable. This returns <cellsBendable>\n * for all given cells if <isLocked> does not return true for the given\n * cell and its style does not specify <mxConstants.STYLE_BENDABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bendable state should be returned.\n */\nmxGraph.prototype.isCellBendable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsBendable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_BENDABLE] != 0;\n};\n\n/**\n * Function: isCellsBendable\n *\n * Returns <cellsBenadable>.\n */\nmxGraph.prototype.isCellsBendable = function()\n{\n\treturn this.cellsBendable;\n};\n\n/**\n * Function: setCellsBendable\n * \n * Specifies if the graph should allow bending of edges. This\n * implementation updates <bendable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow bending of\n * edges.\n */\nmxGraph.prototype.setCellsBendable = function(value)\n{\n\tthis.cellsBendable = value;\n};\n\n/**\n * Function: isCellEditable\n *\n * Returns true if the given cell is editable. This returns <cellsEditable> for\n * all given cells if <isCellLocked> does not return true for the given cell\n * and its style does not specify <mxConstants.STYLE_EDITABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose editable state should be returned.\n */\nmxGraph.prototype.isCellEditable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsEditable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_EDITABLE] != 0;\n};\n\n/**\n * Function: isCellsEditable\n *\n * Returns <cellsEditable>.\n */\nmxGraph.prototype.isCellsEditable = function()\n{\n\treturn this.cellsEditable;\n};\n\n/**\n * Function: setCellsEditable\n * \n * Specifies if the graph should allow in-place editing for cell labels.\n * This implementation updates <cellsEditable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow in-place\n * editing.\n */\nmxGraph.prototype.setCellsEditable = function(value)\n{\n\tthis.cellsEditable = value;\n};\n\n/**\n * Function: isCellDisconnectable\n *\n * Returns true if the given cell is disconnectable from the source or\n * target terminal. This returns <isCellsDisconnectable> for all given\n * cells if <isCellLocked> does not return true for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose disconnectable state should be returned.\n * terminal - <mxCell> that represents the source or target terminal.\n * source - Boolean indicating if the source or target terminal is to be\n * disconnected.\n */\nmxGraph.prototype.isCellDisconnectable = function(cell, terminal, source)\n{\n\treturn this.isCellsDisconnectable() && !this.isCellLocked(cell);\n};\n\n/**\n * Function: isCellsDisconnectable\n *\n * Returns <cellsDisconnectable>.\n */\nmxGraph.prototype.isCellsDisconnectable = function()\n{\n\treturn this.cellsDisconnectable;\n};\n\n/**\n * Function: setCellsDisconnectable\n *\n * Sets <cellsDisconnectable>.\n */\nmxGraph.prototype.setCellsDisconnectable = function(value)\n{\n\tthis.cellsDisconnectable = value;\n};\n\n/**\n * Function: isValidSource\n * \n * Returns true if the given cell is a valid source for new connections.\n * This implementation returns true for all non-null values and is\n * called by is called by <isValidConnection>.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents a possible source or null.\n */\nmxGraph.prototype.isValidSource = function(cell)\n{\n\treturn (cell == null && this.allowDanglingEdges) ||\n\t\t(cell != null && (!this.model.isEdge(cell) ||\n\t\tthis.connectableEdges) && this.isCellConnectable(cell));\n};\n\t\n/**\n * Function: isValidTarget\n * \n * Returns <isValidSource> for the given cell. This is called by\n * <isValidConnection>.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents a possible target or null.\n */\nmxGraph.prototype.isValidTarget = function(cell)\n{\n\treturn this.isValidSource(cell);\n};\n\n/**\n * Function: isValidConnection\n * \n * Returns true if the given target cell is a valid target for source.\n * This is a boolean implementation for not allowing connections between\n * certain pairs of vertices and is called by <getEdgeValidationError>.\n * This implementation returns true if <isValidSource> returns true for\n * the source and <isValidTarget> returns true for the target.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source cell.\n * target - <mxCell> that represents the target cell.\n */\nmxGraph.prototype.isValidConnection = function(source, target)\n{\n\treturn this.isValidSource(source) && this.isValidTarget(target);\n};\n\n/**\n * Function: setConnectable\n * \n * Specifies if the graph should allow new connections. This implementation\n * updates <mxConnectionHandler.enabled> in <connectionHandler>.\n * \n * Parameters:\n * \n * connectable - Boolean indicating if new connections should be allowed.\n */\nmxGraph.prototype.setConnectable = function(connectable)\n{\n\tthis.connectionHandler.setEnabled(connectable);\n};\n\t\n/**\n * Function: isConnectable\n * \n * Returns true if the <connectionHandler> is enabled.\n */\nmxGraph.prototype.isConnectable = function()\n{\n\treturn this.connectionHandler.isEnabled();\n};\n\n/**\n * Function: setTooltips\n * \n * Specifies if tooltips should be enabled. This implementation updates\n * <mxTooltipHandler.enabled> in <tooltipHandler>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if tooltips should be enabled.\n */\nmxGraph.prototype.setTooltips = function (enabled)\n{\n\tthis.tooltipHandler.setEnabled(enabled);\n};\n\n/**\n * Function: setPanning\n * \n * Specifies if panning should be enabled. This implementation updates\n * <mxPanningHandler.panningEnabled> in <panningHandler>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if panning should be enabled.\n */\nmxGraph.prototype.setPanning = function(enabled)\n{\n\tthis.panningHandler.panningEnabled = enabled;\n};\n\n/**\n * Function: isEditing\n * \n * Returns true if the given cell is currently being edited.\n * If no cell is specified then this returns true if any\n * cell is currently being edited.\n *\n * Parameters:\n * \n * cell - <mxCell> that should be checked.\n */\nmxGraph.prototype.isEditing = function(cell)\n{\n\tif (this.cellEditor != null)\n\t{\n\t\tvar editingCell = this.cellEditor.getEditingCell();\n\t\t\n\t\treturn (cell == null) ? editingCell != null : cell == editingCell;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: isAutoSizeCell\n * \n * Returns true if the size of the given cell should automatically be\n * updated after a change of the label. This implementation returns\n * <autoSizeCells> or checks if the cell style does specify\n * <mxConstants.STYLE_AUTOSIZE> to be 1.\n * \n * Parameters:\n * \n * cell - <mxCell> that should be resized.\n */\nmxGraph.prototype.isAutoSizeCell = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isAutoSizeCells() || style[mxConstants.STYLE_AUTOSIZE] == 1;\n};\n\n/**\n * Function: isAutoSizeCells\n * \n * Returns <autoSizeCells>.\n */\nmxGraph.prototype.isAutoSizeCells = function()\n{\n\treturn this.autoSizeCells;\n};\n\n/**\n * Function: setAutoSizeCells\n * \n * Specifies if cell sizes should be automatically updated after a label\n * change. This implementation sets <autoSizeCells> to the given parameter.\n * To update the size of cells when the cells are added, set\n * <autoSizeCellsOnAdd> to true.\n * \n * Parameters:\n * \n * value - Boolean indicating if cells should be resized\n * automatically.\n */\nmxGraph.prototype.setAutoSizeCells = function(value)\n{\n\tthis.autoSizeCells = value;\n};\n\n/**\n * Function: isExtendParent\n * \n * Returns true if the parent of the given cell should be extended if the\n * child has been resized so that it overlaps the parent. This\n * implementation returns <isExtendParents> if the cell is not an edge.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.isExtendParent = function(cell)\n{\n\treturn !this.getModel().isEdge(cell) && this.isExtendParents();\n};\n\n/**\n * Function: isExtendParents\n * \n * Returns <extendParents>.\n */\nmxGraph.prototype.isExtendParents = function()\n{\n\treturn this.extendParents;\n};\n\n/**\n * Function: setExtendParents\n * \n * Sets <extendParents>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParents>.\n */\nmxGraph.prototype.setExtendParents = function(value)\n{\n\tthis.extendParents = value;\n};\n\n/**\n * Function: isExtendParentsOnAdd\n * \n * Returns <extendParentsOnAdd>.\n */\nmxGraph.prototype.isExtendParentsOnAdd = function(cell)\n{\n\treturn this.extendParentsOnAdd;\n};\n\n/**\n * Function: setExtendParentsOnAdd\n * \n * Sets <extendParentsOnAdd>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParentsOnAdd>.\n */\nmxGraph.prototype.setExtendParentsOnAdd = function(value)\n{\n\tthis.extendParentsOnAdd = value;\n};\n\n/**\n * Function: isExtendParentsOnMove\n * \n * Returns <extendParentsOnMove>.\n */\nmxGraph.prototype.isExtendParentsOnMove = function()\n{\n\treturn this.extendParentsOnMove;\n};\n\n/**\n * Function: setExtendParentsOnMove\n * \n * Sets <extendParentsOnMove>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParentsOnAdd>.\n */\nmxGraph.prototype.setExtendParentsOnMove = function(value)\n{\n\tthis.extendParentsOnMove = value;\n};\n\n/**\n * Function: isRecursiveResize\n * \n * Returns <recursiveResize>.\n * \n * Parameters:\n * \n * state - <mxCellState> that is being resized.\n */\nmxGraph.prototype.isRecursiveResize = function(state)\n{\n\treturn this.recursiveResize;\n};\n\n/**\n * Function: setRecursiveResize\n * \n * Sets <recursiveResize>.\n * \n * Parameters:\n * \n * value - New boolean value for <recursiveResize>.\n */\nmxGraph.prototype.setRecursiveResize = function(value)\n{\n\tthis.recursiveResize = value;\n};\n\n/**\n * Function: isConstrainChild\n * \n * Returns true if the given cell should be kept inside the bounds of its\n * parent according to the rules defined by <getOverlap> and\n * <isAllowOverlapParent>. This implementation returns false for all children\n * of edges and <isConstrainChildren> otherwise.\n * \n * Parameters:\n * \n * cell - <mxCell> that should be constrained.\n */\nmxGraph.prototype.isConstrainChild = function(cell)\n{\n\treturn this.isConstrainChildren() && !this.getModel().isEdge(this.getModel().getParent(cell));\n};\n\n/**\n * Function: isConstrainChildren\n * \n * Returns <constrainChildren>.\n */\nmxGraph.prototype.isConstrainChildren = function()\n{\n\treturn this.constrainChildren;\n};\n\n/**\n * Function: setConstrainChildren\n * \n * Sets <constrainChildren>.\n */\nmxGraph.prototype.setConstrainChildren = function(value)\n{\n\tthis.constrainChildren = value;\n};\n\n/**\n * Function: isConstrainRelativeChildren\n * \n * Returns <constrainRelativeChildren>.\n */\nmxGraph.prototype.isConstrainRelativeChildren = function()\n{\n\treturn this.constrainRelativeChildren;\n};\n\n/**\n * Function: setConstrainRelativeChildren\n * \n * Sets <constrainRelativeChildren>.\n */\nmxGraph.prototype.setConstrainRelativeChildren = function(value)\n{\n\tthis.constrainRelativeChildren = value;\n};\n\n/**\n * Function: isConstrainChildren\n * \n * Returns <allowNegativeCoordinates>.\n */\nmxGraph.prototype.isAllowNegativeCoordinates = function()\n{\n\treturn this.allowNegativeCoordinates;\n};\n\n/**\n * Function: setConstrainChildren\n * \n * Sets <allowNegativeCoordinates>.\n */\nmxGraph.prototype.setAllowNegativeCoordinates = function(value)\n{\n\tthis.allowNegativeCoordinates = value;\n};\n\n/**\n * Function: getOverlap\n * \n * Returns a decimal number representing the amount of the width and height\n * of the given cell that is allowed to overlap its parent. A value of 0\n * means all children must stay inside the parent, 1 means the child is\n * allowed to be placed outside of the parent such that it touches one of\n * the parents sides. If <isAllowOverlapParent> returns false for the given\n * cell, then this method returns 0.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the overlap ratio should be returned.\n */\nmxGraph.prototype.getOverlap = function(cell)\n{\n\treturn (this.isAllowOverlapParent(cell)) ? this.defaultOverlap : 0;\n};\n\t\n/**\n * Function: isAllowOverlapParent\n * \n * Returns true if the given cell is allowed to be placed outside of the\n * parents area.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the child to be checked.\n */\nmxGraph.prototype.isAllowOverlapParent = function(cell)\n{\n\treturn false;\n};\n\n/**\n * Function: getFoldableCells\n * \n * Returns the cells which are movable in the given array of cells.\n */\nmxGraph.prototype.getFoldableCells = function(cells, collapse)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellFoldable(cell, collapse);\n\t}));\n};\n\n/**\n * Function: isCellFoldable\n * \n * Returns true if the given cell is foldable. This implementation\n * returns true if the cell has at least one child and its style\n * does not specify <mxConstants.STYLE_FOLDABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose foldable state should be returned.\n */\nmxGraph.prototype.isCellFoldable = function(cell, collapse)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.model.getChildCount(cell) > 0 && style[mxConstants.STYLE_FOLDABLE] != 0;\n};\n\n/**\n * Function: isValidDropTarget\n *\n * Returns true if the given cell is a valid drop target for the specified\n * cells. If <splitEnabled> is true then this returns <isSplitTarget> for\n * the given arguments else it returns true if the cell is not collapsed\n * and its child count is greater than 0.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the possible drop target.\n * cells - <mxCells> that should be dropped into the target.\n * evt - Mouseevent that triggered the invocation.\n */\nmxGraph.prototype.isValidDropTarget = function(cell, cells, evt)\n{\n\treturn cell != null && ((this.isSplitEnabled() &&\n\t\tthis.isSplitTarget(cell, cells, evt)) || (!this.model.isEdge(cell) &&\n\t\t(this.isSwimlane(cell) || (this.model.getChildCount(cell) > 0 &&\n\t\t!this.isCellCollapsed(cell)))));\n};\n\n/**\n * Function: isSplitTarget\n *\n * Returns true if the given edge may be splitted into two edges with the\n * given cell as a new terminal between the two.\n * \n * Parameters:\n * \n * target - <mxCell> that represents the edge to be splitted.\n * cells - <mxCells> that should split the edge.\n * evt - Mouseevent that triggered the invocation.\n */\nmxGraph.prototype.isSplitTarget = function(target, cells, evt)\n{\n\tif (this.model.isEdge(target) && cells != null && cells.length == 1 &&\n\t\tthis.isCellConnectable(cells[0]) && this.getEdgeValidationError(target,\n\t\t\tthis.model.getTerminal(target, true), cells[0]) == null)\n\t{\n\t\tvar src = this.model.getTerminal(target, true);\n\t\tvar trg = this.model.getTerminal(target, false);\n\n\t\treturn (!this.model.isAncestor(cells[0], src) &&\n\t\t\t\t!this.model.isAncestor(cells[0], trg));\n\t}\n\n\treturn false;\n};\n\n/**\n * Function: getDropTarget\n * \n * Returns the given cell if it is a drop target for the given cells or the\n * nearest ancestor that may be used as a drop target for the given cells.\n * If the given array contains a swimlane and <swimlaneNesting> is false\n * then this always returns null. If no cell is given, then the bottommost\n * swimlane at the location of the given event is returned.\n * \n * This function should only be used if <isDropEnabled> returns true.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> which are to be dropped onto the target.\n * evt - Mouseevent for the drag and drop.\n * cell - <mxCell> that is under the mousepointer.\n * clone - Optional boolean to indicate of cells will be cloned.\n */\nmxGraph.prototype.getDropTarget = function(cells, evt, cell, clone)\n{\n\tif (!this.isSwimlaneNesting())\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.isSwimlane(cells[i]))\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar pt = mxUtils.convertPoint(this.container,\n\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\tpt.x -= this.panDx;\n\tpt.y -= this.panDy;\n\tvar swimlane = this.getSwimlaneAt(pt.x, pt.y);\n\t\n\tif (cell == null)\n\t{\n\t\tcell = swimlane;\n\t}\n\telse if (swimlane != null)\n\t{\n\t\t// Checks if the cell is an ancestor of the swimlane\n\t\t// under the mouse and uses the swimlane in that case\n\t\tvar tmp = this.model.getParent(swimlane);\n\t\t\n\t\twhile (tmp != null && this.isSwimlane(tmp) && tmp != cell)\n\t\t{\n\t\t\ttmp = this.model.getParent(tmp);\n\t\t}\n\t\t\n\t\tif (tmp == cell)\n\t\t{\n\t\t\tcell = swimlane;\n\t\t}\n\t}\n\t\n\twhile (cell != null && !this.isValidDropTarget(cell, cells, evt) &&\n\t\t!this.model.isLayer(cell))\n\t{\n\t\tcell = this.model.getParent(cell);\n\t}\n\t\n\t// Checks if parent is dropped into child if not cloning\n\tif (clone == null || !clone)\n\t{\n\t\tvar parent = cell;\n\t\t\n\t\twhile (parent != null && mxUtils.indexOf(cells, parent) < 0)\n\t\t{\n\t\t\tparent = this.model.getParent(parent);\n\t\t}\n\t}\n\n\treturn (!this.model.isLayer(cell) && parent == null) ? cell : null;\n};\n\n/**\n * Group: Cell retrieval\n */\n\n/**\n * Function: getDefaultParent\n * \n * Returns <defaultParent> or <mxGraphView.currentRoot> or the first child\n * child of <mxGraphModel.root> if both are null. The value returned by\n * this function should be used as the parent for new cells (aka default\n * layer).\n */\nmxGraph.prototype.getDefaultParent = function()\n{\n\tvar parent = this.getCurrentRoot();\n\t\n\tif (parent == null)\n\t{\n\t\tparent = this.defaultParent;\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tvar root = this.model.getRoot();\n\t\t\tparent = this.model.getChildAt(root, 0);\n\t\t}\n\t}\n\t\n\treturn parent;\n};\n\n/**\n * Function: setDefaultParent\n * \n * Sets the <defaultParent> to the given cell. Set this to null to return\n * the first child of the root in getDefaultParent.\n */\nmxGraph.prototype.setDefaultParent = function(cell)\n{\n\tthis.defaultParent = cell;\n};\n\n/**\n * Function: getSwimlane\n * \n * Returns the nearest ancestor of the given cell which is a swimlane, or\n * the given cell, if it is itself a swimlane.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the ancestor swimlane should be returned.\n */\nmxGraph.prototype.getSwimlane = function(cell)\n{\n\twhile (cell != null && !this.isSwimlane(cell))\n\t{\n\t\tcell = this.model.getParent(cell);\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: getSwimlaneAt\n * \n * Returns the bottom-most swimlane that intersects the given point (x, y)\n * in the cell hierarchy that starts at the given parent.\n * \n * Parameters:\n * \n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is <defaultParent>.\n */\nmxGraph.prototype.getSwimlaneAt = function (x, y, parent)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tif (parent != null)\n\t{\n\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = this.model.getChildAt(parent, i);\n\t\t\tvar result = this.getSwimlaneAt(x, y, child);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse if (this.isSwimlane(child))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(child);\n\t\t\t\t\n\t\t\t\tif (this.intersects(state, x, y))\n\t\t\t\t{\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getCellAt\n * \n * Returns the bottom-most cell that intersects the given point (x, y) in\n * the cell hierarchy starting at the given parent. This will also return\n * swimlanes if the given location intersects the content area of the\n * swimlane. If this is not desired, then the <hitsSwimlaneContent> may be\n * used if the returned cell is a swimlane to determine if the location\n * is inside the content area or on the actual title of the swimlane.\n * \n * Parameters:\n * \n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is current root of the view or the root of the model.\n * vertices - Optional boolean indicating if vertices should be returned.\n * Default is true.\n * edges - Optional boolean indicating if edges should be returned. Default\n * is true.\n * ignoreFn - Optional function that returns true if cell should be ignored.\n * The function is passed the cell state and the x and y parameter.\n */\nmxGraph.prototype.getCellAt = function(x, y, parent, vertices, edges, ignoreFn)\n{\n\tvertices = (vertices != null) ? vertices : true;\n\tedges = (edges != null) ? edges : true;\n\n\tif (parent == null)\n\t{\n\t\tparent = this.getCurrentRoot();\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getModel().getRoot();\n\t\t}\n\t}\n\n\tif (parent != null)\n\t{\n\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\n\t\tfor (var i = childCount - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar cell = this.model.getChildAt(parent, i);\n\t\t\tvar result = this.getCellAt(x, y, cell, vertices, edges, ignoreFn);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse if (this.isCellVisible(cell) && (edges && this.model.isEdge(cell) ||\n\t\t\t\tvertices && this.model.isVertex(cell)))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(cell);\n\n\t\t\t\tif (state != null && (ignoreFn == null || !ignoreFn(state, x, y)) &&\n\t\t\t\t\tthis.intersects(state, x, y))\n\t\t\t\t{\n\t\t\t\t\treturn cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: intersects\n * \n * Returns the bottom-most cell that intersects the given point (x, y) in\n * the cell hierarchy that starts at the given parent.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the cell state.\n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n */\nmxGraph.prototype.intersects = function(state, x, y)\n{\n\tif (state != null)\n\t{\n\t\tvar pts = state.absolutePoints;\n\n\t\tif (pts != null)\n\t\t{\n\t\t\tvar t2 = this.tolerance * this.tolerance;\n\t\t\tvar pt = pts[0];\n\t\t\t\n\t\t\tfor (var i = 1; i < pts.length; i++)\n\t\t\t{\n\t\t\t\tvar next = pts[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(pt.x, pt.y, next.x, next.y, x, y);\n\t\t\t\t\n\t\t\t\tif (dist <= t2)\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpt = next;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(x, y), cos, sin, cx);\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (mxUtils.contains(state, x, y))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: hitsSwimlaneContent\n * \n * Returns true if the given coordinate pair is inside the content\n * are of the given swimlane.\n * \n * Parameters:\n * \n * swimlane - <mxCell> that specifies the swimlane.\n * x - X-coordinate of the mouse event.\n * y - Y-coordinate of the mouse event.\n */\nmxGraph.prototype.hitsSwimlaneContent = function(swimlane, x, y)\n{\n\tvar state = this.getView().getState(swimlane);\n\tvar size = this.getStartSize(swimlane);\n\t\n\tif (state != null)\n\t{\n\t\tvar scale = this.getView().getScale();\n\t\tx -= state.x;\n\t\ty -= state.y;\n\t\t\n\t\tif (size.width > 0 && x > 0 && x > size.width * scale)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse if (size.height > 0 && y > 0 && y > size.height * scale)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getChildVertices\n * \n * Returns the visible child vertices of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be returned.\n */\nmxGraph.prototype.getChildVertices = function(parent)\n{\n\treturn this.getChildCells(parent, true, false);\n};\n\t\n/**\n * Function: getChildEdges\n * \n * Returns the visible child edges of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose child vertices should be returned.\n */\nmxGraph.prototype.getChildEdges = function(parent)\n{\n\treturn this.getChildCells(parent, false, true);\n};\n\n/**\n * Function: getChildCells\n * \n * Returns the visible child vertices or edges in the given parent. If\n * vertices and edges is false, then all children are returned.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be returned.\n * vertices - Optional boolean that specifies if child vertices should\n * be returned. Default is false.\n * edges - Optional boolean that specifies if child edges should\n * be returned. Default is false.\n */\nmxGraph.prototype.getChildCells = function(parent, vertices, edges)\n{\n\tparent = (parent != null) ? parent : this.getDefaultParent();\n\tvertices = (vertices != null) ? vertices : false;\n\tedges = (edges != null) ? edges : false;\n\n\tvar cells = this.model.getChildCells(parent, vertices, edges);\n\tvar result = [];\n\n\t// Filters out the non-visible child cells\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (this.isCellVisible(cells[i]))\n\t\t{\n\t\t\tresult.push(cells[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\t\n/**\n * Function: getConnections\n * \n * Returns all visible edges connected to the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose connections should be returned.\n * parent - Optional parent of the opposite end for a connection to be\n * returned.\n */\nmxGraph.prototype.getConnections = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, true, true, false);\n};\n\t\n/**\n * Function: getIncomingEdges\n * \n * Returns the visible incoming edges for the given cell. If the optional\n * parent argument is specified, then only child edges of the given parent\n * are returned.\n * \n * Parameters:\n * \n * cell - <mxCell> whose incoming edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n */\nmxGraph.prototype.getIncomingEdges = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, true, false, false);\n};\n\t\n/**\n * Function: getOutgoingEdges\n * \n * Returns the visible outgoing edges for the given cell. If the optional\n * parent argument is specified, then only child edges of the given parent\n * are returned.\n * \n * Parameters:\n * \n * cell - <mxCell> whose outgoing edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n */\nmxGraph.prototype.getOutgoingEdges = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, false, true, false);\n};\n\t\n/**\n * Function: getEdges\n * \n * Returns the incoming and/or outgoing edges for the given cell.\n * If the optional parent argument is specified, then only edges are returned\n * where the opposite is in the given parent cell. If at least one of incoming\n * or outgoing is true, then loops are ignored, if both are false, then all\n * edges connected to the given cell are returned including loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n * incoming - Optional boolean that specifies if incoming edges should\n * be included in the result. Default is true.\n * outgoing - Optional boolean that specifies if outgoing edges should\n * be included in the result. Default is true.\n * includeLoops - Optional boolean that specifies if loops should be\n * included in the result. Default is true.\n * recurse - Optional boolean the specifies if the parent specified only \n * need be an ancestral parent, true, or the direct parent, false.\n * Default is false\n */\nmxGraph.prototype.getEdges = function(cell, parent, incoming, outgoing, includeLoops, recurse)\n{\n\tincoming = (incoming != null) ? incoming : true;\n\toutgoing = (outgoing != null) ? outgoing : true;\n\tincludeLoops = (includeLoops != null) ? includeLoops : true;\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tvar edges = [];\n\tvar isCollapsed = this.isCellCollapsed(cell);\n\tvar childCount = this.model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.model.getChildAt(cell, i);\n\n\t\tif (isCollapsed || !this.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(this.model.getEdges(child, incoming, outgoing));\n\t\t}\n\t}\n\n\tedges = edges.concat(this.model.getEdges(cell, incoming, outgoing));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar state = this.view.getState(edges[i]);\n\t\t\n\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\n\t\tif ((includeLoops && source == target) || ((source != target) && ((incoming &&\n\t\t\ttarget == cell && (parent == null || this.isValidAncestor(source, parent, recurse))) ||\n\t\t\t(outgoing && source == cell && (parent == null ||\n\t\t\t\t\tthis.isValidAncestor(target, parent, recurse))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isValidAncestor\n * \n * Returns whether or not the specified parent is a valid\n * ancestor of the specified cell, either direct or indirectly\n * based on whether ancestor recursion is enabled.\n * \n * Parameters:\n * \n * cell - <mxCell> the possible child cell\n * parent - <mxCell> the possible parent cell\n * recurse - boolean whether or not to recurse the child ancestors\n */\nmxGraph.prototype.isValidAncestor = function(cell, parent, recurse)\n{\n\treturn (recurse ? this.model.isAncestor(parent, cell) : this.model\n\t\t\t.getParent(cell) == parent);\n};\n\n/**\n * Function: getOpposites\n * \n * Returns all distinct visible opposite cells for the specified terminal\n * on the given edges.\n * \n * Parameters:\n * \n * edges - Array of <mxCells> that contains the edges whose opposite\n * terminals should be returned.\n * terminal - Terminal that specifies the end whose opposite should be\n * returned.\n * source - Optional boolean that specifies if source terminals should be\n * included in the result. Default is true.\n * targets - Optional boolean that specifies if targer terminals should be\n * included in the result. Default is true.\n */\nmxGraph.prototype.getOpposites = function(edges, terminal, sources, targets)\n{\n\tsources = (sources != null) ? sources : true;\n\ttargets = (targets != null) ? targets : true;\n\t\n\tvar terminals = [];\n\t\n\t// Fast lookup to avoid duplicates in terminals array\n\tvar dict = new mxDictionary();\n\t\n\tif (edges != null)\n\t{\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tvar state = this.view.getState(edges[i]);\n\t\t\t\n\t\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\t\t\t\n\t\t\t// Checks if the terminal is the source of the edge and if the\n\t\t\t// target should be stored in the result\n\t\t\tif (source == terminal && target != null && target != terminal && targets)\n\t\t\t{\n\t\t\t\tif (!dict.get(target))\n\t\t\t\t{\n\t\t\t\t\tdict.put(target, true);\n\t\t\t\t\tterminals.push(target);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Checks if the terminal is the taget of the edge and if the\n\t\t\t// source should be stored in the result\n\t\t\telse if (target == terminal && source != null && source != terminal && sources)\n\t\t\t{\n\t\t\t\tif (!dict.get(source))\n\t\t\t\t{\n\t\t\t\t\tdict.put(source, true);\n\t\t\t\t\tterminals.push(source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn terminals;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and returns the connected edges\n * as displayed on the screen.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxGraph.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar state = this.view.getState(edges[i]);\n\t\t\n\t\tvar src = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\tvar trg = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getPointForEvent\n * \n * Returns an <mxPoint> representing the given event in the unscaled,\n * non-translated coordinate space of <container> and applies the grid.\n * \n * Parameters:\n * \n * evt - Mousevent that contains the mouse pointer location.\n * addOffset - Optional boolean that specifies if the position should be\n * offset by half of the <gridSize>. Default is true.\n */\n mxGraph.prototype.getPointForEvent = function(evt, addOffset)\n {\n\tvar p = mxUtils.convertPoint(this.container,\n\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\n\tvar s = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar off = (addOffset != false) ? this.gridSize / 2 : 0;\n\t\n\tp.x = this.snap(p.x / s - tr.x - off);\n\tp.y = this.snap(p.y / s - tr.y - off);\n\t\n\treturn p;\n };\n\n/**\n * Function: getCells\n * \n * Returns the child vertices and edges of the given parent that are contained\n * in the given rectangle. The result is added to the optional result array,\n * which is returned. If no result array is specified then a new array is\n * created and returned.\n * \n * Parameters:\n * \n * x - X-coordinate of the rectangle.\n * y - Y-coordinate of the rectangle.\n * width - Width of the rectangle.\n * height - Height of the rectangle.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is current root of the view or the root of the model.\n * result - Optional array to store the result in.\n */\nmxGraph.prototype.getCells = function(x, y, width, height, parent, result)\n{\n\tresult = (result != null) ? result : [];\n\t\n\tif (width > 0 || height > 0)\n\t{\n\t\tvar model = this.getModel();\n\t\tvar right = x + width;\n\t\tvar bottom = y + height;\n\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getCurrentRoot();\n\t\t\t\n\t\t\tif (parent == null)\n\t\t\t{\n\t\t\t\tparent = model.getRoot();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\tvar state = this.view.getState(cell);\n\t\t\t\t\n\t\t\t\tif (state != null && this.isCellVisible(cell))\n\t\t\t\t{\n\t\t\t\t\tvar deg = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0;\n\t\t\t\t\tvar box = state;\n\t\t\t\t\t\n\t\t\t\t\tif (deg != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbox = mxUtils.getBoundingBox(box, deg);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif ((model.isEdge(cell) || model.isVertex(cell)) &&\n\t\t\t\t\t\tbox.x >= x && box.y + box.height <= bottom &&\n\t\t\t\t\t\tbox.y >= y && box.x + box.width <= right)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(cell);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.getCells(x, y, width, height, cell, result);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getCellsBeyond\n * \n * Returns the children of the given parent that are contained in the\n * halfpane from the given point (x0, y0) rightwards or downwards\n * depending on rightHalfpane and bottomHalfpane.\n * \n * Parameters:\n * \n * x0 - X-coordinate of the origin.\n * y0 - Y-coordinate of the origin.\n * parent - Optional <mxCell> whose children should be checked. Default is\n * <defaultParent>.\n * rightHalfpane - Boolean indicating if the cells in the right halfpane\n * from the origin should be returned.\n * bottomHalfpane - Boolean indicating if the cells in the bottom halfpane\n * from the origin should be returned.\n */\nmxGraph.prototype.getCellsBeyond = function(x0, y0, parent, rightHalfpane, bottomHalfpane)\n{\n\tvar result = [];\n\t\n\tif (rightHalfpane || bottomHalfpane)\n\t{\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getDefaultParent();\n\t\t}\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar child = this.model.getChildAt(parent, i);\n\t\t\t\tvar state = this.view.getState(child);\n\t\t\t\t\n\t\t\t\tif (this.isCellVisible(child) && state != null)\n\t\t\t\t{\n\t\t\t\t\tif ((!rightHalfpane || state.x >= x0) &&\n\t\t\t\t\t\t(!bottomHalfpane || state.y >= y0))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: findTreeRoots\n * \n * Returns all children in the given parent which do not have incoming\n * edges. If the result is empty then the with the greatest difference\n * between incoming and outgoing edges is returned.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * isolate - Optional boolean that specifies if edges should be ignored if\n * the opposite end is not a child of the given parent cell. Default is\n * false.\n * invert - Optional boolean that specifies if outgoing or incoming edges\n * should be counted for a tree root. If false then outgoing edges will be\n * counted. Default is false.\n */\nmxGraph.prototype.findTreeRoots = function(parent, isolate, invert)\n{\n\tisolate = (isolate != null) ? isolate : false;\n\tinvert = (invert != null) ? invert : false;\n\tvar roots = [];\n\t\n\tif (parent != null)\n\t{\n\t\tvar model = this.getModel();\n\t\tvar childCount = model.getChildCount(parent);\n\t\tvar best = null;\n\t\tvar maxDiff = 0;\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (this.model.isVertex(cell) && this.isCellVisible(cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getConnections(cell, (isolate) ? parent : null);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < conns.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.view.getVisibleTerminal(conns[j], true);\n\n                    if (src == cell)\n                    {\n                        fanOut++;\n                    }\n                    else\n                    {\n                        fanIn++;\n                    }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((invert && fanOut == 0 && fanIn > 0) ||\n\t\t\t\t\t(!invert && fanIn == 0 && fanOut > 0))\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar diff = (invert) ? fanIn - fanOut : fanOut - fanIn;\n\t\t\t\t\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: traverse\n * \n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Example:\n * \n * (code)\n * mxLog.show();\n * var cell = graph.getSelectionCell();\n * graph.traverse(cell, false, function(vertex, edge)\n * {\n *   mxLog.debug(graph.getLabel(vertex));\n * });\n * (end)\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - Optional boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * func - Visitor function that takes the current vertex and the incoming\n * edge as arguments. The traversal stops if the function returns false.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * visited - Optional <mxDictionary> from cells to true for the visited cells.\n * inverse - Optional boolean to traverse in inverse direction. Default is false.\n * This is ignored if directed is false.\n */\nmxGraph.prototype.traverse = function(vertex, directed, func, edge, visited, inverse)\n{\n\tif (func != null && vertex != null)\n\t{\n\t\tdirected = (directed != null) ? directed : true;\n\t\tinverse = (inverse != null) ? inverse : false;\n\t\tvisited = visited || new mxDictionary();\n\t\t\n\t\tif (!visited.get(vertex))\n\t\t{\n\t\t\tvisited.put(vertex, true);\n\t\t\tvar result = func(vertex, edge);\n\t\t\t\n\t\t\tif (result == null || result)\n\t\t\t{\n\t\t\t\tvar edgeCount = this.model.getEdgeCount(vertex);\n\t\t\t\t\n\t\t\t\tif (edgeCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar e = this.model.getEdgeAt(vertex, i);\n\t\t\t\t\t\tvar isSource = this.model.getTerminal(e, true) == vertex;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!directed || (!inverse == isSource))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar next = this.model.getTerminal(e, !isSource);\n\t\t\t\t\t\t\tthis.traverse(next, directed, func, e, visited, inverse);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Group: Selection\n */\n\n/**\n * Function: isCellSelected\n * \n * Returns true if the given cell is selected.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the selection state should be returned.\n */\nmxGraph.prototype.isCellSelected = function(cell)\n{\n\treturn this.getSelectionModel().isSelected(cell);\n};\n\n/**\n * Function: isSelectionEmpty\n * \n * Returns true if the selection is empty.\n */\nmxGraph.prototype.isSelectionEmpty = function()\n{\n\treturn this.getSelectionModel().isEmpty();\n};\n\n/**\n * Function: clearSelection\n * \n * Clears the selection using <mxGraphSelectionModel.clear>.\n */\nmxGraph.prototype.clearSelection = function()\n{\n\treturn this.getSelectionModel().clear();\n};\n\n/**\n * Function: getSelectionCount\n * \n * Returns the number of selected cells.\n */\nmxGraph.prototype.getSelectionCount = function()\n{\n\treturn this.getSelectionModel().cells.length;\n};\n\t\n/**\n * Function: getSelectionCell\n * \n * Returns the first cell from the array of selected <mxCells>.\n */\nmxGraph.prototype.getSelectionCell = function()\n{\n\treturn this.getSelectionModel().cells[0];\n};\n\n/**\n * Function: getSelectionCells\n * \n * Returns the array of selected <mxCells>.\n */\nmxGraph.prototype.getSelectionCells = function()\n{\n\treturn this.getSelectionModel().cells.slice();\n};\n\n/**\n * Function: setSelectionCell\n * \n * Sets the selection cell.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n */\nmxGraph.prototype.setSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().setCell(cell);\n};\n\n/**\n * Function: setSelectionCells\n * \n * Sets the selection cell.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n */\nmxGraph.prototype.setSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().setCells(cells);\n};\n\n/**\n * Function: addSelectionCell\n * \n * Adds the given cell to the selection.\n * \n * Parameters:\n * \n * cell - <mxCell> to be add to the selection.\n */\nmxGraph.prototype.addSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().addCell(cell);\n};\n\n/**\n * Function: addSelectionCells\n * \n * Adds the given cells to the selection.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be added to the selection.\n */\nmxGraph.prototype.addSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().addCells(cells);\n};\n\n/**\n * Function: removeSelectionCell\n * \n * Removes the given cell from the selection.\n * \n * Parameters:\n * \n * cell - <mxCell> to be removed from the selection.\n */\nmxGraph.prototype.removeSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().removeCell(cell);\n};\n\n/**\n * Function: removeSelectionCells\n * \n * Removes the given cells from the selection.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be removed from the selection.\n */\nmxGraph.prototype.removeSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().removeCells(cells);\n};\n\n/**\n * Function: selectRegion\n * \n * Selects and returns the cells inside the given rectangle for the\n * specified event.\n * \n * Parameters:\n * \n * rect - <mxRectangle> that represents the region to be selected.\n * evt - Mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectRegion = function(rect, evt)\n{\n\tvar cells = this.getCells(rect.x, rect.y, rect.width, rect.height);\n\tthis.selectCellsForEvent(cells, evt);\n\t\n\treturn cells;\n};\n\n/**\n * Function: selectNextCell\n * \n * Selects the next cell.\n */\nmxGraph.prototype.selectNextCell = function()\n{\n\tthis.selectCell(true);\n};\n\n/**\n * Function: selectPreviousCell\n * \n * Selects the previous cell.\n */\nmxGraph.prototype.selectPreviousCell = function()\n{\n\tthis.selectCell();\n};\n\n/**\n * Function: selectParentCell\n * \n * Selects the parent cell.\n */\nmxGraph.prototype.selectParentCell = function()\n{\n\tthis.selectCell(false, true);\n};\n\n/**\n * Function: selectChildCell\n * \n * Selects the first child cell.\n */\nmxGraph.prototype.selectChildCell = function()\n{\n\tthis.selectCell(false, false, true);\n};\n\n/**\n * Function: selectCell\n * \n * Selects the next, parent, first child or previous cell, if all arguments\n * are false.\n * \n * Parameters:\n * \n * isNext - Boolean indicating if the next cell should be selected.\n * isParent - Boolean indicating if the parent cell should be selected.\n * isChild - Boolean indicating if the first child cell should be selected.\n */\nmxGraph.prototype.selectCell = function(isNext, isParent, isChild)\n{\n\tvar sel = this.selectionModel;\n\tvar cell = (sel.cells.length > 0) ? sel.cells[0] : null;\n\t\n\tif (sel.cells.length > 1)\n\t{\n\t\tsel.clear();\n\t}\n\t\n\tvar parent = (cell != null) ?\n\t\tthis.model.getParent(cell) :\n\t\tthis.getDefaultParent();\n\t\n\tvar childCount = this.model.getChildCount(parent);\n\t\n\tif (cell == null && childCount > 0)\n\t{\n\t\tvar child = this.model.getChildAt(parent, 0);\n\t\tthis.setSelectionCell(child);\n\t}\n\telse if ((cell == null || isParent) &&\n\t\tthis.view.getState(parent) != null &&\n\t\tthis.model.getGeometry(parent) != null)\n\t{\n\t\tif (this.getCurrentRoot() != parent)\n\t\t{\n\t\t\tthis.setSelectionCell(parent);\n\t\t}\n\t}\n\telse if (cell != null && isChild)\n\t{\n\t\tvar tmp = this.model.getChildCount(cell);\n\t\t\n\t\tif (tmp > 0)\n\t\t{\n\t\t\tvar child = this.model.getChildAt(cell, 0);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t}\n\telse if (childCount > 0)\n\t{\n\t\tvar i = parent.getIndex(cell);\n\t\t\n\t\tif (isNext)\n\t\t{\n\t\t\ti++;\n\t\t\tvar child = this.model.getChildAt(parent, i % childCount);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti--;\n\t\t\tvar index =  (i < 0) ? childCount - 1 : i;\n\t\t\tvar child = this.model.getChildAt(parent, index);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t}\n};\n\n/**\n * Function: selectAll\n * \n * Selects all children of the given parent cell or the children of the\n * default parent if no parent is specified. To select leaf vertices and/or\n * edges use <selectCells>.\n * \n * Parameters:\n * \n * parent - Optional <mxCell> whose children should be selected.\n * Default is <defaultParent>.\n * descendants - Optional boolean specifying whether all descendants should be\n * selected. Default is false.\n */\nmxGraph.prototype.selectAll = function(parent, descendants)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tvar cells = (descendants) ? this.model.filterDescendants(mxUtils.bind(this, function(cell)\n\t{\n\t\treturn cell != parent && this.view.getState(cell) != null;\n\t}), parent) : this.model.getChildren(parent);\n\t\n\tif (cells != null)\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Function: selectVertices\n * \n * Select all vertices inside the given parent or the default parent.\n */\nmxGraph.prototype.selectVertices = function(parent)\n{\n\tthis.selectCells(true, false, parent);\n};\n\n/**\n * Function: selectVertices\n * \n * Select all vertices inside the given parent or the default parent.\n */\nmxGraph.prototype.selectEdges = function(parent)\n{\n\tthis.selectCells(false, true, parent);\n};\n\n/**\n * Function: selectCells\n * \n * Selects all vertices and/or edges depending on the given boolean\n * arguments recursively, starting at the given parent or the default\n * parent if no parent is specified. Use <selectAll> to select all cells.\n * For vertices, only cells with no children are selected.\n * \n * Parameters:\n * \n * vertices - Boolean indicating if vertices should be selected.\n * edges - Boolean indicating if edges should be selected.\n * parent - Optional <mxCell> that acts as the root of the recursion.\n * Default is <defaultParent>.\n */\nmxGraph.prototype.selectCells = function(vertices, edges, parent)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tvar filter = mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.view.getState(cell) != null &&\n\t\t\t((this.model.getChildCount(cell) == 0 && this.model.isVertex(cell) && vertices\n\t\t\t&& !this.model.isEdge(this.model.getParent(cell))) ||\n\t\t\t(this.model.isEdge(cell) && edges));\n\t});\n\t\n\tvar cells = this.model.filterDescendants(filter, parent);\n\t\n\tif (cells != null)\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Function: selectCellForEvent\n * \n * Selects the given cell by either adding it to the selection or\n * replacing the selection depending on whether the given mouse event is a\n * toggle event.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n * evt - Optional mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectCellForEvent = function(cell, evt)\n{\n\tvar isSelected = this.isCellSelected(cell);\n\t\n\tif (this.isToggleEvent(evt))\n\t{\n\t\tif (isSelected)\n\t\t{\n\t\t\tthis.removeSelectionCell(cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addSelectionCell(cell);\n\t\t}\n\t}\n\telse if (!isSelected || this.getSelectionCount() != 1)\n\t{\n\t\tthis.setSelectionCell(cell);\n\t}\n};\n\n/**\n * Function: selectCellsForEvent\n * \n * Selects the given cells by either adding them to the selection or\n * replacing the selection depending on whether the given mouse event is a\n * toggle event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n * evt - Optional mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectCellsForEvent = function(cells, evt)\n{\n\tif (this.isToggleEvent(evt))\n\t{\n\t\tthis.addSelectionCells(cells);\n\t}\n\telse\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Group: Selection state\n */\n\n/**\n * Function: createHandler\n * \n * Creates a new handler for the given cell state. This implementation\n * returns a new <mxEdgeHandler> of the corresponding cell is an edge,\n * otherwise it returns an <mxVertexHandler>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose handler should be created.\n */\nmxGraph.prototype.createHandler = function(state)\n{\n\tvar result = null;\n\t\n\tif (state != null)\n\t{\n\t\tif (this.model.isEdge(state.cell))\n\t\t{\n\t\t\tvar source = state.getVisibleTerminalState(true);\n\t\t\tvar target = state.getVisibleTerminalState(false);\n\t\t\tvar geo = this.getCellGeometry(state.cell);\n\t\t\t\n\t\t\tvar edgeStyle = this.view.getEdgeStyle(state, (geo != null) ? geo.points : null, source, target);\n\t\t\tresult = this.createEdgeHandler(state, edgeStyle);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = this.createVertexHandler(state);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createVertexHandler\n * \n * Hooks to create a new <mxVertexHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createVertexHandler = function(state)\n{\n\treturn new mxVertexHandler(state);\n};\n\n/**\n * Function: createEdgeHandler\n * \n * Hooks to create a new <mxEdgeHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createEdgeHandler = function(state, edgeStyle)\n{\n\tvar result = null;\n\t\n\tif (edgeStyle == mxEdgeStyle.Loop ||\n\t\tedgeStyle == mxEdgeStyle.ElbowConnector ||\n\t\tedgeStyle == mxEdgeStyle.SideToSide ||\n\t\tedgeStyle == mxEdgeStyle.TopToBottom)\n\t{\n\t\tresult = this.createElbowEdgeHandler(state);\n\t}\n\telse if (edgeStyle == mxEdgeStyle.SegmentConnector || \n\t\t\tedgeStyle == mxEdgeStyle.OrthConnector)\n\t{\n\t\tresult = this.createEdgeSegmentHandler(state);\n\t}\n\telse\n\t{\n\t\tresult = new mxEdgeHandler(state);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createEdgeSegmentHandler\n * \n * Hooks to create a new <mxEdgeSegmentHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createEdgeSegmentHandler = function(state)\n{\n\treturn new mxEdgeSegmentHandler(state);\n};\n\n/**\n * Function: createElbowEdgeHandler\n * \n * Hooks to create a new <mxElbowEdgeHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createElbowEdgeHandler = function(state)\n{\n\treturn new mxElbowEdgeHandler(state);\n};\n\n/**\n * Group: Graph events\n */\n\n/**\n * Function: addMouseListener\n * \n * Adds a listener to the graph event dispatch loop. The listener\n * must implement the mouseDown, mouseMove and mouseUp methods\n * as shown in the <mxMouseEvent> class.\n * \n * Parameters:\n * \n * listener - Listener to be added to the graph event listeners.\n */\nmxGraph.prototype.addMouseListener = function(listener)\n{\n\tif (this.mouseListeners == null)\n\t{\n\t\tthis.mouseListeners = [];\n\t}\n\t\n\tthis.mouseListeners.push(listener);\n};\n\n/**\n * Function: removeMouseListener\n * \n * Removes the specified graph listener.\n * \n * Parameters:\n * \n * listener - Listener to be removed from the graph event listeners.\n */\nmxGraph.prototype.removeMouseListener = function(listener)\n{\n\tif (this.mouseListeners != null)\n\t{\n\t\tfor (var i = 0; i < this.mouseListeners.length; i++)\n\t\t{\n\t\t\tif (this.mouseListeners[i] == listener)\n\t\t\t{\n\t\t\t\tthis.mouseListeners.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: updateMouseEvent\n * \n * Sets the graphX and graphY properties if the given <mxMouseEvent> if\n * required and returned the event.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> to be updated.\n * evtName - Name of the mouse event.\n */\nmxGraph.prototype.updateMouseEvent = function(me, evtName)\n{\n\tif (me.graphX == null || me.graphY == null)\n\t{\n\t\tvar pt = mxUtils.convertPoint(this.container, me.getX(), me.getY());\n\t\t\n\t\tme.graphX = pt.x - this.panDx;\n\t\tme.graphY = pt.y - this.panDy;\n\t\t\n\t\t// Searches for rectangles using method if native hit detection is disabled on shape\n\t\tif (me.getCell() == null && this.isMouseDown && evtName == mxEvent.MOUSE_MOVE)\n\t\t{\n\t\t\tme.state = this.view.getState(this.getCellAt(pt.x, pt.y, null, null, null, function(state)\n\t\t\t{\n\t\t\t\treturn state.shape == null || state.shape.paintBackground != mxRectangleShape.prototype.paintBackground ||\n\t\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1' ||\n\t\t\t\t\t(state.shape.fill != null && state.shape.fill != mxConstants.NONE);\n\t\t\t}));\n\t\t}\n\t}\n\t\n\treturn me;\n};\n\n/**\n * Function: getStateForEvent\n * \n * Returns the state for the given touch event.\n */\nmxGraph.prototype.getStateForTouchEvent = function(evt)\n{\n\tvar x = mxEvent.getClientX(evt);\n\tvar y = mxEvent.getClientY(evt);\n\t\n\t// Dispatches the drop event to the graph which\n\t// consumes and executes the source function\n\tvar pt = mxUtils.convertPoint(this.container, x, y);\n\n\treturn this.view.getState(this.getCellAt(pt.x, pt.y));\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the event should be ignored in <fireMouseEvent>.\n */\nmxGraph.prototype.isEventIgnored = function(evtName, me, sender)\n{\n\tvar mouseEvent = mxEvent.isMouseEvent(me.getEvent());\n\tvar result = false;\n\n\t// Drops events that are fired more than once\n\tif (me.getEvent() == this.lastEvent)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tthis.lastEvent = me.getEvent();\n\t}\n\n\t// Installs event listeners to capture the complete gesture from the event source\n\t// for non-MS touch events as a workaround for all events for the same geture being\n\t// fired from the event source even if that was removed from the DOM.\n\tif (this.eventSource != null && evtName != mxEvent.MOUSE_MOVE)\n\t{\n\t\tmxEvent.removeGestureListeners(this.eventSource, null, this.mouseMoveRedirect, this.mouseUpRedirect);\n\t\tthis.mouseMoveRedirect = null;\n\t\tthis.mouseUpRedirect = null;\n\t\tthis.eventSource = null;\n\t}\n\telse if (!mxClient.IS_GC && this.eventSource != null && me.getSource() != this.eventSource)\n\t{\n\t\tresult = true;\n\t}\n\telse if (mxClient.IS_TOUCH && evtName == mxEvent.MOUSE_DOWN && !mouseEvent && !mxEvent.isPenEvent(me.getEvent()))\n\t{\n\t\tthis.eventSource = me.getSource();\n\n\t\tthis.mouseMoveRedirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, this.getStateForTouchEvent(evt)));\n\t\t});\n\t\tthis.mouseUpRedirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, this.getStateForTouchEvent(evt)));\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(this.eventSource, null, this.mouseMoveRedirect, this.mouseUpRedirect);\n\t}\n\n\t// Factored out the workarounds for FF to make it easier to override/remove\n\t// Note this method has side-effects!\n\tif (this.isSyntheticEventIgnored(evtName, me, sender))\n\t{\n\t\tresult = true;\n\t}\n\n\t// Never fires mouseUp/-Down for double clicks\n\tif (!mxEvent.isPopupTrigger(this.lastEvent) && evtName != mxEvent.MOUSE_MOVE && this.lastEvent.detail == 2)\n\t{\n\t\treturn true;\n\t}\n\t\n\t// Filters out of sequence events or mixed event types during a gesture\n\tif (evtName == mxEvent.MOUSE_UP && this.isMouseDown)\n\t{\n\t\tthis.isMouseDown = false;\n\t}\n\telse if (evtName == mxEvent.MOUSE_DOWN && !this.isMouseDown)\n\t{\n\t\tthis.isMouseDown = true;\n\t\tthis.isMouseTrigger = mouseEvent;\n\t}\n\t// Drops mouse events that are fired during touch gestures as a workaround for Webkit\n\t// and mouse events that are not in sync with the current internal button state\n\telse if (!result && (((!mxClient.IS_FF || evtName != mxEvent.MOUSE_MOVE) &&\n\t\tthis.isMouseDown && this.isMouseTrigger != mouseEvent) ||\n\t\t(evtName == mxEvent.MOUSE_DOWN && this.isMouseDown) ||\n\t\t(evtName == mxEvent.MOUSE_UP && !this.isMouseDown)))\n\t{\n\t\tresult = true;\n\t}\n\t\n\tif (!result && evtName == mxEvent.MOUSE_DOWN)\n\t{\n\t\tthis.lastMouseX = me.getX();\n\t\tthis.lastMouseY = me.getY();\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isSyntheticEventIgnored\n * \n * Hook for ignoring synthetic mouse events after touchend in Firefox.\n */\nmxGraph.prototype.isSyntheticEventIgnored = function(evtName, me, sender)\n{\n\tvar result = false;\n\tvar mouseEvent = mxEvent.isMouseEvent(me.getEvent());\n\t\n\t// LATER: This does not cover all possible cases that can go wrong in FF\n\tif (this.ignoreMouseEvents && mouseEvent && evtName != mxEvent.MOUSE_MOVE)\n\t{\n\t\tthis.ignoreMouseEvents = evtName != mxEvent.MOUSE_UP;\n\t\tresult = true;\n\t}\n\telse if (mxClient.IS_FF && !mouseEvent && evtName == mxEvent.MOUSE_UP)\n\t{\n\t\tthis.ignoreMouseEvents = true;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: isEventSourceIgnored\n * \n * Returns true if the event should be ignored in <fireMouseEvent>. This\n * implementation returns true for select, option and input (if not of type\n * checkbox, radio, button, submit or file) event sources if the event is not\n * a mouse event or a left mouse button press event.\n * \n * Parameters:\n * \n * evtName - The name of the event.\n * me - <mxMouseEvent> that should be ignored.\n */\nmxGraph.prototype.isEventSourceIgnored = function(evtName, me)\n{\n\tvar source = me.getSource();\n\tvar name = (source.nodeName != null) ? source.nodeName.toLowerCase() : '';\n\tvar candidate = !mxEvent.isMouseEvent(me.getEvent()) || mxEvent.isLeftMouseButton(me.getEvent());\n\t\n\treturn evtName == mxEvent.MOUSE_DOWN && candidate && (name == 'select' || name == 'option' ||\n\t\t(name == 'input' && source.type != 'checkbox' && source.type != 'radio' &&\n\t\tsource.type != 'button' && source.type != 'submit' && source.type != 'file'));\n};\n\n/**\n * Function: getEventState\n * \n * Returns the <mxCellState> to be used when firing the mouse event for the\n * given state. This implementation returns the given state.\n * \n * Parameters:\n * \n * <mxCellState> - State whose event source should be returned.\n */\nmxGraph.prototype.getEventState = function(state)\n{\n\treturn state;\n};\n\n/**\n * Function: fireMouseEvent\n * \n * Dispatches the given event in the graph event dispatch loop. Possible\n * event names are <mxEvent.MOUSE_DOWN>, <mxEvent.MOUSE_MOVE> and\n * <mxEvent.MOUSE_UP>. All listeners are invoked for all events regardless\n * of the consumed state of the event.\n * \n * Parameters:\n * \n * evtName - String that specifies the type of event to be dispatched.\n * me - <mxMouseEvent> to be fired.\n * sender - Optional sender argument. Default is this.\n */\nmxGraph.prototype.fireMouseEvent = function(evtName, me, sender)\n{\n\tif (this.isEventSourceIgnored(evtName, me))\n\t{\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.hide();\n\t\t}\n\t\t\n\t\treturn;\n\t}\n\t\n\tif (sender == null)\n\t{\n\t\tsender = this;\n\t}\n\n\t// Updates the graph coordinates in the event\n\tme = this.updateMouseEvent(me, evtName);\n\n\t// Detects and processes double taps for touch-based devices which do not have native double click events\n\t// or where detection of double click is not always possible (quirks, IE10+). Note that this can only handle\n\t// double clicks on cells because the sequence of events in IE prevents detection on the background, it fires\n\t// two mouse ups, one of which without a cell but no mousedown for the second click which means we cannot\n\t// detect which mouseup(s) are part of the first click, ie we do not know when the first click ends.\n\tif ((!this.nativeDblClickEnabled && !mxEvent.isPopupTrigger(me.getEvent())) || (this.doubleTapEnabled &&\n\t\tmxClient.IS_TOUCH && (mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent()))))\n\t{\n\t\tvar currentTime = new Date().getTime();\n\t\t\n\t\t// NOTE: Second mouseDown for double click missing in quirks mode\n\t\tif ((!mxClient.IS_QUIRKS && evtName == mxEvent.MOUSE_DOWN) || (mxClient.IS_QUIRKS && evtName == mxEvent.MOUSE_UP && !this.fireDoubleClick))\n\t\t{\n\t\t\tif (this.lastTouchEvent != null && this.lastTouchEvent != me.getEvent() &&\n\t\t\t\tcurrentTime - this.lastTouchTime < this.doubleTapTimeout &&\n\t\t\t\tMath.abs(this.lastTouchX - me.getX()) < this.doubleTapTolerance &&\n\t\t\t\tMath.abs(this.lastTouchY - me.getY()) < this.doubleTapTolerance &&\n\t\t\t\tthis.doubleClickCounter < 2)\n\t\t\t{\n\t\t\t\tthis.doubleClickCounter++;\n\t\t\t\tvar doubleClickFired = false;\n\t\t\t\t\n\t\t\t\tif (evtName == mxEvent.MOUSE_UP)\n\t\t\t\t{\n\t\t\t\t\tif (me.getCell() == this.lastTouchCell && this.lastTouchCell != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.lastTouchTime = 0;\n\t\t\t\t\t\tvar cell = this.lastTouchCell;\n\t\t\t\t\t\tthis.lastTouchCell = null;\n\n\t\t\t\t\t\t// Fires native dblclick event via event source\n\t\t\t\t\t\t// NOTE: This fires two double click events on edges in quirks mode. While\n\t\t\t\t\t\t// trying to fix this, we realized that nativeDoubleClick can be disabled for\n\t\t\t\t\t\t// quirks and IE10+ (or we didn't find the case mentioned above where it\n\t\t\t\t\t\t// would not work), ie. all double clicks seem to be working without this.\n\t\t\t\t\t\tif (mxClient.IS_QUIRKS)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tme.getSource().fireEvent('ondblclick');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.dblClick(me.getEvent(), cell);\n\t\t\t\t\t\tdoubleClickFired = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.fireDoubleClick = true;\n\t\t\t\t\tthis.lastTouchTime = 0;\n\t\t\t\t}\n\n\t\t\t\t// Do not ignore mouse up in quirks in this case\n\t\t\t\tif (!mxClient.IS_QUIRKS || doubleClickFired)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(me.getEvent());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.lastTouchEvent == null || this.lastTouchEvent != me.getEvent())\n\t\t\t{\n\t\t\t\tthis.lastTouchCell = me.getCell();\n\t\t\t\tthis.lastTouchX = me.getX();\n\t\t\t\tthis.lastTouchY = me.getY();\n\t\t\t\tthis.lastTouchTime = currentTime;\n\t\t\t\tthis.lastTouchEvent = me.getEvent();\n\t\t\t\tthis.doubleClickCounter = 0;\n\t\t\t}\n\t\t}\n\t\telse if ((this.isMouseDown || evtName == mxEvent.MOUSE_UP) && this.fireDoubleClick)\n\t\t{\n\t\t\tthis.fireDoubleClick = false;\n\t\t\tvar cell = this.lastTouchCell;\n\t\t\tthis.lastTouchCell = null;\n\t\t\tthis.isMouseDown = false;\n\t\t\t\n\t\t\t// Workaround for Chrome/Safari not firing native double click events for double touch on background\n\t\t\tvar valid = (cell != null) || ((mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent())) &&\n\t\t\t\t(mxClient.IS_GC || mxClient.IS_SF));\n\t\t\t\n\t\t\tif (valid && Math.abs(this.lastTouchX - me.getX()) < this.doubleTapTolerance &&\n\t\t\t\tMath.abs(this.lastTouchY - me.getY()) < this.doubleTapTolerance)\n\t\t\t{\n\t\t\t\tthis.dblClick(me.getEvent(), cell);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxEvent.consume(me.getEvent());\n\t\t\t}\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (!this.isEventIgnored(evtName, me, sender))\n\t{\n\t\t// Updates the event state via getEventState\n\t\tme.state = this.getEventState(me.getState());\n\t\tthis.fireEvent(new mxEventObject(mxEvent.FIRE_MOUSE_EVENT, 'eventName', evtName, 'event', me));\n\t\t\n\t\tif ((mxClient.IS_OP || mxClient.IS_SF || mxClient.IS_GC || mxClient.IS_IE11 ||\n\t\t\t(mxClient.IS_IE && mxClient.IS_SVG) || me.getEvent().target != this.container))\n\t\t{\n\t\t\tif (evtName == mxEvent.MOUSE_MOVE && this.isMouseDown && this.autoScroll && !mxEvent.isMultiTouchEvent(me.getEvent))\n\t\t\t{\n\t\t\t\tthis.scrollPointToVisible(me.getGraphX(), me.getGraphY(), this.autoExtend);\n\t\t\t}\n\t\t\telse if (evtName == mxEvent.MOUSE_UP && this.ignoreScrollbars && this.translateToScrollPosition &&\n\t\t\t\t\t(this.container.scrollLeft != 0 || this.container.scrollTop != 0))\n\t\t\t{\n\t\t\t\tvar s = this.view.scale;\n\t\t\t\tvar tr = this.view.translate;\n\t\t\t\tthis.view.setTranslate(tr.x - this.container.scrollLeft / s, tr.y - this.container.scrollTop / s);\n\t\t\t\tthis.container.scrollLeft = 0;\n\t\t\t\tthis.container.scrollTop = 0;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.mouseListeners != null)\n\t\t\t{\n\t\t\t\tvar args = [sender, me];\n\t\n\t\t\t\t// Does not change returnValue in Opera\n\t\t\t\tif (!me.getEvent().preventDefault)\n\t\t\t\t{\n\t\t\t\t\tme.getEvent().returnValue = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < this.mouseListeners.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar l = this.mouseListeners[i];\n\t\t\t\t\t\n\t\t\t\t\tif (evtName == mxEvent.MOUSE_DOWN)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseDown.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t\telse if (evtName == mxEvent.MOUSE_MOVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseMove.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t\telse if (evtName == mxEvent.MOUSE_UP)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseUp.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Invokes the click handler\n\t\t\tif (evtName == mxEvent.MOUSE_UP)\n\t\t\t{\n\t\t\t\tthis.click(me);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Detects tapAndHold events using a timer\n\t\tif ((mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent())) &&\n\t\t\tevtName == mxEvent.MOUSE_DOWN && this.tapAndHoldEnabled && !this.tapAndHoldInProgress)\n\t\t{\n\t\t\tthis.tapAndHoldInProgress = true;\n\t\t\tthis.initialTouchX = me.getGraphX();\n\t\t\tthis.initialTouchY = me.getGraphY();\n\t\t\t\n\t\t\tvar handler = function()\n\t\t\t{\n\t\t\t\tif (this.tapAndHoldValid)\n\t\t\t\t{\n\t\t\t\t\tthis.tapAndHold(me);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.tapAndHoldInProgress = false;\n\t\t\t\tthis.tapAndHoldValid = false;\n\t\t\t};\n\t\t\t\n\t\t\tif (this.tapAndHoldThread)\n\t\t\t{\n\t\t\t\twindow.clearTimeout(this.tapAndHoldThread);\n\t\t\t}\n\t\n\t\t\tthis.tapAndHoldThread = window.setTimeout(mxUtils.bind(this, handler), this.tapAndHoldDelay);\n\t\t\tthis.tapAndHoldValid = true;\n\t\t}\n\t\telse if (evtName == mxEvent.MOUSE_UP)\n\t\t{\n\t\t\tthis.tapAndHoldInProgress = false;\n\t\t\tthis.tapAndHoldValid = false;\n\t\t}\n\t\telse if (this.tapAndHoldValid)\n\t\t{\n\t\t\tthis.tapAndHoldValid =\n\t\t\t\tMath.abs(this.initialTouchX - me.getGraphX()) < this.tolerance &&\n\t\t\t\tMath.abs(this.initialTouchY - me.getGraphY()) < this.tolerance;\n\t\t}\n\n\t\t// Stops editing for all events other than from cellEditor\n\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isEditing() && !this.cellEditor.isEventSource(me.getEvent()))\n\t\t{\n\t\t\tthis.stopEditing(!this.isInvokesStopCellEditing());\n\t\t}\n\n\t\tthis.consumeMouseEvent(evtName, me, sender);\n\t}\n};\n\n/**\n * Function: consumeMouseEvent\n * \n * Consumes the given <mxMouseEvent> if it's a touchStart event.\n */\nmxGraph.prototype.consumeMouseEvent = function(evtName, me, sender)\n{\n\t// Workaround for duplicate click in Windows 8 with Chrome/FF/Opera with touch\n\tif (evtName == mxEvent.MOUSE_DOWN && mxEvent.isTouchEvent(me.getEvent()))\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: fireGestureEvent\n * \n * Dispatches a <mxEvent.GESTURE> event. The following example will resize the\n * cell under the mouse based on the scale property of the native touch event.\n * \n * (code)\n * graph.addListener(mxEvent.GESTURE, function(sender, eo)\n * {\n *   var evt = eo.getProperty('event');\n *   var state = graph.view.getState(eo.getProperty('cell'));\n *   \n *   if (graph.isEnabled() && graph.isCellResizable(state.cell) && Math.abs(1 - evt.scale) > 0.2)\n *   {\n *     var scale = graph.view.scale;\n *     var tr = graph.view.translate;\n *     \n *     var w = state.width * evt.scale;\n *     var h = state.height * evt.scale;\n *     var x = state.x - (w - state.width) / 2;\n *     var y = state.y - (h - state.height) / 2;\n *     \n *     var bounds = new mxRectangle(graph.snap(x / scale) - tr.x,\n *     \t\tgraph.snap(y / scale) - tr.y, graph.snap(w / scale), graph.snap(h / scale));\n *     graph.resizeCell(state.cell, bounds);\n *     eo.consume();\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * evt - Gestureend event that represents the gesture.\n * cell - Optional <mxCell> associated with the gesture.\n */\nmxGraph.prototype.fireGestureEvent = function(evt, cell)\n{\n\t// Resets double tap event handling when gestures take place\n\tthis.lastTouchTime = 0;\n\tthis.fireEvent(new mxEventObject(mxEvent.GESTURE, 'event', evt, 'cell', cell));\n};\n\n/**\n * Function: destroy\n * \n * Destroys the graph and all its resources.\n */\nmxGraph.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\t\t\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.selectionCellsHandler != null)\n\t\t{\n\t\t\tthis.selectionCellsHandler.destroy();\n\t\t}\n\n\t\tif (this.panningHandler != null)\n\t\t{\n\t\t\tthis.panningHandler.destroy();\n\t\t}\n\n\t\tif (this.popupMenuHandler != null)\n\t\t{\n\t\t\tthis.popupMenuHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.connectionHandler != null)\n\t\t{\n\t\t\tthis.connectionHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.graphHandler != null)\n\t\t{\n\t\t\tthis.graphHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.cellEditor != null)\n\t\t{\n\t\t\tthis.cellEditor.destroy();\n\t\t}\n\t\t\n\t\tif (this.view != null)\n\t\t{\n\t\t\tthis.view.destroy();\n\t\t}\n\n\t\tif (this.model != null && this.graphModelChangeListener != null)\n\t\t{\n\t\t\tthis.model.removeListener(this.graphModelChangeListener);\n\t\t\tthis.graphModelChangeListener = null;\n\t\t}\n\n\t\tthis.container = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellOverlay\n *\n * Extends <mxEventSource> to implement a graph overlay, represented by an icon\n * and a tooltip. Overlays can handle and fire <click> events and are added to\n * the graph using <mxGraph.addCellOverlay>, and removed using\n * <mxGraph.removeCellOverlay>, or <mxGraph.removeCellOverlays> to remove all overlays.\n * The <mxGraph.getCellOverlays> function returns the array of overlays for a given\n * cell in a graph. If multiple overlays exist for the same cell, then\n * <getBounds> should be overridden in at least one of the overlays.\n * \n * Overlays appear on top of all cells in a special layer. If this is not\n * desirable, then the image must be rendered as part of the shape or label of\n * the cell instead.\n *\n * Example:\n * \n * The following adds a new overlays for a given vertex and selects the cell\n * if the overlay is clicked.\n *\n * (code)\n * var overlay = new mxCellOverlay(img, html);\n * graph.addCellOverlay(vertex, overlay);\n * overlay.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var cell = evt.getProperty('cell');\n *   graph.setSelectionCell(cell);\n * });\n * (end)\n * \n * For cell overlays to be printed use <mxPrintPreview.printOverlays>.\n *\n * Event: mxEvent.CLICK\n *\n * Fires when the user clicks on the overlay. The <code>event</code> property\n * contains the corresponding mouse event and the <code>cell</code> property\n * contains the cell. For touch devices this is fired if the element receives\n * a touchend event.\n * \n * Constructor: mxCellOverlay\n *\n * Constructs a new overlay using the given image and tooltip.\n * \n * Parameters:\n * \n * image - <mxImage> that represents the icon to be displayed.\n * tooltip - Optional string that specifies the tooltip.\n * align - Optional horizontal alignment for the overlay. Possible\n * values are <ALIGN_LEFT>, <ALIGN_CENTER> and <ALIGN_RIGHT>\n * (default).\n * verticalAlign - Vertical alignment for the overlay. Possible\n * values are <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>\n * (default).\n */\nfunction mxCellOverlay(image, tooltip, align, verticalAlign, offset, cursor)\n{\n\tthis.image = image;\n\tthis.tooltip = tooltip;\n\tthis.align = (align != null) ? align : this.align;\n\tthis.verticalAlign = (verticalAlign != null) ? verticalAlign : this.verticalAlign;\n\tthis.offset = (offset != null) ? offset : new mxPoint();\n\tthis.cursor = (cursor != null) ? cursor : 'help';\n};\n\n/**\n * Extends mxEventSource.\n */\nmxCellOverlay.prototype = new mxEventSource();\nmxCellOverlay.prototype.constructor = mxCellOverlay;\n\n/**\n * Variable: image\n *\n * Holds the <mxImage> to be used as the icon.\n */\nmxCellOverlay.prototype.image = null;\n\n/**\n * Variable: tooltip\n * \n * Holds the optional string to be used as the tooltip.\n */\nmxCellOverlay.prototype.tooltip = null;\n\n/**\n * Variable: align\n * \n * Holds the horizontal alignment for the overlay. Default is\n * <mxConstants.ALIGN_RIGHT>. For edges, the overlay always appears in the\n * center of the edge.\n */\nmxCellOverlay.prototype.align = mxConstants.ALIGN_RIGHT;\n\n/**\n * Variable: verticalAlign\n * \n * Holds the vertical alignment for the overlay. Default is\n * <mxConstants.ALIGN_BOTTOM>. For edges, the overlay always appears in the\n * center of the edge.\n */\nmxCellOverlay.prototype.verticalAlign = mxConstants.ALIGN_BOTTOM;\n\n/**\n * Variable: offset\n * \n * Holds the offset as an <mxPoint>. The offset will be scaled according to the\n * current scale.\n */\nmxCellOverlay.prototype.offset = null;\n\n/**\n * Variable: cursor\n * \n * Holds the cursor for the overlay. Default is 'help'.\n */\nmxCellOverlay.prototype.cursor = null;\n\n/**\n * Variable: defaultOverlap\n * \n * Defines the overlapping for the overlay, that is, the proportional distance\n * from the origin to the point defined by the alignment. Default is 0.5.\n */\nmxCellOverlay.prototype.defaultOverlap = 0.5;\n\n/**\n * Function: getBounds\n * \n * Returns the bounds of the overlay for the given <mxCellState> as an\n * <mxRectangle>. This should be overridden when using multiple overlays\n * per cell so that the overlays do not overlap.\n * \n * The following example will place the overlay along an edge (where\n * x=[-1..1] from the start to the end of the edge and y is the\n * orthogonal offset in px).\n * \n * (code)\n * overlay.getBounds = function(state)\n * {\n *   var bounds = mxCellOverlay.prototype.getBounds.apply(this, arguments);\n *   \n *   if (state.view.graph.getModel().isEdge(state.cell))\n *   {\n *     var pt = state.view.getPoint(state, {x: 0, y: 0, relative: true});\n *     \n *     bounds.x = pt.x - bounds.width / 2;\n *     bounds.y = pt.y - bounds.height / 2;\n *   }\n *   \n *   return bounds;\n * };\n * (end)\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the current state of the\n * associated cell.\n */\nmxCellOverlay.prototype.getBounds = function(state)\n{\n\tvar isEdge = state.view.graph.getModel().isEdge(state.cell);\n\tvar s = state.view.scale;\n\tvar pt = null;\n\n\tvar w = this.image.width;\n\tvar h = this.image.height;\n\t\n\tif (isEdge)\n\t{\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tif (pts.length % 2 == 1)\n\t\t{\n\t\t\tpt = pts[Math.floor(pts.length / 2)];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar idx = pts.length / 2;\n\t\t\tvar p0 = pts[idx-1];\n\t\t\tvar p1 = pts[idx];\n\t\t\tpt = new mxPoint(p0.x + (p1.x - p0.x) / 2,\n\t\t\t\tp0.y + (p1.y - p0.y) / 2);\n\t\t}\n\t}\n\telse\n\t{\n\t\tpt = new mxPoint();\n\t\t\n\t\tif (this.align == mxConstants.ALIGN_LEFT)\n\t\t{\n\t\t\tpt.x = state.x;\n\t\t}\n\t\telse if (this.align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tpt.x = state.x + state.width / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpt.x = state.x + state.width;\n\t\t}\n\t\t\n\t\tif (this.verticalAlign == mxConstants.ALIGN_TOP)\n\t\t{\n\t\t\tpt.y = state.y;\n\t\t}\n\t\telse if (this.verticalAlign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tpt.y = state.y + state.height / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpt.y = state.y + state.height;\n\t\t}\n\t}\n\n\treturn new mxRectangle(Math.round(pt.x - (w * this.defaultOverlap - this.offset.x) * s),\n\t\tMath.round(pt.y - (h * this.defaultOverlap - this.offset.y) * s), w * s, h * s);\n};\n\n/**\n * Function: toString\n * \n * Returns the textual representation of the overlay to be used as the\n * tooltip. This implementation returns <tooltip>.\n */\nmxCellOverlay.prototype.toString = function()\n{\n\treturn this.tooltip;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxOutline\n *\n * Implements an outline (aka overview) for a graph. Set <updateOnPan> to true\n * to enable updates while the source graph is panning.\n * \n * Example:\n * \n * (code)\n * var outline = new mxOutline(graph, div);\n * (end)\n * \n * If an outline is used in an <mxWindow> in IE8 standards mode, the following\n * code makes sure that the shadow filter is not inherited and that any\n * transparent elements in the graph do not show the page background, but the\n * background of the graph container.\n * \n * (code)\n * if (document.documentMode == 8)\n * {\n *   container.style.filter = 'progid:DXImageTransform.Microsoft.alpha(opacity=100)';\n * }\n * (end)\n * \n * To move the graph to the top, left corner the following code can be used.\n * \n * (code)\n * var scale = graph.view.scale;\n * var bounds = graph.getGraphBounds();\n * graph.view.setTranslate(-bounds.x / scale, -bounds.y / scale);\n * (end)\n * \n * To toggle the suspended mode, the following can be used.\n * \n * (code)\n * outline.suspended = !outln.suspended;\n * if (!outline.suspended)\n * {\n *   outline.update(true);\n * }\n * (end)\n * \n * Constructor: mxOutline\n *\n * Constructs a new outline for the specified graph inside the given\n * container.\n * \n * Parameters:\n * \n * source - <mxGraph> to create the outline for.\n * container - DOM node that will contain the outline.\n */\nfunction mxOutline(source, container)\n{\n\tthis.source = source;\n\n\tif (container != null)\n\t{\n\t\tthis.init(container);\n\t}\n};\n\n/**\n * Function: source\n * \n * Reference to the source <mxGraph>.\n */\nmxOutline.prototype.source = null;\n\n/**\n * Function: outline\n * \n * Reference to the <mxGraph> that renders the outline.\n */\nmxOutline.prototype.outline = null;\n\n/**\n * Function: graphRenderHint\n * \n * Renderhint to be used for the outline graph. Default is faster.\n */\nmxOutline.prototype.graphRenderHint = mxConstants.RENDERING_HINT_FASTER;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxOutline.prototype.enabled = true;\n\n/**\n * Variable: showViewport\n * \n * Specifies a viewport rectangle should be shown. Default is true.\n */\nmxOutline.prototype.showViewport = true;\n\n/**\n * Variable: border\n * \n * Border to be added at the bottom and right. Default is 10.\n */\nmxOutline.prototype.border = 10;\n\n/**\n * Variable: enabled\n * \n * Specifies the size of the sizer handler. Default is 8.\n */\nmxOutline.prototype.sizerSize = 8;\n\n/**\n * Variable: labelsVisible\n * \n * Specifies if labels should be visible in the outline. Default is false.\n */\nmxOutline.prototype.labelsVisible = false;\n\n/**\n * Variable: updateOnPan\n * \n * Specifies if <update> should be called for <mxEvent.PAN> in the source\n * graph. Default is false.\n */\nmxOutline.prototype.updateOnPan = false;\n\n/**\n * Variable: sizerImage\n * \n * Optional <mxImage> to be used for the sizer. Default is null.\n */\nmxOutline.prototype.sizerImage = null;\n\n/**\n * Variable: minScale\n * \n * Minimum scale to be used. Default is 0.0001.\n */\nmxOutline.prototype.minScale = 0.0001;\n\n/**\n * Variable: suspended\n * \n * Optional boolean flag to suspend updates. Default is false. This flag will\n * also suspend repaints of the outline. To toggle this switch, use the\n * following code.\n * \n * (code)\n * nav.suspended = !nav.suspended;\n * \n * if (!nav.suspended)\n * {\n *   nav.update(true);\n * }\n * (end)\n */\nmxOutline.prototype.suspended = false;\n\n/**\n * Variable: forceVmlHandles\n * \n * Specifies if VML should be used to render the handles in this control. This\n * is true for IE8 standards mode and false for all other browsers and modes.\n * This is a workaround for rendering issues of HTML elements over elements\n * with filters in IE 8 standards mode.\n */\nmxOutline.prototype.forceVmlHandles = document.documentMode == 8;\n\n/**\n * Function: createGraph\n * \n * Creates the <mxGraph> used in the outline.\n */\nmxOutline.prototype.createGraph = function(container)\n{\n\tvar graph = new mxGraph(container, this.source.getModel(), this.graphRenderHint, this.source.getStylesheet());\n\tgraph.foldingEnabled = false;\n\tgraph.autoScroll = false;\n\t\n\treturn graph;\n};\n\n/**\n * Function: init\n * \n * Initializes the outline inside the given container.\n */\nmxOutline.prototype.init = function(container)\n{\n\tthis.outline = this.createGraph(container);\n\t\n\t// Do not repaint when suspended\n\tvar outlineGraphModelChanged = this.outline.graphModelChanged;\n\tthis.outline.graphModelChanged = mxUtils.bind(this, function(changes)\n\t{\n\t\tif (!this.suspended && this.outline != null)\n\t\t{\n\t\t\toutlineGraphModelChanged.apply(this.outline, arguments);\n\t\t}\n\t});\n\n\t// Enables faster painting in SVG\n\tif (mxClient.IS_SVG)\n\t{\n\t\tvar node = this.outline.getView().getCanvas().parentNode;\n\t\tnode.setAttribute('shape-rendering', 'optimizeSpeed');\n\t\tnode.setAttribute('image-rendering', 'optimizeSpeed');\n\t}\n\t\n\t// Hides cursors and labels\n\tthis.outline.labelsVisible = this.labelsVisible;\n\tthis.outline.setEnabled(false);\n\t\n\tthis.updateHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (!this.suspended && !this.active)\n\t\t{\n\t\t\tthis.update();\n\t\t}\n\t});\n\t\n\t// Updates the scale of the outline after a change of the main graph\n\tthis.source.getModel().addListener(mxEvent.CHANGE, this.updateHandler);\n\tthis.outline.addMouseListener(this);\n\t\n\t// Adds listeners to keep the outline in sync with the source graph\n\tvar view = this.source.getView();\n\tview.addListener(mxEvent.SCALE, this.updateHandler);\n\tview.addListener(mxEvent.TRANSLATE, this.updateHandler);\n\tview.addListener(mxEvent.SCALE_AND_TRANSLATE, this.updateHandler);\n\tview.addListener(mxEvent.DOWN, this.updateHandler);\n\tview.addListener(mxEvent.UP, this.updateHandler);\n\n\t// Updates blue rectangle on scroll\n\tmxEvent.addListener(this.source.container, 'scroll', this.updateHandler);\n\t\n\tthis.panHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.updateOnPan)\n\t\t{\n\t\t\tthis.updateHandler.apply(this, arguments);\n\t\t}\n\t});\n\tthis.source.addListener(mxEvent.PAN, this.panHandler);\n\t\n\t// Refreshes the graph in the outline after a refresh of the main graph\n\tthis.refreshHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.outline.setStylesheet(this.source.getStylesheet());\n\t\tthis.outline.refresh();\n\t});\n\tthis.source.addListener(mxEvent.REFRESH, this.refreshHandler);\n\n\t// Creates the blue rectangle for the viewport\n\tthis.bounds = new mxRectangle(0, 0, 0, 0);\n\tthis.selectionBorder = new mxRectangleShape(this.bounds, null,\n\t\tmxConstants.OUTLINE_COLOR, mxConstants.OUTLINE_STROKEWIDTH);\n\tthis.selectionBorder.dialect = this.outline.dialect;\n\n\tif (this.forceVmlHandles)\n\t{\n\t\tthis.selectionBorder.isHtmlAllowed = function()\n\t\t{\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\tthis.selectionBorder.init(this.outline.getView().getOverlayPane());\n\n\t// Handles event by catching the initial pointer start and then listening to the\n\t// complete gesture on the event target. This is needed because all the events\n\t// are routed via the initial element even if that element is removed from the\n\t// DOM, which happens when we repaint the selection border and zoom handles.\n\tvar handler = mxUtils.bind(this, function(evt)\n\t{\n\t\tvar t = mxEvent.getSource(evt);\n\t\t\n\t\tvar redirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t});\n\t\t\n\t\tvar redirect2 = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tmxEvent.removeGestureListeners(t, null, redirect, redirect2);\n\t\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(t, null, redirect, redirect2);\n\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t});\n\t\n\tmxEvent.addGestureListeners(this.selectionBorder.node, handler);\n\n\t// Creates a small blue rectangle for sizing (sizer handle)\n\tthis.sizer = this.createSizer();\n\t\n\tif (this.forceVmlHandles)\n\t{\n\t\tthis.sizer.isHtmlAllowed = function()\n\t\t{\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\tthis.sizer.init(this.outline.getView().getOverlayPane());\n\t\n\tif (this.enabled)\n\t{\n\t\tthis.sizer.node.style.cursor = 'nwse-resize';\n\t}\n\t\n\tmxEvent.addGestureListeners(this.sizer.node, handler);\n\n\tthis.selectionBorder.node.style.display = (this.showViewport) ? '' : 'none';\n\tthis.sizer.node.style.display = this.selectionBorder.node.style.display;\n\tthis.selectionBorder.node.style.cursor = 'move';\n\n\tthis.update(false);\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxOutline.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new enabled state.\n */\nmxOutline.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: setZoomEnabled\n * \n * Enables or disables the zoom handling by showing or hiding the respective\n * handle.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new enabled state.\n */\nmxOutline.prototype.setZoomEnabled = function(value)\n{\n\tthis.sizer.node.style.visibility = (value) ? 'visible' : 'hidden';\n};\n\n/**\n * Function: refresh\n * \n * Invokes <update> and revalidate the outline. This method is deprecated.\n */\nmxOutline.prototype.refresh = function()\n{\n\tthis.update(true);\n};\n\n/**\n * Function: createSizer\n * \n * Creates the shape used as the sizer.\n */\nmxOutline.prototype.createSizer = function()\n{\n\tif (this.sizerImage != null)\n\t{\n\t\tvar sizer = new mxImageShape(new mxRectangle(0, 0, this.sizerImage.width, this.sizerImage.height), this.sizerImage.src);\n\t\tsizer.dialect = this.outline.dialect;\n\t\t\n\t\treturn sizer;\n\t}\n\telse\n\t{\n\t\tvar sizer = new mxRectangleShape(new mxRectangle(0, 0, this.sizerSize, this.sizerSize),\n\t\t\tmxConstants.OUTLINE_HANDLE_FILLCOLOR, mxConstants.OUTLINE_HANDLE_STROKECOLOR);\n\t\tsizer.dialect = this.outline.dialect;\n\t\n\t\treturn sizer;\n\t}\n};\n\n/**\n * Function: getSourceContainerSize\n * \n * Returns the size of the source container.\n */\nmxOutline.prototype.getSourceContainerSize = function()\n{\n\treturn new mxRectangle(0, 0, this.source.container.scrollWidth, this.source.container.scrollHeight);\n};\n\n/**\n * Function: getOutlineOffset\n * \n * Returns the offset for drawing the outline graph.\n */\nmxOutline.prototype.getOutlineOffset = function(scale)\n{\n\treturn null;\n};\n\n/**\n * Function: getOutlineOffset\n * \n * Returns the offset for drawing the outline graph.\n */\nmxOutline.prototype.getSourceGraphBounds = function()\n{\n\treturn this.source.getGraphBounds();\n};\n\n/**\n * Function: update\n * \n * Updates the outline.\n */\nmxOutline.prototype.update = function(revalidate)\n{\n\tif (this.source != null && this.source.container != null &&\n\t\tthis.outline != null && this.outline.container != null)\n\t{\n\t\tvar sourceScale = this.source.view.scale;\n\t\tvar scaledGraphBounds = this.getSourceGraphBounds();\n\t\tvar unscaledGraphBounds = new mxRectangle(scaledGraphBounds.x / sourceScale + this.source.panDx,\n\t\t\t\tscaledGraphBounds.y / sourceScale + this.source.panDy, scaledGraphBounds.width / sourceScale,\n\t\t\t\tscaledGraphBounds.height / sourceScale);\n\n\t\tvar unscaledFinderBounds = new mxRectangle(0, 0,\n\t\t\tthis.source.container.clientWidth / sourceScale,\n\t\t\tthis.source.container.clientHeight / sourceScale);\n\t\t\n\t\tvar union = unscaledGraphBounds.clone();\n\t\tunion.add(unscaledFinderBounds);\n\t\n\t\t// Zooms to the scrollable area if that is bigger than the graph\n\t\tvar size = this.getSourceContainerSize();\n\t\tvar completeWidth = Math.max(size.width / sourceScale, union.width);\n\t\tvar completeHeight = Math.max(size.height / sourceScale, union.height);\n\t\n\t\tvar availableWidth = Math.max(0, this.outline.container.clientWidth - this.border);\n\t\tvar availableHeight = Math.max(0, this.outline.container.clientHeight - this.border);\n\t\t\n\t\tvar outlineScale = Math.min(availableWidth / completeWidth, availableHeight / completeHeight);\n\t\tvar scale = (isNaN(outlineScale)) ? this.minScale : Math.max(this.minScale, outlineScale);\n\n\t\tif (scale > 0)\n\t\t{\n\t\t\tif (this.outline.getView().scale != scale)\n\t\t\t{\n\t\t\t\tthis.outline.getView().scale = scale;\n\t\t\t\trevalidate = true;\n\t\t\t}\n\t\t\n\t\t\tvar navView = this.outline.getView();\n\t\t\t\n\t\t\tif (navView.currentRoot != this.source.getView().currentRoot)\n\t\t\t{\n\t\t\t\tnavView.setCurrentRoot(this.source.getView().currentRoot);\n\t\t\t}\n\n\t\t\tvar t = this.source.view.translate;\n\t\t\tvar tx = t.x + this.source.panDx;\n\t\t\tvar ty = t.y + this.source.panDy;\n\t\t\t\n\t\t\tvar off = this.getOutlineOffset(scale);\n\t\t\t\n\t\t\tif (off != null)\n\t\t\t{\n\t\t\t\ttx += off.x;\n\t\t\t\tty += off.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (unscaledGraphBounds.x < 0)\n\t\t\t{\n\t\t\t\ttx = tx - unscaledGraphBounds.x;\n\t\t\t}\n\t\t\tif (unscaledGraphBounds.y < 0)\n\t\t\t{\n\t\t\t\tty = ty - unscaledGraphBounds.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (navView.translate.x != tx || navView.translate.y != ty)\n\t\t\t{\n\t\t\t\tnavView.translate.x = tx;\n\t\t\t\tnavView.translate.y = ty;\n\t\t\t\trevalidate = true;\n\t\t\t}\n\t\t\n\t\t\t// Prepares local variables for computations\n\t\t\tvar t2 = navView.translate;\n\t\t\tscale = this.source.getView().scale;\n\t\t\tvar scale2 = scale / navView.scale;\n\t\t\tvar scale3 = 1.0 / navView.scale;\n\t\t\tvar container = this.source.container;\n\t\t\t\n\t\t\t// Updates the bounds of the viewrect in the navigation\n\t\t\tthis.bounds = new mxRectangle(\n\t\t\t\t(t2.x - t.x - this.source.panDx) / scale3,\n\t\t\t\t(t2.y - t.y - this.source.panDy) / scale3,\n\t\t\t\t(container.clientWidth / scale2),\n\t\t\t\t(container.clientHeight / scale2));\n\t\t\t\n\t\t\t// Adds the scrollbar offset to the finder\n\t\t\tthis.bounds.x += this.source.container.scrollLeft * navView.scale / scale;\n\t\t\tthis.bounds.y += this.source.container.scrollTop * navView.scale / scale;\n\t\t\t\n\t\t\tvar b = this.selectionBorder.bounds;\n\t\t\t\n\t\t\tif (b.x != this.bounds.x || b.y != this.bounds.y || b.width != this.bounds.width || b.height != this.bounds.height)\n\t\t\t{\n\t\t\t\tthis.selectionBorder.bounds = this.bounds;\n\t\t\t\tthis.selectionBorder.redraw();\n\t\t\t}\n\t\t\n\t\t\t// Updates the bounds of the zoom handle at the bottom right\n\t\t\tvar b = this.sizer.bounds;\n\t\t\tvar b2 = new mxRectangle(this.bounds.x + this.bounds.width - b.width / 2,\n\t\t\t\t\tthis.bounds.y + this.bounds.height - b.height / 2, b.width, b.height);\n\n\t\t\tif (b.x != b2.x || b.y != b2.y || b.width != b2.width || b.height != b2.height)\n\t\t\t{\n\t\t\t\tthis.sizer.bounds = b2;\n\t\t\t\t\n\t\t\t\t// Avoids update of visibility in redraw for VML\n\t\t\t\tif (this.sizer.node.style.visibility != 'hidden')\n\t\t\t\t{\n\t\t\t\t\tthis.sizer.redraw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (revalidate)\n\t\t\t{\n\t\t\t\tthis.outline.view.revalidate();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by starting a translation or zoom.\n */\nmxOutline.prototype.mouseDown = function(sender, me)\n{\n\tif (this.enabled && this.showViewport)\n\t{\n\t\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.source.tolerance : 0;\n\t\tvar hit = (this.source.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\t\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\t\tthis.zoom = me.isSource(this.sizer) || (hit != null && mxUtils.intersects(shape.bounds, hit));\n\t\tthis.startX = me.getX();\n\t\tthis.startY = me.getY();\n\t\tthis.active = true;\n\n\t\tif (this.source.useScrollbarsForPanning && mxUtils.hasScrollbars(this.source.container))\n\t\t{\n\t\t\tthis.dx0 = this.source.container.scrollLeft;\n\t\t\tthis.dy0 = this.source.container.scrollTop;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dx0 = 0;\n\t\t\tthis.dy0 = 0;\n\t\t}\n\t}\n\n\tme.consume();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by previewing the viewrect in <graph> and updating the\n * rectangle that represents the viewrect in the outline.\n */\nmxOutline.prototype.mouseMove = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tthis.selectionBorder.node.style.display = (this.showViewport) ? '' : 'none';\n\t\tthis.sizer.node.style.display = this.selectionBorder.node.style.display; \n\n\t\tvar delta = this.getTranslateForEvent(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\tvar bounds = null;\n\t\t\n\t\tif (!this.zoom)\n\t\t{\n\t\t\t// Previews the panning on the source graph\n\t\t\tvar scale = this.outline.getView().scale;\n\t\t\tbounds = new mxRectangle(this.bounds.x + dx,\n\t\t\t\tthis.bounds.y + dy, this.bounds.width, this.bounds.height);\n\t\t\tthis.selectionBorder.bounds = bounds;\n\t\t\tthis.selectionBorder.redraw();\n\t\t\tdx /= scale;\n\t\t\tdx *= this.source.getView().scale;\n\t\t\tdy /= scale;\n\t\t\tdy *= this.source.getView().scale;\n\t\t\tthis.source.panGraph(-dx - this.dx0, -dy - this.dy0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Does *not* preview zooming on the source graph\n\t\t\tvar container = this.source.container;\n\t\t\tvar viewRatio = container.clientWidth / container.clientHeight;\n\t\t\tdy = dx / viewRatio;\n\t\t\tbounds = new mxRectangle(this.bounds.x,\n\t\t\t\tthis.bounds.y,\n\t\t\t\tMath.max(1, this.bounds.width + dx),\n\t\t\t\tMath.max(1, this.bounds.height + dy));\n\t\t\tthis.selectionBorder.bounds = bounds;\n\t\t\tthis.selectionBorder.redraw();\n\t\t}\n\t\t\n\t\t// Updates the zoom handle\n\t\tvar b = this.sizer.bounds;\n\t\tthis.sizer.bounds = new mxRectangle(\n\t\t\tbounds.x + bounds.width - b.width / 2,\n\t\t\tbounds.y + bounds.height - b.height / 2,\n\t\t\tb.width, b.height);\n\t\t\n\t\t// Avoids update of visibility in redraw for VML\n\t\tif (this.sizer.node.style.visibility != 'hidden')\n\t\t{\n\t\t\tthis.sizer.redraw();\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: getTranslateForEvent\n * \n * Gets the translate for the given mouse event. Here is an example to limit\n * the outline to stay within positive coordinates:\n * \n * (code)\n * outline.getTranslateForEvent = function(me)\n * {\n *   var pt = new mxPoint(me.getX() - this.startX, me.getY() - this.startY);\n *   \n *   if (!this.zoom)\n *   {\n *     var tr = this.source.view.translate;\n *     pt.x = Math.max(tr.x * this.outline.view.scale, pt.x);\n *     pt.y = Math.max(tr.y * this.outline.view.scale, pt.y);\n *   }\n *   \n *   return pt;\n * };\n * (end)\n */\nmxOutline.prototype.getTranslateForEvent = function(me)\n{\n\treturn new mxPoint(me.getX() - this.startX, me.getY() - this.startY);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the translation or zoom to <graph>.\n */\nmxOutline.prototype.mouseUp = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tvar delta = this.getTranslateForEvent(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\t\n\t\tif (Math.abs(dx) > 0 || Math.abs(dy) > 0)\n\t\t{\n\t\t\tif (!this.zoom)\n\t\t\t{\n\t\t\t\t// Applies the new translation if the source\n\t\t\t\t// has no scrollbars\n\t\t\t\tif (!this.source.useScrollbarsForPanning ||\n\t\t\t\t\t!mxUtils.hasScrollbars(this.source.container))\n\t\t\t\t{\n\t\t\t\t\tthis.source.panGraph(0, 0);\n\t\t\t\t\tdx /= this.outline.getView().scale;\n\t\t\t\t\tdy /= this.outline.getView().scale;\n\t\t\t\t\tvar t = this.source.getView().translate;\n\t\t\t\t\tthis.source.getView().setTranslate(t.x - dx, t.y - dy);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Applies the new zoom\n\t\t\t\tvar w = this.selectionBorder.bounds.width;\n\t\t\t\tvar scale = this.source.getView().scale;\n\t\t\t\tthis.source.zoomTo(Math.max(this.minScale, scale - (dx * scale) / w), false);\n\t\t\t}\n\n\t\t\tthis.update();\n\t\t\tme.consume();\n\t\t}\n\t\t\t\n\t\t// Resets the state of the handler\n\t\tthis.index = null;\n\t\tthis.active = false;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroy this outline and removes all listeners from <source>.\n */\nmxOutline.prototype.destroy = function()\n{\n\tif (this.source != null)\n\t{\n\t\tthis.source.removeListener(this.panHandler);\n\t\tthis.source.removeListener(this.refreshHandler);\n\t\tthis.source.getModel().removeListener(this.updateHandler);\n\t\tthis.source.getView().removeListener(this.updateHandler);\n\t\tmxEvent.removeListener(this.source.container, 'scroll', this.updateHandler);\n\t\tthis.source = null;\n\t}\n\t\n\tif (this.outline != null)\n\t{\n\t\tthis.outline.removeMouseListener(this);\n\t\tthis.outline.destroy();\n\t\tthis.outline = null;\n\t}\n\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.destroy();\n\t\tthis.selectionBorder = null;\n\t}\n\t\n\tif (this.sizer != null)\n\t{\n\t\tthis.sizer.destroy();\n\t\tthis.sizer = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMultiplicity\n * \n * Defines invalid connections along with the error messages that they produce.\n * To add or remove rules on a graph, you must add/remove instances of this\n * class to <mxGraph.multiplicities>.\n * \n * Example:\n * \n * (code)\n * graph.multiplicities.push(new mxMultiplicity(\n *   true, 'rectangle', null, null, 0, 2, ['circle'],\n *   'Only 2 targets allowed',\n *   'Only circle targets allowed'));\n * (end)\n * \n * Defines a rule where each rectangle must be connected to no more than 2\n * circles and no other types of targets are allowed.\n * \n * Constructor: mxMultiplicity\n * \n * Instantiate class mxMultiplicity in order to describe allowed\n * connections in a graph. Not all constraints can be enforced while\n * editing, some must be checked at validation time. The <countError> and\n * <typeError> are treated as resource keys in <mxResources>.\n * \n * Parameters:\n * \n * source - Boolean indicating if this rule applies to the source or target\n * terminal.\n * type - Type of the source or target terminal that this rule applies to.\n * See <type> for more information.\n * attr - Optional attribute name to match the source or target terminal.\n * value - Optional attribute value to match the source or target terminal.\n * min - Minimum number of edges for this rule. Default is 1.\n * max - Maximum number of edges for this rule. n means infinite. Default\n * is n.\n * validNeighbors - Array of types of the opposite terminal for which this\n * rule applies.\n * countError - Error to be displayed for invalid number of edges.\n * typeError - Error to be displayed for invalid opposite terminals.\n * validNeighborsAllowed - Optional boolean indicating if the array of\n * opposite types should be valid or invalid.\n */\nfunction mxMultiplicity(source, type, attr, value, min, max,\n\tvalidNeighbors, countError, typeError, validNeighborsAllowed)\n{\n\tthis.source = source;\n\tthis.type = type;\n\tthis.attr = attr;\n\tthis.value = value;\n\tthis.min = (min != null) ? min : 0;\n\tthis.max = (max != null) ? max : 'n';\n\tthis.validNeighbors = validNeighbors;\n\tthis.countError = mxResources.get(countError) || countError;\n\tthis.typeError = mxResources.get(typeError) || typeError;\n\tthis.validNeighborsAllowed = (validNeighborsAllowed != null) ?\n\t\tvalidNeighborsAllowed : true;\n};\n\n/**\n * Variable: type\n * \n * Defines the type of the source or target terminal. The type is a string\n * passed to <mxUtils.isNode> together with the source or target vertex\n * value as the first argument.\n */\nmxMultiplicity.prototype.type = null;\n\n/**\n * Variable: attr\n * \n * Optional string that specifies the attributename to be passed to\n * <mxUtils.isNode> to check if the rule applies to a cell.\n */\nmxMultiplicity.prototype.attr = null;\n\n/**\n * Variable: value\n * \n * Optional string that specifies the value of the attribute to be passed\n * to <mxUtils.isNode> to check if the rule applies to a cell.\n */\nmxMultiplicity.prototype.value = null;\n\n/**\n * Variable: source\n * \n * Boolean that specifies if the rule is applied to the source or target\n * terminal of an edge.\n */\nmxMultiplicity.prototype.source = null;\n\n/**\n * Variable: min\n * \n * Defines the minimum number of connections for which this rule applies.\n * Default is 0.\n */\nmxMultiplicity.prototype.min = null;\n\n/**\n * Variable: max\n * \n * Defines the maximum number of connections for which this rule applies.\n * A value of 'n' means unlimited times. Default is 'n'. \n */\nmxMultiplicity.prototype.max = null;\n\n/**\n * Variable: validNeighbors\n * \n * Holds an array of strings that specify the type of neighbor for which\n * this rule applies. The strings are used in <mxCell.is> on the opposite\n * terminal to check if the rule applies to the connection.\n */\nmxMultiplicity.prototype.validNeighbors = null;\n\n/**\n * Variable: validNeighborsAllowed\n * \n * Boolean indicating if the list of validNeighbors are those that are allowed\n * for this rule or those that are not allowed for this rule.\n */\nmxMultiplicity.prototype.validNeighborsAllowed = true;\n\n/**\n * Variable: countError\n * \n * Holds the localized error message to be displayed if the number of\n * connections for which the rule applies is smaller than <min> or greater\n * than <max>.\n */\nmxMultiplicity.prototype.countError = null;\n\n/**\n * Variable: typeError\n * \n * Holds the localized error message to be displayed if the type of the\n * neighbor for a connection does not match the rule.\n */\nmxMultiplicity.prototype.typeError = null;\n\n/**\n * Function: check\n * \n * Checks the multiplicity for the given arguments and returns the error\n * for the given connection or null if the multiplicity does not apply.\n *  \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph> instance.\n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * sourceOut - Number of outgoing edges from the source terminal.\n * targetIn - Number of incoming edges for the target terminal.\n */\nmxMultiplicity.prototype.check = function(graph, edge, source, target, sourceOut, targetIn)\n{\n\tvar error = '';\n\n\tif ((this.source && this.checkTerminal(graph, source, edge)) ||\n\t\t(!this.source && this.checkTerminal(graph, target, edge)))\n\t{\n\t\tif (this.countError != null && \n\t\t\t((this.source && (this.max == 0 || (sourceOut >= this.max))) ||\n\t\t\t(!this.source && (this.max == 0 || (targetIn >= this.max)))))\n\t\t{\n\t\t\terror += this.countError + '\\n';\n\t\t}\n\n\t\tif (this.validNeighbors != null && this.typeError != null && this.validNeighbors.length > 0)\n\t\t{\n\t\t\tvar isValid = this.checkNeighbors(graph, edge, source, target);\n\n\t\t\tif (!isValid)\n\t\t\t{\n\t\t\t\terror += this.typeError + '\\n';\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn (error.length > 0) ? error : null;\n};\n\n/**\n * Function: checkNeighbors\n * \n * Checks if there are any valid neighbours in <validNeighbors>. This is only\n * called if <validNeighbors> is a non-empty array.\n */\nmxMultiplicity.prototype.checkNeighbors = function(graph, edge, source, target)\n{\n\tvar sourceValue = graph.model.getValue(source);\n\tvar targetValue = graph.model.getValue(target);\n\tvar isValid = !this.validNeighborsAllowed;\n\tvar valid = this.validNeighbors;\n\t\n\tfor (var j = 0; j < valid.length; j++)\n\t{\n\t\tif (this.source &&\n\t\t\tthis.checkType(graph, targetValue, valid[j]))\n\t\t{\n\t\t\tisValid = this.validNeighborsAllowed;\n\t\t\tbreak;\n\t\t}\n\t\telse if (!this.source && \n\t\t\tthis.checkType(graph, sourceValue, valid[j]))\n\t\t{\n\t\t\tisValid = this.validNeighborsAllowed;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn isValid;\n};\n\n/**\n * Function: checkTerminal\n * \n * Checks the given terminal cell and returns true if this rule applies. The\n * given cell is the source or target of the given edge, depending on\n * <source>. This implementation uses <checkType> on the terminal's value.\n */\nmxMultiplicity.prototype.checkTerminal = function(graph, terminal, edge)\n{\n\tvar value = graph.model.getValue(terminal);\n\t\n\treturn this.checkType(graph, value, this.type, this.attr, this.value);\n};\n\n/**\n * Function: checkType\n * \n * Checks the type of the given value.\n */\nmxMultiplicity.prototype.checkType = function(graph, value, type, attr, attrValue)\n{\n\tif (value != null)\n\t{\n\t\tif (!isNaN(value.nodeType)) // Checks if value is a DOM node\n\t\t{\n\t\t\treturn mxUtils.isNode(value, type, attr, attrValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn value == type;\n\t\t}\n\t}\n\t\n\treturn false;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLayoutManager\n * \n * Implements a layout manager that runs a given layout after any changes to the graph:\n * \n * Example:\n * \n * (code)\n * var layoutMgr = new mxLayoutManager(graph);\n * layoutMgr.getLayout = function(cell)\n * {\n *   return layout;\n * };\n * (end)\n * \n * Event: mxEvent.LAYOUT_CELLS\n * \n * Fires between begin- and endUpdate after all cells have been layouted in\n * <layoutCells>. The <code>cells</code> property contains all cells that have\n * been passed to <layoutCells>.\n * \n * Constructor: mxLayoutManager\n *\n * Constructs a new automatic layout for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxLayoutManager(graph)\n{\n\t// Executes the layout before the changes are dispatched\n\tthis.undoHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.beforeUndo(evt.getProperty('edit'));\n\t\t}\n\t});\n\t\n\t// Notifies the layout of a move operation inside a parent\n\tthis.moveHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.cellsMoved(evt.getProperty('cells'), evt.getProperty('event'));\n\t\t}\n\t});\n\t\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxLayoutManager.prototype = new mxEventSource();\nmxLayoutManager.prototype.constructor = mxLayoutManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxLayoutManager.prototype.graph = null;\n\n/**\n * Variable: bubbling\n * \n * Specifies if the layout should bubble along\n * the cell hierarchy. Default is true.\n */\nmxLayoutManager.prototype.bubbling = true;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxLayoutManager.prototype.enabled = true;\n\n/**\n * Variable: updateHandler\n * \n * Holds the function that handles the endUpdate event.\n */\nmxLayoutManager.prototype.updateHandler = null;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxLayoutManager.prototype.moveHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxLayoutManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxLayoutManager.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isBubbling\n * \n * Returns true if a layout should bubble, that is, if the parent layout\n * should be executed whenever a cell layout (layout of the children of\n * a cell) has been executed. This implementation returns <bubbling>.\n */\nmxLayoutManager.prototype.isBubbling = function()\n{\n\treturn this.bubbling;\n};\n\n/**\n * Function: setBubbling\n * \n * Sets <bubbling>.\n */\nmxLayoutManager.prototype.setBubbling = function(value)\n{\n\tthis.bubbling = value;\n};\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this layout operates on.\n */\nmxLayoutManager.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the layouts operate on.\n */\nmxLayoutManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tvar model = this.graph.getModel();\t\t\n\t\tmodel.removeListener(this.undoHandler);\n\t\tthis.graph.removeListener(this.moveHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tvar model = this.graph.getModel();\t\n\t\tmodel.addListener(mxEvent.BEFORE_UNDO, this.undoHandler);\n\t\tthis.graph.addListener(mxEvent.MOVE_CELLS, this.moveHandler);\n\t}\n};\n\n/**\n * Function: getLayout\n * \n * Returns the layout to be executed for the given graph and parent.\n */\nmxLayoutManager.prototype.getLayout = function(parent)\n{\n\treturn null;\n};\n\n/**\n * Function: beforeUndo\n * \n * Called from the undoHandler.\n *\n * Parameters:\n * \n * cell - Array of <mxCells> that have been moved.\n * evt - Mouse event that represents the mousedown.\n */\nmxLayoutManager.prototype.beforeUndo = function(undoableEdit)\n{\n\tvar cells = this.getCellsForChanges(undoableEdit.changes);\n\tvar model = this.getGraph().getModel();\n\n\t// Adds all descendants\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\ttmp = tmp.concat(model.getDescendants(cells[i]));\n\t}\n\t\n\tcells = tmp;\n\t\n\t// Adds all parent ancestors\n\tif (this.isBubbling())\n\t{\n\t\ttmp = model.getParents(cells);\n\t\t\n\t\twhile (tmp.length > 0)\n\t\t{\n\t\t\tcells = cells.concat(tmp);\n\t\t\ttmp = model.getParents(tmp);\n\t\t}\n\t}\n\t\n\tthis.executeLayoutForCells(cells);\n};\n\n/**\n * Function: executeLayout\n * \n * Executes the given layout on the given parent.\n */\nmxLayoutManager.prototype.executeLayoutForCells = function(cells)\n{\n\t// Adds reverse to this array to avoid duplicate execution of leafes\n\t// Works like capture/bubble for events, first executes all layout\n\t// from top to bottom and in reverse order and removes duplicates.\n\tvar sorted = mxUtils.sortCells(cells, true);\n\tsorted = sorted.concat(sorted.slice().reverse());\n\tthis.layoutCells(sorted);\n};\n\n/**\n * Function: cellsMoved\n * \n * Called from the moveHandler.\n *\n * Parameters:\n * \n * cell - Array of <mxCells> that have been moved.\n * evt - Mouse event that represents the mousedown.\n */\nmxLayoutManager.prototype.cellsMoved = function(cells, evt)\n{\n\tif (cells != null && evt != null)\n\t{\n\t\tvar point = mxUtils.convertPoint(this.getGraph().container,\n\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\t// Checks if a layout exists to take care of the moving if the\n\t\t// parent itself is not being moved\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar parent = model.getParent(cells[i]);\n\t\t\t\n\t\t\tif (mxUtils.indexOf(cells, parent) < 0)\n\t\t\t{\n\t\t\t\tvar layout = this.getLayout(parent);\n\t\n\t\t\t\tif (layout != null)\n\t\t\t\t{\n\t\t\t\t\tlayout.moveCell(cells[i], point.x, point.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getCellsForEdit\n * \n * Returns the cells to be layouted for the given sequence of changes.\n */\nmxLayoutManager.prototype.getCellsForChanges = function(changes)\n{\n\tvar dict = new mxDictionary();\n\tvar result = [];\n\t\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tvar change = changes[i];\n\t\t\n\t\tif (change instanceof mxRootChange)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar cells = this.getCellsForChange(change);\n\t\t\t\n\t\t\tfor (var j = 0; j < cells.length; j++)\n\t\t\t{\n\t\t\t\tif (cells[j] != null && !dict.get(cells[j]))\n\t\t\t\t{\n\t\t\t\t\tdict.put(cells[j], true);\n\t\t\t\t\tresult.push(cells[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getCellsForChange\n * \n * Executes all layouts which have been scheduled during the\n * changes.\n */\nmxLayoutManager.prototype.getCellsForChange = function(change)\n{\n\tvar model = this.getGraph().getModel();\n\t\n\tif (change instanceof mxChildChange)\n\t{\n\t\treturn [change.child, change.previous, model.getParent(change.child)];\n\t}\n\telse if (change instanceof mxTerminalChange || change instanceof mxGeometryChange)\n\t{\n\t\treturn [change.cell, model.getParent(change.cell)];\n\t}\n\telse if (change instanceof mxVisibleChange || change instanceof mxStyleChange)\n\t{\n\t\treturn [change.cell];\n\t}\n\t\n\treturn [];\n};\n\n/**\n * Function: layoutCells\n * \n * Executes all layouts which have been scheduled during the\n * changes.\n */\nmxLayoutManager.prototype.layoutCells = function(cells)\n{\n\tif (cells.length > 0)\n\t{\n\t\t// Invokes the layouts while removing duplicates\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tmodel.beginUpdate();\n\t\ttry \n\t\t{\n\t\t\tvar last = null;\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (cells[i] != model.getRoot() && cells[i] != last)\n\t\t\t\t{\n\t\t\t\t\tif (this.executeLayout(this.getLayout(cells[i]), cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tlast = cells[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.LAYOUT_CELLS, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: executeLayout\n * \n * Executes the given layout on the given parent.\n */\nmxLayoutManager.prototype.executeLayout = function(layout, parent)\n{\n\tvar result = false;\n\t\n\tif (layout != null && parent != null)\n\t{\n\t\tlayout.execute(parent);\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxLayoutManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneManager\n * \n * Manager for swimlanes and nested swimlanes that sets the size of newly added\n * swimlanes to that of their siblings, and propagates changes to the size of a\n * swimlane to its siblings, if <siblings> is true, and its ancestors, if\n * <bubbling> is true.\n * \n * Constructor: mxSwimlaneManager\n *\n * Constructs a new swimlane manager for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxSwimlaneManager(graph, horizontal, addEnabled, resizeEnabled)\n{\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.addEnabled = (addEnabled != null) ? addEnabled : true;\n\tthis.resizeEnabled = (resizeEnabled != null) ? resizeEnabled : true;\n\n\tthis.addHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled() && this.isAddEnabled())\n\t\t{\n\t\t\tthis.cellsAdded(evt.getProperty('cells'));\n\t\t}\n\t});\n\t\n\tthis.resizeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled() && this.isResizeEnabled())\n\t\t{\n\t\t\tthis.cellsResized(evt.getProperty('cells'));\n\t\t}\n\t});\n\t\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxSwimlaneManager.prototype = new mxEventSource();\nmxSwimlaneManager.prototype.constructor = mxSwimlaneManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxSwimlaneManager.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxSwimlaneManager.prototype.enabled = true;\n\n/**\n * Variable: horizontal\n * \n * Specifies the orientation of the swimlanes. Default is true.\n */\nmxSwimlaneManager.prototype.horizontal = true;\n\n/**\n * Variable: addEnabled\n * \n * Specifies if newly added cells should be resized to match the size of their\n * existing siblings. Default is true.\n */\nmxSwimlaneManager.prototype.addEnabled = true;\n\n/**\n * Variable: resizeEnabled\n * \n * Specifies if resizing of swimlanes should be handled. Default is true.\n */\nmxSwimlaneManager.prototype.resizeEnabled = true;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxSwimlaneManager.prototype.addHandler = null;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxSwimlaneManager.prototype.resizeHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxSwimlaneManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxSwimlaneManager.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxSwimlaneManager.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: setHorizontal\n * \n * Sets <horizontal>.\n */\nmxSwimlaneManager.prototype.setHorizontal = function(value)\n{\n\tthis.horizontal = value;\n};\n\n/**\n * Function: isAddEnabled\n * \n * Returns <addEnabled>.\n */\nmxSwimlaneManager.prototype.isAddEnabled = function()\n{\n\treturn this.addEnabled;\n};\n\n/**\n * Function: setAddEnabled\n * \n * Sets <addEnabled>.\n */\nmxSwimlaneManager.prototype.setAddEnabled = function(value)\n{\n\tthis.addEnabled = value;\n};\n\n/**\n * Function: isResizeEnabled\n * \n * Returns <resizeEnabled>.\n */\nmxSwimlaneManager.prototype.isResizeEnabled = function()\n{\n\treturn this.resizeEnabled;\n};\n\n/**\n * Function: setResizeEnabled\n * \n * Sets <resizeEnabled>.\n */\nmxSwimlaneManager.prototype.setResizeEnabled = function(value)\n{\n\tthis.resizeEnabled = value;\n};\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this manager operates on.\n */\nmxSwimlaneManager.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the manager operates on.\n */\nmxSwimlaneManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.removeListener(this.addHandler);\n\t\tthis.graph.removeListener(this.resizeHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.addListener(mxEvent.ADD_CELLS, this.addHandler);\n\t\tthis.graph.addListener(mxEvent.CELLS_RESIZED, this.resizeHandler);\n\t}\n};\n\n/**\n * Function: isSwimlaneIgnored\n * \n * Returns true if the given swimlane should be ignored.\n */\nmxSwimlaneManager.prototype.isSwimlaneIgnored = function(swimlane)\n{\n\treturn !this.getGraph().isSwimlane(swimlane);\n};\n\n/**\n * Function: isCellHorizontal\n * \n * Returns true if the given cell is horizontal. If the given cell is not a\n * swimlane, then the global orientation is returned.\n */\nmxSwimlaneManager.prototype.isCellHorizontal = function(cell)\n{\n\tif (this.graph.isSwimlane(cell))\n\t{\n\t\tvar style = this.graph.getCellStyle(cell);\n\t\t\n\t\treturn mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, 1) == 1;\n\t}\n\t\n\treturn !this.isHorizontal();\n};\n\n/**\n * Function: cellsAdded\n * \n * Called if any cells have been added.\n * \n * Parameters:\n * \n * cell - Array of <mxCells> that have been added.\n */\nmxSwimlaneManager.prototype.cellsAdded = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar model = this.getGraph().getModel();\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!this.isSwimlaneIgnored(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.swimlaneAdded(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: swimlaneAdded\n * \n * Updates the size of the given swimlane to match that of any existing\n * siblings swimlanes.\n * \n * Parameters:\n * \n * swimlane - <mxCell> that represents the new swimlane.\n */\nmxSwimlaneManager.prototype.swimlaneAdded = function(swimlane)\n{\n\tvar model = this.getGraph().getModel();\n\tvar parent = model.getParent(swimlane);\n\tvar childCount = model.getChildCount(parent);\n\tvar geo = null;\n\t\n\t// Finds the first valid sibling swimlane as reference\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (child != swimlane && !this.isSwimlaneIgnored(child))\n\t\t{\n\t\t\tgeo = model.getGeometry(child);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Applies the size of the refernece to the newly added swimlane\n\tif (geo != null)\n\t{\n\t\tvar parentHorizontal = (parent != null) ? this.isCellHorizontal(parent) : this.horizontal;\n\t\tthis.resizeSwimlane(swimlane, geo.width, geo.height, parentHorizontal);\n\t}\n};\n\n/**\n * Function: cellsResized\n * \n * Called if any cells have been resizes. Calls <swimlaneResized> for all\n * swimlanes where <isSwimlaneIgnored> returns false.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose size was changed.\n */\nmxSwimlaneManager.prototype.cellsResized = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Finds the top-level swimlanes and adds offsets\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!this.isSwimlaneIgnored(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tvar geo = model.getGeometry(cells[i]);\n\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar size = new mxRectangle(0, 0, geo.width, geo.height);\n\t\t\t\t\t\tvar top = cells[i];\n\t\t\t\t\t\tvar current = top;\n\t\t\t\t\t\t\n\t\t\t\t\t\twhile (current != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttop = current;\n\t\t\t\t\t\t\tcurrent = model.getParent(current);\n\t\t\t\t\t\t\tvar tmp = (this.graph.isSwimlane(current)) ?\n\t\t\t\t\t\t\t\t\tthis.graph.getStartSize(current) :\n\t\t\t\t\t\t\t\t\tnew mxRectangle();\n\t\t\t\t\t\t\tsize.width += tmp.width;\n\t\t\t\t\t\t\tsize.height += tmp.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar parentHorizontal = (current != null) ? this.isCellHorizontal(current) : this.horizontal;\n\t\t\t\t\t\tthis.resizeSwimlane(top, size.width, size.height, parentHorizontal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resizeSwimlane\n * \n * Called from <cellsResized> for all swimlanes that are not ignored to update\n * the size of the siblings and the size of the parent swimlanes, recursively,\n * if <bubbling> is true.\n * \n * Parameters:\n * \n * swimlane - <mxCell> whose size has changed.\n */\nmxSwimlaneManager.prototype.resizeSwimlane = function(swimlane, w, h, parentHorizontal)\n{\n\tvar model = this.getGraph().getModel();\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvar horizontal = this.isCellHorizontal(swimlane);\n\t\t\n\t\tif (!this.isSwimlaneIgnored(swimlane))\n\t\t{\n\t\t\tvar geo = model.getGeometry(swimlane);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tif ((parentHorizontal && geo.height != h) || (!parentHorizontal && geo.width != w))\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\tif (parentHorizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.height = h;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.width = w;\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.setGeometry(swimlane, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar tmp = (this.graph.isSwimlane(swimlane)) ?\n\t\t\t\tthis.graph.getStartSize(swimlane) :\n\t\t\t\tnew mxRectangle();\n\t\tw -= tmp.width;\n\t\th -= tmp.height;\n\t\t\n\t\tvar childCount = model.getChildCount(swimlane);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(swimlane, i);\n\t\t\tthis.resizeSwimlane(child, w, h, horizontal);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxSwimlaneManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxTemporaryCellStates\n * \n * Creates a temporary set of cell states.\n */\nfunction mxTemporaryCellStates(view, scale, cells, isCellVisibleFn, getLinkForCellState)\n{\n\tscale = (scale != null) ? scale : 1;\n\tthis.view = view;\n\t\n\t// Stores the previous state\n\tthis.oldValidateCellState = view.validateCellState;\n\tthis.oldBounds = view.getGraphBounds();\n\tthis.oldStates = view.getStates();\n\tthis.oldScale = view.getScale();\n\tthis.oldDoRedrawShape = view.graph.cellRenderer.doRedrawShape;\n\n\tvar self = this;\n\n\t// Overrides doRedrawShape and paint shape to add links on shapes\n\tif (getLinkForCellState != null)\n\t{\n\t\tview.graph.cellRenderer.doRedrawShape = function(state)\n\t\t{\n\t\t\tvar oldPaint = state.shape.paint;\n\t\t\t\n\t\t\tstate.shape.paint = function(c)\n\t\t\t{\n\t\t\t\tvar link = getLinkForCellState(state);\n\t\t\t\t\n\t\t\t\tif (link != null)\n\t\t\t\t{\n\t\t\t\t\tc.setLink(link);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toldPaint.apply(this, arguments);\n\t\t\t\t\n\t\t\t\tif (link != null)\n\t\t\t\t{\n\t\t\t\t\tc.setLink(null);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tself.oldDoRedrawShape.apply(view.graph.cellRenderer, arguments);\n\t\t\tstate.shape.paint = oldPaint;\n\t\t};\n\t}\n\n\t// Overrides validateCellState to ignore invisible cells\n\tview.validateCellState = function(cell, resurse)\n\t{\n\t\tif (cell == null || isCellVisibleFn == null || isCellVisibleFn(cell))\n\t\t{\n\t\t\treturn self.oldValidateCellState.apply(view, arguments);\n\t\t}\n\t\t\n\t\treturn null;\n\t};\n\t\n\t// Creates space for new states\n\tview.setStates(new mxDictionary());\n\tview.setScale(scale);\n\t\n\tif (cells != null)\n\t{\n\t\tview.resetValidationState();\n\t\tvar bbox = null;\n\n\t\t// Validates the vertices and edges without adding them to\n\t\t// the model so that the original cells are not modified\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar bounds = view.getBoundingBox(view.validateCellState(view.validateCell(cells[i])));\n\t\t\t\n\t\t\tif (bbox == null)\n\t\t\t{\n\t\t\t\tbbox = bounds;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbbox.add(bounds);\n\t\t\t}\n\t\t}\n\n\t\tview.setGraphBounds(bbox || new mxRectangle());\n\t}\n};\n\n/**\n * Variable: view\n *\n * Holds the width of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.view = null;\n\n/**\n * Variable: oldStates\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldStates = null;\n\n/**\n * Variable: oldBounds\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldBounds = null;\n\n/**\n * Variable: oldScale\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldScale = null;\n\n/**\n * Function: destroy\n * \n * Returns the top, left corner as a new <mxPoint>.\n */\nmxTemporaryCellStates.prototype.destroy = function()\n{\n\tthis.view.setScale(this.oldScale);\n\tthis.view.setStates(this.oldStates);\n\tthis.view.setGraphBounds(this.oldBounds);\n\tthis.view.validateCellState = this.oldValidateCellState;\n\tthis.view.graph.cellRenderer.doRedrawShape = this.oldDoRedrawShape;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxCellStatePreview\n * \n * Implements a live preview for moving cells.\n * \n * Constructor: mxCellStatePreview\n * \n * Constructs a move preview for the given graph.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxCellStatePreview(graph)\n{\n\tthis.deltas = new mxDictionary();\n\tthis.graph = graph;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellStatePreview.prototype.graph = null;\n\n/**\n * Variable: deltas\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellStatePreview.prototype.deltas = null;\n\n/**\n * Variable: count\n * \n * Contains the number of entries in the map.\n */\nmxCellStatePreview.prototype.count = 0;\n\n/**\n * Function: isEmpty\n * \n * Returns true if this contains no entries.\n */\nmxCellStatePreview.prototype.isEmpty = function()\n{\n\treturn this.count == 0;\n};\n\n/**\n * Function: moveState\n */\nmxCellStatePreview.prototype.moveState = function(state, dx, dy, add, includeEdges)\n{\n\tadd = (add != null) ? add : true;\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tvar delta = this.deltas.get(state.cell);\n\n\tif (delta == null)\n\t{\n\t\t// Note: Deltas stores the point and the state since the key is a string.\n\t\tdelta = {point: new mxPoint(dx, dy), state: state};\n\t\tthis.deltas.put(state.cell, delta);\n\t\tthis.count++;\n\t}\n\telse if (add)\n\t{\n\t\tdelta.point.x += dx;\n\t\tdelta.point.y += dy;\n\t}\n\telse\n\t{\n\t\tdelta.point.x = dx;\n\t\tdelta.point.y = dy;\n\t}\n\t\n\tif (includeEdges)\n\t{\n\t\tthis.addEdges(state);\n\t}\n\t\n\treturn delta.point;\n};\n\n/**\n * Function: show\n */\nmxCellStatePreview.prototype.show = function(visitor)\n{\n\tthis.deltas.visit(mxUtils.bind(this, function(key, delta)\n\t{\n\t\tthis.translateState(delta.state, delta.point.x, delta.point.y);\n\t}));\n\t\n\tthis.deltas.visit(mxUtils.bind(this, function(key, delta)\n\t{\n\t\tthis.revalidateState(delta.state, delta.point.x, delta.point.y, visitor);\n\t}));\n};\n\n/**\n * Function: translateState\n */\nmxCellStatePreview.prototype.translateState = function(state, dx, dy)\n{\n\tif (state != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tif (model.isVertex(state.cell))\n\t\t{\n\t\t\tstate.view.updateCellState(state);\n\t\t\tvar geo = model.getGeometry(state.cell);\n\t\t\t\n\t\t\t// Moves selection cells and non-relative vertices in\n\t\t\t// the first phase so that edge terminal points will\n\t\t\t// be updated in the second phase\n\t\t\tif ((dx != 0 || dy != 0) && geo != null && (!geo.relative || this.deltas.get(state.cell) != null))\n\t\t\t{\n\t\t\t\tstate.x += dx;\n\t\t\t\tstate.y += dy;\n\t\t\t}\n\t\t}\n\t    \n\t    var childCount = model.getChildCount(state.cell);\n\t    \n\t    for (var i = 0; i < childCount; i++)\n\t    {\n\t    \tthis.translateState(state.view.getState(model.getChildAt(state.cell, i)), dx, dy);\n\t    }\n\t}\n};\n\n/**\n * Function: revalidateState\n */\nmxCellStatePreview.prototype.revalidateState = function(state, dx, dy, visitor)\n{\n\tif (state != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\t// Updates the edge terminal points and restores the\n\t\t// (relative) positions of any (relative) children\n\t\tif (model.isEdge(state.cell))\n\t\t{\n\t\t\tstate.view.updateCellState(state);\n\t\t}\n\n\t\tvar geo = this.graph.getCellGeometry(state.cell);\n\t\tvar pState = state.view.getState(model.getParent(state.cell));\n\t\t\n\t\t// Moves selection vertices which are relative\n\t\tif ((dx != 0 || dy != 0) && geo != null && geo.relative &&\n\t\t\tmodel.isVertex(state.cell) && (pState == null ||\n\t\t\tmodel.isVertex(pState.cell) || this.deltas.get(state.cell) != null))\n\t\t{\n\t\t\tstate.x += dx;\n\t\t\tstate.y += dy;\n\t\t}\n\t\t\n\t\tthis.graph.cellRenderer.redraw(state);\n\t\n\t\t// Invokes the visitor on the given state\n\t\tif (visitor != null)\n\t\t{\n\t\t\tvisitor(state);\n\t\t}\n\t\t\t\t\t\t\n\t    var childCount = model.getChildCount(state.cell);\n\t    \n\t    for (var i = 0; i < childCount; i++)\n\t    {\n\t    \tthis.revalidateState(this.graph.view.getState(model.getChildAt(state.cell, i)), dx, dy, visitor);\n\t    }\n\t}\n};\n\n/**\n * Function: addEdges\n */\nmxCellStatePreview.prototype.addEdges = function(state)\n{\n\tvar model = this.graph.getModel();\n\tvar edgeCount = model.getEdgeCount(state.cell);\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar s = state.view.getState(model.getEdgeAt(state.cell, i));\n\n\t\tif (s != null)\n\t\t{\n\t\t\tthis.moveState(s, 0, 0);\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConnectionConstraint\n * \n * Defines an object that contains the constraints about how to connect one\n * side of an edge to its terminal.\n * \n * Constructor: mxConnectionConstraint\n * \n * Constructs a new connection constraint for the given point and boolean\n * arguments.\n * \n * Parameters:\n * \n * point - Optional <mxPoint> that specifies the fixed location of the point\n * in relative coordinates. Default is null.\n * perimeter - Optional boolean that specifies if the fixed point should be\n * projected onto the perimeter of the terminal. Default is true.\n */\nfunction mxConnectionConstraint(point, perimeter, name, dx, dy)\n{\n\tthis.point = point;\n\tthis.perimeter = (perimeter != null) ? perimeter : true;\n\tthis.name = name;\n\tthis.dx = dx? dx : 0;\n\tthis.dy = dy? dy : 0;\n};\n\n/**\n * Variable: point\n * \n * <mxPoint> that specifies the fixed location of the connection point.\n */\nmxConnectionConstraint.prototype.point = null;\n\n/**\n * Variable: perimeter\n * \n * Boolean that specifies if the point should be projected onto the perimeter\n * of the terminal.\n */\nmxConnectionConstraint.prototype.perimeter = null;\n\n/**\n * Variable: name\n * \n * Optional string that specifies the name of the constraint.\n */\nmxConnectionConstraint.prototype.name = null;\n\n/**\n * Variable: dx\n * \n * Optional float that specifies the horizontal offset of the constraint.\n */\nmxConnectionConstraint.prototype.dx = null;\n\n/**\n * Variable: dy\n * \n * Optional float that specifies the vertical offset of the constraint.\n */\nmxConnectionConstraint.prototype.dy = null;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHandler\n * \n * Graph event handler that handles selection. Individual cells are handled\n * separately using <mxVertexHandler> or one of the edge handlers. These\n * handlers are created using <mxGraph.createHandler> in\n * <mxGraphSelectionModel.cellAdded>.\n * \n * To avoid the container to scroll a moved cell into view, set\n * <scrollAfterMove> to false.\n * \n * Constructor: mxGraphHandler\n * \n * Constructs an event handler that creates handles for the\n * selection cells.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphHandler(graph)\n{\n\tthis.graph = graph;\n\tthis.graph.addMouseListener(this);\n\t\n\t// Repaints the handler after autoscroll\n\tthis.panHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.updatePreview();\n\t\tthis.updateHint();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.PAN, this.panHandler);\n\t\n\t// Handles escape keystrokes\n\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tthis.reset();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t\n\t// Updates the preview box for remote changes\n\tthis.refreshHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.first != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tthis.bounds = this.graph.getView().getBounds(this.cells);\n\t\t\t\tthis.pBounds = this.getPreviewBounds(this.cells);\n\t\t\t\tthis.updatePreview(true);\n\t\t\t\t\n\t\t\t\t// Resets handlers after they have been refreshed\n\t\t\t\twindow.setTimeout(mxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tif (this.livePreviewUsed)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setHandlesVisibleForCells(this.cells, false);\n\t\t\t\t\t\tthis.updatePreview();\n\t\t\t\t\t}\n\t\t\t\t}), 0);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// Resets the handler if cells have vanished\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}\n\t});\n\t\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphHandler.prototype.graph = null;\n\n/**\n * Variable: maxCells\n * \n * Defines the maximum number of cells to paint subhandles\n * for. Default is 50 for Firefox and 20 for IE. Set this\n * to 0 if you want an unlimited number of handles to be\n * displayed. This is only recommended if the number of\n * cells in the graph is limited to a small number, eg.\n * 500.\n */\nmxGraphHandler.prototype.maxCells = (mxClient.IS_IE) ? 20 : 50;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxGraphHandler.prototype.enabled = true;\n\n/**\n * Variable: highlightEnabled\n * \n * Specifies if drop targets under the mouse should be enabled. Default is\n * true.\n */\nmxGraphHandler.prototype.highlightEnabled = true;\n\n/**\n * Variable: cloneEnabled\n * \n * Specifies if cloning by control-drag is enabled. Default is true.\n */\nmxGraphHandler.prototype.cloneEnabled = true;\n\n/**\n * Variable: moveEnabled\n * \n * Specifies if moving is enabled. Default is true.\n */\nmxGraphHandler.prototype.moveEnabled = true;\n\n/**\n * Variable: guidesEnabled\n * \n * Specifies if other cells should be used for snapping the right, center or\n * left side of the current selection. Default is false.\n */\nmxGraphHandler.prototype.guidesEnabled = false;\n\n/**\n * Variable: guide\n * \n * Holds the <mxGuide> instance that is used for alignment.\n */\nmxGraphHandler.prototype.guide = null;\n\n/**\n * Variable: currentDx\n * \n * Stores the x-coordinate of the current mouse move.\n */\nmxGraphHandler.prototype.currentDx = null;\n\n/**\n * Variable: currentDy\n * \n * Stores the y-coordinate of the current mouse move.\n */\nmxGraphHandler.prototype.currentDy = null;\n\n/**\n * Variable: updateCursor\n * \n * Specifies if a move cursor should be shown if the mouse is over a movable\n * cell. Default is true.\n */\nmxGraphHandler.prototype.updateCursor = true;\n\n/**\n * Variable: selectEnabled\n * \n * Specifies if selecting is enabled. Default is true.\n */\nmxGraphHandler.prototype.selectEnabled = true;\n\n/**\n * Variable: removeCellsFromParent\n * \n * Specifies if cells may be moved out of their parents. Default is true.\n */\nmxGraphHandler.prototype.removeCellsFromParent = true;\n\n/**\n * Variable: removeEmptyParents\n * \n * If empty parents should be removed from the model after all child cells\n * have been moved out. Default is true.\n */\nmxGraphHandler.prototype.removeEmptyParents = false;\n\n/**\n * Variable: connectOnDrop\n * \n * Specifies if drop events are interpreted as new connections if no other\n * drop action is defined. Default is false.\n */\nmxGraphHandler.prototype.connectOnDrop = false;\n\n/**\n * Variable: scrollOnMove\n * \n * Specifies if the view should be scrolled so that a moved cell is\n * visible. Default is true.\n */\nmxGraphHandler.prototype.scrollOnMove = true;\n\n/**\n * Variable: minimumSize\n * \n * Specifies the minimum number of pixels for the width and height of a\n * selection border. Default is 6.\n */\nmxGraphHandler.prototype.minimumSize = 6;\n\n/**\n * Variable: previewColor\n * \n * Specifies the color of the preview shape. Default is black.\n */\nmxGraphHandler.prototype.previewColor = 'black';\n\n/**\n * Variable: htmlPreview\n * \n * Specifies if the graph container should be used for preview. If this is used\n * then drop target detection relies entirely on <mxGraph.getCellAt> because\n * the HTML preview does not \"let events through\". Default is false.\n */\nmxGraphHandler.prototype.htmlPreview = false;\n\n/**\n * Variable: shape\n * \n * Reference to the <mxShape> that represents the preview.\n */\nmxGraphHandler.prototype.shape = null;\n\n/**\n * Variable: scaleGrid\n * \n * Specifies if the grid should be scaled. Default is false.\n */\nmxGraphHandler.prototype.scaleGrid = false;\n\n/**\n * Variable: rotationEnabled\n * \n * Specifies if the bounding box should allow for rotation. Default is true.\n */\nmxGraphHandler.prototype.rotationEnabled = true;\n\n/**\n * Variable: maxLivePreview\n * \n * Maximum number of cells for which live preview should be used. Default is 0\n * which means no live preview.\n */\nmxGraphHandler.prototype.maxLivePreview = 0;\n\n/**\n * Variable: allowLivePreview\n * \n * If live preview is allowed on this system. Default is true for systems with\n * SVG support.\n */\nmxGraphHandler.prototype.allowLivePreview = mxClient.IS_SVG;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxGraphHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxGraphHandler.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isCloneEnabled\n * \n * Returns <cloneEnabled>.\n */\nmxGraphHandler.prototype.isCloneEnabled = function()\n{\n\treturn this.cloneEnabled;\n};\n\n/**\n * Function: setCloneEnabled\n * \n * Sets <cloneEnabled>.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new clone enabled state.\n */\nmxGraphHandler.prototype.setCloneEnabled = function(value)\n{\n\tthis.cloneEnabled = value;\n};\n\n/**\n * Function: isMoveEnabled\n * \n * Returns <moveEnabled>.\n */\nmxGraphHandler.prototype.isMoveEnabled = function()\n{\n\treturn this.moveEnabled;\n};\n\n/**\n * Function: setMoveEnabled\n * \n * Sets <moveEnabled>.\n */\nmxGraphHandler.prototype.setMoveEnabled = function(value)\n{\n\tthis.moveEnabled = value;\n};\n\n/**\n * Function: isSelectEnabled\n * \n * Returns <selectEnabled>.\n */\nmxGraphHandler.prototype.isSelectEnabled = function()\n{\n\treturn this.selectEnabled;\n};\n\n/**\n * Function: setSelectEnabled\n * \n * Sets <selectEnabled>.\n */\nmxGraphHandler.prototype.setSelectEnabled = function(value)\n{\n\tthis.selectEnabled = value;\n};\n\n/**\n * Function: isRemoveCellsFromParent\n * \n * Returns <removeCellsFromParent>.\n */\nmxGraphHandler.prototype.isRemoveCellsFromParent = function()\n{\n\treturn this.removeCellsFromParent;\n};\n\n/**\n * Function: setRemoveCellsFromParent\n * \n * Sets <removeCellsFromParent>.\n */\nmxGraphHandler.prototype.setRemoveCellsFromParent = function(value)\n{\n\tthis.removeCellsFromParent = value;\n};\n\n/**\n * Function: getInitialCellForEvent\n * \n * Hook to return initial cell for the given event.\n */\nmxGraphHandler.prototype.getInitialCellForEvent = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: isDelayedSelection\n * \n * Hook to return true for delayed selections.\n */\nmxGraphHandler.prototype.isDelayedSelection = function(cell, me)\n{\n\treturn this.graph.isCellSelected(cell);\n};\n\n/**\n * Function: consumeMouseEvent\n * \n * Consumes the given mouse event. NOTE: This may be used to enable click\n * events for links in labels on iOS as follows as consuming the initial\n * touchStart disables firing the subsequent click event on the link.\n * \n * <code>\n * mxGraphHandler.prototype.consumeMouseEvent = function(evtName, me)\n * {\n *   var source = mxEvent.getSource(me.getEvent());\n *   \n *   if (!mxEvent.isTouchEvent(me.getEvent()) || source.nodeName != 'A')\n *   {\n *     me.consume();\n *   }\n * }\n * </code>\n */\nmxGraphHandler.prototype.consumeMouseEvent = function(evtName, me)\n{\n\tme.consume();\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by selecing the given cell and creating a handle for\n * it. By consuming the event all subsequent events of the gesture are\n * redirected to this handler.\n */\nmxGraphHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isEnabled() && this.graph.isEnabled() &&\n\t\tme.getState() != null && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\tvar cell = this.getInitialCellForEvent(me);\n\t\tthis.delayedSelection = this.isDelayedSelection(cell, me);\n\t\tthis.cell = null;\n\t\t\n\t\tif (this.isSelectEnabled() && !this.delayedSelection)\n\t\t{\n\t\t\tthis.graph.selectCellForEvent(cell, me.getEvent());\n\t\t}\n\n\t\tif (this.isMoveEnabled())\n\t\t{\n\t\t\tvar model = this.graph.model;\n\t\t\tvar geo = model.getGeometry(cell);\n\n\t\t\tif (this.graph.isCellMovable(cell) && ((!model.isEdge(cell) || this.graph.getSelectionCount() > 1 ||\n\t\t\t\t(geo.points != null && geo.points.length > 0) || model.getTerminal(cell, true) == null ||\n\t\t\t\tmodel.getTerminal(cell, false) == null) || this.graph.allowDanglingEdges || \n\t\t\t\t(this.graph.isCloneEvent(me.getEvent()) && this.graph.isCellsCloneable())))\n\t\t\t{\n\t\t\t\tthis.start(cell, me.getX(), me.getY());\n\t\t\t}\n\t\t\telse if (this.delayedSelection)\n\t\t\t{\n\t\t\t\tthis.cell = cell;\n\t\t\t}\n\n\t\t\tthis.cellWasClicked = true;\n\t\t\tthis.consumeMouseEvent(mxEvent.MOUSE_DOWN, me);\n\t\t}\n\t}\n};\n\n/**\n * Function: getGuideStates\n * \n * Creates an array of cell states which should be used as guides.\n */\nmxGraphHandler.prototype.getGuideStates = function()\n{\n\tvar parent = this.graph.getDefaultParent();\n\tvar model = this.graph.getModel();\n\t\n\tvar filter = mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.graph.view.getState(cell) != null &&\n\t\t\tmodel.isVertex(cell) &&\n\t\t\tmodel.getGeometry(cell) != null &&\n\t\t\t!model.getGeometry(cell).relative;\n\t});\n\t\n\treturn this.graph.view.getCellStates(model.filterDescendants(filter, parent));\n};\n\n/**\n * Function: getCells\n * \n * Returns the cells to be modified by this handler. This implementation\n * returns all selection cells that are movable, or the given initial cell if\n * the given cell is not selected and movable. This handles the case of moving\n * unselectable or unselected cells.\n * \n * Parameters:\n * \n * initialCell - <mxCell> that triggered this handler.\n */\nmxGraphHandler.prototype.getCells = function(initialCell)\n{\n\tif (!this.delayedSelection && this.graph.isCellMovable(initialCell))\n\t{\n\t\treturn [initialCell];\n\t}\n\telse\n\t{\n\t\treturn this.graph.getMovableCells(this.graph.getSelectionCells());\n\t}\n};\n\n/**\n * Function: getPreviewBounds\n * \n * Returns the <mxRectangle> used as the preview bounds for\n * moving the given cells.\n */\nmxGraphHandler.prototype.getPreviewBounds = function(cells)\n{\n\tvar bounds = this.getBoundingBox(cells);\n\t\n\tif (bounds != null)\n\t{\n\t\t// Corrects width and height\n\t\tbounds.width = Math.max(0, bounds.width - 1);\n\t\tbounds.height = Math.max(0, bounds.height - 1);\n\t\t\n\t\tif (bounds.width < this.minimumSize)\n\t\t{\n\t\t\tvar dx = this.minimumSize - bounds.width;\n\t\t\tbounds.x -= dx / 2;\n\t\t\tbounds.width = this.minimumSize;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds.x = Math.round(bounds.x);\n\t\t\tbounds.width = Math.ceil(bounds.width);\n\t\t}\n\t\t\n\t\tvar tr = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\t\n\t\tif (bounds.height < this.minimumSize)\n\t\t{\n\t\t\tvar dy = this.minimumSize - bounds.height;\n\t\t\tbounds.y -= dy / 2;\n\t\t\tbounds.height = this.minimumSize;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds.y = Math.round(bounds.y);\n\t\t\tbounds.height = Math.ceil(bounds.height);\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the union of the <mxCellStates> for the given array of <mxCells>.\n * For vertices, this method uses the bounding box of the corresponding shape\n * if one exists. The bounding box of the corresponding text label and all\n * controls and overlays are ignored. See also: <mxGraphView.getBounds> and\n * <mxGraph.getBoundingBox>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounding box should be returned.\n */\nmxGraphHandler.prototype.getBoundingBox = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (model.isVertex(cells[i]) || model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar state = this.graph.view.getState(cells[i]);\n\t\t\t\n\t\t\t\tif (state != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = state;\n\t\t\t\t\t\n\t\t\t\t\tif (model.isVertex(cells[i]) && state.shape != null && state.shape.boundingBox != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox = state.shape.boundingBox;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createPreviewShape\n * \n * Creates the shape used to draw the preview for the given bounds.\n */\nmxGraphHandler.prototype.createPreviewShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.previewColor);\n\tshape.isDashed = true;\n\t\n\tif (this.htmlPreview)\n\t{\n\t\tshape.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tshape.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t// event-transparency on the background area of the rectangle since\n\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\tshape.init(this.graph.getView().getOverlayPane());\n\t\tshape.pointerEvents = false;\n\t\t\n\t\t// Workaround for artifacts on iOS\n\t\tif (mxClient.IS_IOS)\n\t\t{\n\t\t\tshape.getSvgScreenOffset = function()\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxGraphHandler.prototype.start = function(cell, x, y)\n{\n\tthis.cell = cell;\n\tthis.first = mxUtils.convertPoint(this.graph.container, x, y);\n\tthis.cells = this.getCells(this.cell);\n\tthis.bounds = this.graph.getView().getBounds(this.cells);\n\tthis.pBounds = this.getPreviewBounds(this.cells);\n\tthis.allCells = new mxDictionary();\n\tthis.cloning = false;\n\tthis.cellCount = 0;\n\t\n\tfor (var i = 0; i < this.cells.length; i++)\n\t{\n\t\tthis.cellCount += this.addStates(this.cells[i], this.allCells);\n\t}\n\t\n\tif (this.guidesEnabled)\n\t{\n\t\tthis.guide = new mxGuide(this.graph, this.getGuideStates());\n\t\tvar parent = this.graph.model.getParent(cell);\n\t\tvar ignore = this.graph.model.getChildCount(parent) < 2;\n\t\t\n\t\tthis.guide.isStateIgnored = mxUtils.bind(this, function(state)\n\t\t{\n\t\t\tvar p = this.graph.model.getParent(state.cell);\n\t\t\t\n\t\t\treturn state.cell != null && ((!this.cloning &&\n\t\t\t\tthis.isCellMoving(state.cell)) ||\n\t\t\t\t(state.cell != (this.target || parent) && !ignore &&\n\t\t\t\t(this.target == null || this.graph.model.getChildCount(\n\t\t\t\tthis.target) >= 2) && p != (this.target || parent)));  \n\t\t});\n\t}\n};\n\n/**\n * Function: addStates\n * \n * Adds the states for the given cell recursively to the given dictionary.\n */\nmxGraphHandler.prototype.addStates = function(cell, dict)\n{\n\tvar state = this.graph.view.getState(cell);\n\tvar count = 0;\n\t\n\tif (state != null && dict.get(cell) == null)\n\t{\n\t\tdict.put(cell, state);\n\t\tcount++;\n\t\t\n\t\tvar childCount = this.graph.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tcount += this.addStates(this.graph.model.getChildAt(cell, i), dict);\n\t\t}\n\t}\n\t\n\treturn count;\n};\n\n/**\n * Function: isCellMoving\n * \n * Returns true if the given cell is currently being moved.\n */\nmxGraphHandler.prototype.isCellMoving = function(cell)\n{\n\treturn this.allCells.get(cell) != null;\n};\n\n/**\n * Function: useGuidesForEvent\n * \n * Returns true if the guides should be used for the given <mxMouseEvent>.\n * This implementation returns <mxGuide.isEnabledForEvent>.\n */\nmxGraphHandler.prototype.useGuidesForEvent = function(me)\n{\n\treturn (this.guide != null) ? this.guide.isEnabledForEvent(me.getEvent()) : true;\n};\n\n\n/**\n * Function: snap\n * \n * Snaps the given vector to the grid and returns the given mxPoint instance.\n */\nmxGraphHandler.prototype.snap = function(vector)\n{\n\tvar scale = (this.scaleGrid) ? this.graph.view.scale : 1;\n\t\n\tvector.x = this.graph.snap(vector.x / scale) * scale;\n\tvector.y = this.graph.snap(vector.y / scale) * scale;\n\t\n\treturn vector;\n};\n\n/**\n * Function: getDelta\n * \n * Returns an <mxPoint> that represents the vector for moving the cells\n * for the given <mxMouseEvent>.\n */\nmxGraphHandler.prototype.getDelta = function(me)\n{\n\tvar point = mxUtils.convertPoint(this.graph.container, me.getX(), me.getY());\n\tvar s = this.graph.view.scale;\n\t\n\treturn new mxPoint(this.roundLength((point.x - this.first.x - this.graph.panDx) / s) * s,\n\t\tthis.roundLength((point.y - this.first.y - this.graph.panDy) / s) * s);\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxGraphHandler.prototype.updateHint = function(me) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxGraphHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled vector. This uses Math.round.\n */\nmxGraphHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length * 2) / 2;\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by highlighting possible drop targets and updating the\n * preview.\n */\nmxGraphHandler.prototype.mouseMove = function(sender, me)\n{\n\tvar graph = this.graph;\n\n\tif (!me.isConsumed() && graph.isMouseDown && this.cell != null &&\n\t\tthis.first != null && this.bounds != null)\n\t{\n\t\t// Stops moving if a multi touch event is received\n\t\tif (mxEvent.isMultiTouchEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar delta = this.getDelta(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\tvar tol = graph.tolerance;\n\n\t\tif (this.shape != null || this.livePreviewActive || Math.abs(dx) > tol || Math.abs(dy) > tol)\n\t\t{\n\t\t\t// Highlight is used for highlighting drop targets\n\t\t\tif (this.highlight == null)\n\t\t\t{\n\t\t\t\tthis.highlight = new mxCellHighlight(this.graph,\n\t\t\t\t\tmxConstants.DROP_TARGET_COLOR, 3);\n\t\t\t}\n\n\t\t\tvar clone = graph.isCloneEvent(me.getEvent()) && graph.isCellsCloneable() && this.isCloneEnabled();\n\t\t\tvar gridEnabled = graph.isGridEnabledEvent(me.getEvent());\n\t\t\tvar cell = me.getCell();\n\t\t\tvar hideGuide = true;\n\t\t\tvar target = null;\n\t\t\tthis.cloning = clone;\n\t\t\t\n\t\t\tif (graph.isDropEnabled() && this.highlightEnabled)\n\t\t\t{\n\t\t\t\t// Contains a call to getCellAt to find the cell under the mouse\n\t\t\t\ttarget = graph.getDropTarget(this.cells, me.getEvent(), cell, clone);\n\t\t\t}\n\n\t\t\tvar state = graph.getView().getState(target);\n\t\t\tvar highlight = false;\n\t\t\t\n\t\t\tif (state != null && (graph.model.getParent(this.cell) != target || clone))\n\t\t\t{\n\t\t\t    if (this.target != target)\n\t\t\t    {\n\t\t\t\t    this.target = target;\n\t\t\t\t    this.setHighlightColor(mxConstants.DROP_TARGET_COLOR);\n\t\t\t\t}\n\t\t\t    \n\t\t\t    highlight = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.target = null;\n\n\t\t\t\tif (this.connectOnDrop && cell != null && this.cells.length == 1 &&\n\t\t\t\t\tgraph.getModel().isVertex(cell) && graph.isCellConnectable(cell))\n\t\t\t\t{\n\t\t\t\t\tstate = graph.getView().getState(cell);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar error = graph.getEdgeValidationError(null, this.cell, cell);\n\t\t\t\t\t\tvar color = (error == null) ?\n\t\t\t\t\t\t\tmxConstants.VALID_COLOR :\n\t\t\t\t\t\t\tmxConstants.INVALID_CONNECT_TARGET_COLOR;\n\t\t\t\t\t\tthis.setHighlightColor(color);\n\t\t\t\t\t\thighlight = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (state != null && highlight)\n\t\t\t{\n\t\t\t\tthis.highlight.highlight(state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.highlight.hide();\n\t\t\t}\n\t\t\t\n\t\t\tif (this.livePreviewActive && clone)\n\t\t\t{\n\t\t\t\tthis.resetLivePreview();\n\t\t\t\tthis.livePreviewActive = false;\n\t\t\t}\n\t\t\telse if (this.maxLivePreview >= this.cellCount && !this.livePreviewActive && this.allowLivePreview)\n\t\t\t{\n\t\t\t\tthis.setHandlesVisibleForCells(this.cells, false);\n\t\t\t\tthis.livePreviewActive = true;\n\t\t\t\tthis.livePreviewUsed = true;\n\t\t\t}\n\t\t\telse if (!this.livePreviewUsed && this.shape == null)\n\t\t\t{\n\t\t\t\tthis.shape = this.createPreviewShape(this.bounds);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.guide != null && this.useGuidesForEvent(me))\n\t\t\t{\n\t\t\t\tdelta = this.guide.move(this.bounds, new mxPoint(dx, dy), gridEnabled, clone);\n\t\t\t\thideGuide = false;\n\t\t\t\tdx = delta.x;\n\t\t\t\tdy = delta.y;\n\t\t\t}\n\t\t\telse if (gridEnabled)\n\t\t\t{\n\t\t\t\tvar trx = graph.getView().translate;\n\t\t\t\tvar scale = graph.getView().scale;\t\t\t\t\n\t\t\t\t\n\t\t\t\tvar tx = this.bounds.x - (graph.snap(this.bounds.x / scale - trx.x) + trx.x) * scale;\n\t\t\t\tvar ty = this.bounds.y - (graph.snap(this.bounds.y / scale - trx.y) + trx.y) * scale;\n\t\t\t\tvar v = this.snap(new mxPoint(dx, dy));\n\t\t\t\t\n\t\t\t\tdx = v.x - tx;\n\t\t\t\tdy = v.y - ty;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.guide != null && hideGuide)\n\t\t\t{\n\t\t\t\tthis.guide.hide();\n\t\t\t}\n\n\t\t\t// Constrained movement if shift key is pressed\n\t\t\tif (graph.isConstrainedEvent(me.getEvent()))\n\t\t\t{\n\t\t\t\tif (Math.abs(dx) > Math.abs(dy))\n\t\t\t\t{\n\t\t\t\t\tdy = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdx = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.currentDx = dx;\n\t\t\tthis.currentDy = dy;\n\t\t\tthis.updatePreview();\n\t\t}\n\n\t\tthis.updateHint(me);\n\t\tthis.consumeMouseEvent(mxEvent.MOUSE_MOVE, me);\n\t\t\n\t\t// Cancels the bubbling of events to the container so\n\t\t// that the droptarget is not reset due to an mouseMove\n\t\t// fired on the container with no associated state.\n\t\tmxEvent.consume(me.getEvent());\n\t}\n\telse if ((this.isMoveEnabled() || this.isCloneEnabled()) && this.updateCursor && !me.isConsumed() &&\n\t\t(me.getState() != null || me.sourceState != null) && !graph.isMouseDown)\n\t{\n\t\tvar cursor = graph.getCursorForMouseEvent(me);\n\t\t\n\t\tif (cursor == null && graph.isEnabled() && graph.isCellMovable(me.getCell()))\n\t\t{\n\t\t\tif (graph.getModel().isEdge(me.getCell()))\n\t\t\t{\n\t\t\t\tcursor = mxConstants.CURSOR_MOVABLE_EDGE;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcursor = mxConstants.CURSOR_MOVABLE_VERTEX;\n\t\t\t}\n\t\t}\n\n\t\t// Sets the cursor on the original source state under the mouse\n\t\t// instead of the event source state which can be the parent\n\t\tif (cursor != null && me.sourceState != null)\n\t\t{\n\t\t\tme.sourceState.setCursor(cursor);\n\t\t}\n\t}\n};\n\n/**\n * Function: updatePreview\n * \n * Updates the bounds of the preview shape.\n */\nmxGraphHandler.prototype.updatePreview = function(remote)\n{\n\tif (this.livePreviewUsed && !remote)\n\t{\n\t\tif (this.cells != null)\n\t\t{\n\t\t\tthis.updateLivePreview(this.currentDx, this.currentDy);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.updatePreviewShape();\n\t}\n};\n\n/**\n * Function: updatePreviewShape\n * \n * Updates the bounds of the preview shape.\n */\nmxGraphHandler.prototype.updatePreviewShape = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.bounds = new mxRectangle(Math.round(this.pBounds.x + this.currentDx),\n\t\t\t\tMath.round(this.pBounds.y + this.currentDy), this.pBounds.width, this.pBounds.height);\n\t\tthis.shape.redraw();\n\t}\n};\n\n/**\n * Function: updateLivePreview\n * \n * Updates the bounds of the preview shape.\n */\nmxGraphHandler.prototype.updateLivePreview = function(dx, dy)\n{\n\tvar states = [];\n\t\n\tif (this.allCells != null)\n\t{\n\t\tthis.allCells.visit(mxUtils.bind(this, function(key, state)\n\t\t{\n\t\t\t// Saves current state\n\t\t\tvar tempState = state.clone();\n\t\t\tstates.push([state, tempState]);\n\n\t\t\t// Makes transparent for events to detect drop targets\n\t\t\tif (state.shape != null)\n\t\t\t{\n\t\t\t\tif (state.shape.originalPointerEvents == null)\n\t\t\t\t{\n\t\t\t\t\tstate.shape.originalPointerEvents = state.shape.pointerEvents;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstate.shape.pointerEvents = false;\n\n\t\t\t\tif (state.text != null && state.text.node != null)\n\t\t\t\t{\n\t\t\t\t\tvar node = state.text.node;\n\t\t\t\t\t\n\t\t\t\t\tif (node.firstChild != null && node.firstChild.firstChild != null &&\n\t\t\t\t\t\tnode.firstChild.firstChild.nodeName == 'foreignObject')\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.firstChild.firstChild.setAttribute('pointer-events', 'none');\n\t\t\t\t\t}\n\t\t\t\t\telse if (node.ownerSVGElement != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('pointer-events', 'none');\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.pointerEvents = 'none';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Temporarily changes position\n\t\t\tif (this.graph.model.isVertex(state.cell))\n\t\t\t{\n\t\t\t\tstate.x += dx;\n\t\t\t\tstate.y += dy;\n\n\t\t\t\t// Draws the live preview\n\t\t\t\tif (!this.cloning)\n\t\t\t\t{\n\t\t\t\t\tstate.view.graph.cellRenderer.redraw(state, true);\n\t\t\t\t\t\n\t\t\t\t\t// Forces redraw of connected edges after all states\n\t\t\t\t\t// have been updated but avoids update of state\n\t\t\t\t\tstate.view.invalidate(state.cell);\n\t\t\t\t\tstate.invalid = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Hides folding icon\n\t\t\t\tif (state.control != null && state.control.node != null)\n\t\t\t\t{\n\t\t\t\t\tstate.control.node.style.visibility = 'hidden';\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\t// Redraws connected edges\n\tvar s = this.graph.view.scale;\n\t\n\tfor (var i = 0; i < states.length; i++)\n\t{\n\t\tvar state = states[i][0];\n\t\t\n\t\tif (this.graph.model.isEdge(state.cell))\n\t\t{\n\t\t\tvar geometry = this.graph.getCellGeometry(state.cell);\n\t\t\tvar points = [];\n\t\t\t\n\t\t\tif (geometry != null && geometry.points != null)\n\t\t\t{\n\t\t\t\tfor (var j = 0; j < geometry.points.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (geometry.points[j] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoints.push(new mxPoint(\n\t\t\t\t\t\t\tgeometry.points[j].x + dx / s,\n\t\t\t\t\t\t\tgeometry.points[j].y + dy / s));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar source = state.visibleSourceState;\n\t\t\tvar target = state.visibleTargetState;\n\t\t\tvar pts = states[i][1].absolutePoints;\n\t\t\t\n\t\t\tif (source == null || !this.isCellMoving(source.cell))\n\t\t\t{\n\t\t\t\tvar pt0 = pts[0];\n\t\t\t\tstate.setAbsoluteTerminalPoint(new mxPoint(pt0.x + dx, pt0.y + dy), true);\n\t\t\t\tsource = null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.view.updateFixedTerminalPoint(state, source, true,\n\t\t\t\t\tthis.graph.getConnectionConstraint(state, source, true));\n\t\t\t}\n\t\t\t\n\t\t\tif (target == null || !this.isCellMoving(target.cell))\n\t\t\t{\n\t\t\t\tvar ptn = pts[pts.length - 1];\n\t\t\t\tstate.setAbsoluteTerminalPoint(new mxPoint(ptn.x + dx, ptn.y + dy), false);\n\t\t\t\ttarget = null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.view.updateFixedTerminalPoint(state, target, false,\n\t\t\t\t\tthis.graph.getConnectionConstraint(state, target, false));\n\t\t\t}\n\t\t\t\n\t\t\tstate.view.updatePoints(state, points, source, target);\n\t\t\tstate.view.updateFloatingTerminalPoints(state, source, target);\n\t\t\tstate.invalid = false;\n\t\t\t\t\t\n\t\t\t// Draws the live preview but avoids update of state\n\t\t\tif (!this.cloning)\n\t\t\t{\n\t\t\t\tstate.view.graph.cellRenderer.redraw(state, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.graph.view.validate();\n\tthis.redrawHandles(states);\n\tthis.resetPreviewStates(states);\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the preview shape for the given states array.\n */\nmxGraphHandler.prototype.redrawHandles = function(states)\n{\n\tfor (var i = 0; i < states.length; i++)\n\t{\n\t\tvar handler = this.graph.selectionCellsHandler.getHandler(states[i][0].cell);\n\t\t\n\t\tif (handler != null)\n\t\t{\n\t\t\thandler.redraw(true);\n\t\t}\n\t}\n};\n\n/**\n * Function: resetPreviewStates\n * \n * Resets the given preview states array.\n */\nmxGraphHandler.prototype.resetPreviewStates = function(states)\n{\n\tfor (var i = 0; i < states.length; i++)\n\t{\n\t\tstates[i][0].setState(states[i][1]);\n\t}\n};\n\n/**\n * Function: resetLivePreview\n * \n * Resets the livew preview.\n */\nmxGraphHandler.prototype.resetLivePreview = function()\n{\n\tif (this.allCells != null)\n\t{\n\t\tthis.allCells.visit(mxUtils.bind(this, function(key, state)\n\t\t{\n\t\t\t// Restores event handling\n\t\t\tif (state.shape != null && state.shape.originalPointerEvents != null)\n\t\t\t{\n\t\t\t\tstate.shape.pointerEvents = state.shape.originalPointerEvents;\n\t\t\t\tstate.shape.originalPointerEvents = null;\n\t\t\t\t\n\t\t\t\t// Forces a repaint event if not moved\n\t\t\t\tstate.shape.bounds = null;\n\n\t\t\t\tif (state.text != null && state.text.node != null)\n\t\t\t\t{\n\t\t\t\t\tvar node = state.text.node;\n\t\t\t\t\t\n\t\t\t\t\tif (node.firstChild != null && node.firstChild.firstChild != null &&\n\t\t\t\t\t\tnode.firstChild.firstChild.nodeName == 'foreignObject')\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.firstChild.firstChild.setAttribute('pointer-events', 'all');\n\t\t\t\t\t}\n\t\t\t\t\telse if (node.ownerSVGElement != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.removeAttribute('pointer-events');\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.pointerEvents = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Shows folding icon\n\t\t\tif (state.control != null && state.control.node != null)\n\t\t\t{\n\t\t\t\tstate.control.node.style.visibility = '';\n\t\t\t}\n\t\t\t\n\t\t\t// Forces repaint of state and connected edges\n\t\t\tstate.view.invalidate(state.cell);\n\t\t}));\n\n\t\t// Repaints all invalid states\n\t\tthis.graph.view.validate();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxGraphHandler.prototype.setHandlesVisibleForCells = function(cells, visible)\n{\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tvar cell = cells[i];\n\n\t\tvar handler = this.graph.selectionCellsHandler.getHandler(cell);\n\t\t\n\t\tif (handler != null)\n\t\t{\n\t\t\thandler.setHandlesVisible(visible);\n\t\t\t\n\t\t\tif (visible)\n\t\t\t{\n\t\t\t\thandler.redraw();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: setHighlightColor\n * \n * Sets the color of the rectangle used to highlight drop targets.\n * \n * Parameters:\n * \n * color - String that represents the new highlight color.\n */\nmxGraphHandler.prototype.setHighlightColor = function(color)\n{\n\tif (this.highlight != null)\n\t{\n\t\tthis.highlight.setHighlightColor(color);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the changes to the selection cells.\n */\nmxGraphHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (!me.isConsumed())\n\t{\n\t\tif (this.livePreviewUsed)\n\t\t{\n\t\t\tthis.resetLivePreview();\n\t\t}\n\t\t\n\t\tif (this.cell != null && this.first != null && (this.shape != null || this.livePreviewUsed) &&\n\t\t\tthis.currentDx != null && this.currentDy != null)\n\t\t{\n\t\t\tvar graph = this.graph;\n\t\t\tvar cell = me.getCell();\n\t\t\t\n\t\t\tif (this.connectOnDrop && this.target == null && cell != null && graph.getModel().isVertex(cell) &&\n\t\t\t\tgraph.isCellConnectable(cell) && graph.isEdgeValid(null, this.cell, cell))\n\t\t\t{\n\t\t\t\tgraph.connectionHandler.connect(this.cell, cell, me.getEvent());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar clone = graph.isCloneEvent(me.getEvent()) && graph.isCellsCloneable() && this.isCloneEnabled();\n\t\t\t\tvar scale = graph.getView().scale;\n\t\t\t\tvar dx = this.roundLength(this.currentDx / scale);\n\t\t\t\tvar dy = this.roundLength(this.currentDy / scale);\n\t\t\t\tvar target = this.target;\n\t\t\t\t\n\t\t\t\tif (graph.isSplitEnabled() && graph.isSplitTarget(target, this.cells, me.getEvent()))\n\t\t\t\t{\n\t\t\t\t\tgraph.splitEdge(target, this.cells, null, dx, dy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.moveCells(this.cells, dx, dy, clone, this.target, me.getEvent());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.isSelectEnabled() && this.delayedSelection && this.cell != null)\n\t\t{\n\t\t\tthis.selectDelayed(me);\n\t\t}\n\t}\n\n\t// Consumes the event if a cell was initially clicked\n\tif (this.cellWasClicked)\n\t{\n\t\tthis.consumeMouseEvent(mxEvent.MOUSE_UP, me);\n\t}\n\n\tthis.reset();\n};\n\n/**\n * Function: selectDelayed\n * \n * Implements the delayed selection for the given mouse event.\n */\nmxGraphHandler.prototype.selectDelayed = function(me)\n{\n\tif (!this.graph.isCellSelected(this.cell) || !this.graph.popupMenuHandler.isPopupTrigger(me))\n\t{\n\t\tthis.graph.selectCellForEvent(this.cell, me.getEvent());\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxGraphHandler.prototype.reset = function()\n{\n\tif (this.livePreviewUsed)\n\t{\n\t\tthis.resetLivePreview();\n\t\tthis.setHandlesVisibleForCells(this.cells, true);\n\t}\n\t\n\tthis.destroyShapes();\n\tthis.removeHint();\n\n\tthis.delayedSelection = false;\n\tthis.livePreviewActive = null;\n\tthis.livePreviewUsed = null;\n\tthis.cellWasClicked = false;\n\tthis.currentDx = null;\n\tthis.currentDy = null;\n\tthis.cellCount = null;\n\tthis.cloning = false;\n\tthis.allCells = null;\n\tthis.guides = null;\n\tthis.target = null;\n\tthis.first = null;\n\tthis.cells = null;\n\tthis.cell = null;\n};\n\n/**\n * Function: shouldRemoveCellsFromParent\n * \n * Returns true if the given cells should be removed from the parent for the specified\n * mousereleased event.\n */\nmxGraphHandler.prototype.shouldRemoveCellsFromParent = function(parent, cells, evt)\n{\n\tif (this.graph.getModel().isVertex(parent))\n\t{\n\t\tvar pState = this.graph.getView().getState(parent);\n\t\t\n\t\tif (pState != null)\n\t\t{\n\t\t\tvar pt = mxUtils.convertPoint(this.graph.container,\n\t\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(pState.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(pState.getCenterX(), pState.getCenterY());\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, cx);\n\t\t\t}\n\t\t\n\t\t\treturn !mxUtils.contains(pState, pt.x, pt.y);\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: moveCells\n * \n * Moves the given cells by the specified amount.\n */\nmxGraphHandler.prototype.moveCells = function(cells, dx, dy, clone, target, evt)\n{\n\tif (clone)\n\t{\n\t\tcells = this.graph.getCloneableCells(cells);\n\t}\n\t\n\t// Removes cells from parent\n\tvar parent = this.graph.getModel().getParent(this.cell);\n\t\n\tif (target == null && this.isRemoveCellsFromParent() &&\n\t\tthis.shouldRemoveCellsFromParent(parent, cells, evt))\n\t{\n\t\ttarget = this.graph.getDefaultParent();\n\t}\n\t\n\t// Cloning into locked cells is not allowed\n\tclone = clone && !this.graph.isCellLocked(target || this.graph.getDefaultParent());\n\n\tthis.graph.getModel().beginUpdate();\n\ttry\n\t{\n\t\tvar parents = [];\n\t\t\n\t\t// Removes parent if all child cells are removed\n\t\tif (!clone && target != null && this.removeEmptyParents)\n\t\t{\n\t\t\t// Collects all non-selected parents\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Recurse up the cell hierarchy\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar par = this.graph.model.getParent(cells[i]);\n\n\t\t\t\tif (par != null && !dict.get(par))\n\t\t\t\t{\n\t\t\t\t\tdict.put(par, true);\n\t\t\t\t\tparents.push(par);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Passes all selected cells in order to correctly clone or move into\n\t\t// the target cell. The method checks for each cell if its movable.\n\t\tcells = this.graph.moveCells(cells, dx, dy, clone, target, evt);\n\n\t\t// Removes parent if all child cells are removed\n\t\tvar temp = [];\n\t\t\n\t\tfor (var i = 0; i < parents.length; i++)\n\t\t{\n\t\t\tif (this.shouldRemoveParent(parents[i]))\n\t\t\t{\n\t\t\t\ttemp.push(parents[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.graph.removeCells(temp, false);\n\t}\n\tfinally\n\t{\n\t\tthis.graph.getModel().endUpdate();\n\t}\n\n\t// Selects the new cells if cells have been cloned\n\tif (clone)\n\t{\n\t\tthis.graph.setSelectionCells(cells);\n\t}\n\n\tif (this.isSelectEnabled() && this.scrollOnMove)\n\t{\n\t\tthis.graph.scrollCellToVisible(cells[0]);\n\t}\n};\n\n/**\n * Function: moveCells\n * \n * Moves the given cells by the specified amount.\n */\nmxGraphHandler.prototype.shouldRemoveParent = function(parent)\n{\n\tvar state = this.graph.view.getState(parent);\n\t\n\tif (state != null && (this.graph.model.isEdge(state.cell) || this.graph.model.isVertex(state.cell)) &&\n\t\tthis.graph.isCellDeletable(state.cell) && this.graph.model.getChildCount(state.cell) == 0)\n\t{\n\t\tvar stroke = mxUtils.getValue(state.style, mxConstants.STYLE_STROKECOLOR, mxConstants.NONE);\n\t\tvar fill = mxUtils.getValue(state.style, mxConstants.STYLE_FILLCOLOR, mxConstants.NONE);\n\t\t\n\t\treturn stroke == mxConstants.NONE && fill == mxConstants.NONE;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: destroyShapes\n * \n * Destroy the preview and highlight shapes.\n */\nmxGraphHandler.prototype.destroyShapes = function()\n{\n\t// Destroys the preview dashed rectangle\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.guide != null)\n\t{\n\t\tthis.guide.destroy();\n\t\tthis.guide = null;\n\t}\n\t\n\t// Destroys the drop target highlight\n\tif (this.highlight != null)\n\t{\n\t\tthis.highlight.destroy();\n\t\tthis.highlight = null;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxGraphHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.panHandler);\n\t\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.refreshHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.refreshHandler);\n\t\tthis.refreshHandler = null;\n\t}\n\t\n\tthis.destroyShapes();\n\tthis.removeHint();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPanningHandler\n * \n * Event handler that pans and creates popupmenus. To use the left\n * mousebutton for panning without interfering with cell moving and\n * resizing, use <isUseLeftButton> and <isIgnoreCell>. For grid size\n * steps while panning, use <useGrid>. This handler is built-into\n * <mxGraph.panningHandler> and enabled using <mxGraph.setPanning>.\n * \n * Constructor: mxPanningHandler\n * \n * Constructs an event handler that creates a <mxPopupMenu>\n * and pans the graph.\n *\n * Event: mxEvent.PAN_START\n *\n * Fires when the panning handler changes its <active> state to true. The\n * <code>event</code> property contains the corresponding <mxMouseEvent>.\n *\n * Event: mxEvent.PAN\n *\n * Fires while handle is processing events. The <code>event</code> property contains\n * the corresponding <mxMouseEvent>.\n *\n * Event: mxEvent.PAN_END\n *\n * Fires when the panning handler changes its <active> state to false. The\n * <code>event</code> property contains the corresponding <mxMouseEvent>.\n */\nfunction mxPanningHandler(graph)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.graph.addMouseListener(this);\n\n\t\t// Handles force panning event\n\t\tthis.forcePanningHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar evtName = evt.getProperty('eventName');\n\t\t\tvar me = evt.getProperty('event');\n\t\t\t\n\t\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isForcePanningEvent(me))\n\t\t\t{\n\t\t\t\tthis.start(me);\n\t\t\t\tthis.active = true;\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_START, 'event', me));\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.forcePanningHandler);\n\t\t\n\t\t// Handles pinch gestures\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tif (this.isPinchEnabled())\n\t\t\t{\n\t\t\t\tvar evt = eo.getProperty('event');\n\t\t\t\t\n\t\t\t\tif (!mxEvent.isConsumed(evt) && evt.type == 'gesturestart')\n\t\t\t\t{\n\t\t\t\t\tthis.initialScale = this.graph.view.scale;\n\t\t\t\t\n\t\t\t\t\t// Forces start of panning when pinch gesture starts\n\t\t\t\t\tif (!this.active && this.mouseDownEvent != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.start(this.mouseDownEvent);\n\t\t\t\t\t\tthis.mouseDownEvent = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (evt.type == 'gestureend' && this.initialScale != null)\n\t\t\t\t{\n\t\t\t\t\tthis.initialScale = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.initialScale != null)\n\t\t\t\t{\n\t\t\t\t\tvar value = Math.round(this.initialScale * evt.scale * 100) / 100;\n\t\t\t\t\t\n\t\t\t\t\tif (this.minScale != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue = Math.max(this.minScale, value);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.maxScale != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue = Math.min(this.maxScale, value);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (this.graph.view.scale != value)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.zoomTo(value);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\tthis.mouseUpListener = mxUtils.bind(this, function()\n\t\t{\n\t\t    \tif (this.active)\n\t\t    \t{\n\t\t    \t\tthis.reset();\n\t\t    \t}\n\t\t});\n\t\t\n\t\t// Stops scrolling on every mouseup anywhere in the document\n\t\tmxEvent.addListener(document, 'mouseup', this.mouseUpListener);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxPanningHandler.prototype = new mxEventSource();\nmxPanningHandler.prototype.constructor = mxPanningHandler;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxPanningHandler.prototype.graph = null;\n\n/**\n * Variable: useLeftButtonForPanning\n * \n * Specifies if panning should be active for the left mouse button.\n * Setting this to true may conflict with <mxRubberband>. Default is false.\n */\nmxPanningHandler.prototype.useLeftButtonForPanning = false;\n\n/**\n * Variable: usePopupTrigger\n * \n * Specifies if <mxEvent.isPopupTrigger> should also be used for panning.\n */\nmxPanningHandler.prototype.usePopupTrigger = true;\n\n/**\n * Variable: ignoreCell\n * \n * Specifies if panning should be active even if there is a cell under the\n * mousepointer. Default is false.\n */\nmxPanningHandler.prototype.ignoreCell = false;\n\n/**\n * Variable: previewEnabled\n * \n * Specifies if the panning should be previewed. Default is true.\n */\nmxPanningHandler.prototype.previewEnabled = true;\n\n/**\n * Variable: useGrid\n * \n * Specifies if the panning steps should be aligned to the grid size.\n * Default is false.\n */\nmxPanningHandler.prototype.useGrid = false;\n\n/**\n * Variable: panningEnabled\n * \n * Specifies if panning should be enabled. Default is true.\n */\nmxPanningHandler.prototype.panningEnabled = true;\n\n/**\n * Variable: pinchEnabled\n * \n * Specifies if pinch gestures should be handled as zoom. Default is true.\n */\nmxPanningHandler.prototype.pinchEnabled = true;\n\n/**\n * Variable: maxScale\n * \n * Specifies the maximum scale. Default is 8.\n */\nmxPanningHandler.prototype.maxScale = 8;\n\n/**\n * Variable: minScale\n * \n * Specifies the minimum scale. Default is 0.01.\n */\nmxPanningHandler.prototype.minScale = 0.01;\n\n/**\n * Variable: dx\n * \n * Holds the current horizontal offset.\n */\nmxPanningHandler.prototype.dx = null;\n\n/**\n * Variable: dy\n * \n * Holds the current vertical offset.\n */\nmxPanningHandler.prototype.dy = null;\n\n/**\n * Variable: startX\n * \n * Holds the x-coordinate of the start point.\n */\nmxPanningHandler.prototype.startX = 0;\n\n/**\n * Variable: startY\n * \n * Holds the y-coordinate of the start point.\n */\nmxPanningHandler.prototype.startY = 0;\n\n/**\n * Function: isActive\n * \n * Returns true if the handler is currently active.\n */\nmxPanningHandler.prototype.isActive = function()\n{\n\treturn this.active || this.initialScale != null;\n};\n\n/**\n * Function: isPanningEnabled\n * \n * Returns <panningEnabled>.\n */\nmxPanningHandler.prototype.isPanningEnabled = function()\n{\n\treturn this.panningEnabled;\n};\n\n/**\n * Function: setPanningEnabled\n * \n * Sets <panningEnabled>.\n */\nmxPanningHandler.prototype.setPanningEnabled = function(value)\n{\n\tthis.panningEnabled = value;\n};\n\n/**\n * Function: isPinchEnabled\n * \n * Returns <pinchEnabled>.\n */\nmxPanningHandler.prototype.isPinchEnabled = function()\n{\n\treturn this.pinchEnabled;\n};\n\n/**\n * Function: setPinchEnabled\n * \n * Sets <pinchEnabled>.\n */\nmxPanningHandler.prototype.setPinchEnabled = function(value)\n{\n\tthis.pinchEnabled = value;\n};\n\n/**\n * Function: isPanningTrigger\n * \n * Returns true if the given event is a panning trigger for the optional\n * given cell. This returns true if control-shift is pressed or if\n * <usePopupTrigger> is true and the event is a popup trigger.\n */\nmxPanningHandler.prototype.isPanningTrigger = function(me)\n{\n\tvar evt = me.getEvent();\n\t\n\treturn (this.useLeftButtonForPanning && me.getState() == null &&\n\t\t\tmxEvent.isLeftMouseButton(evt)) || (mxEvent.isControlDown(evt) &&\n\t\t\tmxEvent.isShiftDown(evt)) || (this.usePopupTrigger && mxEvent.isPopupTrigger(evt));\n};\n\n/**\n * Function: isForcePanningEvent\n * \n * Returns true if the given <mxMouseEvent> should start panning. This\n * implementation always returns true if <ignoreCell> is true or for\n * multi touch events.\n */\nmxPanningHandler.prototype.isForcePanningEvent = function(me)\n{\n\treturn this.ignoreCell || mxEvent.isMultiTouchEvent(me.getEvent());\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating the panning. By consuming the event all\n * subsequent events of the gesture are redirected to this handler.\n */\nmxPanningHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.mouseDownEvent = me;\n\t\n\tif (!me.isConsumed() && this.isPanningEnabled() && !this.active && this.isPanningTrigger(me))\n\t{\n\t\tthis.start(me);\n\t\tthis.consumePanningTrigger(me);\n\t}\n};\n\n/**\n * Function: start\n * \n * Starts panning at the given event.\n */\nmxPanningHandler.prototype.start = function(me)\n{\n\tthis.dx0 = -this.graph.container.scrollLeft;\n\tthis.dy0 = -this.graph.container.scrollTop;\n\n\t// Stores the location of the trigger event\n\tthis.startX = me.getX();\n\tthis.startY = me.getY();\n\tthis.dx = null;\n\tthis.dy = null;\n\t\n\tthis.panningTrigger = true;\n};\n\n/**\n * Function: consumePanningTrigger\n * \n * Consumes the given <mxMouseEvent> if it was a panning trigger in\n * <mouseDown>. The default is to invoke <mxMouseEvent.consume>. Note that this\n * will block any further event processing. If you haven't disabled built-in\n * context menus and require immediate selection of the cell on mouseDown in\n * Safari and/or on the Mac, then use the following code:\n * \n * (code)\n * mxPanningHandler.prototype.consumePanningTrigger = function(me)\n * {\n *   if (me.evt.preventDefault)\n *   {\n *     me.evt.preventDefault();\n *   }\n *   \n *   // Stops event processing in IE\n *   me.evt.returnValue = false;\n *   \n *   // Sets local consumed state\n *   if (!mxClient.IS_SF && !mxClient.IS_MAC)\n *   {\n *     me.consumed = true;\n *   }\n * };\n * (end)\n */\nmxPanningHandler.prototype.consumePanningTrigger = function(me)\n{\n\tme.consume();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the panning on the graph.\n */\nmxPanningHandler.prototype.mouseMove = function(sender, me)\n{\n\tthis.dx = me.getX() - this.startX;\n\tthis.dy = me.getY() - this.startY;\n\t\n\tif (this.active)\n\t{\n\t\tif (this.previewEnabled)\n\t\t{\n\t\t\t// Applies the grid to the panning steps\n\t\t\tif (this.useGrid)\n\t\t\t{\n\t\t\t\tthis.dx = this.graph.snap(this.dx);\n\t\t\t\tthis.dy = this.graph.snap(this.dy);\n\t\t\t}\n\t\t\t\n\t\t\tthis.graph.panGraph(this.dx + this.dx0, this.dy + this.dy0);\n\t\t}\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN, 'event', me));\n\t}\n\telse if (this.panningTrigger)\n\t{\n\t\tvar tmp = this.active;\n\n\t\t// Panning is activated only if the mouse is moved\n\t\t// beyond the graph tolerance\n\t\tthis.active = Math.abs(this.dx) > this.graph.tolerance || Math.abs(this.dy) > this.graph.tolerance;\n\n\t\tif (!tmp && this.active)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_START, 'event', me));\n\t\t}\n\t}\n\t\n\tif (this.active || this.panningTrigger)\n\t{\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPanningHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tif (this.dx != null && this.dy != null)\n\t\t{\n\t\t\t// Ignores if scrollbars have been used for panning\n\t\t\tif (!this.graph.useScrollbarsForPanning || !mxUtils.hasScrollbars(this.graph.container))\n\t\t\t{\n\t\t\t\tvar scale = this.graph.getView().scale;\n\t\t\t\tvar t = this.graph.getView().translate;\n\t\t\t\tthis.graph.panGraph(0, 0);\n\t\t\t\tthis.panGraph(t.x + this.dx / scale, t.y + this.dy / scale);\n\t\t\t}\n\t\t\t\n\t\t\tme.consume();\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_END, 'event', me));\n\t}\n\t\n\tthis.reset();\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPanningHandler.prototype.reset = function()\n{\n\tthis.panningTrigger = false;\n\tthis.mouseDownEvent = null;\n\tthis.active = false;\n\tthis.dx = null;\n\tthis.dy = null;\n};\n\n/**\n * Function: panGraph\n * \n * Pans <graph> by the given amount.\n */\nmxPanningHandler.prototype.panGraph = function(dx, dy)\n{\n\tthis.graph.getView().setTranslate(dx, dy);\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPanningHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.forcePanningHandler);\n\tthis.graph.removeListener(this.gestureHandler);\n\tmxEvent.removeListener(document, 'mouseup', this.mouseUpListener);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPopupMenuHandler\n * \n * Event handler that creates popupmenus.\n * \n * Constructor: mxPopupMenuHandler\n * \n * Constructs an event handler that creates a <mxPopupMenu>.\n */\nfunction mxPopupMenuHandler(graph, factoryMethod)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.factoryMethod = factoryMethod;\n\t\tthis.graph.addMouseListener(this);\n\t\t\n\t\t// Does not show menu if any touch gestures take place after the trigger\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\tthis.init();\n\t}\n};\n\n/**\n * Extends mxPopupMenu.\n */\nmxPopupMenuHandler.prototype = new mxPopupMenu();\nmxPopupMenuHandler.prototype.constructor = mxPopupMenuHandler;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxPopupMenuHandler.prototype.graph = null;\n\n/**\n * Variable: selectOnPopup\n * \n * Specifies if cells should be selected if a popupmenu is displayed for\n * them. Default is true.\n */\nmxPopupMenuHandler.prototype.selectOnPopup = true;\n\n/**\n * Variable: clearSelectionOnBackground\n * \n * Specifies if cells should be deselected if a popupmenu is displayed for\n * the diagram background. Default is true.\n */\nmxPopupMenuHandler.prototype.clearSelectionOnBackground = true;\n\n/**\n * Variable: triggerX\n * \n * X-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.triggerX = null;\n\n/**\n * Variable: triggerY\n * \n * Y-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.triggerY = null;\n\n/**\n * Variable: screenX\n * \n * Screen X-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.screenX = null;\n\n/**\n * Variable: screenY\n * \n * Screen Y-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.screenY = null;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxPopupMenuHandler.prototype.init = function()\n{\n\t// Supercall\n\tmxPopupMenu.prototype.init.apply(this);\n\n\t// Hides the tooltip if the mouse is over\n\t// the context menu\n\tmxEvent.addGestureListeners(this.div, mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.graph.tooltipHandler.hide();\n\t}));\n};\n\n/**\n * Function: isSelectOnPopup\n * \n * Hook for returning if a cell should be selected for a given <mxMouseEvent>.\n * This implementation returns <selectOnPopup>.\n */\nmxPopupMenuHandler.prototype.isSelectOnPopup = function(me)\n{\n\treturn this.selectOnPopup;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating the panning. By consuming the event all\n * subsequent events of the gesture are redirected to this handler.\n */\nmxPopupMenuHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (this.isEnabled() && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\t// Hides the popupmenu if is is being displayed\n\t\tthis.hideMenu();\n\t\tthis.triggerX = me.getGraphX();\n\t\tthis.triggerY = me.getGraphY();\n\t\tthis.screenX = mxEvent.getMainEvent(me.getEvent()).screenX;\n\t\tthis.screenY = mxEvent.getMainEvent(me.getEvent()).screenY;\n\t\tthis.popupTrigger = this.isPopupTrigger(me);\n\t\tthis.inTolerance = true;\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the panning on the graph.\n */\nmxPopupMenuHandler.prototype.mouseMove = function(sender, me)\n{\n\t// Popup trigger may change on mouseUp so ignore it\n\tif (this.inTolerance && this.screenX != null && this.screenY != null)\n\t{\n\t\tif (Math.abs(mxEvent.getMainEvent(me.getEvent()).screenX - this.screenX) > this.graph.tolerance ||\n\t\t\tMath.abs(mxEvent.getMainEvent(me.getEvent()).screenY - this.screenY) > this.graph.tolerance)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPopupMenuHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.popupTrigger && this.inTolerance && this.triggerX != null && this.triggerY != null)\n\t{\n\t\tvar cell = this.getCellForPopupEvent(me);\n\n\t\t// Selects the cell for which the context menu is being displayed\n\t\tif (this.graph.isEnabled() && this.isSelectOnPopup(me) &&\n\t\t\tcell != null && !this.graph.isCellSelected(cell))\n\t\t{\n\t\t\tthis.graph.setSelectionCell(cell);\n\t\t}\n\t\telse if (this.clearSelectionOnBackground && cell == null)\n\t\t{\n\t\t\tthis.graph.clearSelection();\n\t\t}\n\t\t\n\t\t// Hides the tooltip if there is one\n\t\tthis.graph.tooltipHandler.hide();\n\n\t\t// Menu is shifted by 1 pixel so that the mouse up event\n\t\t// is routed via the underlying shape instead of the DIV\n\t\tvar origin = mxUtils.getScrollOrigin();\n\t\tthis.popup(me.getX() + origin.x + 1, me.getY() + origin.y + 1, cell, me.getEvent());\n\t\tme.consume();\n\t}\n\t\n\tthis.popupTrigger = false;\n\tthis.inTolerance = false;\n};\n\n/**\n * Function: getCellForPopupEvent\n * \n * Hook to return the cell for the mouse up popup trigger handling.\n */\nmxPopupMenuHandler.prototype.getCellForPopupEvent = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPopupMenuHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.gestureHandler);\n\t\n\t// Supercall\n\tmxPopupMenu.prototype.destroy.apply(this);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellMarker\n * \n * A helper class to process mouse locations and highlight cells.\n * \n * Helper class to highlight cells. To add a cell marker to an existing graph\n * for highlighting all cells, the following code is used:\n * \n * (code)\n * var marker = new mxCellMarker(graph);\n * graph.addMouseListener({\n *   mouseDown: function() {},\n *   mouseMove: function(sender, me)\n *   {\n *     marker.process(me);\n *   },\n *   mouseUp: function() {}\n * });\n * (end)\n *\n * Event: mxEvent.MARK\n * \n * Fires after a cell has been marked or unmarked. The <code>state</code>\n * property contains the marked <mxCellState> or null if no state is marked.\n * \n * Constructor: mxCellMarker\n * \n * Constructs a new cell marker.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * validColor - Optional marker color for valid states. Default is\n * <mxConstants.DEFAULT_VALID_COLOR>.\n * invalidColor - Optional marker color for invalid states. Default is\n * <mxConstants.DEFAULT_INVALID_COLOR>.\n * hotspot - Portion of the width and hight where a state intersects a\n * given coordinate pair. A value of 0 means always highlight. Default is\n * <mxConstants.DEFAULT_HOTSPOT>.\n */\nfunction mxCellMarker(graph, validColor, invalidColor, hotspot)\n{\n\tmxEventSource.call(this);\n\t\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.validColor = (validColor != null) ? validColor : mxConstants.DEFAULT_VALID_COLOR;\n\t\tthis.invalidColor = (invalidColor != null) ? invalidColor : mxConstants.DEFAULT_INVALID_COLOR;\n\t\tthis.hotspot = (hotspot != null) ? hotspot : mxConstants.DEFAULT_HOTSPOT;\n\t\t\n\t\tthis.highlight = new mxCellHighlight(graph);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxCellMarker, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellMarker.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if the marker is enabled. Default is true.\n */\nmxCellMarker.prototype.enabled = true;\n\n/**\n * Variable: hotspot\n * \n * Specifies the portion of the width and height that should trigger\n * a highlight. The area around the center of the cell to be marked is used\n * as the hotspot. Possible values are between 0 and 1. Default is\n * mxConstants.DEFAULT_HOTSPOT.\n */\nmxCellMarker.prototype.hotspot = mxConstants.DEFAULT_HOTSPOT; \n\n/**\n * Variable: hotspotEnabled\n * \n * Specifies if the hotspot is enabled. Default is false.\n */\nmxCellMarker.prototype.hotspotEnabled = false;\n\n/**\n * Variable: validColor\n * \n * Holds the valid marker color.\n */\nmxCellMarker.prototype.validColor = null;\n\n/**\n * Variable: invalidColor\n * \n * Holds the invalid marker color.\n */\nmxCellMarker.prototype.invalidColor = null;\n\n/**\n * Variable: currentColor\n * \n * Holds the current marker color.\n */\nmxCellMarker.prototype.currentColor = null;\n\n/**\n * Variable: validState\n * \n * Holds the marked <mxCellState> if it is valid.\n */\nmxCellMarker.prototype.validState = null; \n\n/**\n * Variable: markedState\n * \n * Holds the marked <mxCellState>.\n */\nmxCellMarker.prototype.markedState = null;\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxCellMarker.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxCellMarker.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setHotspot\n * \n * Sets the <hotspot>.\n */\nmxCellMarker.prototype.setHotspot = function(hotspot)\n{\n\tthis.hotspot = hotspot;\n};\n\n/**\n * Function: getHotspot\n * \n * Returns the <hotspot>.\n */\nmxCellMarker.prototype.getHotspot = function()\n{\n\treturn this.hotspot;\n};\n\n/**\n * Function: setHotspotEnabled\n * \n * Specifies whether the hotspot should be used in <intersects>.\n */\nmxCellMarker.prototype.setHotspotEnabled = function(enabled)\n{\n\tthis.hotspotEnabled = enabled;\n};\n\n/**\n * Function: isHotspotEnabled\n * \n * Returns true if hotspot is used in <intersects>.\n */\nmxCellMarker.prototype.isHotspotEnabled = function()\n{\n\treturn this.hotspotEnabled;\n};\n\n/**\n * Function: hasValidState\n * \n * Returns true if <validState> is not null.\n */\nmxCellMarker.prototype.hasValidState = function()\n{\n\treturn this.validState != null;\n};\n\n/**\n * Function: getValidState\n * \n * Returns the <validState>.\n */\nmxCellMarker.prototype.getValidState = function()\n{\n\treturn this.validState;\n};\n\n/**\n * Function: getMarkedState\n * \n * Returns the <markedState>.\n */\nmxCellMarker.prototype.getMarkedState = function()\n{\n\treturn this.markedState;\n};\n\n/**\n * Function: reset\n * \n * Resets the state of the cell marker.\n */\nmxCellMarker.prototype.reset = function()\n{\n\tthis.validState = null;\n\t\n\tif (this.markedState != null)\n\t{\n\t\tthis.markedState = null;\n\t\tthis.unmark();\n\t}\n};\n\n/**\n * Function: process\n * \n * Processes the given event and cell and marks the state returned by\n * <getState> with the color returned by <getMarkerColor>. If the\n * markerColor is not null, then the state is stored in <markedState>. If\n * <isValidState> returns true, then the state is stored in <validState>\n * regardless of the marker color. The state is returned regardless of the\n * marker color and valid state. \n */\nmxCellMarker.prototype.process = function(me)\n{\n\tvar state = null;\n\t\n\tif (this.isEnabled())\n\t{\n\t\tstate = this.getState(me);\n\t\tthis.setCurrentState(state, me);\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: setCurrentState\n * \n * Sets and marks the current valid state.\n */\nmxCellMarker.prototype.setCurrentState = function(state, me, color)\n{\n\tvar isValid = (state != null) ? this.isValidState(state) : false;\n\tcolor = (color != null) ? color : this.getMarkerColor(me.getEvent(), state, isValid);\n\t\n\tif (isValid)\n\t{\n\t\tthis.validState = state;\n\t}\n\telse\n\t{\n\t\tthis.validState = null;\n\t}\n\t\n\tif (state != this.markedState || color != this.currentColor)\n\t{\n\t\tthis.currentColor = color;\n\t\t\n\t\tif (state != null && this.currentColor != null)\n\t\t{\n\t\t\tthis.markedState = state;\n\t\t\tthis.mark();\t\t\n\t\t}\n\t\telse if (this.markedState != null)\n\t\t{\n\t\t\tthis.markedState = null;\n\t\t\tthis.unmark();\n\t\t}\n\t}\n};\n\n/**\n * Function: markCell\n * \n * Marks the given cell using the given color, or <validColor> if no color is specified.\n */\nmxCellMarker.prototype.markCell = function(cell, color)\n{\n\tvar state = this.graph.getView().getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\tthis.currentColor = (color != null) ? color : this.validColor;\n\t\tthis.markedState = state;\n\t\tthis.mark();\n\t}\n};\n\n/**\n * Function: mark\n * \n * Marks the <markedState> and fires a <mark> event.\n */\nmxCellMarker.prototype.mark = function()\n{\n\tthis.highlight.setHighlightColor(this.currentColor);\n\tthis.highlight.highlight(this.markedState);\n\tthis.fireEvent(new mxEventObject(mxEvent.MARK, 'state', this.markedState));\n};\n\n/**\n * Function: unmark\n * \n * Hides the marker and fires a <mark> event.\n */\nmxCellMarker.prototype.unmark = function()\n{\n\tthis.mark();\n};\n\n/**\n * Function: isValidState\n * \n * Returns true if the given <mxCellState> is a valid state. If this\n * returns true, then the state is stored in <validState>. The return value\n * of this method is used as the argument for <getMarkerColor>.\n */\nmxCellMarker.prototype.isValidState = function(state)\n{\n\treturn true;\n};\n\n/**\n * Function: getMarkerColor\n * \n * Returns the valid- or invalidColor depending on the value of isValid.\n * The given <mxCellState> is ignored by this implementation.\n */\nmxCellMarker.prototype.getMarkerColor = function(evt, state, isValid)\n{\n\treturn (isValid) ? this.validColor : this.invalidColor;\n};\n\n/**\n * Function: getState\n * \n * Uses <getCell>, <getStateToMark> and <intersects> to return the\n * <mxCellState> for the given <mxMouseEvent>.\n */\nmxCellMarker.prototype.getState = function(me)\n{\n\tvar view = this.graph.getView();\n\tvar cell = this.getCell(me);\n\tvar state = this.getStateToMark(view.getState(cell));\n\n\treturn (state != null && this.intersects(state, me)) ? state : null;\n};\n\n/**\n * Function: getCell\n * \n * Returns the <mxCell> for the given event and cell. This returns the\n * given cell.\n */\nmxCellMarker.prototype.getCell = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: getStateToMark\n * \n * Returns the <mxCellState> to be marked for the given <mxCellState> under\n * the mouse. This returns the given state.\n */\nmxCellMarker.prototype.getStateToMark = function(state)\n{\n\treturn state;\n};\n\n/**\n * Function: intersects\n * \n * Returns true if the given coordinate pair intersects the given state.\n * This returns true if the <hotspot> is 0 or the coordinates are inside\n * the hotspot for the given cell state.\n */\nmxCellMarker.prototype.intersects = function(state, me)\n{\n\tif (this.hotspotEnabled)\n\t{\n\t\treturn mxUtils.intersectsHotspot(state, me.getGraphX(), me.getGraphY(),\n\t\t\tthis.hotspot, mxConstants.MIN_HOTSPOT_SIZE,\n\t\t\tmxConstants.MAX_HOTSPOT_SIZE);\n\t}\n\t\n\treturn true;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxCellMarker.prototype.destroy = function()\n{\n\tthis.graph.getView().removeListener(this.resetHandler);\n\tthis.graph.getModel().removeListener(this.resetHandler);\n\tthis.highlight.destroy();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSelectionCellsHandler\n * \n * An event handler that manages cell handlers and invokes their mouse event\n * processing functions.\n * \n * Group: Events\n * \n * Event: mxEvent.ADD\n * \n * Fires if a cell has been added to the selection. The <code>state</code>\n * property contains the <mxCellState> that has been added.\n * \n * Event: mxEvent.REMOVE\n * \n * Fires if a cell has been remove from the selection. The <code>state</code>\n * property contains the <mxCellState> that has been removed.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxSelectionCellsHandler(graph)\n{\n\tmxEventSource.call(this);\n\t\n\tthis.graph = graph;\n\tthis.handlers = new mxDictionary();\n\tthis.graph.addMouseListener(this);\n\t\n\tthis.refreshHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.refresh();\n\t\t}\n\t});\n\t\n\tthis.graph.getSelectionModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.DOWN, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.UP, this.refreshHandler);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxSelectionCellsHandler, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxSelectionCellsHandler.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxSelectionCellsHandler.prototype.enabled = true;\n\n/**\n * Variable: refreshHandler\n * \n * Keeps a reference to an event listener for later removal.\n */\nmxSelectionCellsHandler.prototype.refreshHandler = null;\n\n/**\n * Variable: maxHandlers\n * \n * Defines the maximum number of handlers to paint individually. Default is 100.\n */\nmxSelectionCellsHandler.prototype.maxHandlers = 100;\n\n/**\n * Variable: handlers\n * \n * <mxDictionary> that maps from cells to handlers.\n */\nmxSelectionCellsHandler.prototype.handlers = null;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxSelectionCellsHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxSelectionCellsHandler.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: getHandler\n * \n * Returns the handler for the given cell.\n */\nmxSelectionCellsHandler.prototype.getHandler = function(cell)\n{\n\treturn this.handlers.get(cell);\n};\n\n/**\n * Function: reset\n * \n * Resets all handlers.\n */\nmxSelectionCellsHandler.prototype.reset = function()\n{\n\tthis.handlers.visit(function(key, handler)\n\t{\n\t\thandler.reset.apply(handler);\n\t});\n};\n\n/**\n * Function: refresh\n * \n * Reloads or updates all handlers.\n */\nmxSelectionCellsHandler.prototype.refresh = function()\n{\n\t// Removes all existing handlers\n\tvar oldHandlers = this.handlers;\n\tthis.handlers = new mxDictionary();\n\t\n\t// Creates handles for all selection cells\n\tvar tmp = this.graph.getSelectionCells();\n\n\tfor (var i = 0; i < tmp.length; i++)\n\t{\n\t\tvar state = this.graph.view.getState(tmp[i]);\n\n\t\tif (state != null)\n\t\t{\n\t\t\tvar handler = oldHandlers.remove(tmp[i]);\n\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\tif (handler.state != state)\n\t\t\t\t{\n\t\t\t\t\thandler.destroy();\n\t\t\t\t\thandler = null;\n\t\t\t\t}\n\t\t\t\telse if (!this.isHandlerActive(handler))\n\t\t\t\t{\n\t\t\t\t\tif (handler.refresh != null)\n\t\t\t\t\t{\n\t\t\t\t\t\thandler.refresh();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\thandler.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (handler == null)\n\t\t\t{\n\t\t\t\thandler = this.graph.createHandler(state);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD, 'state', state));\n\t\t\t}\n\t\t\t\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\tthis.handlers.put(tmp[i], handler);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Destroys all unused handlers\n\toldHandlers.visit(mxUtils.bind(this, function(key, handler)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE, 'state', handler.state));\n\t\thandler.destroy();\n\t}));\n};\n\n/**\n * Function: isHandlerActive\n * \n * Returns true if the given handler is active and should not be redrawn.\n */\nmxSelectionCellsHandler.prototype.isHandlerActive = function(handler)\n{\n\treturn handler.index != null;\n};\n\n/**\n * Function: updateHandler\n * \n * Updates the handler for the given shape if one exists.\n */\nmxSelectionCellsHandler.prototype.updateHandler = function(state)\n{\n\tvar handler = this.handlers.remove(state.cell);\n\t\n\tif (handler != null)\n\t{\n\t\t// Transfers the current state to the new handler\n\t\tvar index = handler.index;\n\t\tvar x = handler.startX;\n\t\tvar y = handler.startY;\n\t\t\n\t\thandler.destroy();\n\t\thandler = this.graph.createHandler(state);\n\n\t\tif (handler != null)\n\t\t{\n\t\t\tthis.handlers.put(state.cell, handler);\n\t\t\t\n\t\t\tif (index != null && x != null && y != null)\n\t\t\t{\n\t\t\t\thandler.start(x, y, index);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseDown\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseDown.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseMove.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseUp.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxSelectionCellsHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\t\n\tif (this.refreshHandler != null)\n\t{\n\t\tthis.graph.getSelectionModel().removeListener(this.refreshHandler);\n\t\tthis.graph.getModel().removeListener(this.refreshHandler);\n\t\tthis.graph.getView().removeListener(this.refreshHandler);\n\t\tthis.refreshHandler = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\n/**\n * Class: mxConnectionHandler\n *\n * Graph event handler that creates new connections. Uses <mxTerminalMarker>\n * for finding and highlighting the source and target vertices and\n * <factoryMethod> to create the edge instance. This handler is built-into\n * <mxGraph.connectionHandler> and enabled using <mxGraph.setConnectable>.\n *\n * Example:\n * \n * (code)\n * new mxConnectionHandler(graph, function(source, target, style)\n * {\n *   edge = new mxCell('', new mxGeometry());\n *   edge.setEdge(true);\n *   edge.setStyle(style);\n *   edge.geometry.relative = true;\n *   return edge;\n * });\n * (end)\n * \n * Here is an alternative solution that just sets a specific user object for\n * new edges by overriding <insertEdge>.\n *\n * (code)\n * mxConnectionHandlerInsertEdge = mxConnectionHandler.prototype.insertEdge;\n * mxConnectionHandler.prototype.insertEdge = function(parent, id, value, source, target, style)\n * {\n *   value = 'Test';\n * \n *   return mxConnectionHandlerInsertEdge.apply(this, arguments);\n * };\n * (end)\n * \n * Using images to trigger connections:\n * \n * This handler uses mxTerminalMarker to find the source and target cell for\n * the new connection and creates a new edge using <connect>. The new edge is\n * created using <createEdge> which in turn uses <factoryMethod> or creates a\n * new default edge.\n * \n * The handler uses a \"highlight-paradigm\" for indicating if a cell is being\n * used as a source or target terminal, as seen in other diagramming products.\n * In order to allow both, moving and connecting cells at the same time,\n * <mxConstants.DEFAULT_HOTSPOT> is used in the handler to determine the hotspot\n * of a cell, that is, the region of the cell which is used to trigger a new\n * connection. The constant is a value between 0 and 1 that specifies the\n * amount of the width and height around the center to be used for the hotspot\n * of a cell and its default value is 0.5. In addition,\n * <mxConstants.MIN_HOTSPOT_SIZE> defines the minimum number of pixels for the\n * width and height of the hotspot.\n * \n * This solution, while standards compliant, may be somewhat confusing because\n * there is no visual indicator for the hotspot and the highlight is seen to\n * switch on and off while the mouse is being moved in and out. Furthermore,\n * this paradigm does not allow to create different connections depending on\n * the highlighted hotspot as there is only one hotspot per cell and it\n * normally does not allow cells to be moved and connected at the same time as\n * there is no clear indication of the connectable area of the cell.\n * \n * To come across these issues, the handle has an additional <createIcons> hook\n * with a default implementation that allows to create one icon to be used to\n * trigger new connections. If this icon is specified, then new connections can\n * only be created if the image is clicked while the cell is being highlighted.\n * The <createIcons> hook may be overridden to create more than one\n * <mxImageShape> for creating new connections, but the default implementation\n * supports one image and is used as follows:\n * \n * In order to display the \"connect image\" whenever the mouse is over the cell,\n * an DEFAULT_HOTSPOT of 1 should be used:\n * \n * (code)\n * mxConstants.DEFAULT_HOTSPOT = 1;\n * (end)\n * \n * In order to avoid confusion with the highlighting, the highlight color\n * should not be used with a connect image:\n * \n * (code)\n * mxConstants.HIGHLIGHT_COLOR = null;\n * (end)\n * \n * To install the image, the connectImage field of the mxConnectionHandler must\n * be assigned a new <mxImage> instance:\n * \n * (code)\n * mxConnectionHandler.prototype.connectImage = new mxImage('images/green-dot.gif', 14, 14);\n * (end)\n * \n * This will use the green-dot.gif with a width and height of 14 pixels as the\n * image to trigger new connections. In createIcons the icon field of the\n * handler will be set in order to remember the icon that has been clicked for\n * creating the new connection. This field will be available under selectedIcon\n * in the connect method, which may be overridden to take the icon that\n * triggered the new connection into account. This is useful if more than one\n * icon may be used to create a connection.\n *\n * Group: Events\n * \n * Event: mxEvent.START\n * \n * Fires when a new connection is being created by the user. The <code>state</code>\n * property contains the state of the source cell.\n * \n * Event: mxEvent.CONNECT\n * \n * Fires between begin- and endUpdate in <connect>. The <code>cell</code>\n * property contains the inserted edge, the <code>event</code> and <code>target</code> \n * properties contain the respective arguments that were passed to <connect> (where\n * target corresponds to the dropTarget argument). Finally, the <code>terminal</code>\n * property corresponds to the target argument in <connect> or the clone of the source\n * terminal if <createTarget> is enabled.\n * \n * Note that the target is the cell under the mouse where the mouse button was released.\n * Depending on the logic in the handler, this doesn't necessarily have to be the target\n * of the inserted edge. To print the source, target or any optional ports IDs that the\n * edge is connected to, the following code can be used. To get more details about the\n * actual connection point, <mxGraph.getConnectionConstraint> can be used. To resolve\n * the port IDs, use <mxGraphModel.getCell>.\n * \n * (code)\n * graph.connectionHandler.addListener(mxEvent.CONNECT, function(sender, evt)\n * {\n *   var edge = evt.getProperty('cell');\n *   var source = graph.getModel().getTerminal(edge, true);\n *   var target = graph.getModel().getTerminal(edge, false);\n *   \n *   var style = graph.getCellStyle(edge);\n *   var sourcePortId = style[mxConstants.STYLE_SOURCE_PORT];\n *   var targetPortId = style[mxConstants.STYLE_TARGET_PORT];\n *   \n *   mxLog.show();\n *   mxLog.debug('connect', edge, source.id, target.id, sourcePortId, targetPortId);\n * });\n * (end)\n *\n * Event: mxEvent.RESET\n * \n * Fires when the <reset> method is invoked.\n *\n * Constructor: mxConnectionHandler\n *\n * Constructs an event handler that connects vertices using the specified\n * factory method to create the new edges. Modify\n * <mxConstants.ACTIVE_REGION> to setup the region on a cell which triggers\n * the creation of a new connection or use connect icons as explained\n * above.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * factoryMethod - Optional function to create the edge. The function takes\n * the source and target <mxCell> as the first and second argument and an\n * optional cell style from the preview as the third argument. It returns\n * the <mxCell> that represents the new edge.\n */\nfunction mxConnectionHandler(graph, factoryMethod)\n{\n\tmxEventSource.call(this);\n\t\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.factoryMethod = factoryMethod;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tthis.reset();\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxConnectionHandler, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxConnectionHandler.prototype.graph = null;\n\n/**\n * Variable: factoryMethod\n * \n * Function that is used for creating new edges. The function takes the\n * source and target <mxCell> as the first and second argument and returns\n * a new <mxCell> that represents the edge. This is used in <createEdge>.\n */\nmxConnectionHandler.prototype.factoryMethod = true;\n\n/**\n * Variable: moveIconFront\n * \n * Specifies if icons should be displayed inside the graph container instead\n * of the overlay pane. This is used for HTML labels on vertices which hide\n * the connect icon. This has precendence over <moveIconBack> when set\n * to true. Default is false.\n */\nmxConnectionHandler.prototype.moveIconFront = false;\n\n/**\n * Variable: moveIconBack\n * \n * Specifies if icons should be moved to the back of the overlay pane. This can\n * be set to true if the icons of the connection handler conflict with other\n * handles, such as the vertex label move handle. Default is false.\n */\nmxConnectionHandler.prototype.moveIconBack = false;\n\n/**\n * Variable: connectImage\n * \n * <mxImage> that is used to trigger the creation of a new connection. This\n * is used in <createIcons>. Default is null.\n */\nmxConnectionHandler.prototype.connectImage = null;\n\n/**\n * Variable: targetConnectImage\n * \n * Specifies if the connect icon should be centered on the target state\n * while connections are being previewed. Default is false.\n */\nmxConnectionHandler.prototype.targetConnectImage = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxConnectionHandler.prototype.enabled = true;\n\n/**\n * Variable: select\n * \n * Specifies if new edges should be selected. Default is true.\n */\nmxConnectionHandler.prototype.select = true;\n\n/**\n * Variable: createTarget\n * \n * Specifies if <createTargetVertex> should be called if no target was under the\n * mouse for the new connection. Setting this to true means the connection\n * will be drawn as valid if no target is under the mouse, and\n * <createTargetVertex> will be called before the connection is created between\n * the source cell and the newly created vertex in <createTargetVertex>, which\n * can be overridden to create a new target. Default is false.\n */\nmxConnectionHandler.prototype.createTarget = false;\n\n/**\n * Variable: marker\n * \n * Holds the <mxTerminalMarker> used for finding source and target cells.\n */\nmxConnectionHandler.prototype.marker = null;\n\n/**\n * Variable: constraintHandler\n * \n * Holds the <mxConstraintHandler> used for drawing and highlighting\n * constraints.\n */\nmxConnectionHandler.prototype.constraintHandler = null;\n\n/**\n * Variable: error\n * \n * Holds the current validation error while connections are being created.\n */\nmxConnectionHandler.prototype.error = null;\n\n/**\n * Variable: waypointsEnabled\n * \n * Specifies if single clicks should add waypoints on the new edge. Default is\n * false.\n */\nmxConnectionHandler.prototype.waypointsEnabled = false;\n\n/**\n * Variable: ignoreMouseDown\n * \n * Specifies if the connection handler should ignore the state of the mouse\n * button when highlighting the source. Default is false, that is, the\n * handler only highlights the source if no button is being pressed.\n */\nmxConnectionHandler.prototype.ignoreMouseDown = false;\n\n/**\n * Variable: first\n * \n * Holds the <mxPoint> where the mouseDown took place while the handler is\n * active.\n */\nmxConnectionHandler.prototype.first = null;\n\n/**\n * Variable: connectIconOffset\n * \n * Holds the offset for connect icons during connection preview.\n * Default is mxPoint(0, <mxConstants.TOOLTIP_VERTICAL_OFFSET>).\n * Note that placing the icon under the mouse pointer with an\n * offset of (0,0) will affect hit detection.\n */\nmxConnectionHandler.prototype.connectIconOffset = new mxPoint(0, mxConstants.TOOLTIP_VERTICAL_OFFSET);\n\n/**\n * Variable: edgeState\n * \n * Optional <mxCellState> that represents the preview edge while the\n * handler is active. This is created in <createEdgeState>.\n */\nmxConnectionHandler.prototype.edgeState = null;\n\n/**\n * Variable: changeHandler\n * \n * Holds the change event listener for later removal.\n */\nmxConnectionHandler.prototype.changeHandler = null;\n\n/**\n * Variable: drillHandler\n * \n * Holds the drill event listener for later removal.\n */\nmxConnectionHandler.prototype.drillHandler = null;\n\n/**\n * Variable: mouseDownCounter\n * \n * Counts the number of mouseDown events since the start. The initial mouse\n * down event counts as 1.\n */\nmxConnectionHandler.prototype.mouseDownCounter = 0;\n\n/**\n * Variable: movePreviewAway\n * \n * Switch to enable moving the preview away from the mousepointer. This is required in browsers\n * where the preview cannot be made transparent to events and if the built-in hit detection on\n * the HTML elements in the page should be used. Default is the value of <mxClient.IS_VML>.\n */\nmxConnectionHandler.prototype.movePreviewAway = mxClient.IS_VML;\n\n/**\n * Variable: outlineConnect\n * \n * Specifies if connections to the outline of a highlighted target should be\n * enabled. This will allow to place the connection point along the outline of\n * the highlighted target. Default is false.\n */\nmxConnectionHandler.prototype.outlineConnect = false;\n\n/**\n * Variable: livePreview\n * \n * Specifies if the actual shape of the edge state should be used for the preview.\n * Default is false. (Ignored if no edge state is created in <createEdgeState>.)\n */\nmxConnectionHandler.prototype.livePreview = false;\n\n/**\n * Variable: cursor\n * \n * Specifies the cursor to be used while the handler is active. Default is null.\n */\nmxConnectionHandler.prototype.cursor = null;\n\n/**\n * Variable: insertBeforeSource\n * \n * Specifies if new edges should be inserted before the source vertex in the\n * cell hierarchy. Default is false for backwards compatibility.\n */\nmxConnectionHandler.prototype.insertBeforeSource = false;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxConnectionHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxConnectionHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isInsertBefore\n * \n * Returns <insertBeforeSource> for non-loops and false for loops.\n *\n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be inserted.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * evt - Mousedown event of the connect gesture.\n * dropTarget - <mxCell> that represents the cell under the mouse when it was\n * released.\n */\nmxConnectionHandler.prototype.isInsertBefore = function(edge, source, target, evt, dropTarget)\n{\n\treturn this.insertBeforeSource && source != target;\n};\n\n/**\n * Function: isCreateTarget\n * \n * Returns <createTarget>.\n *\n * Parameters:\n *\n * evt - Current active native pointer event.\n */\nmxConnectionHandler.prototype.isCreateTarget = function(evt)\n{\n\treturn this.createTarget;\n};\n\n/**\n * Function: setCreateTarget\n * \n * Sets <createTarget>.\n */\nmxConnectionHandler.prototype.setCreateTarget = function(value)\n{\n\tthis.createTarget = value;\n};\n\n/**\n * Function: createShape\n * \n * Creates the preview shape for new connections.\n */\nmxConnectionHandler.prototype.createShape = function()\n{\n\t// Creates the edge preview\n\tvar shape = (this.livePreview && this.edgeState != null) ?\n\t\tthis.graph.cellRenderer.createShape(this.edgeState) :\n\t\tnew mxPolyline([], mxConstants.INVALID_COLOR);\n\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tshape.scale = this.graph.view.scale;\n\tshape.pointerEvents = false;\n\tshape.isDashed = true;\n\tshape.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(shape.node, this.graph, null);\n\n\treturn shape;\n};\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this connection handler. This should\n * be invoked if <mxGraph.container> is assigned after the connection\n * handler has been created.\n */\nmxConnectionHandler.prototype.init = function()\n{\n\tthis.graph.addMouseListener(this);\n\tthis.marker = this.createMarker();\n\tthis.constraintHandler = new mxConstraintHandler(this.graph);\n\n\t// Redraws the icons if the graph changes\n\tthis.changeHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.iconState != null)\n\t\t{\n\t\t\tthis.iconState = this.graph.getView().getState(this.iconState.cell);\n\t\t}\n\t\t\n\t\tif (this.iconState != null)\n\t\t{\n\t\t\tthis.redrawIcons(this.icons, this.iconState);\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\telse if (this.previous != null && this.graph.view.getState(this.previous.cell) == null)\n\t\t{\n\t\t\tthis.reset();\n\t\t}\n\t});\n\t\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.changeHandler);\n\t\n\t// Removes the icon if we step into/up or start editing\n\tthis.drillHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.reset();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.START_EDITING, this.drillHandler);\n\tthis.graph.getView().addListener(mxEvent.DOWN, this.drillHandler);\n\tthis.graph.getView().addListener(mxEvent.UP, this.drillHandler);\n};\n\n/**\n * Function: isConnectableCell\n * \n * Returns true if the given cell is connectable. This is a hook to\n * disable floating connections. This implementation returns true.\n */\nmxConnectionHandler.prototype.isConnectableCell = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: createMarker\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxConnectionHandler.prototype.createMarker = function()\n{\n\tvar marker = new mxCellMarker(this.graph);\n\tmarker.hotspotEnabled = true;\n\n\t// Overrides to return cell at location only if valid (so that\n\t// there is no highlight for invalid cells)\n\tmarker.getCell = mxUtils.bind(this, function(me)\n\t{\n\t\tvar cell = mxCellMarker.prototype.getCell.apply(marker, arguments);\n\t\tthis.error = null;\n\t\t\n\t\t// Checks for cell at preview point (with grid)\n\t\tif (cell == null && this.currentPoint != null)\n\t\t{\n\t\t\tcell = this.graph.getCellAt(this.currentPoint.x, this.currentPoint.y);\n\t\t}\n\t\t\n\t\t// Uses connectable parent vertex if one exists\n\t\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\t\n\t\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t\t{\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ((this.graph.isSwimlane(cell) && this.currentPoint != null &&\n\t\t\tthis.graph.hitsSwimlaneContent(cell, this.currentPoint.x, this.currentPoint.y)) ||\n\t\t\t!this.isConnectableCell(cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tif (this.isConnecting())\n\t\t\t{\n\t\t\t\tif (this.previous != null)\n\t\t\t\t{\n\t\t\t\t\tthis.error = this.validateConnection(this.previous.cell, cell);\n\t\t\t\t\t\n\t\t\t\t\tif (this.error != null && this.error.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell = null;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Enables create target inside groups\n\t\t\t\t\t\tif (this.isCreateTarget(me.getEvent()))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.error = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!this.isValidSource(cell, me))\n\t\t\t{\n\t\t\t\tcell = null;\n\t\t\t}\n\t\t}\n\t\telse if (this.isConnecting() && !this.isCreateTarget(me.getEvent()) &&\n\t\t\t\t!this.graph.allowDanglingEdges)\n\t\t{\n\t\t\tthis.error = '';\n\t\t}\n\n\t\treturn cell;\n\t});\n\n\t// Sets the highlight color according to validateConnection\n\tmarker.isValidState = mxUtils.bind(this, function(state)\n\t{\n\t\tif (this.isConnecting())\n\t\t{\n\t\t\treturn this.error == null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn mxCellMarker.prototype.isValidState.apply(marker, arguments);\n\t\t}\n\t});\n\n\t// Overrides to use marker color only in highlight mode or for\n\t// target selection\n\tmarker.getMarkerColor = mxUtils.bind(this, function(evt, state, isValid)\n\t{\n\t\treturn (this.connectImage == null || this.isConnecting()) ?\n\t\t\tmxCellMarker.prototype.getMarkerColor.apply(marker, arguments) :\n\t\t\tnull;\n\t});\n\n\t// Overrides to use hotspot only for source selection otherwise\n\t// intersects always returns true when over a cell\n\tmarker.intersects = mxUtils.bind(this, function(state, evt)\n\t{\n\t\tif (this.connectImage != null || this.isConnecting())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn mxCellMarker.prototype.intersects.apply(marker, arguments);\n\t});\n\n\treturn marker;\n};\n\n/**\n * Function: start\n * \n * Starts a new connection for the given state and coordinates.\n */\nmxConnectionHandler.prototype.start = function(state, x, y, edgeState)\n{\n\tthis.previous = state;\n\tthis.first = new mxPoint(x, y);\n\tthis.edgeState = (edgeState != null) ? edgeState : this.createEdgeState(null);\n\t\n\t// Marks the source state\n\tthis.marker.currentColor = this.marker.validColor;\n\tthis.marker.markedState = state;\n\tthis.marker.mark();\n\n\tthis.fireEvent(new mxEventObject(mxEvent.START, 'state', this.previous));\n};\n\n/**\n * Function: isConnecting\n * \n * Returns true if the source terminal has been clicked and a new\n * connection is currently being previewed.\n */\nmxConnectionHandler.prototype.isConnecting = function()\n{\n\treturn this.first != null && this.shape != null;\n};\n\n/**\n * Function: isValidSource\n * \n * Returns <mxGraph.isValidSource> for the given source terminal.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the source terminal.\n * me - <mxMouseEvent> that is associated with this call.\n */\nmxConnectionHandler.prototype.isValidSource = function(cell, me)\n{\n\treturn this.graph.isValidSource(cell);\n};\n\n/**\n * Function: isValidTarget\n * \n * Returns true. The call to <mxGraph.isValidTarget> is implicit by calling\n * <mxGraph.getEdgeValidationError> in <validateConnection>. This is an\n * additional hook for disabling certain targets in this specific handler.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the target terminal.\n */\nmxConnectionHandler.prototype.isValidTarget = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: validateConnection\n * \n * Returns the error message or an empty string if the connection for the\n * given source target pair is not valid. Otherwise it returns null. This\n * implementation uses <mxGraph.getEdgeValidationError>.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxConnectionHandler.prototype.validateConnection = function(source, target)\n{\n\tif (!this.isValidTarget(target))\n\t{\n\t\treturn '';\n\t}\n\t\n\treturn this.graph.getEdgeValidationError(null, source, target);\n};\n\n/**\n * Function: getConnectImage\n * \n * Hook to return the <mxImage> used for the connection icon of the given\n * <mxCellState>. This implementation returns <connectImage>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect image should be returned.\n */\nmxConnectionHandler.prototype.getConnectImage = function(state)\n{\n\treturn this.connectImage;\n};\n\n/**\n * Function: isMoveIconToFrontForState\n * \n * Returns true if the state has a HTML label in the graph's container, otherwise\n * it returns <moveIconFront>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect icons should be returned.\n */\nmxConnectionHandler.prototype.isMoveIconToFrontForState = function(state)\n{\n\tif (state.text != null && state.text.node.parentNode == this.graph.container)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn this.moveIconFront;\n};\n\n/**\n * Function: createIcons\n * \n * Creates the array <mxImageShapes> that represent the connect icons for\n * the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect icons should be returned.\n */\nmxConnectionHandler.prototype.createIcons = function(state)\n{\n\tvar image = this.getConnectImage(state);\n\t\n\tif (image != null && state != null)\n\t{\n\t\tthis.iconState = state;\n\t\tvar icons = [];\n\n\t\t// Cannot use HTML for the connect icons because the icon receives all\n\t\t// mouse move events in IE, must use VML and SVG instead even if the\n\t\t// connect-icon appears behind the selection border and the selection\n\t\t// border consumes the events before the icon gets a chance\n\t\tvar bounds = new mxRectangle(0, 0, image.width, image.height);\n\t\tvar icon = new mxImageShape(bounds, image.src, null, null, 0);\n\t\ticon.preserveImageAspect = false;\n\t\t\n\t\tif (this.isMoveIconToFrontForState(state))\n\t\t{\n\t\t\ticon.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\t\ticon.init(this.graph.container);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ticon.dialect = (this.graph.dialect == mxConstants.DIALECT_SVG) ?\n\t\t\t\tmxConstants.DIALECT_SVG : mxConstants.DIALECT_VML;\n\t\t\ticon.init(this.graph.getView().getOverlayPane());\n\n\t\t\t// Move the icon back in the overlay pane\n\t\t\tif (this.moveIconBack && icon.node.previousSibling != null)\n\t\t\t{\n\t\t\t\ticon.node.parentNode.insertBefore(icon.node, icon.node.parentNode.firstChild);\n\t\t\t}\n\t\t}\n\n\t\ticon.node.style.cursor = mxConstants.CURSOR_CONNECT;\n\n\t\t// Events transparency\n\t\tvar getState = mxUtils.bind(this, function()\n\t\t{\n\t\t\treturn (this.currentState != null) ? this.currentState : state;\n\t\t});\n\t\t\n\t\t// Updates the local icon before firing the mouse down event.\n\t\tvar mouseDown = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tthis.icon = icon;\n\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN,\n\t\t\t\t\tnew mxMouseEvent(evt, getState()));\n\t\t\t}\n\t\t});\n\n\t\tmxEvent.redirectMouseEvents(icon.node, this.graph, getState, mouseDown);\n\t\t\n\t\ticons.push(icon);\n\t\tthis.redrawIcons(icons, this.iconState);\n\t\t\n\t\treturn icons;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: redrawIcons\n * \n * Redraws the given array of <mxImageShapes>.\n * \n * Parameters:\n * \n * icons - Optional array of <mxImageShapes> to be redrawn.\n */\nmxConnectionHandler.prototype.redrawIcons = function(icons, state)\n{\n\tif (icons != null && icons[0] != null && state != null)\n\t{\n\t\tvar pos = this.getIconPosition(icons[0], state);\n\t\ticons[0].bounds.x = pos.x;\n\t\ticons[0].bounds.y = pos.y;\n\t\ticons[0].redraw();\n\t}\n};\n\n/**\n * Function: redrawIcons\n * \n * Redraws the given array of <mxImageShapes>.\n * \n * Parameters:\n * \n * icons - Optional array of <mxImageShapes> to be redrawn.\n */\nmxConnectionHandler.prototype.getIconPosition = function(icon, state)\n{\n\tvar scale = this.graph.getView().scale;\n\tvar cx = state.getCenterX();\n\tvar cy = state.getCenterY();\n\t\n\tif (this.graph.isSwimlane(state.cell))\n\t{\n\t\tvar size = this.graph.getStartSize(state.cell);\n\t\t\n\t\tcx = (size.width != 0) ? state.x + size.width * scale / 2 : cx;\n\t\tcy = (size.height != 0) ? state.y + size.height * scale / 2 : cy;\n\t\t\n\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(alpha);\n\t\t\tvar sin = Math.sin(alpha);\n\t\t\tvar ct = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin, ct);\n\t\t\tcx = pt.x;\n\t\t\tcy = pt.y;\n\t\t}\n\t}\n\n\treturn new mxPoint(cx - icon.bounds.width / 2,\n\t\t\tcy - icon.bounds.height / 2);\n};\n\n/**\n * Function: destroyIcons\n * \n * Destroys the connect icons and resets the respective state.\n */\nmxConnectionHandler.prototype.destroyIcons = function()\n{\n\tif (this.icons != null)\n\t{\n\t\tfor (var i = 0; i < this.icons.length; i++)\n\t\t{\n\t\t\tthis.icons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.icons = null;\n\t\tthis.icon = null;\n\t\tthis.selectedIcon = null;\n\t\tthis.iconState = null;\n\t}\n};\n\n/**\n * Function: isStartEvent\n * \n * Returns true if the given mouse down event should start this handler. The\n * This implementation returns true if the event does not force marquee\n * selection, and the currentConstraint and currentFocus of the\n * <constraintHandler> are not null, or <previous> and <error> are not null and\n * <icons> is null or <icons> and <icon> are not null.\n */\nmxConnectionHandler.prototype.isStartEvent = function(me)\n{\n\treturn ((this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null) ||\n\t\t(this.previous != null && this.error == null && (this.icons == null || (this.icons != null &&\n\t\tthis.icon != null))));\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a new connection.\n */\nmxConnectionHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.mouseDownCounter++;\n\t\n\tif (this.isEnabled() && this.graph.isEnabled() && !me.isConsumed() &&\n\t\t!this.isConnecting() && this.isStartEvent(me))\n\t{\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t{\n\t\t\tthis.sourceConstraint = this.constraintHandler.currentConstraint;\n\t\t\tthis.previous = this.constraintHandler.currentFocus;\n\t\t\tthis.first = this.constraintHandler.currentPoint.clone();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Stores the location of the initial mousedown\n\t\t\tthis.first = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t}\n\t\n\t\tthis.edgeState = this.createEdgeState(me);\n\t\tthis.mouseDownCounter = 1;\n\t\t\n\t\tif (this.waypointsEnabled && this.shape == null)\n\t\t{\n\t\t\tthis.waypoints = null;\n\t\t\tthis.shape = this.createShape();\n\t\t\t\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tthis.shape.apply(this.edgeState);\n\t\t\t}\n\t\t}\n\n\t\t// Stores the starting point in the geometry of the preview\n\t\tif (this.previous == null && this.edgeState != null)\n\t\t{\n\t\t\tvar pt = this.graph.getPointForEvent(me.getEvent());\n\t\t\tthis.edgeState.cell.geometry.setTerminalPoint(pt, true);\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.START, 'state', this.previous));\n\n\t\tme.consume();\n\t}\n\n\tthis.selectedIcon = this.icon;\n\tthis.icon = null;\n};\n\n/**\n * Function: isImmediateConnectSource\n * \n * Returns true if a tap on the given source state should immediately start\n * connecting. This implementation returns true if the state is not movable\n * in the graph. \n */\nmxConnectionHandler.prototype.isImmediateConnectSource = function(state)\n{\n\treturn !this.graph.isCellMovable(state.cell);\n};\n\n/**\n * Function: createEdgeState\n * \n * Hook to return an <mxCellState> which may be used during the preview.\n * This implementation returns null.\n * \n * Use the following code to create a preview for an existing edge style:\n * \n * (code)\n * graph.connectionHandler.createEdgeState = function(me)\n * {\n *   var edge = graph.createEdge(null, null, null, null, null, 'edgeStyle=elbowEdgeStyle');\n *   \n *   return new mxCellState(this.graph.view, edge, this.graph.getCellStyle(edge));\n * };\n * (end)\n */\nmxConnectionHandler.prototype.createEdgeState = function(me)\n{\n\treturn null;\n};\n\n/**\n * Function: isOutlineConnectEvent\n * \n * Returns true if <outlineConnect> is true and the source of the event is the outline shape\n * or shift is pressed.\n */\nmxConnectionHandler.prototype.isOutlineConnectEvent = function(me)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar evt = me.getEvent();\n\t\n\tvar clientX = mxEvent.getClientX(evt);\n\tvar clientY = mxEvent.getClientY(evt);\n\t\n\tvar doc = document.documentElement;\n\tvar left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n\tvar top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n\t\n\tvar gridX = this.currentPoint.x - this.graph.container.scrollLeft + offset.x - left;\n\tvar gridY = this.currentPoint.y - this.graph.container.scrollTop + offset.y - top;\n\n\treturn this.outlineConnect && !mxEvent.isShiftDown(me.getEvent()) &&\n\t\t(me.isSource(this.marker.highlight.shape) ||\n\t\t(mxEvent.isAltDown(me.getEvent()) && me.getState() != null) ||\n\t\tthis.marker.highlight.isHighlightAt(clientX, clientY) ||\n\t\t((gridX != clientX || gridY != clientY) && me.getState() == null &&\n\t\tthis.marker.highlight.isHighlightAt(gridX, gridY)));\n};\n\n/**\n * Function: updateCurrentState\n * \n * Updates the current state for a given mouse move event by using\n * the <marker>.\n */\nmxConnectionHandler.prototype.updateCurrentState = function(me, point)\n{\n\tthis.constraintHandler.update(me, this.first == null, false, (this.first == null ||\n\t\tme.isSource(this.marker.highlight.shape)) ? null : point);\n\t\n\tif (this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null)\n\t{\n\t\t// Handles special case where grid is large and connection point is at actual point in which\n\t\t// case the outline is not followed as long as we're < gridSize / 2 away from that point\n\t\tif (this.marker.highlight != null && this.marker.highlight.state != null &&\n\t\t\tthis.marker.highlight.state.cell == this.constraintHandler.currentFocus.cell)\n\t\t{\n\t\t\t// Direct repaint needed if cell already highlighted\n\t\t\tif (this.marker.highlight.shape.stroke != 'transparent')\n\t\t\t{\n\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.markCell(this.constraintHandler.currentFocus.cell, 'transparent');\n\t\t}\n\n\t\t// Updates validation state\n\t\tif (this.previous != null)\n\t\t{\n\t\t\tthis.error = this.validateConnection(this.previous.cell, this.constraintHandler.currentFocus.cell);\n\t\t\t\n\t\t\tif (this.error == null)\n\t\t\t{\n\t\t\t\tthis.currentState = this.constraintHandler.currentFocus;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.constraintHandler.reset();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (this.graph.isIgnoreTerminalEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.marker.reset();\n\t\t\tthis.currentState = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.process(me);\n\t\t\tthis.currentState = this.marker.getValidState();\n\t\t\t\n\t\t\tif (this.currentState != null && !this.isCellEnabled(this.currentState.cell))\n\t\t\t{\n\t\t\t\tthis.currentState = null;\n\t\t\t}\n\t\t}\n\n\t\tvar outline = this.isOutlineConnectEvent(me);\n\t\t\n\t\tif (this.currentState != null && outline)\n\t\t{\n\t\t\t// Handles special case where mouse is on outline away from actual end point\n\t\t\t// in which case the grid is ignored and mouse point is used instead\n\t\t\tif (me.isSource(this.marker.highlight.shape))\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\t\t\t\n\t\t\tvar constraint = this.graph.getOutlineConstraint(point, this.currentState, me);\n\t\t\tthis.constraintHandler.setFocus(me, this.currentState, false);\n\t\t\tthis.constraintHandler.currentConstraint = constraint;\n\t\t\tthis.constraintHandler.currentPoint = point;\n\t\t}\n\n\t\tif (this.outlineConnect)\n\t\t{\n\t\t\tif (this.marker.highlight != null && this.marker.highlight.shape != null)\n\t\t\t{\n\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\n\t\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t\t\t{\n\t\t\t\t\tthis.marker.highlight.shape.stroke = mxConstants.OUTLINE_HIGHLIGHT_COLOR;\n\t\t\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.OUTLINE_HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t} \n\t\t\t\telse if (this.marker.hasValidState())\n\t\t\t\t{\n\t\t\t\t\t// Handles special case where actual end point of edge and current mouse point\n\t\t\t\t\t// are not equal (due to grid snapping) and there is no hit on shape or highlight\n\t\t\t\t\tif (this.marker.getValidState() != me.getState())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\t\t\tthis.currentState = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.marker.highlight.shape.stroke = mxConstants.DEFAULT_VALID_COLOR;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isCellEnabled\n * \n * Returns true if the given cell does not allow new connections to be created.\n */\nmxConnectionHandler.prototype.isCellEnabled = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: convertWaypoint\n * \n * Converts the given point from screen coordinates to model coordinates.\n */\nmxConnectionHandler.prototype.convertWaypoint = function(point)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\t\n\tpoint.x = point.x / scale - tr.x;\n\tpoint.y = point.y / scale - tr.y;\n};\n\n/**\n * Function: snapToPreview\n * \n * Called to snap the given point to the current preview. This snaps to the\n * first point of the preview if alt is not pressed.\n */\nmxConnectionHandler.prototype.snapToPreview = function(me, point)\n{\n\tif (!mxEvent.isAltDown(me.getEvent()) && this.previous != null)\n\t{\n\t\tvar tol = this.graph.gridSize * this.graph.view.scale / 2;\t\n\t\tvar tmp = (this.sourceConstraint != null) ? this.first :\n\t\t\tnew mxPoint(this.previous.getCenterX(), this.previous.getCenterY());\n\n\t\tif (Math.abs(tmp.x - me.getGraphX()) < tol)\n\t\t{\n\t\t\tpoint.x = tmp.x;\n\t\t}\n\t\t\n\t\tif (Math.abs(tmp.y - me.getGraphY()) < tol)\n\t\t{\n\t\t\tpoint.y = tmp.y;\n\t\t}\n\t}\t\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview edge or by highlighting\n * a possible source or target terminal.\n */\nmxConnectionHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && (this.ignoreMouseDown || this.first != null || !this.graph.isMouseDown))\n\t{\n\t\t// Handles special case when handler is disabled during highlight\n\t\tif (!this.isEnabled() && this.currentState != null)\n\t\t{\n\t\t\tthis.destroyIcons();\n\t\t\tthis.currentState = null;\n\t\t}\n\n\t\tvar view = this.graph.getView();\n\t\tvar scale = view.scale;\n\t\tvar tr = view.translate;\n\t\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\tthis.error = null;\n\n\t\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t\t{\n\t\t\tpoint = new mxPoint((this.graph.snap(point.x / scale - tr.x) + tr.x) * scale,\n\t\t\t\t(this.graph.snap(point.y / scale - tr.y) + tr.y) * scale);\n\t\t}\n\t\t\n\t\tthis.snapToPreview(me, point);\n\t\tthis.currentPoint = point;\n\t\t\n\t\tif ((this.first != null || (this.isEnabled() && this.graph.isEnabled())) &&\n\t\t\t(this.shape != null || this.first == null ||\n\t\t\tMath.abs(me.getGraphX() - this.first.x) > this.graph.tolerance ||\n\t\t\tMath.abs(me.getGraphY() - this.first.y) > this.graph.tolerance))\n\t\t{\n\t\t\tthis.updateCurrentState(me, point);\n\t\t}\n\n\t\tif (this.first != null)\n\t\t{\n\t\t\tvar constraint = null;\n\t\t\tvar current = point;\n\t\t\t\n\t\t\t// Uses the current point from the constraint handler if available\n\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t\t{\n\t\t\t\tconstraint = this.constraintHandler.currentConstraint;\n\t\t\t\tcurrent = this.constraintHandler.currentPoint.clone();\n\t\t\t}\n\t\t\telse if (this.previous != null && !this.graph.isIgnoreTerminalEvent(me.getEvent()) &&\n\t\t\t\tmxEvent.isShiftDown(me.getEvent()))\n\t\t\t{\n\t\t\t\tif (Math.abs(this.previous.getCenterX() - point.x) <\n\t\t\t\t\tMath.abs(this.previous.getCenterY() - point.y))\n\t\t\t\t{\n\t\t\t\t\tpoint.x = this.previous.getCenterX();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpoint.y = this.previous.getCenterY();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar pt2 = this.first;\n\t\t\t\n\t\t\t// Moves the connect icon with the mouse\n\t\t\tif (this.selectedIcon != null)\n\t\t\t{\n\t\t\t\tvar w = this.selectedIcon.bounds.width;\n\t\t\t\tvar h = this.selectedIcon.bounds.height;\n\t\t\t\t\n\t\t\t\tif (this.currentState != null && this.targetConnectImage)\n\t\t\t\t{\n\t\t\t\t\tvar pos = this.getIconPosition(this.selectedIcon, this.currentState);\n\t\t\t\t\tthis.selectedIcon.bounds.x = pos.x;\n\t\t\t\t\tthis.selectedIcon.bounds.y = pos.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar bounds = new mxRectangle(me.getGraphX() + this.connectIconOffset.x,\n\t\t\t\t\t\tme.getGraphY() + this.connectIconOffset.y, w, h);\n\t\t\t\t\tthis.selectedIcon.bounds = bounds;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.selectedIcon.redraw();\n\t\t\t}\n\n\t\t\t// Uses edge state to compute the terminal points\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tthis.updateEdgeState(current, constraint);\n\t\t\t\tcurrent = this.edgeState.absolutePoints[this.edgeState.absolutePoints.length - 1];\n\t\t\t\tpt2 = this.edgeState.absolutePoints[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.currentState != null)\n\t\t\t\t{\n\t\t\t\t\tif (this.constraintHandler.currentConstraint == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = this.getTargetPerimeterPoint(this.currentState, me);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent = tmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Computes the source perimeter point\n\t\t\t\tif (this.sourceConstraint == null && this.previous != null)\n\t\t\t\t{\n\t\t\t\t\tvar next = (this.waypoints != null && this.waypoints.length > 0) ?\n\t\t\t\t\t\t\tthis.waypoints[0] : current;\n\t\t\t\t\tvar tmp = this.getSourcePerimeterPoint(this.previous, next, me);\n\t\t\t\t\t\n\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt2 = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Makes sure the cell under the mousepointer can be detected\n\t\t\t// by moving the preview shape away from the mouse. This\n\t\t\t// makes sure the preview shape does not prevent the detection\n\t\t\t// of the cell under the mousepointer even for slow gestures.\n\t\t\tif (this.currentState == null && this.movePreviewAway)\n\t\t\t{\n\t\t\t\tvar tmp = pt2; \n\t\t\t\t\n\t\t\t\tif (this.edgeState != null && this.edgeState.absolutePoints.length >= 2)\n\t\t\t\t{\n\t\t\t\t\tvar tmp2 = this.edgeState.absolutePoints[this.edgeState.absolutePoints.length - 2];\n\t\t\t\t\t\n\t\t\t\t\tif (tmp2 != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = tmp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dx = current.x - tmp.x;\n\t\t\t\tvar dy = current.y - tmp.y;\n\t\t\t\t\n\t\t\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\t\n\t\t\t\tif (len == 0)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Stores old point to reuse when creating edge\n\t\t\t\tthis.originalPoint = current.clone();\n\t\t\t\tcurrent.x -= dx * 4 / len;\n\t\t\t\tcurrent.y -= dy * 4 / len;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.originalPoint = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Creates the preview shape (lazy)\n\t\t\tif (this.shape == null)\n\t\t\t{\n\t\t\t\tvar dx = Math.abs(me.getGraphX() - this.first.x);\n\t\t\t\tvar dy = Math.abs(me.getGraphY() - this.first.y);\n\n\t\t\t\tif (dx > this.graph.tolerance || dy > this.graph.tolerance)\n\t\t\t\t{\n\t\t\t\t\tthis.shape = this.createShape();\n\n\t\t\t\t\tif (this.edgeState != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shape.apply(this.edgeState);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Revalidates current connection\n\t\t\t\t\tthis.updateCurrentState(me, point);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Updates the points in the preview edge\n\t\t\tif (this.shape != null)\n\t\t\t{\n\t\t\t\tif (this.edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tthis.shape.points = this.edgeState.absolutePoints;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar pts = [pt2];\n\t\t\t\t\t\n\t\t\t\t\tif (this.waypoints != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpts = pts.concat(this.waypoints);\n\t\t\t\t\t}\n\n\t\t\t\t\tpts.push(current);\n\t\t\t\t\tthis.shape.points = pts;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.drawPreview();\n\t\t\t}\n\t\t\t\n\t\t\t// Makes sure endpoint of edge is visible during connect\n\t\t\tif (this.cursor != null)\n\t\t\t{\n\t\t\t\tthis.graph.container.style.cursor = this.cursor;\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(me.getEvent());\n\t\t\tme.consume();\n\t\t}\n\t\telse if (!this.isEnabled() || !this.graph.isEnabled())\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\telse if (this.previous != this.currentState && this.edgeState == null)\n\t\t{\n\t\t\tthis.destroyIcons();\n\t\t\t\n\t\t\t// Sets the cursor on the current shape\t\t\t\t\n\t\t\tif (this.currentState != null && this.error == null && this.constraintHandler.currentConstraint == null)\n\t\t\t{\n\t\t\t\tthis.icons = this.createIcons(this.currentState);\n\n\t\t\t\tif (this.icons == null)\n\t\t\t\t{\n\t\t\t\t\tthis.currentState.setCursor(mxConstants.CURSOR_CONNECT);\n\t\t\t\t\tme.consume();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.previous = this.currentState;\n\t\t}\n\t\telse if (this.previous == this.currentState && this.currentState != null && this.icons == null &&\n\t\t\t!this.graph.isMouseDown)\n\t\t{\n\t\t\t// Makes sure that no cursors are changed\n\t\t\tme.consume();\n\t\t}\n\n\t\tif (!this.graph.isMouseDown && this.currentState != null && this.icons != null)\n\t\t{\n\t\t\tvar hitsIcon = false;\n\t\t\tvar target = me.getSource();\n\t\t\t\n\t\t\tfor (var i = 0; i < this.icons.length && !hitsIcon; i++)\n\t\t\t{\n\t\t\t\thitsIcon = target == this.icons[i].node || target.parentNode == this.icons[i].node;\n\t\t\t}\n\n\t\t\tif (!hitsIcon)\n\t\t\t{\n\t\t\t\tthis.updateIcons(this.currentState, this.icons, me);\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.constraintHandler.reset();\n\t}\n};\n\n/**\n * Function: updateEdgeState\n * \n * Updates <edgeState>.\n */\nmxConnectionHandler.prototype.updateEdgeState = function(current, constraint)\n{\n\t// TODO: Use generic method for writing constraint to style\n\tif (this.sourceConstraint != null && this.sourceConstraint.point != null)\n\t{\n\t\tthis.edgeState.style[mxConstants.STYLE_EXIT_X] = this.sourceConstraint.point.x;\n\t\tthis.edgeState.style[mxConstants.STYLE_EXIT_Y] = this.sourceConstraint.point.y;\n\t}\n\n\tif (constraint != null && constraint.point != null)\n\t{\n\t\tthis.edgeState.style[mxConstants.STYLE_ENTRY_X] = constraint.point.x;\n\t\tthis.edgeState.style[mxConstants.STYLE_ENTRY_Y] = constraint.point.y;\n\t}\n\telse\n\t{\n\t\tdelete this.edgeState.style[mxConstants.STYLE_ENTRY_X];\n\t\tdelete this.edgeState.style[mxConstants.STYLE_ENTRY_Y];\n\t}\n\t\n\tthis.edgeState.absolutePoints = [null, (this.currentState != null) ? null : current];\n\tthis.graph.view.updateFixedTerminalPoint(this.edgeState, this.previous, true, this.sourceConstraint);\n\t\n\tif (this.currentState != null)\n\t{\n\t\tif (constraint == null)\n\t\t{\n\t\t\tconstraint = this.graph.getConnectionConstraint(this.edgeState, this.previous, false);\n\t\t}\n\t\t\n\t\tthis.edgeState.setAbsoluteTerminalPoint(null, false);\n\t\tthis.graph.view.updateFixedTerminalPoint(this.edgeState, this.currentState, false, constraint);\n\t}\n\t\n\t// Scales and translates the waypoints to the model\n\tvar realPoints = null;\n\t\n\tif (this.waypoints != null)\n\t{\n\t\trealPoints = [];\n\t\t\n\t\tfor (var i = 0; i < this.waypoints.length; i++)\n\t\t{\n\t\t\tvar pt = this.waypoints[i].clone();\n\t\t\tthis.convertWaypoint(pt);\n\t\t\trealPoints[i] = pt;\n\t\t}\n\t}\n\t\n\tthis.graph.view.updatePoints(this.edgeState, realPoints, this.previous, this.currentState);\n\tthis.graph.view.updateFloatingTerminalPoints(this.edgeState, this.previous, this.currentState);\n};\n\n/**\n * Function: getTargetPerimeterPoint\n * \n * Returns the perimeter point for the given target state.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the target cell state.\n * me - <mxMouseEvent> that represents the mouse move.\n */\nmxConnectionHandler.prototype.getTargetPerimeterPoint = function(state, me)\n{\n\tvar result = null;\n\tvar view = state.view;\n\tvar targetPerimeter = view.getPerimeterFunction(state);\n\t\n\tif (targetPerimeter != null)\n\t{\n\t\tvar next = (this.waypoints != null && this.waypoints.length > 0) ?\n\t\t\t\tthis.waypoints[this.waypoints.length - 1] :\n\t\t\t\tnew mxPoint(this.previous.getCenterX(), this.previous.getCenterY());\n\t\tvar tmp = targetPerimeter(view.getPerimeterBounds(state),\n\t\t\tthis.edgeState, next, false);\n\t\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tresult = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = new mxPoint(state.getCenterX(), state.getCenterY());\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getSourcePerimeterPoint\n * \n * Hook to update the icon position(s) based on a mouseOver event. This is\n * an empty implementation.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the target cell state.\n * next - <mxPoint> that represents the next point along the previewed edge.\n * me - <mxMouseEvent> that represents the mouse move.\n */\nmxConnectionHandler.prototype.getSourcePerimeterPoint = function(state, next, me)\n{\n\tvar result = null;\n\tvar view = state.view;\n\tvar sourcePerimeter = view.getPerimeterFunction(state);\n\tvar c = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\n\tif (sourcePerimeter != null)\n\t{\n\t\tvar theta = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0);\n\t\tvar rad = -theta * (Math.PI / 180);\n\t\t\n\t\tif (theta != 0)\n\t\t{\n\t\t\tnext = mxUtils.getRotatedPoint(new mxPoint(next.x, next.y), Math.cos(rad), Math.sin(rad), c);\n\t\t}\n\t\t\n\t\tvar tmp = sourcePerimeter(view.getPerimeterBounds(state), state, next, false);\n\t\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tif (theta != 0)\n\t\t\t{\n\t\t\t\ttmp = mxUtils.getRotatedPoint(new mxPoint(tmp.x, tmp.y), Math.cos(-rad), Math.sin(-rad), c);\n\t\t\t}\n\t\t\t\n\t\t\tresult = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = c;\n\t}\n\t\n\treturn result;\n};\n\n\n/**\n * Function: updateIcons\n * \n * Hook to update the icon position(s) based on a mouseOver event. This is\n * an empty implementation.\n * \n * Parameters:\n * \n * state - <mxCellState> under the mouse.\n * icons - Array of currently displayed icons.\n * me - <mxMouseEvent> that contains the mouse event.\n */\nmxConnectionHandler.prototype.updateIcons = function(state, icons, me)\n{\n\t// empty\n};\n\n/**\n * Function: isStopEvent\n * \n * Returns true if the given mouse up event should stop this handler. The\n * connection will be created if <error> is null. Note that this is only\n * called if <waypointsEnabled> is true. This implemtation returns true\n * if there is a cell state in the given event.\n */\nmxConnectionHandler.prototype.isStopEvent = function(me)\n{\n\treturn me.getState() != null;\n};\n\n/**\n * Function: addWaypoint\n * \n * Adds the waypoint for the given event to <waypoints>.\n */\nmxConnectionHandler.prototype.addWaypointForEvent = function(me)\n{\n\tvar point = mxUtils.convertPoint(this.graph.container, me.getX(), me.getY());\n\tvar dx = Math.abs(point.x - this.first.x);\n\tvar dy = Math.abs(point.y - this.first.y);\n\tvar addPoint = this.waypoints != null || (this.mouseDownCounter > 1 &&\n\t\t\t(dx > this.graph.tolerance || dy > this.graph.tolerance));\n\n\tif (addPoint)\n\t{\n\t\tif (this.waypoints == null)\n\t\t{\n\t\t\tthis.waypoints = [];\n\t\t}\n\t\t\n\t\tvar scale = this.graph.view.scale;\n\t\tvar point = new mxPoint(this.graph.snap(me.getGraphX() / scale) * scale,\n\t\t\t\tthis.graph.snap(me.getGraphY() / scale) * scale);\n\t\tthis.waypoints.push(point);\n\t}\n};\n\n/**\n * Function: checkConstraints\n * \n * Returns true if the connection for the given constraints is valid. This\n * implementation returns true if the constraints are not pointing to the\n * same fixed connection point.\n */\nmxConnectionHandler.prototype.checkConstraints = function(c1, c2)\n{\n\treturn (c1 == null || c2 == null || c1.point == null || c2.point == null ||\n\t\t!c1.point.equals(c2.point) || c1.dx != c2.dx || c1.dy != c2.dy ||\n\t\tc1.perimeter != c2.perimeter);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by inserting the new connection.\n */\nmxConnectionHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isConnecting())\n\t{\n\t\tif (this.waypointsEnabled && !this.isStopEvent(me))\n\t\t{\n\t\t\tthis.addWaypointForEvent(me);\n\t\t\tme.consume();\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar c1 = this.sourceConstraint;\n\t\tvar c2 = this.constraintHandler.currentConstraint;\n\n\t\tvar source = (this.previous != null) ? this.previous.cell : null;\n\t\tvar target = null;\n\t\t\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t{\n\t\t\ttarget = this.constraintHandler.currentFocus.cell;\n\t\t}\n\t\t\n\t\tif (target == null && this.currentState != null)\n\t\t{\n\t\t\ttarget = this.currentState.cell;\n\t\t}\n\t\t\n\t\t// Inserts the edge if no validation error exists and if constraints differ\n\t\tif (this.error == null && (source == null || target == null ||\n\t\t\tsource != target || this.checkConstraints(c1, c2)))\n\t\t{\n\t\t\tthis.connect(source, target, me.getEvent(), me.getCell());\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Selects the source terminal for self-references\n\t\t\tif (this.previous != null && this.marker.validState != null &&\n\t\t\t\tthis.previous.cell == this.marker.validState.cell)\n\t\t\t{\n\t\t\t\tthis.graph.selectCellForEvent(this.marker.source, me.getEvent());\n\t\t\t}\n\t\t\t\n\t\t\t// Displays the error message if it is not an empty string,\n\t\t\t// for empty error messages, the event is silently dropped\n\t\t\tif (this.error != null && this.error.length > 0)\n\t\t\t{\n\t\t\t\tthis.graph.validationAlert(this.error);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Redraws the connect icons and resets the handler state\n\t\tthis.destroyIcons();\n\t\tme.consume();\n\t}\n\n\tif (this.first != null)\n\t{\n\t\tthis.reset();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxConnectionHandler.prototype.reset = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\t// Resets the cursor on the container\n\tif (this.cursor != null && this.graph.container != null)\n\t{\n\t\tthis.graph.container.style.cursor = '';\n\t}\n\t\n\tthis.destroyIcons();\n\tthis.marker.reset();\n\tthis.constraintHandler.reset();\n\tthis.originalPoint = null;\n\tthis.currentPoint = null;\n\tthis.edgeState = null;\n\tthis.previous = null;\n\tthis.error = null;\n\tthis.sourceConstraint = null;\n\tthis.mouseDownCounter = 0;\n\tthis.first = null;\n\n\tthis.fireEvent(new mxEventObject(mxEvent.RESET));\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview edge using the color and width returned by\n * <getEdgeColor> and <getEdgeWidth>.\n */\nmxConnectionHandler.prototype.drawPreview = function()\n{\n\tthis.updatePreview(this.error == null);\n\tthis.shape.redraw();\n};\n\n/**\n * Function: getEdgeColor\n * \n * Returns the color used to draw the preview edge. This returns green if\n * there is no edge validation error and red otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the color for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.updatePreview = function(valid)\n{\n\tthis.shape.strokewidth = this.getEdgeWidth(valid);\n\tthis.shape.stroke = this.getEdgeColor(valid);\n};\n\n/**\n * Function: getEdgeColor\n * \n * Returns the color used to draw the preview edge. This returns green if\n * there is no edge validation error and red otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the color for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.getEdgeColor = function(valid)\n{\n\treturn (valid) ? mxConstants.VALID_COLOR : mxConstants.INVALID_COLOR;\n};\n\t\n/**\n * Function: getEdgeWidth\n * \n * Returns the width used to draw the preview edge. This returns 3 if\n * there is no edge validation error and 1 otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the width for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.getEdgeWidth = function(valid)\n{\n\treturn (valid) ? 3 : 1;\n};\n\n/**\n * Function: connect\n * \n * Connects the given source and target using a new edge. This\n * implementation uses <createEdge> to create the edge.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * evt - Mousedown event of the connect gesture.\n * dropTarget - <mxCell> that represents the cell under the mouse when it was\n * released.\n */\nmxConnectionHandler.prototype.connect = function(source, target, evt, dropTarget)\n{\n\tif (target != null || this.isCreateTarget(evt) || this.graph.allowDanglingEdges)\n\t{\n\t\t// Uses the common parent of source and target or\n\t\t// the default parent to insert the edge\n\t\tvar model = this.graph.getModel();\n\t\tvar terminalInserted = false;\n\t\tvar edge = null;\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (source != null && target == null && !this.graph.isIgnoreTerminalEvent(evt) && this.isCreateTarget(evt))\n\t\t\t{\n\t\t\t\ttarget = this.createTargetVertex(evt, source);\n\t\t\t\t\n\t\t\t\tif (target != null)\n\t\t\t\t{\n\t\t\t\t\tdropTarget = this.graph.getDropTarget([target], evt, dropTarget);\n\t\t\t\t\tterminalInserted = true;\n\t\t\t\t\t\n\t\t\t\t\t// Disables edges as drop targets if the target cell was created\n\t\t\t\t\t// FIXME: Should not shift if vertex was aligned (same in Java)\n\t\t\t\t\tif (dropTarget == null || !this.graph.getModel().isEdge(dropTarget))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pstate = this.graph.getView().getState(dropTarget);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (pstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar tmp = model.getGeometry(target);\n\t\t\t\t\t\t\ttmp.x -= pstate.origin.x;\n\t\t\t\t\t\t\ttmp.y -= pstate.origin.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdropTarget = this.graph.getDefaultParent();\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tthis.graph.addCell(target, dropTarget);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar parent = this.graph.getDefaultParent();\n\n\t\t\tif (source != null && target != null &&\n\t\t\t\tmodel.getParent(source) == model.getParent(target) &&\n\t\t\t\tmodel.getParent(model.getParent(source)) != model.getRoot())\n\t\t\t{\n\t\t\t\tparent = model.getParent(source);\n\n\t\t\t\tif ((source.geometry != null && source.geometry.relative) &&\n\t\t\t\t\t(target.geometry != null && target.geometry.relative))\n\t\t\t\t{\n\t\t\t\t\tparent = model.getParent(parent);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Uses the value of the preview edge state for inserting\n\t\t\t// the new edge into the graph\n\t\t\tvar value = null;\n\t\t\tvar style = null;\n\t\t\t\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tvalue = this.edgeState.cell.value;\n\t\t\t\tstyle = this.edgeState.cell.style;\n\t\t\t}\n\n\t\t\tedge = this.insertEdge(parent, null, value, source, target, style);\n\t\t\t\n\t\t\tif (edge != null)\n\t\t\t{\n\t\t\t\t// Updates the connection constraints\n\t\t\t\tthis.graph.setConnectionConstraint(edge, source, true, this.sourceConstraint);\n\t\t\t\tthis.graph.setConnectionConstraint(edge, target, false, this.constraintHandler.currentConstraint);\n\t\t\t\t\n\t\t\t\t// Uses geometry of the preview edge state\n\t\t\t\tif (this.edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tmodel.setGeometry(edge, this.edgeState.cell.geometry);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar parent = model.getParent(source);\n\t\t\t\t\n\t\t\t\t// Inserts edge before source\n\t\t\t\tif (this.isInsertBefore(edge, source, target, evt, dropTarget))\n\t\t\t\t{\n\t\t\t\t\tvar index = null;\n\t\t\t\t\tvar tmp = source;\n\n\t\t\t\t\twhile (tmp.parent != null && tmp.geometry != null &&\n\t\t\t\t\t\ttmp.geometry.relative && tmp.parent != edge.parent)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = this.graph.model.getParent(tmp);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tmp != null && tmp.parent != null && tmp.parent == edge.parent)\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.add(parent, edge, tmp.parent.getIndex(tmp));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Makes sure the edge has a non-null, relative geometry\n\t\t\t\tvar geo = model.getGeometry(edge);\n\n\t\t\t\tif (geo == null)\n\t\t\t\t{\n\t\t\t\t\tgeo = new mxGeometry();\n\t\t\t\t\tgeo.relative = true;\n\t\t\t\t\t\n\t\t\t\t\tmodel.setGeometry(edge, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Uses scaled waypoints in geometry\n\t\t\t\tif (this.waypoints != null && this.waypoints.length > 0)\n\t\t\t\t{\n\t\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\tvar tr = this.graph.view.translate;\n\t\t\t\t\tgeo.points = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < this.waypoints.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pt = this.waypoints[i];\n\t\t\t\t\t\tgeo.points.push(new mxPoint(pt.x / s - tr.x, pt.y / s - tr.y));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\tvar t = this.graph.view.translate;\n\t\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\tvar pt = (this.originalPoint != null) ?\n\t\t\t\t\t\t\tnew mxPoint(this.originalPoint.x / s - t.x, this.originalPoint.y / s - t.y) :\n\t\t\t\t\t\tnew mxPoint(this.currentPoint.x / s - t.x, this.currentPoint.y / s - t.y);\n\t\t\t\t\tpt.x -= this.graph.panDx / this.graph.view.scale;\n\t\t\t\t\tpt.y -= this.graph.panDy / this.graph.view.scale;\n\t\t\t\t\tgeo.setTerminalPoint(pt, false);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CONNECT, 'cell', edge, 'terminal', target,\n\t\t\t\t\t'event', evt, 'target', dropTarget, 'terminalInserted', terminalInserted));\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxLog.show();\n\t\t\tmxLog.debug(e.message);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t\t\n\t\tif (this.select)\n\t\t{\n\t\t\tthis.selectCells(edge, (terminalInserted) ? target : null);\n\t\t}\n\t}\n};\n\n/**\n * Function: selectCells\n * \n * Selects the given edge after adding a new connection. The target argument\n * contains the target vertex if one has been inserted.\n */\nmxConnectionHandler.prototype.selectCells = function(edge, target)\n{\n\tthis.graph.setSelectionCell(edge);\n};\n\n/**\n * Function: insertEdge\n * \n * Creates, inserts and returns the new edge for the given parameters. This\n * implementation does only use <createEdge> if <factoryMethod> is defined,\n * otherwise <mxGraph.insertEdge> will be used.\n */\nmxConnectionHandler.prototype.insertEdge = function(parent, id, value, source, target, style)\n{\n\tif (this.factoryMethod == null)\n\t{\n\t\treturn this.graph.insertEdge(parent, id, value, source, target, style);\n\t}\n\telse\n\t{\n\t\tvar edge = this.createEdge(value, source, target, style);\n\t\tedge = this.graph.addEdge(edge, parent, source, target);\n\t\t\n\t\treturn edge;\n\t}\n};\n\n/**\n * Function: createTargetVertex\n * \n * Hook method for creating new vertices on the fly if no target was\n * under the mouse. This is only called if <createTarget> is true and\n * returns null.\n * \n * Parameters:\n * \n * evt - Mousedown event of the connect gesture.\n * source - <mxCell> that represents the source terminal.\n */\nmxConnectionHandler.prototype.createTargetVertex = function(evt, source)\n{\n\t// Uses the first non-relative source\n\tvar geo = this.graph.getCellGeometry(source);\n\t\n\twhile (geo != null && geo.relative)\n\t{\n\t\tsource = this.graph.getModel().getParent(source);\n\t\tgeo = this.graph.getCellGeometry(source);\n\t}\n\t\n\tvar clone = this.graph.cloneCell(source);\n\tvar geo = this.graph.getModel().getGeometry(clone);\n\t\n\tif (geo != null)\n\t{\n\t\tvar t = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\tvar point = new mxPoint(this.currentPoint.x / s - t.x, this.currentPoint.y / s - t.y);\n\t\tgeo.x = Math.round(point.x - geo.width / 2 - this.graph.panDx / s);\n\t\tgeo.y = Math.round(point.y - geo.height / 2 - this.graph.panDy / s);\n\n\t\t// Aligns with source if within certain tolerance\n\t\tvar tol = this.getAlignmentTolerance();\n\t\t\n\t\tif (tol > 0)\n\t\t{\n\t\t\tvar sourceState = this.graph.view.getState(source);\n\t\t\t\n\t\t\tif (sourceState != null)\n\t\t\t{\n\t\t\t\tvar x = sourceState.x / s - t.x;\n\t\t\t\tvar y = sourceState.y / s - t.y;\n\t\t\t\t\n\t\t\t\tif (Math.abs(x - geo.x) <= tol)\n\t\t\t\t{\n\t\t\t\t\tgeo.x = Math.round(x);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(y - geo.y) <= tol)\n\t\t\t\t{\n\t\t\t\t\tgeo.y = Math.round(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn clone;\t\t\n};\n\n/**\n * Function: getAlignmentTolerance\n * \n * Returns the tolerance for aligning new targets to sources. This returns the grid size / 2.\n */\nmxConnectionHandler.prototype.getAlignmentTolerance = function(evt)\n{\n\treturn (this.graph.isGridEnabled()) ? this.graph.gridSize / 2 : this.graph.tolerance;\n};\n\n/**\n * Function: createEdge\n * \n * Creates and returns a new edge using <factoryMethod> if one exists. If\n * no factory method is defined, then a new default edge is returned. The\n * source and target arguments are informal, the actual connection is\n * setup later by the caller of this function.\n * \n * Parameters:\n * \n * value - Value to be used for creating the edge.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * style - Optional style from the preview edge.\n */\nmxConnectionHandler.prototype.createEdge = function(value, source, target, style)\n{\n\tvar edge = null;\n\t\n\t// Creates a new edge using the factoryMethod\n\tif (this.factoryMethod != null)\n\t{\n\t\tedge = this.factoryMethod(source, target, style);\n\t}\n\t\n\tif (edge == null)\n\t{\n\t\tedge = new mxCell(value || '');\n\t\tedge.setEdge(true);\n\t\tedge.setStyle(style);\n\t\t\n\t\tvar geo = new mxGeometry();\n\t\tgeo.relative = true;\n\t\tedge.setGeometry(geo);\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This should be\n * called on all instances. It is called automatically for the built-in\n * instance created for each <mxGraph>.\n */\nmxConnectionHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.destroy();\n\t\tthis.marker = null;\n\t}\n\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.destroy();\n\t\tthis.constraintHandler = null;\n\t}\n\n\tif (this.changeHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t\tthis.graph.getView().removeListener(this.changeHandler);\n\t\tthis.changeHandler = null;\n\t}\n\t\n\tif (this.drillHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.drillHandler);\n\t\tthis.graph.getView().removeListener(this.drillHandler);\n\t\tthis.drillHandler = null;\n\t}\n\t\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConstraintHandler\n *\n * Handles constraints on connection targets. This class is in charge of\n * showing fixed points when the mouse is over a vertex and handles constraints\n * to establish new connections.\n *\n * Constructor: mxConstraintHandler\n *\n * Constructs an new constraint handler.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * factoryMethod - Optional function to create the edge. The function takes\n * the source and target <mxCell> as the first and second argument and\n * returns the <mxCell> that represents the new edge.\n */\nfunction mxConstraintHandler(graph)\n{\n\tthis.graph = graph;\n\t\n\t// Adds a graph model listener to update the current focus on changes\n\tthis.resetHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.currentFocus != null && this.graph.view.getState(this.currentFocus.cell) == null)\n\t\t{\n\t\t\tthis.reset();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.redraw();\n\t\t}\n\t});\n\t\n\tthis.graph.model.addListener(mxEvent.CHANGE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE_AND_TRANSLATE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.TRANSLATE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE, this.resetHandler);\n\tthis.graph.addListener(mxEvent.ROOT, this.resetHandler);\n};\n\n/**\n * Variable: pointImage\n * \n * <mxImage> to be used as the image for fixed connection points.\n */\nmxConstraintHandler.prototype.pointImage = new mxImage(mxClient.imageBasePath + '/point.gif', 5, 5);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxConstraintHandler.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxConstraintHandler.prototype.enabled = true;\n\n/**\n * Variable: highlightColor\n * \n * Specifies the color for the highlight. Default is <mxConstants.DEFAULT_VALID_COLOR>.\n */\nmxConstraintHandler.prototype.highlightColor = mxConstants.DEFAULT_VALID_COLOR;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxConstraintHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxConstraintHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxConstraintHandler.prototype.reset = function()\n{\n\tif (this.focusIcons != null)\n\t{\n\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t{\n\t\t\tthis.focusIcons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.focusIcons = null;\n\t}\n\t\n\tif (this.focusHighlight != null)\n\t{\n\t\tthis.focusHighlight.destroy();\n\t\tthis.focusHighlight = null;\n\t}\n\t\n\tthis.currentConstraint = null;\n\tthis.currentFocusArea = null;\n\tthis.currentPoint = null;\n\tthis.currentFocus = null;\n\tthis.focusPoints = null;\n};\n\n/**\n * Function: getTolerance\n * \n * Returns the tolerance to be used for intersecting connection points. This\n * implementation returns <mxGraph.tolerance>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> whose tolerance should be returned.\n */\nmxConstraintHandler.prototype.getTolerance = function(me)\n{\n\treturn this.graph.getTolerance();\n};\n\n/**\n * Function: getImageForConstraint\n * \n * Returns the tolerance to be used for intersecting connection points.\n */\nmxConstraintHandler.prototype.getImageForConstraint = function(state, constraint, point)\n{\n\treturn this.pointImage;\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the given <mxMouseEvent> should be ignored in <update>. This\n * implementation always returns false.\n */\nmxConstraintHandler.prototype.isEventIgnored = function(me, source)\n{\n\treturn false;\n};\n\n/**\n * Function: isStateIgnored\n * \n * Returns true if the given state should be ignored. This always returns false.\n */\nmxConstraintHandler.prototype.isStateIgnored = function(state, source)\n{\n\treturn false;\n};\n\n/**\n * Function: destroyIcons\n * \n * Destroys the <focusIcons> if they exist.\n */\nmxConstraintHandler.prototype.destroyIcons = function()\n{\n\tif (this.focusIcons != null)\n\t{\n\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t{\n\t\t\tthis.focusIcons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.focusIcons = null;\n\t\tthis.focusPoints = null;\n\t}\n};\n\n/**\n * Function: destroyFocusHighlight\n * \n * Destroys the <focusHighlight> if one exists.\n */\nmxConstraintHandler.prototype.destroyFocusHighlight = function()\n{\n\tif (this.focusHighlight != null)\n\t{\n\t\tthis.focusHighlight.destroy();\n\t\tthis.focusHighlight = null;\n\t}\n};\n\n/**\n * Function: isKeepFocusEvent\n * \n * Returns true if the current focused state should not be changed for the given event.\n * This returns true if shift and alt are pressed.\n */\nmxConstraintHandler.prototype.isKeepFocusEvent = function(me)\n{\n\treturn mxEvent.isShiftDown(me.getEvent());\n};\n\n/**\n * Function: getCellForEvent\n * \n * Returns the cell for the given event.\n */\nmxConstraintHandler.prototype.getCellForEvent = function(me, point)\n{\n\tvar cell = me.getCell();\n\t\n\t// Gets cell under actual point if different from event location\n\tif (cell == null && point != null && (me.getGraphX() != point.x || me.getGraphY() != point.y))\n\t{\n\t\tcell = this.graph.getCellAt(point.x, point.y);\n\t}\n\t\n\t// Uses connectable parent vertex if one exists\n\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\n\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t{\n\t\t\tcell = parent;\n\t\t}\n\t}\n\t\n\treturn (this.graph.isCellLocked(cell)) ? null : cell;\n};\n\n/**\n * Function: update\n * \n * Updates the state of this handler based on the given <mxMouseEvent>.\n * Source is a boolean indicating if the cell is a source or target.\n */\nmxConstraintHandler.prototype.update = function(me, source, existingEdge, point)\n{\n\tif (this.isEnabled() && !this.isEventIgnored(me))\n\t{\n\t\t// Lazy installation of mouseleave handler\n\t\tif (this.mouseleaveHandler == null && this.graph.container != null)\n\t\t{\n\t\t\tthis.mouseleaveHandler = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.reset();\n\t\t\t});\n\n\t\t\tmxEvent.addListener(this.graph.container, 'mouseleave', this.resetHandler);\t\n\t\t}\n\t\t\n\t\tvar tol = this.getTolerance(me);\n\t\tvar x = (point != null) ? point.x : me.getGraphX();\n\t\tvar y = (point != null) ? point.y : me.getGraphY();\n\t\tvar grid = new mxRectangle(x - tol, y - tol, 2 * tol, 2 * tol);\n\t\tvar mouse = new mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol);\n\t\tvar state = this.graph.view.getState(this.getCellForEvent(me, point));\n\n\t\t// Keeps focus icons visible while over vertex bounds and no other cell under mouse or shift is pressed\n\t\tif (!this.isKeepFocusEvent(me) && (this.currentFocusArea == null || this.currentFocus == null ||\n\t\t\t(state != null) || !this.graph.getModel().isVertex(this.currentFocus.cell) ||\n\t\t\t!mxUtils.intersects(this.currentFocusArea, mouse)) && (state != this.currentFocus))\n\t\t{\n\t\t\tthis.currentFocusArea = null;\n\t\t\tthis.currentFocus = null;\n\t\t\tthis.setFocus(me, state, source);\n\t\t}\n\n\t\tthis.currentConstraint = null;\n\t\tthis.currentPoint = null;\n\t\tvar minDistSq = null;\n\t\t\n\t\tif (this.focusIcons != null && this.constraints != null &&\n\t\t\t(state == null || this.currentFocus == state))\n\t\t{\n\t\t\tvar cx = mouse.getCenterX();\n\t\t\tvar cy = mouse.getCenterY();\n\t\t\t\n\t\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t\t{\n\t\t\t\tvar dx = cx - this.focusIcons[i].bounds.getCenterX();\n\t\t\t\tvar dy = cy - this.focusIcons[i].bounds.getCenterY();\n\t\t\t\tvar tmp = dx * dx + dy * dy;\n\t\t\t\t\n\t\t\t\tif ((this.intersects(this.focusIcons[i], mouse, source, existingEdge) || (point != null &&\n\t\t\t\t\tthis.intersects(this.focusIcons[i], grid, source, existingEdge))) &&\n\t\t\t\t\t(minDistSq == null || tmp < minDistSq))\n\t\t\t\t{\n\t\t\t\t\tthis.currentConstraint = this.constraints[i];\n\t\t\t\t\tthis.currentPoint = this.focusPoints[i];\n\t\t\t\t\tminDistSq = tmp;\n\t\t\t\t\t\n\t\t\t\t\tvar tmp = this.focusIcons[i].bounds.clone();\n\t\t\t\t\ttmp.grow(mxConstants.HIGHLIGHT_SIZE + 1);\n\t\t\t\t\ttmp.width -= 1;\n\t\t\t\t\ttmp.height -= 1;\n\t\t\t\t\t\n\t\t\t\t\tif (this.focusHighlight == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar hl = this.createHighlightShape();\n\t\t\t\t\t\thl.dialect = (this.graph.dialect == mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\t\t\tmxConstants.DIALECT_SVG : mxConstants.DIALECT_VML;\n\t\t\t\t\t\thl.pointerEvents = false;\n\n\t\t\t\t\t\thl.init(this.graph.getView().getOverlayPane());\n\t\t\t\t\t\tthis.focusHighlight = hl;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar getState = mxUtils.bind(this, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn (this.currentFocus != null) ? this.currentFocus : state;\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\tmxEvent.redirectMouseEvents(hl.node, this.graph, getState);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.focusHighlight.bounds = tmp;\n\t\t\t\t\tthis.focusHighlight.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.currentConstraint == null)\n\t\t{\n\t\t\tthis.destroyFocusHighlight();\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.currentConstraint = null;\n\t\tthis.currentFocus = null;\n\t\tthis.currentPoint = null;\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Transfers the focus to the given state as a source or target terminal. If\n * the handler is not enabled then the outline is painted, but the constraints\n * are ignored.\n */\nmxConstraintHandler.prototype.redraw = function()\n{\n\tif (this.currentFocus != null && this.constraints != null && this.focusIcons != null)\n\t{\n\t\tvar state = this.graph.view.getState(this.currentFocus.cell);\n\t\tthis.currentFocus = state;\n\t\tthis.currentFocusArea = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\n\t\tfor (var i = 0; i < this.constraints.length; i++)\n\t\t{\n\t\t\tvar cp = this.graph.getConnectionPoint(state, this.constraints[i]);\n\t\t\tvar img = this.getImageForConstraint(state, this.constraints[i], cp);\n\n\t\t\tvar bounds = new mxRectangle(Math.round(cp.x - img.width / 2),\n\t\t\t\tMath.round(cp.y - img.height / 2), img.width, img.height);\n\t\t\tthis.focusIcons[i].bounds = bounds;\n\t\t\tthis.focusIcons[i].redraw();\n\t\t\tthis.currentFocusArea.add(this.focusIcons[i].bounds);\n\t\t\tthis.focusPoints[i] = cp;\n\t\t}\n\t}\t\n};\n\n/**\n * Function: setFocus\n * \n * Transfers the focus to the given state as a source or target terminal. If\n * the handler is not enabled then the outline is painted, but the constraints\n * are ignored.\n */\nmxConstraintHandler.prototype.setFocus = function(me, state, source)\n{\n\tthis.constraints = (state != null && !this.isStateIgnored(state, source) &&\n\t\tthis.graph.isCellConnectable(state.cell)) ? ((this.isEnabled()) ?\n\t\t(this.graph.getAllConnectionConstraints(state, source) || []) : []) : null;\n\n\t// Only uses cells which have constraints\n\tif (this.constraints != null)\n\t{\n\t\tthis.currentFocus = state;\n\t\tthis.currentFocusArea = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\n\t\tif (this.focusIcons != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t\t{\n\t\t\t\tthis.focusIcons[i].destroy();\n\t\t\t}\n\t\t\t\n\t\t\tthis.focusIcons = null;\n\t\t\tthis.focusPoints = null;\n\t\t}\n\t\t\n\t\tthis.focusPoints = [];\n\t\tthis.focusIcons = [];\n\t\t\n\t\tfor (var i = 0; i < this.constraints.length; i++)\n\t\t{\n\t\t\tvar cp = this.graph.getConnectionPoint(state, this.constraints[i]);\n\t\t\tvar img = this.getImageForConstraint(state, this.constraints[i], cp);\n\n\t\t\tvar src = img.src;\n\t\t\tvar bounds = new mxRectangle(Math.round(cp.x - img.width / 2),\n\t\t\t\tMath.round(cp.y - img.height / 2), img.width, img.height);\n\t\t\tvar icon = new mxImageShape(bounds, src);\n\t\t\ticon.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\t\ticon.preserveImageAspect = false;\n\t\t\ticon.init(this.graph.getView().getDecoratorPane());\n\t\t\t\n\t\t\t// Fixes lost event tracking for images in quirks / IE8 standards\n\t\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(icon.node, 'dragstart', function(evt)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// Move the icon behind all other overlays\n\t\t\tif (icon.node.previousSibling != null)\n\t\t\t{\n\t\t\t\ticon.node.parentNode.insertBefore(icon.node, icon.node.parentNode.firstChild);\n\t\t\t}\n\n\t\t\tvar getState = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\treturn (this.currentFocus != null) ? this.currentFocus : state;\n\t\t\t});\n\t\t\t\n\t\t\ticon.redraw();\n\n\t\t\tmxEvent.redirectMouseEvents(icon.node, this.graph, getState);\n\t\t\tthis.currentFocusArea.add(icon.bounds);\n\t\t\tthis.focusIcons.push(icon);\n\t\t\tthis.focusPoints.push(cp);\n\t\t}\n\t\t\n\t\tthis.currentFocusArea.grow(this.getTolerance(me));\n\t}\n\telse\n\t{\n\t\tthis.destroyIcons();\n\t\tthis.destroyFocusHighlight();\n\t}\n};\n\n/**\n * Function: createHighlightShape\n * \n * Create the shape used to paint the highlight.\n * \n * Returns true if the given icon intersects the given point.\n */\nmxConstraintHandler.prototype.createHighlightShape = function()\n{\n\tvar hl = new mxRectangleShape(null, this.highlightColor, this.highlightColor, mxConstants.HIGHLIGHT_STROKEWIDTH);\n\thl.opacity = mxConstants.HIGHLIGHT_OPACITY;\n\t\n\treturn hl;\n};\n\n/**\n * Function: intersects\n * \n * Returns true if the given icon intersects the given rectangle.\n */\nmxConstraintHandler.prototype.intersects = function(icon, mouse, source, existingEdge)\n{\n\treturn mxUtils.intersects(icon.bounds, mouse);\n};\n\n/**\n * Function: destroy\n * \n * Destroy this handler.\n */\nmxConstraintHandler.prototype.destroy = function()\n{\n\tthis.reset();\n\t\n\tif (this.resetHandler != null)\n\t{\n\t\tthis.graph.model.removeListener(this.resetHandler);\n\t\tthis.graph.view.removeListener(this.resetHandler);\n\t\tthis.graph.removeListener(this.resetHandler);\n\t\tthis.resetHandler = null;\n\t}\n\t\n\tif (this.mouseleaveHandler != null && this.graph.container != null)\n\t{\n\t\tmxEvent.removeListener(this.graph.container, 'mouseleave', this.mouseleaveHandler);\n\t\tthis.mouseleaveHandler = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\n/**\n * Class: mxRubberband\n * \n * Event handler that selects rectangular regions. This is not built-into\n * <mxGraph>. To enable rubberband selection in a graph, use the following code.\n * \n * Example:\n * \n * (code)\n * var rubberband = new mxRubberband(graph);\n * (end)\n * \n * Constructor: mxRubberband\n * \n * Constructs an event handler that selects rectangular regions in the graph\n * using rubberband selection.\n */\nfunction mxRubberband(graph)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.graph.addMouseListener(this);\n\n\t\t// Handles force rubberband event\n\t\tthis.forceRubberbandHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar evtName = evt.getProperty('eventName');\n\t\t\tvar me = evt.getProperty('event');\n\t\t\t\n\t\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isForceRubberbandEvent(me))\n\t\t\t{\n\t\t\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\t\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\t\t\torigin.x -= offset.x;\n\t\t\t\torigin.y -= offset.y;\n\t\t\t\tthis.start(me.getX() + origin.x, me.getY() + origin.y);\n\t\t\t\tme.consume(false);\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.forceRubberbandHandler);\n\t\t\n\t\t// Repaints the marquee after autoscroll\n\t\tthis.panHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.repaint();\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.PAN, this.panHandler);\n\t\t\n\t\t// Does not show menu if any touch gestures take place after the trigger\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tif (this.first != null)\n\t\t\t{\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\t// Automatic deallocation of memory\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload',\n\t\t\t\tmxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tthis.destroy();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Variable: defaultOpacity\n * \n * Specifies the default opacity to be used for the rubberband div. Default\n * is 20.\n */\nmxRubberband.prototype.defaultOpacity = 20;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxRubberband.prototype.enabled = true;\n\n/**\n * Variable: div\n * \n * Holds the DIV element which is currently visible.\n */\nmxRubberband.prototype.div = null;\n\n/**\n * Variable: sharedDiv\n * \n * Holds the DIV element which is used to display the rubberband.\n */\nmxRubberband.prototype.sharedDiv = null;\n\n/**\n * Variable: currentX\n * \n * Holds the value of the x argument in the last call to <update>.\n */\nmxRubberband.prototype.currentX = 0;\n\n/**\n * Variable: currentY\n * \n * Holds the value of the y argument in the last call to <update>.\n */\nmxRubberband.prototype.currentY = 0;\n\n/**\n * Variable: fadeOut\n * \n * Optional fade out effect. Default is false.\n */\nmxRubberband.prototype.fadeOut = false;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation returns\n * <enabled>.\n */\nmxRubberband.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation updates\n * <enabled>.\n */\nmxRubberband.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isForceRubberbandEvent\n * \n * Returns true if the given <mxMouseEvent> should start rubberband selection.\n * This implementation returns true if the alt key is pressed.\n */\nmxRubberband.prototype.isForceRubberbandEvent = function(me)\n{\n\treturn mxEvent.isAltDown(me.getEvent());\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a rubberband selection. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxRubberband.prototype.mouseDown = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isEnabled() && this.graph.isEnabled() &&\n\t\tme.getState() == null && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\torigin.x -= offset.x;\n\t\torigin.y -= offset.y;\n\t\tthis.start(me.getX() + origin.x, me.getY() + origin.y);\n\n\t\t// Does not prevent the default for this event so that the\n\t\t// event processing chain is still executed even if we start\n\t\t// rubberbanding. This is required eg. in ExtJs to hide the\n\t\t// current context menu. In mouseMove we'll make sure we're\n\t\t// not selecting anything while we're rubberbanding.\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: start\n * \n * Sets the start point for the rubberband selection.\n */\nmxRubberband.prototype.start = function(x, y)\n{\n\tthis.first = new mxPoint(x, y);\n\n\tvar container = this.graph.container;\n\t\n\tfunction createMouseEvent(evt)\n\t{\n\t\tvar me = new mxMouseEvent(evt);\n\t\tvar pt = mxUtils.convertPoint(container, me.getX(), me.getY());\n\t\t\n\t\tme.graphX = pt.x;\n\t\tme.graphY = pt.y;\n\t\t\n\t\treturn me;\n\t};\n\n\tthis.dragHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseMove(this.graph, createMouseEvent(evt));\n\t});\n\n\tthis.dropHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseUp(this.graph, createMouseEvent(evt));\n\t});\n\n\t// Workaround for rubberband stopping if the mouse leaves the container in Firefox\n\tif (mxClient.IS_FF)\n\t{\n\t\tmxEvent.addGestureListeners(document, null, this.dragHandler, this.dropHandler);\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating therubberband selection.\n */\nmxRubberband.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && this.first != null)\n\t{\n\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\torigin.x -= offset.x;\n\t\torigin.y -= offset.y;\n\t\tvar x = me.getX() + origin.x;\n\t\tvar y = me.getY() + origin.y;\n\t\tvar dx = this.first.x - x;\n\t\tvar dy = this.first.y - y;\n\t\tvar tol = this.graph.tolerance;\n\t\t\n\t\tif (this.div != null || Math.abs(dx) > tol ||  Math.abs(dy) > tol)\n\t\t{\n\t\t\tif (this.div == null)\n\t\t\t{\n\t\t\t\tthis.div = this.createShape();\n\t\t\t}\n\t\t\t\n\t\t\t// Clears selection while rubberbanding. This is required because\n\t\t\t// the event is not consumed in mouseDown.\n\t\t\tmxUtils.clearSelection();\n\t\t\t\n\t\t\tthis.update(x, y);\n\t\t\tme.consume();\n\t\t}\n\t}\n};\n\n/**\n * Function: createShape\n * \n * Creates the rubberband selection shape.\n */\nmxRubberband.prototype.createShape = function()\n{\n\tif (this.sharedDiv == null)\n\t{\n\t\tthis.sharedDiv = document.createElement('div');\n\t\tthis.sharedDiv.className = 'mxRubberband';\n\t\tmxUtils.setOpacity(this.sharedDiv, this.defaultOpacity);\n\t}\n\n\tthis.graph.container.appendChild(this.sharedDiv);\n\tvar result = this.sharedDiv;\n\t\n\tif (mxClient.IS_SVG && (!mxClient.IS_IE || document.documentMode >= 10) && this.fadeOut)\n\t{\n\t\tthis.sharedDiv = null;\n\t}\n\t\t\n\treturn result;\n};\n\n/**\n * Function: isActive\n * \n * Returns true if this handler is active.\n */\nmxRubberband.prototype.isActive = function(sender, me)\n{\n\treturn this.div != null && this.div.style.display != 'none';\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by selecting the region of the rubberband using\n * <mxGraph.selectRegion>.\n */\nmxRubberband.prototype.mouseUp = function(sender, me)\n{\n\tvar active = this.isActive();\n\tthis.reset();\n\t\n\tif (active)\n\t{\n\t\tthis.execute(me.getEvent());\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: execute\n * \n * Resets the state of this handler and selects the current region\n * for the given event.\n */\nmxRubberband.prototype.execute = function(evt)\n{\n\tvar rect = new mxRectangle(this.x, this.y, this.width, this.height);\n\tthis.graph.selectRegion(rect, evt);\n};\n\n/**\n * Function: reset\n * \n * Resets the state of the rubberband selection.\n */\nmxRubberband.prototype.reset = function()\n{\n\tif (this.div != null)\n\t{\n\t\tif (mxClient.IS_SVG && (!mxClient.IS_IE || document.documentMode >= 10) && this.fadeOut)\n\t\t{\n\t\t\tvar temp = this.div;\n\t\t\tmxUtils.setPrefixedStyle(temp.style, 'transition', 'all 0.2s linear');\n\t\t\ttemp.style.pointerEvents = 'none';\n\t\t\ttemp.style.opacity = 0;\n\t\t    \n\t\t    window.setTimeout(function()\n\t\t    \t{\n\t\t    \t\ttemp.parentNode.removeChild(temp);\n\t\t    \t}, 200);\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t}\n\n\tmxEvent.removeGestureListeners(document, null, this.dragHandler, this.dropHandler);\n\tthis.dragHandler = null;\n\tthis.dropHandler = null;\n\t\n\tthis.currentX = 0;\n\tthis.currentY = 0;\n\tthis.first = null;\n\tthis.div = null;\n};\n\n/**\n * Function: update\n * \n * Sets <currentX> and <currentY> and calls <repaint>.\n */\nmxRubberband.prototype.update = function(x, y)\n{\n\tthis.currentX = x;\n\tthis.currentY = y;\n\t\n\tthis.repaint();\n};\n\n/**\n * Function: repaint\n * \n * Computes the bounding box and updates the style of the <div>.\n */\nmxRubberband.prototype.repaint = function()\n{\n\tif (this.div != null)\n\t{\n\t\tvar x = this.currentX - this.graph.panDx;\n\t\tvar y = this.currentY - this.graph.panDy;\n\t\t\n\t\tthis.x = Math.min(this.first.x, x);\n\t\tthis.y = Math.min(this.first.y, y);\n\t\tthis.width = Math.max(this.first.x, x) - this.x;\n\t\tthis.height =  Math.max(this.first.y, y) - this.y;\n\n\t\tvar dx = (mxClient.IS_VML) ? this.graph.panDx : 0;\n\t\tvar dy = (mxClient.IS_VML) ? this.graph.panDy : 0;\n\t\t\n\t\tthis.div.style.left = (this.x + dx) + 'px';\n\t\tthis.div.style.top = (this.y + dy) + 'px';\n\t\tthis.div.style.width = Math.max(1, this.width) + 'px';\n\t\tthis.div.style.height = Math.max(1, this.height) + 'px';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This does\n * normally not need to be called, it is called automatically when the\n * window unloads.\n */\nmxRubberband.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\t\tthis.graph.removeMouseListener(this);\n\t\tthis.graph.removeListener(this.forceRubberbandHandler);\n\t\tthis.graph.removeListener(this.panHandler);\n\t\tthis.reset();\n\t\t\n\t\tif (this.sharedDiv != null)\n\t\t{\n\t\t\tthis.sharedDiv = null;\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHandle\n * \n * Implements a single custom handle for vertices.\n * \n * Constructor: mxHandle\n * \n * Constructs a new handle for the given state.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be handled.\n */\nfunction mxHandle(state, cursor, image)\n{\n\tthis.graph = state.view.graph;\n\tthis.state = state;\n\tthis.cursor = (cursor != null) ? cursor : this.cursor;\n\tthis.image = (image != null) ? image : this.image;\n\tthis.init();\n};\n\n/**\n * Variable: cursor\n * \n * Specifies the cursor to be used for this handle. Default is 'default'.\n */\nmxHandle.prototype.cursor = 'default';\n\n/**\n * Variable: image\n * \n * Specifies the <mxImage> to be used to render the handle. Default is null.\n */\nmxHandle.prototype.image = null;\n\n/**\n * Variable: ignoreGrid\n * \n * Default is false.\n */\nmxHandle.prototype.ignoreGrid = false;\n\n/**\n * Function: getPosition\n * \n * Hook for subclassers to return the current position of the handle.\n */\nmxHandle.prototype.getPosition = function(bounds) { };\n\n/**\n * Function: setPosition\n * \n * Hooks for subclassers to update the style in the <state>.\n */\nmxHandle.prototype.setPosition = function(bounds, pt, me) { };\n\n/**\n * Function: execute\n * \n * Hook for subclassers to execute the handle.\n */\nmxHandle.prototype.execute = function() { };\n\n/**\n * Function: copyStyle\n * \n * Sets the cell style with the given name to the corresponding value in <state>.\n */\nmxHandle.prototype.copyStyle = function(key)\n{\n\tthis.graph.setCellStyles(key, this.state.style[key], [this.state.cell]);\n};\n\n/**\n * Function: processEvent\n * \n * Processes the given <mxMouseEvent> and invokes <setPosition>.\n */\nmxHandle.prototype.processEvent = function(me)\n{\n\tvar scale = this.graph.view.scale;\n\tvar tr = this.graph.view.translate;\n\tvar pt = new mxPoint(me.getGraphX() / scale - tr.x, me.getGraphY() / scale - tr.y);\n\t\n\t// Center shape on mouse cursor\n\tif (this.shape != null && this.shape.bounds != null)\n\t{\n\t\tpt.x -= this.shape.bounds.width / scale / 4;\n\t\tpt.y -= this.shape.bounds.height / scale / 4;\n\t}\n\n\t// Snaps to grid for the rotated position then applies the rotation for the direction after that\n\tvar alpha1 = -mxUtils.toRadians(this.getRotation());\n\tvar alpha2 = -mxUtils.toRadians(this.getTotalRotation()) - alpha1;\n\tpt = this.flipPoint(this.rotatePoint(this.snapPoint(this.rotatePoint(pt, alpha1),\n\t\t\tthis.ignoreGrid || !this.graph.isGridEnabledEvent(me.getEvent())), alpha2));\n\tthis.setPosition(this.state.getPaintBounds(), pt, me);\n\tthis.positionChanged();\n\tthis.redraw();\n};\n\n/**\n * Function: positionChanged\n * \n * Called after <setPosition> has been called in <processEvent>. This repaints\n * the state using <mxCellRenderer>.\n */\nmxHandle.prototype.positionChanged = function()\n{\n\tif (this.state.text != null)\n\t{\n\t\tthis.state.text.apply(this.state);\n\t}\n\t\n\tif (this.state.shape != null)\n\t{\n\t\tthis.state.shape.apply(this.state);\n\t}\n\t\n\tthis.graph.cellRenderer.redraw(this.state, true);\n};\n\n/**\n * Function: getRotation\n * \n * Returns the rotation defined in the style of the cell.\n */\nmxHandle.prototype.getRotation = function()\n{\n\tif (this.state.shape != null)\n\t{\n\t\treturn this.state.shape.getRotation();\n\t}\n\t\n\treturn 0;\n};\n\n/**\n * Function: getTotalRotation\n * \n * Returns the rotation from the style and the rotation from the direction of\n * the cell.\n */\nmxHandle.prototype.getTotalRotation = function()\n{\n\tif (this.state.shape != null)\n\t{\n\t\treturn this.state.shape.getShapeRotation();\n\t}\n\t\n\treturn 0;\n};\n\n/**\n * Function: init\n * \n * Creates and initializes the shapes required for this handle.\n */\nmxHandle.prototype.init = function()\n{\n\tvar html = this.isHtmlRequired();\n\t\n\tif (this.image != null)\n\t{\n\t\tthis.shape = new mxImageShape(new mxRectangle(0, 0, this.image.width, this.image.height), this.image.src);\n\t\tthis.shape.preserveImageAspect = false;\n\t}\n\telse\n\t{\n\t\tthis.shape = this.createShape(html);\n\t}\n\t\n\tthis.initShape(html);\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the shape for this handle.\n */\nmxHandle.prototype.createShape = function(html)\n{\n\tvar bounds = new mxRectangle(0, 0, mxConstants.HANDLE_SIZE, mxConstants.HANDLE_SIZE);\n\t\n\treturn new mxRectangleShape(bounds, mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n};\n\n/**\n * Function: initShape\n * \n * Initializes <shape> and sets its cursor.\n */\nmxHandle.prototype.initShape = function(html)\n{\n\tif (html && this.shape.isHtmlAllowed())\n\t{\n\t\tthis.shape.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tthis.shape.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tthis.shape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\t\n\t\tif (this.cursor != null)\n\t\t{\n\t\t\tthis.shape.init(this.graph.getView().getOverlayPane());\n\t\t}\n\t}\n\n\tmxEvent.redirectMouseEvents(this.shape.node, this.graph, this.state);\n\tthis.shape.node.style.cursor = this.cursor;\n};\n\n/**\n * Function: redraw\n * \n * Renders the shape for this handle.\n */\nmxHandle.prototype.redraw = function()\n{\n\tif (this.shape != null && this.state.shape != null)\n\t{\n\t\tvar pt = this.getPosition(this.state.getPaintBounds());\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tvar alpha = mxUtils.toRadians(this.getTotalRotation());\n\t\t\tpt = this.rotatePoint(this.flipPoint(pt), alpha);\n\t\n\t\t\tvar scale = this.graph.view.scale;\n\t\t\tvar tr = this.graph.view.translate;\n\t\t\tthis.shape.bounds.x = Math.floor((pt.x + tr.x) * scale - this.shape.bounds.width / 2);\n\t\t\tthis.shape.bounds.y = Math.floor((pt.y + tr.y) * scale - this.shape.bounds.height / 2);\n\t\t\t\n\t\t\t// Needed to force update of text bounds\n\t\t\tthis.shape.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: isHtmlRequired\n * \n * Returns true if this handle should be rendered in HTML. This returns true if\n * the text node is in the graph container.\n */\nmxHandle.prototype.isHtmlRequired = function()\n{\n\treturn this.state.text != null && this.state.text.node.parentNode == this.graph.container;\n};\n\n/**\n * Function: rotatePoint\n * \n * Rotates the point by the given angle.\n */\nmxHandle.prototype.rotatePoint = function(pt, alpha)\n{\n\tvar bounds = this.state.getCellBounds();\n\tvar cx = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\tvar cos = Math.cos(alpha);\n\tvar sin = Math.sin(alpha); \n\n\treturn mxUtils.getRotatedPoint(pt, cos, sin, cx);\n};\n\n/**\n * Function: flipPoint\n * \n * Flips the given point vertically and/or horizontally.\n */\nmxHandle.prototype.flipPoint = function(pt)\n{\n\tif (this.state.shape != null)\n\t{\n\t\tvar bounds = this.state.getCellBounds();\n\t\t\n\t\tif (this.state.shape.flipH)\n\t\t{\n\t\t\tpt.x = 2 * bounds.x + bounds.width - pt.x;\n\t\t}\n\t\t\n\t\tif (this.state.shape.flipV)\n\t\t{\n\t\t\tpt.y = 2 * bounds.y + bounds.height - pt.y;\n\t\t}\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: snapPoint\n * \n * Snaps the given point to the grid if ignore is false. This modifies\n * the given point in-place and also returns it.\n */\nmxHandle.prototype.snapPoint = function(pt, ignore)\n{\n\tif (!ignore)\n\t{\n\t\tpt.x = this.graph.snap(pt.x);\n\t\tpt.y = this.graph.snap(pt.y);\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: setVisible\n * \n * Shows or hides this handle.\n */\nmxHandle.prototype.setVisible = function(visible)\n{\n\tif (this.shape != null && this.shape.node != null)\n\t{\n\t\tthis.shape.node.style.display = (visible) ? '' : 'none';\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handle by setting its visibility to true.\n */\nmxHandle.prototype.reset = function()\n{\n\tthis.setVisible(true);\n\tthis.state.style = this.graph.getCellStyle(this.state.cell);\n\tthis.positionChanged();\n};\n\n/**\n * Function: destroy\n * \n * Destroys this handle.\n */\nmxHandle.prototype.destroy = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxVertexHandler\n * \n * Event handler for resizing cells. This handler is automatically created in\n * <mxGraph.createHandler>.\n * \n * Constructor: mxVertexHandler\n * \n * Constructs an event handler that allows to resize vertices\n * and groups.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be resized.\n */\nfunction mxVertexHandler(state)\n{\n\tif (state != null)\n\t{\n\t\tthis.state = state;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tif (this.livePreview && this.index != null)\n\t\t\t{\n\t\t\t\t// Redraws the live preview\n\t\t\t\tthis.state.view.graph.cellRenderer.redraw(this.state, true);\n\t\t\t\t\n\t\t\t\t// Redraws connected edges\n\t\t\t\tthis.state.view.invalidate(this.state.cell);\n\t\t\t\tthis.state.invalid = false;\n\t\t\t\tthis.state.view.validate();\n\t\t\t}\n\t\t\t\n\t\t\tthis.reset();\n\t\t});\n\t\t\n\t\tthis.state.view.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxVertexHandler.prototype.graph = null;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState> being modified.\n */\nmxVertexHandler.prototype.state = null;\n\n/**\n * Variable: singleSizer\n * \n * Specifies if only one sizer handle at the bottom, right corner should be\n * used. Default is false.\n */\nmxVertexHandler.prototype.singleSizer = false;\n\n/**\n * Variable: index\n * \n * Holds the index of the current handle.\n */\nmxVertexHandler.prototype.index = null;\n\n/**\n * Variable: allowHandleBoundsCheck\n * \n * Specifies if the bounds of handles should be used for hit-detection in IE or\n * if <tolerance> > 0. Default is true.\n */\nmxVertexHandler.prototype.allowHandleBoundsCheck = true;\n\n/**\n * Variable: handleImage\n * \n * Optional <mxImage> to be used as handles. Default is null.\n */\nmxVertexHandler.prototype.handleImage = null;\n\n/**\n * Variable: tolerance\n * \n * Optional tolerance for hit-detection in <getHandleForEvent>. Default is 0.\n */\nmxVertexHandler.prototype.tolerance = 0;\n\n/**\n * Variable: rotationEnabled\n * \n * Specifies if a rotation handle should be visible. Default is false.\n */\nmxVertexHandler.prototype.rotationEnabled = false;\n\n/**\n * Variable: parentHighlightEnabled\n * \n * Specifies if the parent should be highlighted if a child cell is selected.\n * Default is false.\n */\nmxVertexHandler.prototype.parentHighlightEnabled = false;\n\n/**\n * Variable: rotationRaster\n * \n * Specifies if rotation steps should be \"rasterized\" depening on the distance\n * to the handle. Default is true.\n */\nmxVertexHandler.prototype.rotationRaster = true;\n\n/**\n * Variable: rotationCursor\n * \n * Specifies the cursor for the rotation handle. Default is 'crosshair'.\n */\nmxVertexHandler.prototype.rotationCursor = 'crosshair';\n\n/**\n * Variable: livePreview\n * \n * Specifies if resize should change the cell in-place. This is an experimental\n * feature for non-touch devices. Default is false.\n */\nmxVertexHandler.prototype.livePreview = false;\n\n/**\n * Variable: manageSizers\n * \n * Specifies if sizers should be hidden and spaced if the vertex is small.\n * Default is false.\n */\nmxVertexHandler.prototype.manageSizers = false;\n\n/**\n * Variable: constrainGroupByChildren\n * \n * Specifies if the size of groups should be constrained by the children.\n * Default is false.\n */\nmxVertexHandler.prototype.constrainGroupByChildren = false;\n\n/**\n * Variable: rotationHandleVSpacing\n * \n * Vertical spacing for rotation icon. Default is -16.\n */\nmxVertexHandler.prototype.rotationHandleVSpacing = -16;\n\n/**\n * Variable: horizontalOffset\n * \n * The horizontal offset for the handles. This is updated in <redrawHandles>\n * if <manageSizers> is true and the sizers are offset horizontally.\n */\nmxVertexHandler.prototype.horizontalOffset = 0;\n\n/**\n * Variable: verticalOffset\n * \n * The horizontal offset for the handles. This is updated in <redrawHandles>\n * if <manageSizers> is true and the sizers are offset vertically.\n */\nmxVertexHandler.prototype.verticalOffset = 0;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxVertexHandler.prototype.init = function()\n{\n\tthis.graph = this.state.view.graph;\n\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y, this.selectionBounds.width, this.selectionBounds.height);\n\tthis.selectionBorder = this.createSelectionShape(this.bounds);\n\t// VML dialect required here for event transparency in IE\n\tthis.selectionBorder.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tthis.selectionBorder.pointerEvents = false;\n\tthis.selectionBorder.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\tthis.selectionBorder.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(this.selectionBorder.node, this.graph, this.state);\n\t\n\tif (this.graph.isCellMovable(this.state.cell))\n\t{\n\t\tthis.selectionBorder.setCursor(mxConstants.CURSOR_MOVABLE_VERTEX);\n\t}\n\n\t// Adds the sizer handles\n\tif (mxGraphHandler.prototype.maxCells <= 0 || this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells)\n\t{\n\t\tvar resizable = this.graph.isCellResizable(this.state.cell);\n\t\tthis.sizers = [];\n\n\t\tif (resizable || (this.graph.isLabelMovable(this.state.cell) &&\n\t\t\tthis.state.width >= 2 && this.state.height >= 2))\n\t\t{\n\t\t\tvar i = 0;\n\n\t\t\tif (resizable)\n\t\t\t{\n\t\t\t\tif (!this.singleSizer)\n\t\t\t\t{\n\t\t\t\t\tthis.sizers.push(this.createSizer('nw-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('n-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('ne-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('w-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('e-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('sw-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('s-resize', i++));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.sizers.push(this.createSizer('se-resize', i++));\n\t\t\t}\n\t\t\t\n\t\t\tvar geo = this.graph.model.getGeometry(this.state.cell);\n\t\t\t\n\t\t\tif (geo != null && !geo.relative && !this.graph.isSwimlane(this.state.cell) &&\n\t\t\t\tthis.graph.isLabelMovable(this.state.cell))\n\t\t\t{\n\t\t\t\t// Marks this as the label handle for getHandleForEvent\n\t\t\t\tthis.labelShape = this.createSizer(mxConstants.CURSOR_LABEL_HANDLE, mxEvent.LABEL_HANDLE, mxConstants.LABEL_HANDLE_SIZE, mxConstants.LABEL_HANDLE_FILLCOLOR);\n\t\t\t\tthis.sizers.push(this.labelShape);\n\t\t\t}\n\t\t}\n\t\telse if (this.graph.isCellMovable(this.state.cell) && !this.graph.isCellResizable(this.state.cell) &&\n\t\t\tthis.state.width < 2 && this.state.height < 2)\n\t\t{\n\t\t\tthis.labelShape = this.createSizer(mxConstants.CURSOR_MOVABLE_VERTEX,\n\t\t\t\tmxEvent.LABEL_HANDLE, null, mxConstants.LABEL_HANDLE_FILLCOLOR);\n\t\t\tthis.sizers.push(this.labelShape);\n\t\t}\n\t}\n\t\n\t// Adds the rotation handler\n\tif (this.isRotationHandleVisible())\n\t{\n\t\tthis.rotationShape = this.createSizer(this.rotationCursor, mxEvent.ROTATION_HANDLE,\n\t\t\tmxConstants.HANDLE_SIZE + 3, mxConstants.HANDLE_FILLCOLOR);\n\t\tthis.sizers.push(this.rotationShape);\n\t}\n\n\tthis.customHandles = this.createCustomHandles();\n\tthis.redraw();\n\t\n\tif (this.constrainGroupByChildren)\n\t{\n\t\tthis.updateMinBounds();\n\t}\n};\n\n/**\n * Function: isRotationHandleVisible\n * \n * Returns true if the rotation handle should be showing.\n */\nmxVertexHandler.prototype.isRotationHandleVisible = function()\n{\n\treturn this.graph.isEnabled() && this.rotationEnabled && this.graph.isCellRotatable(this.state.cell) &&\n\t\t(mxGraphHandler.prototype.maxCells <= 0 || this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells) &&\n\t\tthis.state.width >= 2 && this.state.height >= 2;\n};\n\n/**\n * Function: isConstrainedEvent\n * \n * Returns true if the aspect ratio if the cell should be maintained.\n */\nmxVertexHandler.prototype.isConstrainedEvent = function(me)\n{\n\treturn mxEvent.isShiftDown(me.getEvent()) || this.state.style[mxConstants.STYLE_ASPECT] == 'fixed';\n};\n\n/**\n * Function: isCenteredEvent\n * \n * Returns true if the center of the vertex should be maintained during the resize.\n */\nmxVertexHandler.prototype.isCenteredEvent = function(state, me)\n{\n\treturn false;\n};\n\n/**\n * Function: createCustomHandles\n * \n * Returns an array of custom handles. This implementation returns null.\n */\nmxVertexHandler.prototype.createCustomHandles = function()\n{\n\treturn null;\n};\n\n/**\n * Function: updateMinBounds\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxVertexHandler.prototype.updateMinBounds = function()\n{\n\tvar children = this.graph.getChildCells(this.state.cell);\n\t\n\tif (children.length > 0)\n\t{\n\t\tthis.minBounds = this.graph.view.getBounds(children);\n\t\t\n\t\tif (this.minBounds != null)\n\t\t{\n\t\t\tvar s = this.state.view.scale;\n\t\t\tvar t = this.state.view.translate;\n\n\t\t\tthis.minBounds.x -= this.state.x;\n\t\t\tthis.minBounds.y -= this.state.y;\n\t\t\tthis.minBounds.x /= s;\n\t\t\tthis.minBounds.y /= s;\n\t\t\tthis.minBounds.width /= s;\n\t\t\tthis.minBounds.height /= s;\n\t\t\tthis.x0 = this.state.x / s - t.x;\n\t\t\tthis.y0 = this.state.y / s - t.y;\n\t\t}\n\t}\n};\n\n/**\n * Function: getSelectionBounds\n * \n * Returns the mxRectangle that defines the bounds of the selection\n * border.\n */\nmxVertexHandler.prototype.getSelectionBounds = function(state)\n{\n\treturn new mxRectangle(Math.round(state.x), Math.round(state.y), Math.round(state.width), Math.round(state.height));\n};\n\n/**\n * Function: createParentHighlightShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxVertexHandler.prototype.createParentHighlightShape = function(bounds)\n{\n\treturn this.createSelectionShape(bounds);\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxVertexHandler.prototype.createSelectionShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.getSelectionColor());\n\tshape.strokewidth = this.getSelectionStrokeWidth();\n\tshape.isDashed = this.isSelectionDashed();\n\t\n\treturn shape;\n};\n\n/**\n * Function: getSelectionColor\n * \n * Returns <mxConstants.VERTEX_SELECTION_COLOR>.\n */\nmxVertexHandler.prototype.getSelectionColor = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_COLOR;\n};\n\n/**\n * Function: getSelectionStrokeWidth\n * \n * Returns <mxConstants.VERTEX_SELECTION_STROKEWIDTH>.\n */\nmxVertexHandler.prototype.getSelectionStrokeWidth = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_STROKEWIDTH;\n};\n\n/**\n * Function: isSelectionDashed\n * \n * Returns <mxConstants.VERTEX_SELECTION_DASHED>.\n */\nmxVertexHandler.prototype.isSelectionDashed = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_DASHED;\n};\n\n/**\n * Function: createSizer\n * \n * Creates a sizer handle for the specified cursor and index and returns\n * the new <mxRectangleShape> that represents the handle.\n */\nmxVertexHandler.prototype.createSizer = function(cursor, index, size, fillColor)\n{\n\tsize = size || mxConstants.HANDLE_SIZE;\n\t\n\tvar bounds = new mxRectangle(0, 0, size, size);\n\tvar sizer = this.createSizerShape(bounds, index, fillColor);\n\n\tif (sizer.isHtmlAllowed() && this.state.text != null && this.state.text.node.parentNode == this.graph.container)\n\t{\n\t\tsizer.bounds.height -= 1;\n\t\tsizer.bounds.width -= 1;\n\t\tsizer.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tsizer.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tsizer.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\tsizer.init(this.graph.getView().getOverlayPane());\n\t}\n\n\tmxEvent.redirectMouseEvents(sizer.node, this.graph, this.state);\n\t\n\tif (this.graph.isEnabled())\n\t{\n\t\tsizer.setCursor(cursor);\n\t}\n\t\n\tif (!this.isSizerVisible(index))\n\t{\n\t\tsizer.visible = false;\n\t}\n\t\n\treturn sizer;\n};\n\n/**\n * Function: isSizerVisible\n * \n * Returns true if the sizer for the given index is visible.\n * This returns true for all given indices.\n */\nmxVertexHandler.prototype.isSizerVisible = function(index)\n{\n\treturn true;\n};\n\n/**\n * Function: createSizerShape\n * \n * Creates the shape used for the sizer handle for the specified bounds an\n * index. Only images and rectangles should be returned if support for HTML\n * labels with not foreign objects is required.\n */\nmxVertexHandler.prototype.createSizerShape = function(bounds, index, fillColor)\n{\n\tif (this.handleImage != null)\n\t{\n\t\tbounds = new mxRectangle(bounds.x, bounds.y, this.handleImage.width, this.handleImage.height);\n\t\tvar shape = new mxImageShape(bounds, this.handleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse if (index == mxEvent.ROTATION_HANDLE)\n\t{\n\t\treturn new mxEllipse(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n\telse\n\t{\n\t\treturn new mxRectangleShape(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: createBounds\n * \n * Helper method to create an <mxRectangle> around the given centerpoint\n * with a width and height of 2*s or 6, if no s is given.\n */\nmxVertexHandler.prototype.moveSizerTo = function(shape, x, y)\n{\n\tif (shape != null)\n\t{\n\t\tshape.bounds.x = Math.floor(x - shape.bounds.width / 2);\n\t\tshape.bounds.y = Math.floor(y - shape.bounds.height / 2);\n\t\t\n\t\t// Fixes visible inactive handles in VML\n\t\tif (shape.node != null && shape.node.style.display != 'none')\n\t\t{\n\t\t\tshape.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getHandleForEvent\n * \n * Returns the index of the handle for the given event. This returns the index\n * of the sizer from where the event originated or <mxEvent.LABEL_INDEX>.\n */\nmxVertexHandler.prototype.getHandleForEvent = function(me)\n{\n\t// Connection highlight may consume events before they reach sizer handle\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 1;\n\tvar hit = (this.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\t\n\tfunction checkShape(shape)\n\t{\n\t\treturn shape != null && (me.isSource(shape) || (hit != null && mxUtils.intersects(shape.bounds, hit) &&\n\t\t\tshape.node.style.display != 'none' && shape.node.style.visibility != 'hidden'));\n\t}\n\n\tif (this.customHandles != null && this.isCustomHandleEvent(me))\n\t{\n\t\t// Inverse loop order to match display order\n\t\tfor (var i = this.customHandles.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (checkShape(this.customHandles[i].shape))\n\t\t\t{\n\t\t\t\t// LATER: Return reference to active shape\n\t\t\t\treturn mxEvent.CUSTOM_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (checkShape(this.rotationShape))\n\t{\n\t\treturn mxEvent.ROTATION_HANDLE;\n\t}\n\telse if (checkShape(this.labelShape))\n\t{\n\t\treturn mxEvent.LABEL_HANDLE;\n\t}\n\t\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.sizers[i]))\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: isCustomHandleEvent\n * \n * Returns true if the given event allows custom handles to be changed. This\n * implementation returns true.\n */\nmxVertexHandler.prototype.isCustomHandleEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event if a handle has been clicked. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxVertexHandler.prototype.mouseDown = function(sender, me)\n{\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 0;\n\t\n\tif (!me.isConsumed() && this.graph.isEnabled() && (tol > 0 || me.getState() == this.state))\n\t{\n\t\tvar handle = this.getHandleForEvent(me);\n\n\t\tif (handle != null)\n\t\t{\n\t\t\tthis.start(me.getGraphX(), me.getGraphY(), handle);\n\t\t\tme.consume();\n\t\t}\n\t}\n};\n\n/**\n * Function: isLivePreviewBorder\n * \n * Called if <livePreview> is enabled to check if a border should be painted.\n * This implementation returns true if the shape is transparent.\n */\nmxVertexHandler.prototype.isLivePreviewBorder = function()\n{\n\treturn this.state.shape != null && this.state.shape.fill == null && this.state.shape.stroke == null;\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxVertexHandler.prototype.start = function(x, y, index)\n{\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.livePreviewActive = this.livePreview && this.graph.model.getChildCount(this.state.cell) == 0;\n\t\tthis.inTolerance = true;\n\t\tthis.childOffsetX = 0;\n\t\tthis.childOffsetY = 0;\n\t\tthis.index = index;\n\t\tthis.startX = x;\n\t\tthis.startY = y;\n\t\t\n\t\t// Saves reference to parent state\n\t\tvar model = this.state.view.graph.model;\n\t\tvar parent = model.getParent(this.state.cell);\n\t\t\n\t\tif (this.state.view.currentRoot != parent && (model.isVertex(parent) || model.isEdge(parent)))\n\t\t{\n\t\t\tthis.parentState = this.state.view.graph.view.getState(parent);\n\t\t}\n\t\t\n\t\t// Creates a preview that can be on top of any HTML label\n\t\tthis.selectionBorder.node.style.display = (index == mxEvent.ROTATION_HANDLE) ? 'inline' : 'none';\n\t\t\n\t\t// Creates the border that represents the new bounds\n\t\tif (!this.livePreviewActive || this.isLivePreviewBorder())\n\t\t{\n\t\t\tthis.preview = this.createSelectionShape(this.bounds);\n\t\t\t\n\t\t\tif (!(mxClient.IS_SVG && Number(this.state.style[mxConstants.STYLE_ROTATION] || '0') != 0) &&\n\t\t\t\tthis.state.text != null && this.state.text.node.parentNode == this.graph.container)\n\t\t\t{\n\t\t\t\tthis.preview.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\t\t\tthis.preview.init(this.graph.container);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.preview.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\tthis.preview.init(this.graph.view.getOverlayPane());\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Prepares the handles for live preview\n\t\tif (this.livePreviewActive)\n\t\t{\n\t\t\tthis.hideSizers();\n\t\t\t\n\t\t\tif (index == mxEvent.ROTATION_HANDLE)\n\t\t\t{\n\t\t\t\tthis.rotationShape.node.style.display = '';\n\t\t\t}\n\t\t\telse if (index == mxEvent.LABEL_HANDLE)\n\t\t\t{\n\t\t\t\tthis.labelShape.node.style.display = '';\n\t\t\t}\n\t\t\telse if (this.sizers != null && this.sizers[index] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[index].node.style.display = '';\n\t\t\t}\n\t\t\telse if (index <= mxEvent.CUSTOM_HANDLE && this.customHandles != null)\n\t\t\t{\n\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].setVisible(true);\n\t\t\t}\n\t\t\t\n\t\t\t// Gets the array of connected edge handlers for redrawing\n\t\t\tvar edges = this.graph.getEdges(this.state.cell);\n\t\t\tthis.edgeHandlers = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tvar handler = this.graph.selectionCellsHandler.getHandler(edges[i]);\n\t\t\t\t\n\t\t\t\tif (handler != null)\n\t\t\t\t{\n\t\t\t\t\tthis.edgeHandlers.push(handler);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: hideHandles\n * \n * Shortcut to <hideSizers>.\n */\nmxVertexHandler.prototype.setHandlesVisible = function(visible)\n{\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tthis.sizers[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].setVisible(visible);\n\t\t}\n\t}\n};\n\n/**\n * Function: hideSizers\n * \n * Hides all sizers except.\n * \n * Starts the handling of the mouse gesture.\n */\nmxVertexHandler.prototype.hideSizers = function()\n{\n\tthis.setHandlesVisible(false);\n};\n\n/**\n * Function: checkTolerance\n * \n * Checks if the coordinates for the given event are within the\n * <mxGraph.tolerance>. If the event is a mouse event then the tolerance is\n * ignored.\n */\nmxVertexHandler.prototype.checkTolerance = function(me)\n{\n\tif (this.inTolerance && this.startX != null && this.startY != null)\n\t{\n\t\tif (mxEvent.isMouseEvent(me.getEvent()) ||\n\t\t\tMath.abs(me.getGraphX() - this.startX) > this.graph.tolerance ||\n\t\t\tMath.abs(me.getGraphY() - this.startY) > this.graph.tolerance)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxVertexHandler.prototype.updateHint = function(me) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxVertexHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundAngle\n * \n * Hook for rounding the angle. This uses Math.round.\n */\nmxVertexHandler.prototype.roundAngle = function(angle)\n{\n\treturn Math.round(angle * 10) / 10;\n};\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled width or height. This uses Math.round.\n */\nmxVertexHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length);\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview.\n */\nmxVertexHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && this.index != null)\n\t{\n\t\t// Checks tolerance for ignoring single clicks\n\t\tthis.checkTolerance(me);\n\n\t\tif (!this.inTolerance)\n\t\t{\n\t\t\tif (this.index <= mxEvent.CUSTOM_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].processEvent(me);\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].active = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.index == mxEvent.LABEL_HANDLE)\n\t\t\t{\n\t\t\t\tthis.moveLabel(me);\n\t\t\t}\n\t\t\telse if (this.index == mxEvent.ROTATION_HANDLE)\n\t\t\t{\n\t\t\t\tthis.rotateVertex(me);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.resizeVertex(me);\n\t\t\t}\n\n\t\t\tthis.updateHint(me);\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n\t// Workaround for disabling the connect highlight when over handle\n\telse if (!this.graph.isMouseDown && this.getHandleForEvent(me) != null)\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.moveLabel = function(me)\n{\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar tr = this.graph.view.translate;\n\tvar scale = this.graph.view.scale;\n\t\n\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tpoint.x = (this.graph.snap(point.x / scale - tr.x) + tr.x) * scale;\n\t\tpoint.y = (this.graph.snap(point.y / scale - tr.y) + tr.y) * scale;\n\t}\n\n\tvar index = (this.rotationShape != null) ? this.sizers.length - 2 : this.sizers.length - 1;\n\tthis.moveSizerTo(this.sizers[index], point.x, point.y);\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.rotateVertex = function(me)\n{\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar dx = this.state.x + this.state.width / 2 - point.x;\n\tvar dy = this.state.y + this.state.height / 2 - point.y;\n\tthis.currentAlpha = (dx != 0) ? Math.atan(dy / dx) * 180 / Math.PI + 90 : ((dy < 0) ? 180 : 0);\n\t\n\tif (dx > 0)\n\t{\n\t\tthis.currentAlpha -= 180;\n\t}\n\n\t// Rotation raster\n\tif (this.rotationRaster && this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tvar dx = point.x - this.state.getCenterX();\n\t\tvar dy = point.y - this.state.getCenterY();\n\t\tvar dist = Math.abs(Math.sqrt(dx * dx + dy * dy) - 20) * 3;\n\t\tvar raster = Math.max(1, 5 * Math.min(3, Math.max(0, Math.round(80 / Math.abs(dist)))));\n\t\t\n\t\tthis.currentAlpha = Math.round(this.currentAlpha / raster) * raster;\n\t}\n\telse\n\t{\n\t\tthis.currentAlpha = this.roundAngle(this.currentAlpha);\n\t}\n\n\tthis.selectionBorder.rotation = this.currentAlpha;\n\tthis.selectionBorder.redraw();\n\t\t\t\t\t\n\tif (this.livePreviewActive)\n\t{\n\t\tthis.redrawHandles();\n\t}\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.resizeVertex = function(me)\n{\n\tvar ct = new mxPoint(this.state.getCenterX(), this.state.getCenterY());\n\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar tr = this.graph.view.translate;\n\tvar scale = this.graph.view.scale;\n\tvar cos = Math.cos(-alpha);\n\tvar sin = Math.sin(-alpha);\n\t\n\tvar dx = point.x - this.startX;\n\tvar dy = point.y - this.startY;\n\n\t// Rotates vector for mouse gesture\n\tvar tx = cos * dx - sin * dy;\n\tvar ty = sin * dx + cos * dy;\n\t\n\tdx = tx;\n\tdy = ty;\n\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\tthis.unscaledBounds = this.union(geo, dx / scale, dy / scale, this.index,\n\t\tthis.graph.isGridEnabledEvent(me.getEvent()), 1,\n\t\tnew mxPoint(0, 0), this.isConstrainedEvent(me),\n\t\tthis.isCenteredEvent(this.state, me));\n\t\n\t// Keeps vertex within maximum graph or parent bounds\n\tif (!geo.relative)\n\t{\n\t\tvar max = this.graph.getMaximumGraphBounds();\n\t\t\n\t\t// Handles child cells\n\t\tif (max != null && this.parentState != null)\n\t\t{\n\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\n\t\t\tmax.x -= (this.parentState.x - tr.x * scale) / scale;\n\t\t\tmax.y -= (this.parentState.y - tr.y * scale) / scale;\n\t\t}\n\t\t\n\t\tif (this.graph.isConstrainChild(this.state.cell))\n\t\t{\n\t\t\tvar tmp = this.graph.getCellContainmentArea(this.state.cell);\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tvar overlap = this.graph.getOverlap(this.state.cell);\n\t\t\t\t\n\t\t\t\tif (overlap > 0)\n\t\t\t\t{\n\t\t\t\t\ttmp = mxRectangle.fromRectangle(tmp);\n\t\t\t\t\t\n\t\t\t\t\ttmp.x -= tmp.width * overlap;\n\t\t\t\t\ttmp.y -= tmp.height * overlap;\n\t\t\t\t\ttmp.width += 2 * tmp.width * overlap;\n\t\t\t\t\ttmp.height += 2 * tmp.height * overlap;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (max == null)\n\t\t\t\t{\n\t\t\t\t\tmax = tmp;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\tmax.intersect(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif (max != null)\n\t\t{\n\t\t\tif (this.unscaledBounds.x < max.x)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.width -= max.x - this.unscaledBounds.x;\n\t\t\t\tthis.unscaledBounds.x = max.x;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.y < max.y)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.height -= max.y - this.unscaledBounds.y;\n\t\t\t\tthis.unscaledBounds.y = max.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.x + this.unscaledBounds.width > max.x + max.width)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.width -= this.unscaledBounds.x +\n\t\t\t\t\tthis.unscaledBounds.width - max.x - max.width;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.y + this.unscaledBounds.height > max.y + max.height)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.height -= this.unscaledBounds.y +\n\t\t\t\t\tthis.unscaledBounds.height - max.y - max.height;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.bounds = new mxRectangle(((this.parentState != null) ? this.parentState.x : tr.x * scale) +\n\t\t(this.unscaledBounds.x) * scale, ((this.parentState != null) ? this.parentState.y : tr.y * scale) +\n\t\t(this.unscaledBounds.y) * scale, this.unscaledBounds.width * scale, this.unscaledBounds.height * scale);\n\n\tif (geo.relative && this.parentState != null)\n\t{\n\t\tthis.bounds.x += this.state.x - this.parentState.x;\n\t\tthis.bounds.y += this.state.y - this.parentState.y;\n\t}\n\n\tcos = Math.cos(alpha);\n\tsin = Math.sin(alpha);\n\t\n\tvar c2 = new mxPoint(this.bounds.getCenterX(), this.bounds.getCenterY());\n\n\tvar dx = c2.x - ct.x;\n\tvar dy = c2.y - ct.y;\n\t\n\tvar dx2 = cos * dx - sin * dy;\n\tvar dy2 = sin * dx + cos * dy;\n\t\n\tvar dx3 = dx2 - dx;\n\tvar dy3 = dy2 - dy;\n\t\n\tvar dx4 = this.bounds.x - this.state.x;\n\tvar dy4 = this.bounds.y - this.state.y;\n\t\n\tvar dx5 = cos * dx4 - sin * dy4;\n\tvar dy5 = sin * dx4 + cos * dy4;\n\t\n\tthis.bounds.x += dx3;\n\tthis.bounds.y += dy3;\n\t\n\t// Rounds unscaled bounds to int\n\tthis.unscaledBounds.x = this.roundLength(this.unscaledBounds.x + dx3 / scale);\n\tthis.unscaledBounds.y = this.roundLength(this.unscaledBounds.y + dy3 / scale);\n\tthis.unscaledBounds.width = this.roundLength(this.unscaledBounds.width);\n\tthis.unscaledBounds.height = this.roundLength(this.unscaledBounds.height);\n\t\n\t// Shifts the children according to parent offset\n\tif (!this.graph.isCellCollapsed(this.state.cell) && (dx3 != 0 || dy3 != 0))\n\t{\n\t\tthis.childOffsetX = this.state.x - this.bounds.x + dx5;\n\t\tthis.childOffsetY = this.state.y - this.bounds.y + dy5;\n\t}\n\telse\n\t{\n\t\tthis.childOffsetX = 0;\n\t\tthis.childOffsetY = 0;\n\t}\n\t\n\tif (this.livePreviewActive)\n\t{\n\t\tthis.updateLivePreview(me);\n\t}\n\t\n\tif (this.preview != null)\n\t{\n\t\tthis.drawPreview();\n\t}\n};\n\n/**\n * Function: updateLivePreview\n * \n * Repaints the live preview.\n */\nmxVertexHandler.prototype.updateLivePreview = function(me)\n{\n\t// TODO: Apply child offset to children in live preview\n\tvar scale = this.graph.view.scale;\n\tvar tr = this.graph.view.translate;\n\t\n\t// Saves current state\n\tvar tempState = this.state.clone();\n\n\t// Temporarily changes size and origin\n\tthis.state.x = this.bounds.x;\n\tthis.state.y = this.bounds.y;\n\tthis.state.origin = new mxPoint(this.state.x / scale - tr.x, this.state.y / scale - tr.y);\n\tthis.state.width = this.bounds.width;\n\tthis.state.height = this.bounds.height;\n\t\n\t// Needed to force update of text bounds\n\tthis.state.unscaledWidth = null;\n\t\n\t// Redraws cell and handles\n\tvar off = this.state.absoluteOffset;\n\toff = new mxPoint(off.x, off.y);\n\n\t// Required to store and reset absolute offset for updating label position\n\tthis.state.absoluteOffset.x = 0;\n\tthis.state.absoluteOffset.y = 0;\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\t\t\t\t\n\n\tif (geo != null)\n\t{\n\t\tvar offset = geo.offset || this.EMPTY_POINT;\n\n\t\tif (offset != null && !geo.relative)\n\t\t{\n\t\t\tthis.state.absoluteOffset.x = this.state.view.scale * offset.x;\n\t\t\tthis.state.absoluteOffset.y = this.state.view.scale * offset.y;\n\t\t}\n\t\t\n\t\tthis.state.view.updateVertexLabelOffset(this.state);\n\t}\n\t\n\t// Draws the live preview\n\tthis.state.view.graph.cellRenderer.redraw(this.state, true);\n\t\n\t// Redraws connected edges TODO: Include child edges\n\tthis.state.view.invalidate(this.state.cell);\n\tthis.state.invalid = false;\n\tthis.state.view.validate();\n\tthis.redrawHandles();\n\t\n\t// Hides folding icon\n\tif (this.state.control != null && this.state.control.node != null)\n\t{\n\t\tthis.state.control.node.style.visibility = 'hidden';\n\t}\n\t\n\t// Restores current state\n\tthis.state.setState(tempState);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the changes to the geometry.\n */\nmxVertexHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.index != null && this.state != null)\n\t{\n\t\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\tvar index = this.index;\n\t\tthis.index = null;\n\n\t\tthis.graph.getModel().beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (index <= mxEvent.CUSTOM_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].active = false;\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].execute();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (index == mxEvent.ROTATION_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.currentAlpha != null)\n\t\t\t\t{\n\t\t\t\t\tvar delta = this.currentAlpha - (this.state.style[mxConstants.STYLE_ROTATION] || 0);\n\t\t\t\t\t\n\t\t\t\t\tif (delta != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.rotateCell(this.state.cell, delta);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.rotateClick();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar gridEnabled = this.graph.isGridEnabledEvent(me.getEvent());\n\t\t\t\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\t\n\t\t\t\tvar dx = point.x - this.startX;\n\t\t\t\tvar dy = point.y - this.startY;\n\t\t\t\t\n\t\t\t\t// Rotates vector for mouse gesture\n\t\t\t\tvar tx = cos * dx - sin * dy;\n\t\t\t\tvar ty = sin * dx + cos * dy;\n\t\t\t\t\n\t\t\t\tdx = tx;\n\t\t\t\tdy = ty;\n\t\t\t\t\n\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\tvar recurse = this.isRecursiveResize(this.state, me);\n\t\t\t\tthis.resizeCell(this.state.cell, this.roundLength(dx / s), this.roundLength(dy / s),\n\t\t\t\t\tindex, gridEnabled, this.isConstrainedEvent(me), recurse);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.graph.getModel().endUpdate();\n\t\t}\n\n\t\tme.consume();\n\t\tthis.reset();\n\t}\n};\n\n/**\n * Function: rotateCell\n * \n * Rotates the given cell to the given rotation.\n */\nmxVertexHandler.prototype.isRecursiveResize = function(state, me)\n{\n\treturn this.graph.isRecursiveResize(this.state);\n};\n\n/**\n * Function: rotateClick\n * \n * Hook for subclassers to implement a single click on the rotation handle.\n * This code is executed as part of the model transaction. This implementation\n * is empty.\n */\nmxVertexHandler.prototype.rotateClick = function() { };\n\n/**\n * Function: rotateCell\n * \n * Rotates the given cell and its children by the given angle in degrees.\n * \n * Parameters:\n * \n * cell - <mxCell> to be rotated.\n * angle - Angle in degrees.\n */\nmxVertexHandler.prototype.rotateCell = function(cell, angle, parent)\n{\n\tif (angle != 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\n\t\tif (model.isVertex(cell) || model.isEdge(cell))\n\t\t{\n\t\t\tif (!model.isEdge(cell))\n\t\t\t{\n\t\t\t\tvar state = this.graph.view.getState(cell);\n\t\t\t\tvar style = (state != null) ? state.style : this.graph.getCellStyle(cell);\n\t\t\n\t\t\t\tif (style != null)\n\t\t\t\t{\n\t\t\t\t\tvar total = (style[mxConstants.STYLE_ROTATION] || 0) + angle;\n\t\t\t\t\tthis.graph.setCellStyles(mxConstants.STYLE_ROTATION, total, [cell]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar geo = this.graph.getCellGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar pgeo = this.graph.getCellGeometry(parent);\n\t\t\t\t\n\t\t\t\tif (pgeo != null && !model.isEdge(parent))\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\tgeo.rotate(angle, new mxPoint(pgeo.width / 2, pgeo.height / 2));\n\t\t\t\t\tmodel.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((model.isVertex(cell) && !geo.relative) || model.isEdge(cell))\n\t\t\t\t{\n\t\t\t\t\t// Recursive rotation\n\t\t\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.rotateCell(model.getChildAt(cell, i), angle, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxVertexHandler.prototype.reset = function()\n{\n\tif (this.sizers != null && this.index != null && this.sizers[this.index] != null &&\n\t\tthis.sizers[this.index].node.style.display == 'none')\n\t{\n\t\tthis.sizers[this.index].node.style.display = '';\n\t}\n\n\tthis.currentAlpha = null;\n\tthis.inTolerance = null;\n\tthis.index = null;\n\n\t// TODO: Reset and redraw cell states for live preview\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.destroy();\n\t\tthis.preview = null;\n\t}\n\n\tif (this.livePreviewActive && this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (this.sizers[i] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[i].node.style.display = '';\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Shows folding icon\n\t\tif (this.state.control != null && this.state.control.node != null)\n\t\t{\n\t\t\tthis.state.control.node.style.visibility = '';\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tif (this.customHandles[i].active)\n\t\t\t{\n\t\t\t\tthis.customHandles[i].active = false;\n\t\t\t\tthis.customHandles[i].reset();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.customHandles[i].setVisible(true);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Checks if handler has been destroyed\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.node.style.display = 'inline';\n\t\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\t\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y,\n\t\t\tthis.selectionBounds.width, this.selectionBounds.height);\n\t\tthis.drawPreview();\n\t}\n\n\tthis.removeHint();\n\tthis.redrawHandles();\n\tthis.edgeHandlers = null;\n\tthis.unscaledBounds = null;\n\tthis.livePreviewActive = null;\n};\n\n/**\n * Function: resizeCell\n * \n * Uses the given vector to change the bounds of the given cell\n * in the graph using <mxGraph.resizeCell>.\n */\nmxVertexHandler.prototype.resizeCell = function(cell, dx, dy, index, gridEnabled, constrained, recurse)\n{\n\tvar geo = this.graph.model.getGeometry(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tif (index == mxEvent.LABEL_HANDLE)\n\t\t{\n\t\t\tvar scale = this.graph.view.scale;\n\t\t\tdx = Math.round((this.labelShape.bounds.getCenterX() - this.startX) / scale);\n\t\t\tdy = Math.round((this.labelShape.bounds.getCenterY() - this.startY) / scale);\n\t\t\t\n\t\t\tgeo = geo.clone();\n\t\t\t\n\t\t\tif (geo.offset == null)\n\t\t\t{\n\t\t\t\tgeo.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgeo.offset.x += dx;\n\t\t\t\tgeo.offset.y += dy;\n\t\t\t}\n\t\t\t\n\t\t\tthis.graph.model.setGeometry(cell, geo);\n\t\t}\n\t\telse if (this.unscaledBounds != null)\n\t\t{\n\t\t\tvar scale = this.graph.view.scale;\n\n\t\t\tif (this.childOffsetX != 0 || this.childOffsetY != 0)\n\t\t\t{\n\t\t\t\tthis.moveChildren(cell, Math.round(this.childOffsetX / scale), Math.round(this.childOffsetY / scale));\n\t\t\t}\n\n\t\t\tthis.graph.resizeCell(cell, this.unscaledBounds, recurse);\n\t\t}\n\t}\n};\n\n/**\n * Function: moveChildren\n * \n * Moves the children of the given cell by the given vector.\n */\nmxVertexHandler.prototype.moveChildren = function(cell, dx, dy)\n{\n\tvar model = this.graph.getModel();\n\tvar childCount = model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\t\tvar geo = this.graph.getCellGeometry(child);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.translate(dx, dy);\n\t\t\tmodel.setGeometry(child, geo);\n\t\t}\n\t}\n};\n/**\n * Function: union\n * \n * Returns the union of the given bounds and location for the specified\n * handle index.\n * \n * To override this to limit the size of vertex via a minWidth/-Height style,\n * the following code can be used.\n * \n * (code)\n * var vertexHandlerUnion = mxVertexHandler.prototype.union;\n * mxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained)\n * {\n *   var result = vertexHandlerUnion.apply(this, arguments);\n *   \n *   result.width = Math.max(result.width, mxUtils.getNumber(this.state.style, 'minWidth', 0));\n *   result.height = Math.max(result.height, mxUtils.getNumber(this.state.style, 'minHeight', 0));\n *   \n *   return result;\n * };\n * (end)\n * \n * The minWidth/-Height style can then be used as follows:\n * \n * (code)\n * graph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30, 'minWidth=100;minHeight=100;');\n * (end)\n * \n * To override this to update the height for a wrapped text if the width of a vertex is\n * changed, the following can be used.\n * \n * (code)\n * var mxVertexHandlerUnion = mxVertexHandler.prototype.union;\n * mxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained)\n * {\n *   var result = mxVertexHandlerUnion.apply(this, arguments);\n *   var s = this.state;\n *   \n *   if (this.graph.isHtmlLabel(s.cell) && (index == 3 || index == 4) &&\n *       s.text != null && s.style[mxConstants.STYLE_WHITE_SPACE] == 'wrap')\n *   {\n *     var label = this.graph.getLabel(s.cell);\n *     var fontSize = mxUtils.getNumber(s.style, mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE);\n *     var ww = result.width / s.view.scale - s.text.spacingRight - s.text.spacingLeft\n *     \n *     result.height = mxUtils.getSizeForString(label, fontSize, s.style[mxConstants.STYLE_FONTFAMILY], ww).height;\n *   }\n *   \n *   return result;\n * };\n * (end)\n */\nmxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained, centered)\n{\n\tif (this.singleSizer)\n\t{\n\t\tvar x = bounds.x + bounds.width + dx;\n\t\tvar y = bounds.y + bounds.height + dy;\n\t\t\n\t\tif (gridEnabled)\n\t\t{\n\t\t\tx = this.graph.snap(x / scale) * scale;\n\t\t\ty = this.graph.snap(y / scale) * scale;\n\t\t}\n\t\t\n\t\tvar rect = new mxRectangle(bounds.x, bounds.y, 0, 0);\n\t\trect.add(new mxRectangle(x, y, 0, 0));\n\t\t\n\t\treturn rect;\n\t}\n\telse\n\t{\n\t\tvar w0 = bounds.width;\n\t\tvar h0 = bounds.height;\n\t\tvar left = bounds.x - tr.x * scale;\n\t\tvar right = left + w0;\n\t\tvar top = bounds.y - tr.y * scale;\n\t\tvar bottom = top + h0;\n\t\t\n\t\tvar cx = left + w0 / 2;\n\t\tvar cy = top + h0 / 2;\n\t\t\n\t\tif (index > 4 /* Bottom Row */)\n\t\t{\n\t\t\tbottom = bottom + dy;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tbottom = this.graph.snap(bottom / scale) * scale;\n\t\t\t}\n\t\t}\n\t\telse if (index < 3 /* Top Row */)\n\t\t{\n\t\t\ttop = top + dy;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\ttop = this.graph.snap(top / scale) * scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (index == 0 || index == 3 || index == 5 /* Left */)\n\t\t{\n\t\t\tleft += dx;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tleft = this.graph.snap(left / scale) * scale;\n\t\t\t}\n\t\t}\n\t\telse if (index == 2 || index == 4 || index == 7 /* Right */)\n\t\t{\n\t\t\tright += dx;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tright = this.graph.snap(right / scale) * scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar width = right - left;\n\t\tvar height = bottom - top;\n\n\t\tif (constrained)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar aspect = geo.width / geo.height;\n\t\t\t\t\n\t\t\t\tif (index== 1 || index== 2 || index == 7 || index == 6)\n\t\t\t\t{\n\t\t\t\t\twidth = height * aspect;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\theight = width / aspect;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (index == 0)\n\t\t\t\t{\n\t\t\t\t\tleft = right - width;\n\t\t\t\t\ttop = bottom - height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (centered)\n\t\t{\n\t\t\twidth += (width - w0);\n\t\t\theight += (height - h0);\n\t\t\t\n\t\t\tvar cdx = cx - (left + width / 2);\n\t\t\tvar cdy = cy - (top + height / 2);\n\n\t\t\tleft += cdx;\n\t\t\ttop += cdy;\n\t\t\tright += cdx;\n\t\t\tbottom += cdy;\n\t\t}\n\n\t\t// Flips over left side\n\t\tif (width < 0)\n\t\t{\n\t\t\tleft += width;\n\t\t\twidth = Math.abs(width);\n\t\t}\n\t\t\n\t\t// Flips over top side\n\t\tif (height < 0)\n\t\t{\n\t\t\ttop += height;\n\t\t\theight = Math.abs(height);\n\t\t}\n\n\t\tvar result = new mxRectangle(left + tr.x * scale, top + tr.y * scale, width, height);\n\t\t\n\t\tif (this.minBounds != null)\n\t\t{\n\t\t\tresult.width = Math.max(result.width, this.minBounds.x * scale + this.minBounds.width * scale +\n\t\t\t\tMath.max(0, this.x0 * scale - result.x));\n\t\t\tresult.height = Math.max(result.height, this.minBounds.y * scale + this.minBounds.height * scale +\n\t\t\t\tMath.max(0, this.y0 * scale - result.y));\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Redraws the handles and the preview.\n */\nmxVertexHandler.prototype.redraw = function(ignoreHandles)\n{\n\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y, this.selectionBounds.width, this.selectionBounds.height);\n\tthis.drawPreview();\n\n\tif (!ignoreHandles)\n\t{\n\t\tthis.redrawHandles();\n\t}\n};\n\n/**\n * Returns the padding to be used for drawing handles for the current <bounds>.\n */\nmxVertexHandler.prototype.getHandlePadding = function()\n{\n\t// KNOWN: Tolerance depends on event type (eg. 0 for mouse events)\n\tvar result = new mxPoint(0, 0);\n\tvar tol = this.tolerance;\n\n\tif (this.sizers != null && this.sizers.length > 0 && this.sizers[0] != null &&\n\t\t(this.bounds.width < 2 * this.sizers[0].bounds.width + 2 * tol ||\n\t\tthis.bounds.height < 2 * this.sizers[0].bounds.height + 2 * tol))\n\t{\n\t\ttol /= 2;\n\t\t\n\t\tresult.x = this.sizers[0].bounds.width + tol;\n\t\tresult.y = this.sizers[0].bounds.height + tol;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the handles. To hide certain handles the following code can be used.\n * \n * (code)\n * mxVertexHandler.prototype.redrawHandles = function()\n * {\n *   mxVertexHandlerRedrawHandles.apply(this, arguments);\n *   \n *   if (this.sizers != null && this.sizers.length > 7)\n *   {\n *     this.sizers[1].node.style.display = 'none';\n *     this.sizers[6].node.style.display = 'none';\n *   }\n * };\n * (end)\n */\nmxVertexHandler.prototype.redrawHandles = function()\n{\n\tvar tol = this.tolerance;\n\tthis.horizontalOffset = 0;\n\tthis.verticalOffset = 0;\n\tvar s = this.bounds;\n\n\tif (this.sizers != null && this.sizers.length > 0 && this.sizers[0] != null)\n\t{\n\t\tif (this.index == null && this.manageSizers && this.sizers.length >= 8)\n\t\t{\n\t\t\t// KNOWN: Tolerance depends on event type (eg. 0 for mouse events)\n\t\t\tvar padding = this.getHandlePadding();\n\t\t\tthis.horizontalOffset = padding.x;\n\t\t\tthis.verticalOffset = padding.y;\n\t\t\t\n\t\t\tif (this.horizontalOffset != 0 || this.verticalOffset != 0)\n\t\t\t{\n\t\t\t\ts = new mxRectangle(s.x, s.y, s.width, s.height);\n\n\t\t\t\ts.x -= this.horizontalOffset / 2;\n\t\t\t\ts.width += this.horizontalOffset;\n\t\t\t\ts.y -= this.verticalOffset / 2;\n\t\t\t\ts.height += this.verticalOffset;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.sizers.length >= 8)\n\t\t\t{\n\t\t\t\tif ((s.width < 2 * this.sizers[0].bounds.width + 2 * tol) ||\n\t\t\t\t\t(s.height < 2 * this.sizers[0].bounds.height + 2 * tol))\n\t\t\t\t{\n\t\t\t\t\tthis.sizers[0].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[2].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[5].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[7].node.style.display = 'none';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.sizers[0].node.style.display = '';\n\t\t\t\t\tthis.sizers[2].node.style.display = '';\n\t\t\t\t\tthis.sizers[5].node.style.display = '';\n\t\t\t\t\tthis.sizers[7].node.style.display = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar r = s.x + s.width;\n\t\tvar b = s.y + s.height;\n\t\t\n\t\tif (this.singleSizer)\n\t\t{\n\t\t\tthis.moveSizerTo(this.sizers[0], r, b);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar cx = s.x + s.width / 2;\n\t\t\tvar cy = s.y + s.height / 2;\n\t\t\t\n\t\t\tif (this.sizers.length >= 8)\n\t\t\t{\n\t\t\t\tvar crs = ['nw-resize', 'n-resize', 'ne-resize', 'e-resize', 'se-resize', 's-resize', 'sw-resize', 'w-resize'];\n\t\t\t\t\n\t\t\t\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tvar cos = Math.cos(alpha);\n\t\t\t\tvar sin = Math.sin(alpha);\n\t\t\t\t\n\t\t\t\tvar da = Math.round(alpha * 4 / Math.PI);\n\t\t\t\t\n\t\t\t\tvar ct = new mxPoint(s.getCenterX(), s.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(s.x, s.y), cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[0], pt.x, pt.y);\n\t\t\t\tthis.sizers[0].setCursor(crs[mxUtils.mod(0 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = cx;\n\t\t\t\tpt.y = s.y;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[1], pt.x, pt.y);\n\t\t\t\tthis.sizers[1].setCursor(crs[mxUtils.mod(1 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = s.y;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[2], pt.x, pt.y);\n\t\t\t\tthis.sizers[2].setCursor(crs[mxUtils.mod(2 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = s.x;\n\t\t\t\tpt.y = cy;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[3], pt.x, pt.y);\n\t\t\t\tthis.sizers[3].setCursor(crs[mxUtils.mod(7 + da, crs.length)]);\n\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = cy;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[4], pt.x, pt.y);\n\t\t\t\tthis.sizers[4].setCursor(crs[mxUtils.mod(3 + da, crs.length)]);\n\n\t\t\t\tpt.x = s.x;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[5], pt.x, pt.y);\n\t\t\t\tthis.sizers[5].setCursor(crs[mxUtils.mod(6 + da, crs.length)]);\n\n\t\t\t\tpt.x = cx;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[6], pt.x, pt.y);\n\t\t\t\tthis.sizers[6].setCursor(crs[mxUtils.mod(5 + da, crs.length)]);\n\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[7], pt.x, pt.y);\n\t\t\t\tthis.sizers[7].setCursor(crs[mxUtils.mod(4 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[8], cx + this.state.absoluteOffset.x, cy + this.state.absoluteOffset.y);\n\t\t\t}\n\t\t\telse if (this.state.width >= 2 && this.state.height >= 2)\n\t\t\t{\n\t\t\t\tthis.moveSizerTo(this.sizers[0], cx + this.state.absoluteOffset.x, cy + this.state.absoluteOffset.y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.moveSizerTo(this.sizers[0], this.state.x, this.state.y);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.rotationShape != null)\n\t{\n\t\tvar alpha = mxUtils.toRadians((this.currentAlpha != null) ? this.currentAlpha : this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\tvar cos = Math.cos(alpha);\n\t\tvar sin = Math.sin(alpha);\n\t\t\n\t\tvar ct = new mxPoint(this.state.getCenterX(), this.state.getCenterY());\n\t\tvar pt = mxUtils.getRotatedPoint(this.getRotationHandlePosition(), cos, sin, ct);\n\n\t\tif (this.rotationShape.node != null)\n\t\t{\n\t\t\tthis.moveSizerTo(this.rotationShape, pt.x, pt.y);\n\n\t\t\t// Hides rotation handle during text editing\n\t\t\tthis.rotationShape.node.style.visibility = (this.state.view.graph.isEditing()) ? 'hidden' : '';\n\t\t}\n\t}\n\t\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t}\n\t\n\tif (this.edgeHandlers != null)\n\t{\t\t\n\t\tfor (var i = 0; i < this.edgeHandlers.length; i++)\n\t\t{\n\t\t\tthis.edgeHandlers[i].redraw();\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tvar temp = this.customHandles[i].shape.node.style.display;\n\t\t\tthis.customHandles[i].redraw();\n\t\t\tthis.customHandles[i].shape.node.style.display = temp;\n\n\t\t\t// Hides custom handles during text editing\n\t\t\tthis.customHandles[i].shape.node.style.visibility = (this.graph.isEditing()) ? 'hidden' : '';\n\t\t}\n\t}\n\n\tthis.updateParentHighlight();\n};\n\n/**\n * Function: getRotationHandlePosition\n * \n * Returns an <mxPoint> that defines the rotation handle position.\n */\nmxVertexHandler.prototype.getRotationHandlePosition = function()\n{\n\treturn new mxPoint(this.bounds.x + this.bounds.width / 2, this.bounds.y + this.rotationHandleVSpacing)\n};\n\n/**\n * Function: updateParentHighlight\n * \n * Updates the highlight of the parent if <parentHighlightEnabled> is true.\n */\nmxVertexHandler.prototype.updateParentHighlight = function()\n{\n\t// If not destroyed\n\tif (this.selectionBorder != null)\n\t{\n\t\tif (this.parentHighlight != null)\n\t\t{\n\t\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\n\t\t\tif (this.graph.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\tvar b = this.parentHighlight.bounds;\n\t\t\t\t\n\t\t\t\tif (pstate != null && (b.x != pstate.x || b.y != pstate.y ||\n\t\t\t\t\tb.width != pstate.width || b.height != pstate.height))\n\t\t\t\t{\n\t\t\t\t\tthis.parentHighlight.bounds = pstate;\n\t\t\t\t\tthis.parentHighlight.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.parentHighlight.destroy();\n\t\t\t\tthis.parentHighlight = null;\n\t\t\t}\n\t\t}\n\t\telse if (this.parentHighlightEnabled)\n\t\t{\n\t\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\t\n\t\t\tif (this.graph.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\t\n\t\t\t\tif (pstate != null)\n\t\t\t\t{\n\t\t\t\t\tthis.parentHighlight = this.createParentHighlightShape(pstate);\n\t\t\t\t\t// VML dialect required here for event transparency in IE\n\t\t\t\t\tthis.parentHighlight.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.parentHighlight.pointerEvents = false;\n\t\t\t\t\tthis.parentHighlight.rotation = Number(pstate.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\t\tthis.parentHighlight.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview.\n */\nmxVertexHandler.prototype.drawPreview = function()\n{\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.bounds = this.bounds;\n\t\t\n\t\tif (this.preview.node.parentNode == this.graph.container)\n\t\t{\n\t\t\tthis.preview.bounds.width = Math.max(0, this.preview.bounds.width - 1);\n\t\t\tthis.preview.bounds.height = Math.max(0, this.preview.bounds.height - 1);\n\t\t}\n\t\n\t\tthis.preview.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\tthis.preview.redraw();\n\t}\n\t\n\tthis.selectionBorder.bounds = this.bounds;\n\tthis.selectionBorder.redraw();\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.redraw();\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxVertexHandler.prototype.destroy = function()\n{\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.state.view.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.destroy();\n\t\tthis.preview = null;\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.destroy();\n\t\tthis.parentHighlight = null;\n\t}\n\t\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.destroy();\n\t\tthis.selectionBorder = null;\n\t}\n\t\n\tthis.labelShape = null;\n\tthis.removeHint();\n\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tthis.sizers[i].destroy();\n\t\t}\n\t\t\n\t\tthis.sizers = null;\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].destroy();\n\t\t}\n\t\t\n\t\tthis.customHandles = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEdgeHandler\n *\n * Graph event handler that reconnects edges and modifies control points and\n * the edge label location. Uses <mxTerminalMarker> for finding and\n * highlighting new source and target vertices. This handler is automatically\n * created in <mxGraph.createHandler> for each selected edge.\n * \n * To enable adding/removing control points, the following code can be used:\n * \n * (code)\n * mxEdgeHandler.prototype.addEnabled = true;\n * mxEdgeHandler.prototype.removeEnabled = true;\n * (end)\n * \n * Note: This experimental feature is not recommended for production use.\n * \n * Constructor: mxEdgeHandler\n *\n * Constructs an edge handler for the specified <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be handled.\n */\nfunction mxEdgeHandler(state)\n{\n\tif (state != null)\n\t{\n\t\tthis.state = state;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar dirty = this.index != null;\n\t\t\tthis.reset();\n\t\t\t\n\t\t\tif (dirty)\n\t\t\t{\n\t\t\t\tthis.graph.cellRenderer.redraw(this.state, false, state.view.isRendering());\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.state.view.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxEdgeHandler.prototype.graph = null;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState> being modified.\n */\nmxEdgeHandler.prototype.state = null;\n\n/**\n * Variable: marker\n * \n * Holds the <mxTerminalMarker> which is used for highlighting terminals.\n */\nmxEdgeHandler.prototype.marker = null;\n\n/**\n * Variable: constraintHandler\n * \n * Holds the <mxConstraintHandler> used for drawing and highlighting\n * constraints.\n */\nmxEdgeHandler.prototype.constraintHandler = null;\n\n/**\n * Variable: error\n * \n * Holds the current validation error while a connection is being changed.\n */\nmxEdgeHandler.prototype.error = null;\n\n/**\n * Variable: shape\n * \n * Holds the <mxShape> that represents the preview edge.\n */\nmxEdgeHandler.prototype.shape = null;\n\n/**\n * Variable: bends\n * \n * Holds the <mxShapes> that represent the points.\n */\nmxEdgeHandler.prototype.bends = null;\n\n/**\n * Variable: labelShape\n * \n * Holds the <mxShape> that represents the label position.\n */\nmxEdgeHandler.prototype.labelShape = null;\n\n/**\n * Variable: cloneEnabled\n * \n * Specifies if cloning by control-drag is enabled. Default is true.\n */\nmxEdgeHandler.prototype.cloneEnabled = true;\n\n/**\n * Variable: addEnabled\n * \n * Specifies if adding bends by shift-click is enabled. Default is false.\n * Note: This experimental feature is not recommended for production use.\n */\nmxEdgeHandler.prototype.addEnabled = false;\n\n/**\n * Variable: removeEnabled\n * \n * Specifies if removing bends by shift-click is enabled. Default is false.\n * Note: This experimental feature is not recommended for production use.\n */\nmxEdgeHandler.prototype.removeEnabled = false;\n\n/**\n * Variable: dblClickRemoveEnabled\n * \n * Specifies if removing bends by double click is enabled. Default is false.\n */\nmxEdgeHandler.prototype.dblClickRemoveEnabled = false;\n\n/**\n * Variable: mergeRemoveEnabled\n * \n * Specifies if removing bends by dropping them on other bends is enabled.\n * Default is false.\n */\nmxEdgeHandler.prototype.mergeRemoveEnabled = false;\n\n/**\n * Variable: straightRemoveEnabled\n * \n * Specifies if removing bends by creating straight segments should be enabled.\n * If enabled, this can be overridden by holding down the alt key while moving.\n * Default is false.\n */\nmxEdgeHandler.prototype.straightRemoveEnabled = false;\n\n/**\n * Variable: virtualBendsEnabled\n * \n * Specifies if virtual bends should be added in the center of each\n * segments. These bends can then be used to add new waypoints.\n * Default is false.\n */\nmxEdgeHandler.prototype.virtualBendsEnabled = false;\n\n/**\n * Variable: virtualBendOpacity\n * \n * Opacity to be used for virtual bends (see <virtualBendsEnabled>).\n * Default is 20.\n */\nmxEdgeHandler.prototype.virtualBendOpacity = 20;\n\n/**\n * Variable: parentHighlightEnabled\n * \n * Specifies if the parent should be highlighted if a child cell is selected.\n * Default is false.\n */\nmxEdgeHandler.prototype.parentHighlightEnabled = false;\n\n/**\n * Variable: preferHtml\n * \n * Specifies if bends should be added to the graph container. This is updated\n * in <init> based on whether the edge or one of its terminals has an HTML\n * label in the container.\n */\nmxEdgeHandler.prototype.preferHtml = false;\n\n/**\n * Variable: allowHandleBoundsCheck\n * \n * Specifies if the bounds of handles should be used for hit-detection in IE\n * Default is true.\n */\nmxEdgeHandler.prototype.allowHandleBoundsCheck = true;\n\n/**\n * Variable: snapToTerminals\n * \n * Specifies if waypoints should snap to the routing centers of terminals.\n * Default is false.\n */\nmxEdgeHandler.prototype.snapToTerminals = false;\n\n/**\n * Variable: handleImage\n * \n * Optional <mxImage> to be used as handles. Default is null.\n */\nmxEdgeHandler.prototype.handleImage = null;\n\n/**\n * Variable: tolerance\n * \n * Optional tolerance for hit-detection in <getHandleForEvent>. Default is 0.\n */\nmxEdgeHandler.prototype.tolerance = 0;\n\n/**\n * Variable: outlineConnect\n * \n * Specifies if connections to the outline of a highlighted target should be\n * enabled. This will allow to place the connection point along the outline of\n * the highlighted target. Default is false.\n */\nmxEdgeHandler.prototype.outlineConnect = false;\n\n/**\n * Variable: manageLabelHandle\n * \n * Specifies if the label handle should be moved if it intersects with another\n * handle. Uses <checkLabelHandle> for checking and moving. Default is false.\n */\nmxEdgeHandler.prototype.manageLabelHandle = false;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this edge handler.\n */\nmxEdgeHandler.prototype.init = function()\n{\n\tthis.graph = this.state.view.graph;\n\tthis.marker = this.createMarker();\n\tthis.constraintHandler = new mxConstraintHandler(this.graph);\n\t\n\t// Clones the original points from the cell\n\t// and makes sure at least one point exists\n\tthis.points = [];\n\t\n\t// Uses the absolute points of the state\n\t// for the initial configuration and preview\n\tthis.abspoints = this.getSelectionPoints(this.state);\n\tthis.shape = this.createSelectionShape(this.abspoints);\n\tthis.shape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\tthis.shape.init(this.graph.getView().getOverlayPane());\n\tthis.shape.pointerEvents = false;\n\tthis.shape.setCursor(mxConstants.CURSOR_MOVABLE_EDGE);\n\tmxEvent.redirectMouseEvents(this.shape.node, this.graph, this.state);\n\n\t// Updates preferHtml\n\tthis.preferHtml = this.state.text != null &&\n\t\tthis.state.text.node.parentNode == this.graph.container;\n\t\n\tif (!this.preferHtml)\n\t{\n\t\t// Checks source terminal\n\t\tvar sourceState = this.state.getVisibleTerminalState(true);\n\t\t\n\t\tif (sourceState != null)\n\t\t{\n\t\t\tthis.preferHtml = sourceState.text != null &&\n\t\t\t\tsourceState.text.node.parentNode == this.graph.container;\n\t\t}\n\t\t\n\t\tif (!this.preferHtml)\n\t\t{\n\t\t\t// Checks target terminal\n\t\t\tvar targetState = this.state.getVisibleTerminalState(false);\n\t\t\t\n\t\t\tif (targetState != null)\n\t\t\t{\n\t\t\t\tthis.preferHtml = targetState.text != null &&\n\t\t\t\ttargetState.text.node.parentNode == this.graph.container;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Adds highlight for parent group\n\tif (this.parentHighlightEnabled)\n\t{\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\n\t\tif (this.graph.model.isVertex(parent))\n\t\t{\n\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\n\t\t\tif (pstate != null)\n\t\t\t{\n\t\t\t\tthis.parentHighlight = this.createParentHighlightShape(pstate);\n\t\t\t\t// VML dialect required here for event transparency in IE\n\t\t\t\tthis.parentHighlight.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\tthis.parentHighlight.pointerEvents = false;\n\t\t\t\tthis.parentHighlight.rotation = Number(pstate.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tthis.parentHighlight.init(this.graph.getView().getOverlayPane());\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Creates bends for the non-routed absolute points\n\t// or bends that don't correspond to points\n\tif (this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells ||\n\t\tmxGraphHandler.prototype.maxCells <= 0)\n\t{\n\t\tthis.bends = this.createBends();\n\n\t\tif (this.isVirtualBendsEnabled())\n\t\t{\n\t\t\tthis.virtualBends = this.createVirtualBends();\n\t\t}\n\t}\n\n\t// Adds a rectangular handle for the label position\n\tthis.label = new mxPoint(this.state.absoluteOffset.x, this.state.absoluteOffset.y);\n\tthis.labelShape = this.createLabelHandleShape();\n\tthis.initBend(this.labelShape);\n\tthis.labelShape.setCursor(mxConstants.CURSOR_LABEL_HANDLE);\n\t\n\tthis.customHandles = this.createCustomHandles();\n\t\n\tthis.redraw();\n};\n\n/**\n * Function: createCustomHandles\n * \n * Returns an array of custom handles. This implementation returns null.\n */\nmxEdgeHandler.prototype.createCustomHandles = function()\n{\n\treturn null;\n};\n\n/**\n * Function: isVirtualBendsEnabled\n * \n * Returns true if virtual bends should be added. This returns true if\n * <virtualBendsEnabled> is true and the current style allows and\n * renders custom waypoints.\n */\nmxEdgeHandler.prototype.isVirtualBendsEnabled = function(evt)\n{\n\treturn this.virtualBendsEnabled && (this.state.style[mxConstants.STYLE_EDGE] == null ||\n\t\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.NONE ||\n\t\t\tthis.state.style[mxConstants.STYLE_NOEDGESTYLE] == 1)  &&\n\t\t\tmxUtils.getValue(this.state.style, mxConstants.STYLE_SHAPE, null) != 'arrow';\n};\n\n/**\n * Function: isAddPointEvent\n * \n * Returns true if the given event is a trigger to add a new point. This\n * implementation returns true if shift is pressed.\n */\nmxEdgeHandler.prototype.isAddPointEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: isRemovePointEvent\n * \n * Returns true if the given event is a trigger to remove a point. This\n * implementation returns true if shift is pressed.\n */\nmxEdgeHandler.prototype.isRemovePointEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: getSelectionPoints\n * \n * Returns the list of points that defines the selection stroke.\n */\nmxEdgeHandler.prototype.getSelectionPoints = function(state)\n{\n\treturn state.absolutePoints;\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxEdgeHandler.prototype.createParentHighlightShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.getSelectionColor());\n\tshape.strokewidth = this.getSelectionStrokeWidth();\n\tshape.isDashed = this.isSelectionDashed();\n\t\n\treturn shape;\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxEdgeHandler.prototype.createSelectionShape = function(points)\n{\n\tvar shape = new this.state.shape.constructor();\n\tshape.outline = true;\n\tshape.apply(this.state);\n\t\n\tshape.isDashed = this.isSelectionDashed();\n\tshape.stroke = this.getSelectionColor();\n\tshape.isShadow = false;\n\t\n\treturn shape;\n};\n\n/**\n * Function: getSelectionColor\n * \n * Returns <mxConstants.EDGE_SELECTION_COLOR>.\n */\nmxEdgeHandler.prototype.getSelectionColor = function()\n{\n\treturn mxConstants.EDGE_SELECTION_COLOR;\n};\n\n/**\n * Function: getSelectionStrokeWidth\n * \n * Returns <mxConstants.EDGE_SELECTION_STROKEWIDTH>.\n */\nmxEdgeHandler.prototype.getSelectionStrokeWidth = function()\n{\n\treturn mxConstants.EDGE_SELECTION_STROKEWIDTH;\n};\n\n/**\n * Function: isSelectionDashed\n * \n * Returns <mxConstants.EDGE_SELECTION_DASHED>.\n */\nmxEdgeHandler.prototype.isSelectionDashed = function()\n{\n\treturn mxConstants.EDGE_SELECTION_DASHED;\n};\n\n/**\n * Function: isConnectableCell\n * \n * Returns true if the given cell is connectable. This is a hook to\n * disable floating connections. This implementation returns true.\n */\nmxEdgeHandler.prototype.isConnectableCell = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: getCellAt\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxEdgeHandler.prototype.getCellAt = function(x, y)\n{\n\treturn (!this.outlineConnect) ? this.graph.getCellAt(x, y) : null;\n};\n\n/**\n * Function: createMarker\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxEdgeHandler.prototype.createMarker = function()\n{\n\tvar marker = new mxCellMarker(this.graph);\n\tvar self = this; // closure\n\n\t// Only returns edges if they are connectable and never returns\n\t// the edge that is currently being modified\n\tmarker.getCell = function(me)\n\t{\n\t\tvar cell = mxCellMarker.prototype.getCell.apply(this, arguments);\n\n\t\t// Checks for cell at preview point (with grid)\n\t\tif ((cell == self.state.cell || cell == null) && self.currentPoint != null)\n\t\t{\n\t\t\tcell = self.graph.getCellAt(self.currentPoint.x, self.currentPoint.y);\n\t\t}\n\t\t\n\t\t// Uses connectable parent vertex if one exists\n\t\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\t\n\t\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t\t{\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar model = self.graph.getModel();\n\t\t\n\t\tif ((this.graph.isSwimlane(cell) && self.currentPoint != null &&\n\t\t\tthis.graph.hitsSwimlaneContent(cell, self.currentPoint.x, self.currentPoint.y)) ||\n\t\t\t(!self.isConnectableCell(cell)) || (cell == self.state.cell ||\n\t\t\t(cell != null && !self.graph.connectableEdges && model.isEdge(cell))) ||\n\t\t\tmodel.isAncestor(self.state.cell, cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\tif (!this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\treturn cell;\n\t};\n\n\t// Sets the highlight color according to validateConnection\n\tmarker.isValidState = function(state)\n\t{\n\t\tvar model = self.graph.getModel();\n\t\tvar other = self.graph.view.getTerminalPort(state,\n\t\t\tself.graph.view.getState(model.getTerminal(self.state.cell,\n\t\t\t!self.isSource)), !self.isSource);\n\t\tvar otherCell = (other != null) ? other.cell : null;\n\t\tvar source = (self.isSource) ? state.cell : otherCell;\n\t\tvar target = (self.isSource) ? otherCell : state.cell;\n\t\t\n\t\t// Updates the error message of the handler\n\t\tself.error = self.validateConnection(source, target);\n\n\t\treturn self.error == null;\n\t};\n\t\n\treturn marker;\n};\n\n/**\n * Function: validateConnection\n * \n * Returns the error message or an empty string if the connection for the\n * given source, target pair is not valid. Otherwise it returns null. This\n * implementation uses <mxGraph.getEdgeValidationError>.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxEdgeHandler.prototype.validateConnection = function(source, target)\n{\n\treturn this.graph.getEdgeValidationError(this.state.cell, source, target);\n};\n\n/**\n * Function: createBends\n * \n * Creates and returns the bends used for modifying the edge. This is\n * typically an array of <mxRectangleShapes>.\n */\n mxEdgeHandler.prototype.createBends = function()\n {\n\tvar cell = this.state.cell;\n\tvar bends = [];\n\n\tfor (var i = 0; i < this.abspoints.length; i++)\n\t{\n\t\tif (this.isHandleVisible(i))\n\t\t{\n\t\t\tvar source = i == 0;\n\t\t\tvar target = i == this.abspoints.length - 1;\n\t\t\tvar terminal = source || target;\n\n\t\t\tif (terminal || this.graph.isCellBendable(cell))\n\t\t\t{\n\t\t\t\t(mxUtils.bind(this, function(index)\n\t\t\t\t{\n\t\t\t\t\tvar bend = this.createHandleShape(index);\n\t\t\t\t\tthis.initBend(bend, mxUtils.bind(this, mxUtils.bind(this, function()\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.dblClickRemoveEnabled)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.removePoint(this.state, index);\n\t\t\t\t\t\t}\n\t\t\t\t\t})));\n\t\n\t\t\t\t\tif (this.isHandleEnabled(i))\n\t\t\t\t\t{\n\t\t\t\t\t\tbend.setCursor((terminal) ? mxConstants.CURSOR_TERMINAL_HANDLE : mxConstants.CURSOR_BEND_HANDLE);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbends.push(bend);\n\t\t\t\t\n\t\t\t\t\tif (!terminal)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.points.push(new mxPoint(0,0));\n\t\t\t\t\t\tbend.node.style.visibility = 'hidden';\n\t\t\t\t\t}\n\t\t\t\t}))(i);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn bends;\n};\n\n/**\n * Function: createVirtualBends\n * \n * Creates and returns the bends used for modifying the edge. This is\n * typically an array of <mxRectangleShapes>.\n */\n mxEdgeHandler.prototype.createVirtualBends = function()\n {\n\tvar cell = this.state.cell;\n\tvar last = this.abspoints[0];\n\tvar bends = [];\n\n\tif (this.graph.isCellBendable(cell))\n\t{\n\t\tfor (var i = 1; i < this.abspoints.length; i++)\n\t\t{\n\t\t\t(mxUtils.bind(this, function(bend)\n\t\t\t{\n\t\t\t\tthis.initBend(bend);\n\t\t\t\tbend.setCursor(mxConstants.CURSOR_VIRTUAL_BEND_HANDLE);\n\t\t\t\tbends.push(bend);\n\t\t\t}))(this.createHandleShape());\n\t\t}\n\t}\n\n\treturn bends;\n};\n\n/**\n * Function: isHandleEnabled\n * \n * Creates the shape used to display the given bend.\n */\nmxEdgeHandler.prototype.isHandleEnabled = function(index)\n{\n\treturn true;\n};\n\n/**\n * Function: isHandleVisible\n * \n * Returns true if the handle at the given index is visible.\n */\nmxEdgeHandler.prototype.isHandleVisible = function(index)\n{\n\tvar source = this.state.getVisibleTerminalState(true);\n\tvar target = this.state.getVisibleTerminalState(false);\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\tvar edgeStyle = (geo != null) ? this.graph.view.getEdgeStyle(this.state, geo.points, source, target) : null;\n\n\treturn edgeStyle != mxEdgeStyle.EntityRelation || index == 0 || index == this.abspoints.length - 1;\n};\n\n/**\n * Function: createHandleShape\n * \n * Creates the shape used to display the given bend. Note that the index may be\n * null for special cases, such as when called from\n * <mxElbowEdgeHandler.createVirtualBend>. Only images and rectangles should be\n * returned if support for HTML labels with not foreign objects is required.\n * Index if null for virtual handles.\n */\nmxEdgeHandler.prototype.createHandleShape = function(index)\n{\n\tif (this.handleImage != null)\n\t{\n\t\tvar shape = new mxImageShape(new mxRectangle(0, 0, this.handleImage.width, this.handleImage.height), this.handleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse\n\t{\n\t\tvar s = mxConstants.HANDLE_SIZE;\n\t\t\n\t\tif (this.preferHtml)\n\t\t{\n\t\t\ts -= 1;\n\t\t}\n\t\t\n\t\treturn new mxRectangleShape(new mxRectangle(0, 0, s, s), mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: createLabelHandleShape\n * \n * Creates the shape used to display the the label handle.\n */\nmxEdgeHandler.prototype.createLabelHandleShape = function()\n{\n\tif (this.labelHandleImage != null)\n\t{\n\t\tvar shape = new mxImageShape(new mxRectangle(0, 0, this.labelHandleImage.width, this.labelHandleImage.height), this.labelHandleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse\n\t{\n\t\tvar s = mxConstants.LABEL_HANDLE_SIZE;\n\t\treturn new mxRectangleShape(new mxRectangle(0, 0, s, s), mxConstants.LABEL_HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: initBend\n * \n * Helper method to initialize the given bend.\n * \n * Parameters:\n * \n * bend - <mxShape> that represents the bend to be initialized.\n */\nmxEdgeHandler.prototype.initBend = function(bend, dblClick)\n{\n\tif (this.preferHtml)\n\t{\n\t\tbend.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tbend.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tbend.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\tbend.init(this.graph.getView().getOverlayPane());\n\t}\n\n\tmxEvent.redirectMouseEvents(bend.node, this.graph, this.state,\n\t\t\tnull, null, null, dblClick);\n\t\n\t// Fixes lost event tracking for images in quirks / IE8 standards\n\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t{\n\t\tmxEvent.addListener(bend.node, 'dragstart', function(evt)\n\t\t{\n\t\t\tmxEvent.consume(evt);\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t}\n\t\n\tif (mxClient.IS_TOUCH)\n\t{\n\t\tbend.node.setAttribute('pointer-events', 'none');\n\t}\n};\n\n/**\n * Function: getHandleForEvent\n * \n * Returns the index of the handle for the given event.\n */\nmxEdgeHandler.prototype.getHandleForEvent = function(me)\n{\n\t// Connection highlight may consume events before they reach sizer handle\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 1;\n\tvar hit = (this.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\tvar minDistSq = null;\n\tvar result = null;\n\n\tfunction checkShape(shape)\n\t{\n\t\tif (shape != null && shape.node.style.display != 'none' && shape.node.style.visibility != 'hidden' &&\n\t\t\t(me.isSource(shape) || (hit != null && mxUtils.intersects(shape.bounds, hit))))\n\t\t{\n\t\t\tvar dx = me.getGraphX() - shape.bounds.getCenterX();\n\t\t\tvar dy = me.getGraphY() - shape.bounds.getCenterY();\n\t\t\tvar tmp = dx * dx + dy * dy;\n\t\t\t\n\t\t\tif (minDistSq == null || tmp <= minDistSq)\n\t\t\t{\n\t\t\t\tminDistSq = tmp;\n\t\t\t\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tif (this.customHandles != null && this.isCustomHandleEvent(me))\n\t{\n\t\t// Inverse loop order to match display order\n\t\tfor (var i = this.customHandles.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (checkShape(this.customHandles[i].shape))\n\t\t\t{\n\t\t\t\t// LATER: Return reference to active shape\n\t\t\t\treturn mxEvent.CUSTOM_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (me.isSource(this.state.text) || checkShape(this.labelShape))\n\t{\n\t\tresult = mxEvent.LABEL_HANDLE;\n\t}\n\t\n\tif (this.bends != null)\n\t{\n\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.bends[i]))\n\t\t\t{\n\t\t\t\tresult = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.virtualBends != null && this.isAddVirtualBendEvent(me))\n\t{\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.virtualBends[i]))\n\t\t\t{\n\t\t\t\tresult = mxEvent.VIRTUAL_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isAddVirtualBendEvent\n * \n * Returns true if the given event allows virtual bends to be added. This\n * implementation returns true.\n */\nmxEdgeHandler.prototype.isAddVirtualBendEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: isCustomHandleEvent\n * \n * Returns true if the given event allows custom handles to be changed. This\n * implementation returns true.\n */\nmxEdgeHandler.prototype.isCustomHandleEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by checking if a special element of the handler\n * was clicked, in which case the index parameter is non-null. The\n * indices may be one of <LABEL_HANDLE> or the number of the respective\n * control point. The source and target points are used for reconnecting\n * the edge.\n */\nmxEdgeHandler.prototype.mouseDown = function(sender, me)\n{\n\tvar handle = this.getHandleForEvent(me);\n\t\n\tif (this.bends != null && this.bends[handle] != null)\n\t{\n\t\tvar b = this.bends[handle].bounds;\n\t\tthis.snapPoint = new mxPoint(b.getCenterX(), b.getCenterY());\n\t}\n\t\n\tif (this.addEnabled && handle == null && this.isAddPointEvent(me.getEvent()))\n\t{\n\t\tthis.addPoint(this.state, me.getEvent());\n\t\tme.consume();\n\t}\n\telse if (handle != null && !me.isConsumed() && this.graph.isEnabled())\n\t{\n\t\tif (this.removeEnabled && this.isRemovePointEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.removePoint(this.state, handle);\n\t\t}\n\t\telse if (handle != mxEvent.LABEL_HANDLE || this.graph.isLabelMovable(me.getCell()))\n\t\t{\n\t\t\tif (handle <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(this.virtualBends[mxEvent.VIRTUAL_HANDLE - handle].node, 100);\n\t\t\t}\n\t\t\t\n\t\t\tthis.start(me.getX(), me.getY(), handle);\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxEdgeHandler.prototype.start = function(x, y, index)\n{\n\tthis.startX = x;\n\tthis.startY = y;\n\n\tthis.isSource = (this.bends == null) ? false : index == 0;\n\tthis.isTarget = (this.bends == null) ? false : index == this.bends.length - 1;\n\tthis.isLabel = index == mxEvent.LABEL_HANDLE;\n\n\tif (this.isSource || this.isTarget)\n\t{\n\t\tvar cell = this.state.cell;\n\t\tvar terminal = this.graph.model.getTerminal(cell, this.isSource);\n\n\t\tif ((terminal == null && this.graph.isTerminalPointMovable(cell, this.isSource)) ||\n\t\t\t(terminal != null && this.graph.isCellDisconnectable(cell, terminal, this.isSource)))\n\t\t{\n\t\t\tthis.index = index;\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.index = index;\n\t}\n\t\n\t// Hides other custom handles\n\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t{\n\t\tif (this.customHandles != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t\t{\n\t\t\t\tif (i != mxEvent.CUSTOM_HANDLE - this.index)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[i].setVisible(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: clonePreviewState\n * \n * Returns a clone of the current preview state for the given point and terminal.\n */\nmxEdgeHandler.prototype.clonePreviewState = function(point, terminal)\n{\n\treturn this.state.clone();\n};\n\n/**\n * Function: getSnapToTerminalTolerance\n * \n * Returns the tolerance for the guides. Default value is\n * gridSize * scale / 2.\n */\nmxEdgeHandler.prototype.getSnapToTerminalTolerance = function()\n{\n\treturn this.graph.gridSize * this.graph.view.scale / 2;\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxEdgeHandler.prototype.updateHint = function(me, point) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxEdgeHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled width or height. This uses Math.round.\n */\nmxEdgeHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length);\n};\n\n/**\n * Function: isSnapToTerminalsEvent\n * \n * Returns true if <snapToTerminals> is true and if alt is not pressed.\n */\nmxEdgeHandler.prototype.isSnapToTerminalsEvent = function(me)\n{\n\treturn this.snapToTerminals && !mxEvent.isAltDown(me.getEvent());\n};\n\n/**\n * Function: getPointForEvent\n * \n * Returns the point for the given event.\n */\nmxEdgeHandler.prototype.getPointForEvent = function(me)\n{\n\tvar view = this.graph.getView();\n\tvar scale = view.scale;\n\tvar point = new mxPoint(this.roundLength(me.getGraphX() / scale) * scale,\n\t\tthis.roundLength(me.getGraphY() / scale) * scale);\n\t\n\tvar tt = this.getSnapToTerminalTolerance();\n\tvar overrideX = false;\n\tvar overrideY = false;\t\t\n\t\n\tif (tt > 0 && this.isSnapToTerminalsEvent(me))\n\t{\n\t\tfunction snapToPoint(pt)\n\t\t{\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar x = pt.x;\n\n\t\t\t\tif (Math.abs(point.x - x) < tt)\n\t\t\t\t{\n\t\t\t\t\tpoint.x = x;\n\t\t\t\t\toverrideX = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar y = pt.y;\n\n\t\t\t\tif (Math.abs(point.y - y) < tt)\n\t\t\t\t{\n\t\t\t\t\tpoint.y = y;\n\t\t\t\t\toverrideY = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Temporary function\n\t\tfunction snapToTerminal(terminal)\n\t\t{\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tsnapToPoint.call(this, new mxPoint(view.getRoutingCenterX(terminal),\n\t\t\t\t\t\tview.getRoutingCenterY(terminal)));\n\t\t\t}\n\t\t};\n\n\t\tsnapToTerminal.call(this, this.state.getVisibleTerminalState(true));\n\t\tsnapToTerminal.call(this, this.state.getVisibleTerminalState(false));\n\n\t\tif (this.state.absolutePoints != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.state.absolutePoints.length; i++)\n\t\t\t{\n\t\t\t\tsnapToPoint.call(this, this.state.absolutePoints[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tvar tr = view.translate;\n\t\t\n\t\tif (!overrideX)\n\t\t{\n\t\t\tpoint.x = (this.graph.snap(point.x / scale - tr.x) + tr.x) * scale;\n\t\t}\n\t\t\n\t\tif (!overrideY)\n\t\t{\n\t\t\tpoint.y = (this.graph.snap(point.y / scale - tr.y) + tr.y) * scale;\n\t\t}\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getPreviewTerminalState\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeHandler.prototype.getPreviewTerminalState = function(me)\n{\n\tthis.constraintHandler.update(me, this.isSource, true, me.isSource(this.marker.highlight.shape) ? null : this.currentPoint);\n\t\n\tif (this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null)\n\t{\n\t\t// Handles special case where grid is large and connection point is at actual point in which\n\t\t// case the outline is not followed as long as we're < gridSize / 2 away from that point\n\t\tif (this.marker.highlight != null && this.marker.highlight.state != null &&\n\t\t\tthis.marker.highlight.state.cell == this.constraintHandler.currentFocus.cell)\n\t\t{\n\t\t\t// Direct repaint needed if cell already highlighted\n\t\t\tif (this.marker.highlight.shape.stroke != 'transparent')\n\t\t\t{\n\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.markCell(this.constraintHandler.currentFocus.cell, 'transparent');\n\t\t}\n\t\t\n\t\tvar model = this.graph.getModel();\n\t\tvar other = this.graph.view.getTerminalPort(this.state,\n\t\t\t\tthis.graph.view.getState(model.getTerminal(this.state.cell,\n\t\t\t!this.isSource)), !this.isSource);\n\t\tvar otherCell = (other != null) ? other.cell : null;\n\t\tvar source = (this.isSource) ? this.constraintHandler.currentFocus.cell : otherCell;\n\t\tvar target = (this.isSource) ? otherCell : this.constraintHandler.currentFocus.cell;\n\t\t\n\t\t// Updates the error message of the handler\n\t\tthis.error = this.validateConnection(source, target);\n\t\tvar result = null;\n\t\t\n\t\tif (this.error == null)\n\t\t{\n\t\t\tresult = this.constraintHandler.currentFocus;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\telse if (!this.graph.isIgnoreTerminalEvent(me.getEvent()))\n\t{\n\t\tthis.marker.process(me);\n\t\tvar state = this.marker.getValidState();\n\t\t\n\t\tif (state != null && this.graph.isCellLocked(state.cell))\n\t\t{\n\t\t\tthis.marker.reset();\n\t\t}\n\t\t\n\t\treturn this.marker.getValidState();\n\t}\n\telse\n\t{\n\t\tthis.marker.reset();\n\t\t\n\t\treturn null;\n\t}\n};\n\n/**\n * Function: getPreviewPoints\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n * \n * Parameters:\n * \n * pt - <mxPoint> that contains the current pointer position.\n * me - Optional <mxMouseEvent> that contains the current event.\n */\nmxEdgeHandler.prototype.getPreviewPoints = function(pt, me)\n{\n\tvar geometry = this.graph.getCellGeometry(this.state.cell);\n\tvar points = (geometry.points != null) ? geometry.points.slice() : null;\n\tvar point = new mxPoint(pt.x, pt.y);\n\tvar result = null;\n\t\n\tif (!this.isSource && !this.isTarget)\n\t{\n\t\tthis.convertPoint(point, false);\n\t\t\n\t\tif (points == null)\n\t\t{\n\t\t\tpoints = [point];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Adds point from virtual bend\n\t\t\tif (this.index <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tpoints.splice(mxEvent.VIRTUAL_HANDLE - this.index, 0, point);\n\t\t\t}\n\n\t\t\t// Removes point if dragged on terminal point\n\t\t\tif (!this.isSource && !this.isTarget)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i != this.index)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar bend = this.bends[i];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bend != null && mxUtils.contains(bend.bounds, pt.x, pt.y))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (this.index <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.splice(mxEvent.VIRTUAL_HANDLE - this.index, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.splice(this.index - 1, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tresult = points;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Removes point if user tries to straighten a segment\n\t\t\t\tif (result == null && this.straightRemoveEnabled && (me == null || !mxEvent.isAltDown(me.getEvent())))\n\t\t\t\t{\n\t\t\t\t\tvar tol = this.graph.tolerance * this.graph.tolerance;\n\t\t\t\t\tvar abs = this.state.absolutePoints.slice();\n\t\t\t\t\tabs[this.index] = pt;\n\t\t\t\t\t\n\t\t\t\t\t// Handes special case where removing waypoint affects tolerance (flickering)\n\t\t\t\t\tvar src = this.state.getVisibleTerminalState(true);\n\t\t\t\t\t\n\t\t\t\t\tif (src != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c = this.graph.getConnectionConstraint(this.state, src, true);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if point is not fixed\n\t\t\t\t\t\tif (c == null || this.graph.getConnectionPoint(src, c) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tabs[0] = new mxPoint(src.view.getRoutingCenterX(src), src.view.getRoutingCenterY(src));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar trg = this.state.getVisibleTerminalState(false);\n\t\t\t\t\t\n\t\t\t\t\tif (trg != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c = this.graph.getConnectionConstraint(this.state, trg, false);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if point is not fixed\n\t\t\t\t\t\tif (c == null || this.graph.getConnectionPoint(trg, c) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tabs[abs.length - 1] = new mxPoint(trg.view.getRoutingCenterX(trg), trg.view.getRoutingCenterY(trg));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction checkRemove(idx, tmp)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (idx > 0 && idx < abs.length - 1 &&\n\t\t\t\t\t\t\tmxUtils.ptSegDistSq(abs[idx - 1].x, abs[idx - 1].y,\n\t\t\t\t\t\t\t\tabs[idx + 1].x, abs[idx + 1].y, tmp.x, tmp.y) < tol)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpoints.splice(idx - 1, 1);\n\t\t\t\t\t\t\tresult = points;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// LATER: Check if other points can be removed if a segment is made straight\n\t\t\t\t\tcheckRemove(this.index, pt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Updates existing point\n\t\t\tif (result == null && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tpoints[this.index - 1] = point;\n\t\t\t}\n\t\t}\n\t}\n\telse if (this.graph.resetEdgesOnConnect)\n\t{\n\t\tpoints = null;\n\t}\n\t\n\treturn (result != null) ? result : points;\n};\n\n/**\n * Function: isOutlineConnectEvent\n * \n * Returns true if <outlineConnect> is true and the source of the event is the outline shape\n * or shift is pressed.\n */\nmxEdgeHandler.prototype.isOutlineConnectEvent = function(me)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar evt = me.getEvent();\n\t\n\tvar clientX = mxEvent.getClientX(evt);\n\tvar clientY = mxEvent.getClientY(evt);\n\t\n\tvar doc = document.documentElement;\n\tvar left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n\tvar top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n\t\n\tvar gridX = this.currentPoint.x - this.graph.container.scrollLeft + offset.x - left;\n\tvar gridY = this.currentPoint.y - this.graph.container.scrollTop + offset.y - top;\n\n\treturn this.outlineConnect && !mxEvent.isShiftDown(me.getEvent()) &&\n\t\t(me.isSource(this.marker.highlight.shape) ||\n\t\t(mxEvent.isAltDown(me.getEvent()) && me.getState() != null) ||\n\t\tthis.marker.highlight.isHighlightAt(clientX, clientY) ||\n\t\t((gridX != clientX || gridY != clientY) && me.getState() == null &&\n\t\tthis.marker.highlight.isHighlightAt(gridX, gridY)));\n};\n\n/**\n * Function: updatePreviewState\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeHandler.prototype.updatePreviewState = function(edge, point, terminalState, me, outline)\n{\n\t// Computes the points for the edge style and terminals\n\tvar sourceState = (this.isSource) ? terminalState : this.state.getVisibleTerminalState(true);\n\tvar targetState = (this.isTarget) ? terminalState : this.state.getVisibleTerminalState(false);\n\t\n\tvar sourceConstraint = this.graph.getConnectionConstraint(edge, sourceState, true);\n\tvar targetConstraint = this.graph.getConnectionConstraint(edge, targetState, false);\n\n\tvar constraint = this.constraintHandler.currentConstraint;\n\n\tif (constraint == null && outline)\n\t{\n\t\tif (terminalState != null)\n\t\t{\n\t\t\t// Handles special case where mouse is on outline away from actual end point\n\t\t\t// in which case the grid is ignored and mouse point is used instead\n\t\t\tif (me.isSource(this.marker.highlight.shape))\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\t\t\t\n\t\t\tconstraint = this.graph.getOutlineConstraint(point, terminalState, me);\n\t\t\tthis.constraintHandler.setFocus(me, terminalState, this.isSource);\n\t\t\tthis.constraintHandler.currentConstraint = constraint;\n\t\t\tthis.constraintHandler.currentPoint = point;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconstraint = new mxConnectionConstraint();\n\t\t}\n\t}\n\t\n\tif (this.outlineConnect && this.marker.highlight != null && this.marker.highlight.shape != null)\n\t{\n\t\tvar s = this.graph.view.scale;\n\t\t\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t{\n\t\t\tthis.marker.highlight.shape.stroke = (outline) ? mxConstants.OUTLINE_HIGHLIGHT_COLOR : 'transparent';\n\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.OUTLINE_HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\tthis.marker.highlight.repaint();\n\t\t}\n\t\telse if (this.marker.hasValidState())\n\t\t{\n\t\t\tthis.marker.highlight.shape.stroke = (this.marker.getValidState() == me.getState()) ?\n\t\t\t\tmxConstants.DEFAULT_VALID_COLOR : 'transparent';\n\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\tthis.marker.highlight.repaint();\n\t\t}\n\t}\n\t\n\tif (this.isSource)\n\t{\n\t\tsourceConstraint = constraint;\n\t}\n\telse if (this.isTarget)\n\t{\n\t\ttargetConstraint = constraint;\n\t}\n\t\n\tif (this.isSource || this.isTarget)\n\t{\n\t\tif (constraint != null && constraint.point != null)\n\t\t{\n\t\t\tedge.style[(this.isSource) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X] = constraint.point.x;\n\t\t\tedge.style[(this.isSource) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y] = constraint.point.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete edge.style[(this.isSource) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X];\n\t\t\tdelete edge.style[(this.isSource) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y];\n\t\t}\n\t}\n\t\n\tedge.setVisibleTerminalState(sourceState, true);\n\tedge.setVisibleTerminalState(targetState, false);\n\t\n\tif (!this.isSource || sourceState != null)\n\t{\n\t\tedge.view.updateFixedTerminalPoint(edge, sourceState, true, sourceConstraint);\n\t}\n\t\n\tif (!this.isTarget || targetState != null)\n\t{\n\t\tedge.view.updateFixedTerminalPoint(edge, targetState, false, targetConstraint);\n\t}\n\t\n\tif ((this.isSource || this.isTarget) && terminalState == null)\n\t{\n\t\tedge.setAbsoluteTerminalPoint(point, this.isSource);\n\n\t\tif (this.marker.getMarkedState() == null)\n\t\t{\n\t\t\tthis.error = (this.graph.allowDanglingEdges) ? null : '';\n\t\t}\n\t}\n\t\n\tedge.view.updatePoints(edge, this.points, sourceState, targetState);\n\tedge.view.updateFloatingTerminalPoints(edge, sourceState, targetState);\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview.\n */\nmxEdgeHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (this.index != null && this.marker != null)\n\t{\n\t\tthis.currentPoint = this.getPointForEvent(me);\n\t\tthis.error = null;\n\t\t\n\t\t// Uses the current point from the constraint handler if available\n\t\tif (!this.graph.isIgnoreTerminalEvent(me.getEvent()) && mxEvent.isShiftDown(me.getEvent()) && this.snapPoint != null)\n\t\t{\n\t\t\tif (Math.abs(this.snapPoint.x - this.currentPoint.x) < Math.abs(this.snapPoint.y - this.currentPoint.y))\n\t\t\t{\n\t\t\t\tthis.currentPoint.x = this.snapPoint.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.currentPoint.y = this.snapPoint.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t{\n\t\t\tif (this.customHandles != null)\n\t\t\t{\n\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].processEvent(me);\n\t\t\t}\n\t\t}\n\t\telse if (this.isLabel)\n\t\t{\n\t\t\tthis.label.x = this.currentPoint.x;\n\t\t\tthis.label.y = this.currentPoint.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.points = this.getPreviewPoints(this.currentPoint, me);\n\t\t\tvar terminalState = (this.isSource || this.isTarget) ? this.getPreviewTerminalState(me) : null;\n\n\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t\t{\n\t\t\t\tthis.currentPoint = this.constraintHandler.currentPoint.clone();\n\t\t\t}\n\t\t\telse if (this.outlineConnect)\n\t\t\t{\n\t\t\t\t// Need to check outline before cloning terminal state\n\t\t\t\tvar outline = (this.isSource || this.isTarget) ? this.isOutlineConnectEvent(me) : false\n\t\t\t\t\t\t\n\t\t\t\tif (outline)\n\t\t\t\t{\n\t\t\t\t\tterminalState = this.marker.highlight.state;\n\t\t\t\t}\n\t\t\t\telse if (terminalState != null && terminalState != me.getState() && this.marker.highlight.shape != null)\n\t\t\t\t{\n\t\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t\tterminalState = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (terminalState != null && this.graph.isCellLocked(terminalState.cell))\n\t\t\t{\n\t\t\t\tterminalState = null;\n\t\t\t\tthis.marker.reset();\n\t\t\t}\n\t\t\t\n\t\t\tvar clone = this.clonePreviewState(this.currentPoint, (terminalState != null) ? terminalState.cell : null);\n\t\t\tthis.updatePreviewState(clone, this.currentPoint, terminalState, me, outline);\n\n\t\t\t// Sets the color of the preview to valid or invalid, updates the\n\t\t\t// points of the preview and redraws\n\t\t\tvar color = (this.error == null) ? this.marker.validColor : this.marker.invalidColor;\n\t\t\tthis.setPreviewColor(color);\n\t\t\tthis.abspoints = clone.absolutePoints;\n\t\t\tthis.active = true;\n\t\t}\n\n\t\t// This should go before calling isOutlineConnectEvent above. As a workaround\n\t\t// we add an offset of gridSize to the hint to avoid problem with hit detection\n\t\t// in highlight.isHighlightAt (which uses comonentFromPoint)\n\t\tthis.updateHint(me, this.currentPoint);\n\t\tthis.drawPreview();\n\t\tmxEvent.consume(me.getEvent());\n\t\tme.consume();\n\t}\n\t// Workaround for disabling the connect highlight when over handle\n\telse if (mxClient.IS_IE && this.getHandleForEvent(me) != null)\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event to applying the previewed changes on the edge by\n * using <moveLabel>, <connect> or <changePoints>.\n */\nmxEdgeHandler.prototype.mouseUp = function(sender, me)\n{\n\t// Workaround for wrong event source in Webkit\n\tif (this.index != null && this.marker != null)\n\t{\n\t\tvar edge = this.state.cell;\n\t\tvar index = this.index;\n\t\tthis.index = null;\n\t\t\n\t\t// Ignores event if mouse has not been moved\n\t\tif (me.getX() != this.startX || me.getY() != this.startY)\n\t\t{\n\t\t\tvar clone = !this.graph.isIgnoreTerminalEvent(me.getEvent()) && this.graph.isCloneEvent(me.getEvent()) &&\n\t\t\t\tthis.cloneEnabled && this.graph.isCellsCloneable();\n\t\t\t\n\t\t\t// Displays the reason for not carriying out the change\n\t\t\t// if there is an error message with non-zero length\n\t\t\tif (this.error != null)\n\t\t\t{\n\t\t\t\tif (this.error.length > 0)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.validationAlert(this.error);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (index <= mxEvent.CUSTOM_HANDLE && index > mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\t\t\n\t\t\t\t\tmodel.beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].execute();\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.isLabel)\n\t\t\t{\n\t\t\t\tthis.moveLabel(this.state, this.label.x, this.label.y);\n\t\t\t}\n\t\t\telse if (this.isSource || this.isTarget)\n\t\t\t{\n\t\t\t\tvar terminal = null;\n\t\t\t\t\n\t\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t\t\t{\n\t\t\t\t\tterminal = this.constraintHandler.currentFocus.cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (terminal == null && this.marker.hasValidState() && this.marker.highlight != null &&\n\t\t\t\t\tthis.marker.highlight.shape != null &&\n\t\t\t\t\tthis.marker.highlight.shape.stroke != 'transparent' &&\n\t\t\t\t\tthis.marker.highlight.shape.stroke != 'white')\n\t\t\t\t{\n\t\t\t\t\tterminal = this.marker.validState.cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (terminal != null)\n\t\t\t\t{\n\t\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\t\tvar parent = model.getParent(edge);\n\t\t\t\t\t\n\t\t\t\t\tmodel.beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Clones and adds the cell\n\t\t\t\t\t\tif (clone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar geo = model.getGeometry(edge);\n\t\t\t\t\t\t\tvar clone = this.graph.cloneCell(edge);\n\t\t\t\t\t\t\tmodel.add(parent, clone, model.getChildCount(parent));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\tmodel.setGeometry(clone, geo);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar other = model.getTerminal(edge, !this.isSource);\n\t\t\t\t\t\t\tthis.graph.connectCell(clone, other, !this.isSource);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tedge = clone;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tedge = this.connect(edge, terminal, this.isSource, clone, me);\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.graph.isAllowDanglingEdges())\n\t\t\t\t{\n\t\t\t\t\tvar pt = this.abspoints[(this.isSource) ? 0 : this.abspoints.length - 1];\n\t\t\t\t\tpt.x = this.roundLength(pt.x / this.graph.view.scale - this.graph.view.translate.x);\n\t\t\t\t\tpt.y = this.roundLength(pt.y / this.graph.view.scale - this.graph.view.translate.y);\n\n\t\t\t\t\tvar pstate = this.graph.getView().getState(\n\t\t\t\t\t\t\tthis.graph.getModel().getParent(edge));\n\t\t\t\t\t\t\t\n\t\t\t\t\tif (pstate != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt.x -= pstate.origin.x;\n\t\t\t\t\t\tpt.y -= pstate.origin.y;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpt.x -= this.graph.panDx / this.graph.view.scale;\n\t\t\t\t\tpt.y -= this.graph.panDy / this.graph.view.scale;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t// Destroys and recreates this handler\n\t\t\t\t\tedge = this.changeTerminalPoint(edge, pt, this.isSource, clone);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.active)\n\t\t\t{\n\t\t\t\tedge = this.changePoints(edge, this.points, clone);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.graph.getView().invalidate(this.state.cell);\n\t\t\t\tthis.graph.getView().validate(this.state.cell);\t\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Resets the preview color the state of the handler if this\n\t\t// handler has not been recreated\n\t\tif (this.marker != null)\n\t\t{\n\t\t\tthis.reset();\n\n\t\t\t// Updates the selection if the edge has been cloned\n\t\t\tif (edge != this.state.cell)\n\t\t\t{\n\t\t\t\tthis.graph.setSelectionCell(edge);\n\t\t\t}\n\t\t}\n\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxEdgeHandler.prototype.reset = function()\n{\n\tif (this.active)\n\t{\n\t\tthis.refresh();\n\t}\n\t\n\tthis.error = null;\n\tthis.index = null;\n\tthis.label = null;\n\tthis.points = null;\n\tthis.snapPoint = null;\n\tthis.isLabel = false;\n\tthis.isSource = false;\n\tthis.isTarget = false;\n\tthis.active = false;\n\t\n\tif (this.livePreview && this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (this.sizers[i] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[i].node.style.display = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.reset();\n\t}\n\t\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.reset();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].reset();\n\t\t}\n\t}\n\n\tthis.setPreviewColor(mxConstants.EDGE_SELECTION_COLOR);\n\tthis.removeHint();\n\tthis.redraw();\n};\n\n/**\n * Function: setPreviewColor\n * \n * Sets the color of the preview to the given value.\n */\nmxEdgeHandler.prototype.setPreviewColor = function(color)\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.stroke = color;\n\t}\n};\n\n\n/**\n * Function: convertPoint\n * \n * Converts the given point in-place from screen to unscaled, untranslated\n * graph coordinates and applies the grid. Returns the given, modified\n * point instance.\n * \n * Parameters:\n * \n * point - <mxPoint> to be converted.\n * gridEnabled - Boolean that specifies if the grid should be applied.\n */\nmxEdgeHandler.prototype.convertPoint = function(point, gridEnabled)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\t\t\n\tif (gridEnabled)\n\t{\n\t\tpoint.x = this.graph.snap(point.x);\n\t\tpoint.y = this.graph.snap(point.y);\n\t}\n\t\n\tpoint.x = Math.round(point.x / scale - tr.x);\n\tpoint.y = Math.round(point.y / scale - tr.y);\n\n\tvar pstate = this.graph.getView().getState(\n\t\tthis.graph.getModel().getParent(this.state.cell));\n\n\tif (pstate != null)\n\t{\n\t\tpoint.x -= pstate.origin.x;\n\t\tpoint.y -= pstate.origin.y;\n\t}\n\n\treturn point;\n};\n\n/**\n * Function: moveLabel\n * \n * Changes the coordinates for the label of the given edge.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge.\n * x - Integer that specifies the x-coordinate of the new location.\n * y - Integer that specifies the y-coordinate of the new location.\n */\nmxEdgeHandler.prototype.moveLabel = function(edgeState, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(edgeState.cell);\n\t\n\tif (geometry != null)\n\t{\n\t\tvar scale = this.graph.getView().scale;\n\t\tgeometry = geometry.clone();\n\t\t\n\t\tif (geometry.relative)\n\t\t{\n\t\t\t// Resets the relative location stored inside the geometry\n\t\t\tvar pt = this.graph.getView().getRelativePoint(edgeState, x, y);\n\t\t\tgeometry.x = Math.round(pt.x * 10000) / 10000;\n\t\t\tgeometry.y = Math.round(pt.y);\n\t\t\t\n\t\t\t// Resets the offset inside the geometry to find the offset\n\t\t\t// from the resulting point\n\t\t\tgeometry.offset = new mxPoint(0, 0);\n\t\t\tvar pt = this.graph.view.getPoint(edgeState, geometry);\n\t\t\tgeometry.offset = new mxPoint(Math.round((x - pt.x) / scale), Math.round((y - pt.y) / scale));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar points = edgeState.absolutePoints;\n\t\t\tvar p0 = points[0];\n\t\t\tvar pe = points[points.length - 1];\n\t\t\t\n\t\t\tif (p0 != null && pe != null)\n\t\t\t{\n\t\t\t\tvar cx = p0.x + (pe.x - p0.x) / 2;\n\t\t\t\tvar cy = p0.y + (pe.y - p0.y) / 2;\n\t\t\t\t\n\t\t\t\tgeometry.offset = new mxPoint(Math.round((x - cx) / scale), Math.round((y - cy) / scale));\n\t\t\t\tgeometry.x = 0;\n\t\t\t\tgeometry.y = 0;\n\t\t\t}\n\t\t}\n\n\t\tmodel.setGeometry(edgeState.cell, geometry);\n\t}\n};\n\n/**\n * Function: connect\n * \n * Changes the terminal or terminal point of the given edge in the graph\n * model.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be reconnected.\n * terminal - <mxCell> that represents the new terminal.\n * isSource - Boolean indicating if the new terminal is the source or\n * target terminal.\n * isClone - Boolean indicating if the new connection should be a clone of\n * the old edge.\n * me - <mxMouseEvent> that contains the mouse up event.\n */\nmxEdgeHandler.prototype.connect = function(edge, terminal, isSource, isClone, me)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(edge);\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvar constraint = this.constraintHandler.currentConstraint;\n\t\t\n\t\tif (constraint == null)\n\t\t{\n\t\t\tconstraint = new mxConnectionConstraint();\n\t\t}\n\n\t\tthis.graph.connectCell(edge, terminal, isSource, constraint);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: changeTerminalPoint\n * \n * Changes the terminal point of the given edge.\n */\nmxEdgeHandler.prototype.changeTerminalPoint = function(edge, point, isSource, clone)\n{\n\tvar model = this.graph.getModel();\n\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (clone)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\t\t\tvar terminal = model.getTerminal(edge, !isSource);\n\t\t\tedge = this.graph.cloneCell(edge);\n\t\t\tmodel.add(parent, edge, model.getChildCount(parent));\n\t\t\tmodel.setTerminal(edge, terminal, !isSource);\n\t\t}\n\n\t\tvar geo = model.getGeometry(edge);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.setTerminalPoint(point, isSource);\n\t\t\tmodel.setGeometry(edge, geo);\n\t\t\tthis.graph.connectCell(edge, null, isSource, new mxConnectionConstraint());\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: changePoints\n * \n * Changes the control points of the given edge in the graph model.\n */\nmxEdgeHandler.prototype.changePoints = function(edge, points, clone)\n{\n\tvar model = this.graph.getModel();\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (clone)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\t\t\tvar source = model.getTerminal(edge, true);\n\t\t\tvar target = model.getTerminal(edge, false);\n\t\t\tedge = this.graph.cloneCell(edge);\n\t\t\tmodel.add(parent, edge, model.getChildCount(parent));\n\t\t\tmodel.setTerminal(edge, source, true);\n\t\t\tmodel.setTerminal(edge, target, false);\n\t\t}\n\t\t\n\t\tvar geo = model.getGeometry(edge);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.points = points;\n\t\t\t\n\t\t\tmodel.setGeometry(edge, geo);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: addPoint\n * \n * Adds a control point for the given state and event.\n */\nmxEdgeHandler.prototype.addPoint = function(state, evt)\n{\n\tvar pt = mxUtils.convertPoint(this.graph.container, mxEvent.getClientX(evt),\n\t\t\tmxEvent.getClientY(evt));\n\tvar gridEnabled = this.graph.isGridEnabledEvent(evt);\n\tthis.convertPoint(pt, gridEnabled);\n\tthis.addPointAt(state, pt.x, pt.y);\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: addPointAt\n * \n * Adds a control point at the given point.\n */\nmxEdgeHandler.prototype.addPointAt = function(state, x, y)\n{\n\tvar geo = this.graph.getCellGeometry(state.cell);\n\tvar pt = new mxPoint(x, y);\n\t\n\tif (geo != null)\n\t{\n\t\tgeo = geo.clone();\n\t\tvar t = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\tvar offset = new mxPoint(t.x * s, t.y * s);\n\t\t\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\n\t\tif (this.graph.model.isVertex(parent))\n\t\t{\n\t\t\tvar pState = this.graph.view.getState(parent);\n\t\t\toffset = new mxPoint(pState.x, pState.y);\n\t\t}\n\t\t\n\t\tvar index = mxUtils.findNearestSegment(state, pt.x * s + offset.x, pt.y * s + offset.y);\n\n\t\tif (geo.points == null)\n\t\t{\n\t\t\tgeo.points = [pt];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeo.points.splice(index, 0, pt);\n\t\t}\n\t\t\n\t\tthis.graph.getModel().setGeometry(state.cell, geo);\n\t\tthis.refresh();\t\n\t\tthis.redraw();\n\t}\n};\n\n/**\n * Function: removePoint\n * \n * Removes the control point at the given index from the given state.\n */\nmxEdgeHandler.prototype.removePoint = function(state, index)\n{\n\tif (index > 0 && index < this.abspoints.length - 1)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\t\t\n\t\tif (geo != null && geo.points != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.points.splice(index - 1, 1);\n\t\t\tthis.graph.getModel().setGeometry(state.cell, geo);\n\t\t\tthis.refresh();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getHandleFillColor\n * \n * Returns the fillcolor for the handle at the given index.\n */\nmxEdgeHandler.prototype.getHandleFillColor = function(index)\n{\n\tvar isSource = index == 0;\n\tvar cell = this.state.cell;\n\tvar terminal = this.graph.getModel().getTerminal(cell, isSource);\n\tvar color = mxConstants.HANDLE_FILLCOLOR;\n\t\n\tif ((terminal != null && !this.graph.isCellDisconnectable(cell, terminal, isSource)) ||\n\t\t(terminal == null && !this.graph.isTerminalPointMovable(cell, isSource)))\n\t{\n\t\tcolor = mxConstants.LOCKED_HANDLE_FILLCOLOR;\n\t}\n\telse if (terminal != null && this.graph.isCellDisconnectable(cell, terminal, isSource))\n\t{\n\t\tcolor = mxConstants.CONNECT_HANDLE_FILLCOLOR;\n\t}\n\t\n\treturn color;\n};\n\n/**\n * Function: redraw\n * \n * Redraws the preview, and the bends- and label control points.\n */\nmxEdgeHandler.prototype.redraw = function(ignoreHandles)\n{\n\tthis.abspoints = this.state.absolutePoints.slice();\n\tvar g = this.graph.getModel().getGeometry(this.state.cell);\n\tvar pts = g.points;\n\n\tif (this.bends != null && this.bends.length > 0)\n\t{\n\t\tif (pts != null)\n\t\t{\n\t\t\tif (this.points == null)\n\t\t\t{\n\t\t\t\tthis.points = [];\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 1; i < this.bends.length - 1; i++)\n\t\t\t{\n\t\t\t\tif (this.bends[i] != null && this.abspoints[i] != null)\n\t\t\t\t{\n\t\t\t\t\tthis.points[i - 1] = pts[i - 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.drawPreview();\n\t\n\tif (!ignoreHandles)\n\t{\n\t\tthis.redrawHandles();\n\t}\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the handles.\n */\nmxEdgeHandler.prototype.redrawHandles = function()\n{\n\tvar cell = this.state.cell;\n\n\t// Updates the handle for the label position\n\tvar b = this.labelShape.bounds;\n\tthis.label = new mxPoint(this.state.absoluteOffset.x, this.state.absoluteOffset.y);\n\tthis.labelShape.bounds = new mxRectangle(Math.round(this.label.x - b.width / 2),\n\t\tMath.round(this.label.y - b.height / 2), b.width, b.height);\n\n\t// Shows or hides the label handle depending on the label\n\tvar lab = this.graph.getLabel(cell);\n\tthis.labelShape.visible = (lab != null && lab.length > 0 && this.graph.isLabelMovable(cell));\n\t\n\tif (this.bends != null && this.bends.length > 0)\n\t{\n\t\tvar n = this.abspoints.length - 1;\n\t\t\n\t\tvar p0 = this.abspoints[0];\n\t\tvar x0 = p0.x;\n\t\tvar y0 = p0.y;\n\t\t\n\t\tb = this.bends[0].bounds;\n\t\tthis.bends[0].bounds = new mxRectangle(Math.floor(x0 - b.width / 2),\n\t\t\t\tMath.floor(y0 - b.height / 2), b.width, b.height);\n\t\tthis.bends[0].fill = this.getHandleFillColor(0);\n\t\tthis.bends[0].redraw();\n\t\t\n\t\tif (this.manageLabelHandle)\n\t\t{\n\t\t\tthis.checkLabelHandle(this.bends[0].bounds);\n\t\t}\n\t\t\t\t\n\t\tvar pe = this.abspoints[n];\n\t\tvar xn = pe.x;\n\t\tvar yn = pe.y;\n\t\t\n\t\tvar bn = this.bends.length - 1;\n\t\tb = this.bends[bn].bounds;\n\t\tthis.bends[bn].bounds = new mxRectangle(Math.floor(xn - b.width / 2),\n\t\t\t\tMath.floor(yn - b.height / 2), b.width, b.height);\n\t\tthis.bends[bn].fill = this.getHandleFillColor(bn);\n\t\tthis.bends[bn].redraw();\n\t\t\t\t\n\t\tif (this.manageLabelHandle)\n\t\t{\n\t\t\tthis.checkLabelHandle(this.bends[bn].bounds);\n\t\t}\n\t\t\n\t\tthis.redrawInnerBends(p0, pe);\n\t}\n\n\tif (this.abspoints != null && this.virtualBends != null && this.virtualBends.length > 0)\n\t{\n\t\tvar last = this.abspoints[0];\n\t\t\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tif (this.virtualBends[i] != null && this.abspoints[i + 1] != null)\n\t\t\t{\n\t\t\t\tvar pt = this.abspoints[i + 1];\n\t\t\t\tvar b = this.virtualBends[i];\n\t\t\t\tvar x = last.x + (pt.x - last.x) / 2;\n\t\t\t\tvar y = last.y + (pt.y - last.y) / 2;\n\t\t\t\tb.bounds = new mxRectangle(Math.floor(x - b.bounds.width / 2),\n\t\t\t\t\t\tMath.floor(y - b.bounds.height / 2), b.bounds.width, b.bounds.height);\n\t\t\t\tb.redraw();\n\t\t\t\tmxUtils.setOpacity(b.node, this.virtualBendOpacity);\n\t\t\t\tlast = pt;\n\t\t\t\t\n\t\t\t\tif (this.manageLabelHandle)\n\t\t\t\t{\n\t\t\t\t\tthis.checkLabelHandle(b.bounds);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.redraw();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: hideHandles\n * \n * Shortcut to <hideSizers>.\n */\nmxEdgeHandler.prototype.setHandlesVisible = function(visible)\n{\n\tif (this.bends != null)\n\t{\n\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t{\n\t\t\tthis.bends[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\t\n\tif (this.virtualBends != null)\n\t{\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tthis.virtualBends[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.node.style.display = (visible) ? '' : 'none';\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].setVisible(visible);\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates and redraws the inner bends.\n * \n * Parameters:\n * \n * p0 - <mxPoint> that represents the location of the first point.\n * pe - <mxPoint> that represents the location of the last point.\n */\nmxEdgeHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tfor (var i = 1; i < this.bends.length - 1; i++)\n\t{\n\t\tif (this.bends[i] != null)\n\t\t{\n\t\t\tif (this.abspoints[i] != null)\n\t\t\t{\n\t\t\t\tvar x = this.abspoints[i].x;\n\t\t\t\tvar y = this.abspoints[i].y;\n\t\t\t\t\n\t\t\t\tvar b = this.bends[i].bounds;\n\t\t\t\tthis.bends[i].node.style.visibility = 'visible';\n\t\t\t\tthis.bends[i].bounds = new mxRectangle(Math.round(x - b.width / 2),\n\t\t\t\t\t\tMath.round(y - b.height / 2), b.width, b.height);\n\t\t\t\t\n\t\t\t\tif (this.manageLabelHandle)\n\t\t\t\t{\n\t\t\t\t\tthis.checkLabelHandle(this.bends[i].bounds);\n\t\t\t\t}\n\t\t\t\telse if (this.handleImage == null && this.labelShape.visible && mxUtils.intersects(this.bends[i].bounds, this.labelShape.bounds))\n\t\t\t\t{\n\t\t\t\t\tw = mxConstants.HANDLE_SIZE + 3;\n\t\t\t\t\th = mxConstants.HANDLE_SIZE + 3;\n\t\t\t\t\tthis.bends[i].bounds = new mxRectangle(Math.round(x - w / 2), Math.round(y - h / 2), w, h);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.bends[i].redraw();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.bends[i].destroy();\n\t\t\t\tthis.bends[i] = null;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: checkLabelHandle\n * \n * Checks if the label handle intersects the given bounds and moves it if it\n * intersects.\n */\nmxEdgeHandler.prototype.checkLabelHandle = function(b)\n{\n\tif (this.labelShape != null)\n\t{\n\t\tvar b2 = this.labelShape.bounds;\n\t\t\n\t\tif (mxUtils.intersects(b, b2))\n\t\t{\n\t\t\tif (b.getCenterY() < b2.getCenterY())\n\t\t\t{\n\t\t\t\tb2.y = b.y + b.height;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb2.y = b.y - b2.height;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview.\n */\nmxEdgeHandler.prototype.drawPreview = function()\n{\n\tif (this.isLabel)\n\t{\n\t\tvar b = this.labelShape.bounds;\n\t\tvar bounds = new mxRectangle(Math.round(this.label.x - b.width / 2),\n\t\t\t\tMath.round(this.label.y - b.height / 2), b.width, b.height);\n\t\tthis.labelShape.bounds = bounds;\n\t\tthis.labelShape.redraw();\n\t}\n\telse if (this.shape != null)\n\t{\n\t\tthis.shape.apply(this.state);\n\t\tthis.shape.points = this.abspoints;\n\t\tthis.shape.scale = this.state.view.scale;\n\t\tthis.shape.isDashed = this.isSelectionDashed();\n\t\tthis.shape.stroke = this.getSelectionColor();\n\t\tthis.shape.strokewidth = this.getSelectionStrokeWidth() / this.shape.scale / this.shape.scale;\n\t\tthis.shape.isShadow = false;\n\t\tthis.shape.redraw();\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.redraw();\n\t}\n};\n\n/**\n * Function: refresh\n * \n * Refreshes the bends of this handler.\n */\nmxEdgeHandler.prototype.refresh = function()\n{\n\tthis.abspoints = this.getSelectionPoints(this.state);\n\tthis.points = [];\n\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.points = this.abspoints;\n\t}\n\t\n\tif (this.bends != null)\n\t{\n\t\tthis.destroyBends(this.bends);\n\t\tthis.bends = this.createBends();\n\t}\n\t\n\tif (this.virtualBends != null)\n\t{\n\t\tthis.destroyBends(this.virtualBends);\n\t\tthis.virtualBends = this.createVirtualBends();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tthis.destroyBends(this.customHandles);\n\t\tthis.customHandles = this.createCustomHandles();\n\t}\n\t\n\t// Puts label node on top of bends\n\tif (this.labelShape != null && this.labelShape.node != null && this.labelShape.node.parentNode != null)\n\t{\n\t\tthis.labelShape.node.parentNode.appendChild(this.labelShape.node);\n\t}\n};\n\n/**\n * Function: destroyBends\n * \n * Destroys all elements in <bends>.\n */\nmxEdgeHandler.prototype.destroyBends = function(bends)\n{\n\tif (bends != null)\n\t{\n\t\tfor (var i = 0; i < bends.length; i++)\n\t\t{\n\t\t\tif (bends[i] != null)\n\t\t\t{\n\t\t\t\tbends[i].destroy();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This does\n * normally not need to be called as handlers are destroyed automatically\n * when the corresponding cell is deselected.\n */\nmxEdgeHandler.prototype.destroy = function()\n{\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.state.view.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.destroy();\n\t\tthis.marker = null;\n\t}\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.destroy();\n\t\tthis.parentHighlight = null;\n\t}\n\t\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.destroy();\n\t\tthis.labelShape = null;\n\t}\n\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.destroy();\n\t\tthis.constraintHandler = null;\n\t}\n\t\n\tthis.destroyBends(this.virtualBends);\n\tthis.virtualBends = null;\n\t\n\tthis.destroyBends(this.customHandles);\n\tthis.customHandles = null;\n\n\tthis.destroyBends(this.bends);\n\tthis.bends = null;\n\t\n\tthis.removeHint();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxElbowEdgeHandler\n *\n * Graph event handler that reconnects edges and modifies control points and\n * the edge label location. Uses <mxTerminalMarker> for finding and\n * highlighting new source and target vertices. This handler is automatically\n * created in <mxGraph.createHandler>. It extends <mxEdgeHandler>.\n * \n * Constructor: mxEdgeHandler\n *\n * Constructs an edge handler for the specified <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be modified.\n */\nfunction mxElbowEdgeHandler(state)\n{\n\tmxEdgeHandler.call(this, state);\n};\n\n/**\n * Extends mxEdgeHandler.\n */\nmxUtils.extend(mxElbowEdgeHandler, mxEdgeHandler);\n\n/**\n * Specifies if a double click on the middle handle should call\n * <mxGraph.flipEdge>. Default is true.\n */\nmxElbowEdgeHandler.prototype.flipEnabled = true;\n\n/**\n * Variable: doubleClickOrientationResource\n * \n * Specifies the resource key for the tooltip to be displayed on the single\n * control point for routed edges. If the resource for this key does not\n * exist then the value is used as the error message. Default is\n * 'doubleClickOrientation'.\n */\nmxElbowEdgeHandler.prototype.doubleClickOrientationResource =\n\t(mxClient.language != 'none') ? 'doubleClickOrientation' : '';\n\n/**\n * Function: createBends\n * \n * Overrides <mxEdgeHandler.createBends> to create custom bends.\n */\n mxElbowEdgeHandler.prototype.createBends = function()\n {\n\tvar bends = [];\n\t\n\t// Source\n\tvar bend = this.createHandleShape(0);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\t// Virtual\n\tbends.push(this.createVirtualBend(mxUtils.bind(this, function(evt)\n\t{\n\t\tif (!mxEvent.isConsumed(evt) && this.flipEnabled)\n\t\t{\n\t\t\tthis.graph.flipEdge(this.state.cell, evt);\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t})));\n\t\n\tthis.points.push(new mxPoint(0,0));\n\n\t// Target\n\tbend = this.createHandleShape(2);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\t\n\treturn bends;\n };\n\n/**\n * Function: createVirtualBend\n * \n * Creates a virtual bend that supports double clicking and calls\n * <mxGraph.flipEdge>.\n */\nmxElbowEdgeHandler.prototype.createVirtualBend = function(dblClickHandler)\n{\n\tvar bend = this.createHandleShape();\n\tthis.initBend(bend, dblClickHandler);\n\n\tbend.setCursor(this.getCursorForBend());\n\n\tif (!this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tbend.node.style.display = 'none';\n\t}\n\n\treturn bend;\n};\n\n/**\n * Function: getCursorForBend\n * \n * Returns the cursor to be used for the bend.\n */\nmxElbowEdgeHandler.prototype.getCursorForBend = function()\n{\n\treturn (this.state.style[mxConstants.STYLE_EDGE] == mxEdgeStyle.TopToBottom ||\n\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.EDGESTYLE_TOPTOBOTTOM ||\n\t\t((this.state.style[mxConstants.STYLE_EDGE] == mxEdgeStyle.ElbowConnector ||\n\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.EDGESTYLE_ELBOW)&&\n\t\tthis.state.style[mxConstants.STYLE_ELBOW] == mxConstants.ELBOW_VERTICAL)) ? \n\t\t'row-resize' : 'col-resize';\n};\n\n/**\n * Function: getTooltipForNode\n * \n * Returns the tooltip for the given node.\n */\nmxElbowEdgeHandler.prototype.getTooltipForNode = function(node)\n{\n\tvar tip = null;\n\t\n\tif (this.bends != null && this.bends[1] != null && (node == this.bends[1].node ||\n\t\tnode.parentNode == this.bends[1].node))\n\t{\n\t\ttip = this.doubleClickOrientationResource;\n\t\ttip = mxResources.get(tip) || tip; // translate\n\t}\n\n\treturn tip;\n};\n\n/**\n * Function: convertPoint\n * \n * Converts the given point in-place from screen to unscaled, untranslated\n * graph coordinates and applies the grid.\n * \n * Parameters:\n * \n * point - <mxPoint> to be converted.\n * gridEnabled - Boolean that specifies if the grid should be applied.\n */\nmxElbowEdgeHandler.prototype.convertPoint = function(point, gridEnabled)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\tvar origin = this.state.origin;\n\t\n\tif (gridEnabled)\n\t{\n\t\tpoint.x = this.graph.snap(point.x);\n\t\tpoint.y = this.graph.snap(point.y);\n\t}\n\t\n\tpoint.x = Math.round(point.x / scale - tr.x - origin.x);\n\tpoint.y = Math.round(point.y / scale - tr.y - origin.y);\n\t\n\treturn point;\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates and redraws the inner bends.\n * \n * Parameters:\n * \n * p0 - <mxPoint> that represents the location of the first point.\n * pe - <mxPoint> that represents the location of the last point.\n */\nmxElbowEdgeHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tvar g = this.graph.getModel().getGeometry(this.state.cell);\n\tvar pts = this.state.absolutePoints;\n\tvar pt = null;\n\n\t// Keeps the virtual bend on the edge shape\n\tif (pts.length > 1)\n\t{\n\t\tp0 = pts[1];\n\t\tpe = pts[pts.length - 2];\n\t}\n\telse if (g.points != null && g.points.length > 0)\n\t{\n\t\tpt = pts[0];\n\t}\n\t\n\tif (pt == null)\n\t{\n\t\tpt = new mxPoint(p0.x + (pe.x - p0.x) / 2, p0.y + (pe.y - p0.y) / 2);\n\t}\n\telse\n\t{\n\t\tpt = new mxPoint(this.graph.getView().scale * (pt.x + this.graph.getView().translate.x + this.state.origin.x),\n\t\t\t\tthis.graph.getView().scale * (pt.y + this.graph.getView().translate.y + this.state.origin.y));\n\t}\n\n\t// Makes handle slightly bigger if the yellow  label handle\n\t// exists and intersects this green handle\n\tvar b = this.bends[1].bounds;\n\tvar w = b.width;\n\tvar h = b.height;\n\tvar bounds = new mxRectangle(Math.round(pt.x - w / 2), Math.round(pt.y - h / 2), w, h);\n\n\tif (this.manageLabelHandle)\n\t{\n\t\tthis.checkLabelHandle(bounds);\n\t}\n\telse if (this.handleImage == null && this.labelShape.visible && mxUtils.intersects(bounds, this.labelShape.bounds))\n\t{\n\t\tw = mxConstants.HANDLE_SIZE + 3;\n\t\th = mxConstants.HANDLE_SIZE + 3;\n\t\tbounds = new mxRectangle(Math.floor(pt.x - w / 2), Math.floor(pt.y - h / 2), w, h);\n\t}\n\n\tthis.bends[1].bounds = bounds;\n\tthis.bends[1].redraw();\n\t\n\tif (this.manageLabelHandle)\n\t{\n\t\tthis.checkLabelHandle(this.bends[1].bounds);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nfunction mxEdgeSegmentHandler(state)\n{\n\tmxEdgeHandler.call(this, state);\n};\n\n/**\n * Extends mxEdgeHandler.\n */\nmxUtils.extend(mxEdgeSegmentHandler, mxElbowEdgeHandler);\n\n/**\n * Function: getCurrentPoints\n * \n * Returns the current absolute points.\n */\nmxEdgeSegmentHandler.prototype.getCurrentPoints = function()\n{\n\tvar pts = this.state.absolutePoints;\n\t\n\tif (pts != null)\n\t{\n\t\t// Special case for straight edges where we add a virtual middle handle for moving the edge\n\t\tvar tol = Math.max(1, this.graph.view.scale);\n\t\t\n\t\tif (pts.length == 2 || (pts.length == 3 &&\n\t\t\t(Math.abs(pts[0].x - pts[1].x) < tol && Math.abs(pts[1].x - pts[2].x) < tol ||\n\t\t\tMath.abs(pts[0].y - pts[1].y) < tol && Math.abs(pts[1].y - pts[2].y) < tol)))\n\t\t{\n\t\t\tvar cx = pts[0].x + (pts[pts.length - 1].x - pts[0].x) / 2;\n\t\t\tvar cy = pts[0].y + (pts[pts.length - 1].y - pts[0].y) / 2;\n\t\t\t\n\t\t\tpts = [pts[0], new mxPoint(cx, cy), new mxPoint(cx, cy), pts[pts.length - 1]];\t\n\t\t}\n\t}\n\n\treturn pts;\n};\n\n/**\n * Function: getPreviewPoints\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeSegmentHandler.prototype.getPreviewPoints = function(point)\n{\n\tif (this.isSource || this.isTarget)\n\t{\n\t\treturn mxElbowEdgeHandler.prototype.getPreviewPoints.apply(this, arguments);\n\t}\n\telse\n\t{\n\t\tvar pts = this.getCurrentPoints();\n\t\tvar last = this.convertPoint(pts[0].clone(), false);\n\t\tpoint = this.convertPoint(point.clone(), false);\n\t\tvar result = [];\n\n\t\tfor (var i = 1; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt = this.convertPoint(pts[i].clone(), false);\n\t\t\t\n\t\t\tif (i == this.index)\n\t\t\t{\n\t\t\t\tif (Math.round(last.x - pt.x) == 0)\n\t\t \t\t{\n\t\t\t\t\tlast.x = point.x;\n\t\t\t\t\tpt.x = point.x;\n\t\t \t\t}\n\t\t \t\t\n\t\t\t\tif (Math.round(last.y - pt.y) == 0)\n\t\t \t\t{\n\t\t \t\t\tlast.y = point.y;\n\t\t \t\t\tpt.y = point.y;\n\t\t \t\t}\n\t\t\t}\n\n\t\t\tif (i < pts.length - 1)\n\t\t\t{\n\t\t\t\tresult.push(pt);\n\t\t\t}\n\n\t\t\tlast = pt;\n\t\t}\n\t\t\n\t\t// Replaces single point that intersects with source or target\n\t\tif (result.length == 1)\n\t\t{\n\t\t\tvar source = this.state.getVisibleTerminalState(true);\n\t\t\tvar target = this.state.getVisibleTerminalState(false);\n\t\t\tvar scale = this.state.view.getScale();\n\t\t\tvar tr = this.state.view.getTranslate();\n\t\t\t\n\t\t\tvar x = result[0].x * scale + tr.x;\n\t\t\tvar y = result[0].y * scale + tr.y;\n\t\t\t\n\t\t\tif ((source != null && mxUtils.contains(source, x, y)) ||\n\t\t\t\t(target != null && mxUtils.contains(target, x, y)))\n\t\t\t{\n\t\t\t\tresult = [point, point];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: updatePreviewState\n * \n * Overridden to perform optimization of the edge style result.\n */\nmxEdgeSegmentHandler.prototype.updatePreviewState = function(edge, point, terminalState, me)\n{\n\tmxEdgeHandler.prototype.updatePreviewState.apply(this, arguments);\n\n\t// Checks and corrects preview by running edge style again\n\tif (!this.isSource && !this.isTarget)\n\t{\n\t\tpoint = this.convertPoint(point.clone(), false);\n\t\tvar pts = edge.absolutePoints;\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = pts[1];\n\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 2; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt2 = pts[i];\n\t\t\n\t\t\t// Merges adjacent segments only if more than 2 to allow for straight edges\n\t\t\tif ((Math.round(pt0.x - pt1.x) != 0 || Math.round(pt1.x - pt2.x) != 0) &&\n\t\t\t\t(Math.round(pt0.y - pt1.y) != 0 || Math.round(pt1.y - pt2.y) != 0))\n\t\t\t{\n\t\t\t\tresult.push(this.convertPoint(pt1.clone(), false));\n\t\t\t}\n\n\t\t\tpt0 = pt1;\n\t\t\tpt1 = pt2;\n\t\t}\n\t\t\n\t\tvar source = this.state.getVisibleTerminalState(true);\n\t\tvar target = this.state.getVisibleTerminalState(false);\n\t\tvar rpts = this.state.absolutePoints;\n\t\t\n\t\t// A straight line is represented by 3 handles\n\t\tif (result.length == 0 && (Math.round(pts[0].x - pts[pts.length - 1].x) == 0 ||\n\t\t\tMath.round(pts[0].y - pts[pts.length - 1].y) == 0))\n\t\t{\n\t\t\tresult = [point, point];\n\t\t}\n\t\t// Handles special case of transitions from straight vertical to routed\n\t\telse if (pts.length == 5 && result.length == 2 && source != null && target != null &&\n\t\t\t\trpts != null && Math.round(rpts[0].x - rpts[rpts.length - 1].x) == 0)\n\t\t{\n\t\t\tvar view = this.graph.getView();\n\t\t\tvar scale = view.getScale();\n\t\t\tvar tr = view.getTranslate();\n\t\t\t\n\t\t\tvar y0 = view.getRoutingCenterY(source) / scale - tr.y;\n\t\t\t\n\t\t\t// Use fixed connection point y-coordinate if one exists\n\t\t\tvar sc = this.graph.getConnectionConstraint(edge, source, true);\n\t\t\t\n\t\t\tif (sc != null)\n\t\t\t{\n\t\t\t\tvar pt = this.graph.getConnectionPoint(source, sc);\n\t\t\t\t\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tthis.convertPoint(pt, false);\n\t\t\t\t\ty0 = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar ye = view.getRoutingCenterY(target) / scale - tr.y;\n\t\t\t\n\t\t\t// Use fixed connection point y-coordinate if one exists\n\t\t\tvar tc = this.graph.getConnectionConstraint(edge, target, false);\n\t\t\t\n\t\t\tif (tc)\n\t\t\t{\n\t\t\t\tvar pt = this.graph.getConnectionPoint(target, tc);\n\t\t\t\t\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tthis.convertPoint(pt, false);\n\t\t\t\t\tye = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult = [new mxPoint(point.x, y0), new mxPoint(point.x, ye)];\n\t\t}\n\n\t\tthis.points = result;\n\n\t\t// LATER: Check if points and result are different\n\t\tedge.view.updateFixedTerminalPoints(edge, source, target);\n\t\tedge.view.updatePoints(edge, this.points, source, target);\n\t\tedge.view.updateFloatingTerminalPoints(edge, source, target);\n\t}\n};\n\n/**\n * Overriden to merge edge segments.\n */\nmxEdgeSegmentHandler.prototype.connect = function(edge, terminal, isSource, isClone, me)\n{\n\tvar model = this.graph.getModel();\n\tvar geo = model.getGeometry(edge);\n\tvar result = null;\n\t\n\t// Merges adjacent edge segments\n\tif (geo != null && geo.points != null && geo.points.length > 0)\n\t{\n\t\tvar pts = this.abspoints;\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = pts[1];\n\t\tresult = [];\n\t\t\n\t\tfor (var i = 2; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt2 = pts[i];\n\t\t\n\t\t\t// Merges adjacent segments only if more than 2 to allow for straight edges\n\t\t\tif ((Math.round(pt0.x - pt1.x) != 0 || Math.round(pt1.x - pt2.x) != 0) &&\n\t\t\t\t(Math.round(pt0.y - pt1.y) != 0 || Math.round(pt1.y - pt2.y) != 0))\n\t\t\t{\n\t\t\t\tresult.push(this.convertPoint(pt1.clone(), false));\n\t\t\t}\n\t\n\t\t\tpt0 = pt1;\n\t\t\tpt1 = pt2;\n\t\t}\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (result != null)\n\t\t{\n\t\t\tvar geo = model.getGeometry(edge);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.points = result;\n\t\t\t\t\n\t\t\t\tmodel.setGeometry(edge, geo);\n\t\t\t}\n\t\t}\n\t\t\n\t\tedge = mxEdgeHandler.prototype.connect.apply(this, arguments);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: getTooltipForNode\n * \n * Returns no tooltips.\n */\nmxEdgeSegmentHandler.prototype.getTooltipForNode = function(node)\n{\n\treturn null;\n};\n\n/**\n * Function: createBends\n * \n * Adds custom bends for the center of each segment.\n */\nmxEdgeSegmentHandler.prototype.start = function(x, y, index)\n{\n\tmxEdgeHandler.prototype.start.apply(this, arguments);\n\t\n\tif (this.bends != null && this.bends[index] != null &&\n\t\t!this.isSource && !this.isTarget)\n\t{\n\t\tmxUtils.setOpacity(this.bends[index].node, 100);\n\t}\n};\n\n/**\n * Function: createBends\n * \n * Adds custom bends for the center of each segment.\n */\nmxEdgeSegmentHandler.prototype.createBends = function()\n{\n\tvar bends = [];\n\t\n\t// Source\n\tvar bend = this.createHandleShape(0);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\tvar pts = this.getCurrentPoints();\n\n\t// Waypoints (segment handles)\n\tif (this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tif (this.points == null)\n\t\t{\n\t\t\tthis.points = [];\n\t\t}\n\n\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t{\n\t\t\tbend = this.createVirtualBend();\n\t\t\tbends.push(bend);\n\t\t\tvar horizontal = Math.round(pts[i].x - pts[i + 1].x) == 0;\n\t\t\t\n\t\t\t// Special case where dy is 0 as well\n\t\t\tif (Math.round(pts[i].y - pts[i + 1].y) == 0 && i < pts.length - 2)\n\t\t\t{\n\t\t\t\thorizontal = Math.round(pts[i].x - pts[i + 2].x) == 0;\n\t\t\t}\n\t\t\t\n\t\t\tbend.setCursor((horizontal) ? 'col-resize' : 'row-resize');\n\t\t\tthis.points.push(new mxPoint(0,0));\n\t\t}\n\t}\n\n\t// Target\n\tvar bend = this.createHandleShape(pts.length);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\treturn bends;\n};\n\n/**\n * Function: redraw\n * \n * Overridden to invoke <refresh> before the redraw.\n */\nmxEdgeSegmentHandler.prototype.redraw = function()\n{\n\tthis.refresh();\n\tmxEdgeHandler.prototype.redraw.apply(this, arguments);\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates the position of the custom bends.\n */\nmxEdgeSegmentHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tif (this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tvar pts = this.getCurrentPoints();\n\t\t\n\t\tif (pts != null && pts.length > 1)\n\t\t{\n\t\t\tvar straight = false;\n\t\t\t\n\t\t\t// Puts handle in the center of straight edges\n\t\t\tif (pts.length == 4 && Math.round(pts[1].x - pts[2].x) == 0 && Math.round(pts[1].y - pts[2].y) == 0)\n\t\t\t{\n\t\t\t\tstraight = true;\n\t\t\t\t\n\t\t\t\tif (Math.round(pts[0].y - pts[pts.length - 1].y) == 0)\n\t\t\t\t{\n\t\t\t\t\tvar cx = pts[0].x + (pts[pts.length - 1].x - pts[0].x) / 2;\n\t\t\t\t\tpts[1] = new mxPoint(cx, pts[1].y);\n\t\t\t\t\tpts[2] = new mxPoint(cx, pts[2].y);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar cy = pts[0].y + (pts[pts.length - 1].y - pts[0].y) / 2;\n\t\t\t\t\tpts[1] = new mxPoint(pts[1].x, cy);\n\t\t\t\t\tpts[2] = new mxPoint(pts[2].x, cy);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t\t{\n\t\t\t\tif (this.bends[i + 1] != null)\n\t\t\t\t{\n\t\t \t\t\tvar p0 = pts[i];\n\t \t\t\t\tvar pe = pts[i + 1];\n\t\t\t \t\tvar pt = new mxPoint(p0.x + (pe.x - p0.x) / 2, p0.y + (pe.y - p0.y) / 2);\n\t\t\t \t\tvar b = this.bends[i + 1].bounds;\n\t\t\t \t\tthis.bends[i + 1].bounds = new mxRectangle(Math.floor(pt.x - b.width / 2),\n\t\t\t \t\t\t\tMath.floor(pt.y - b.height / 2), b.width, b.height);\n\t\t\t\t \tthis.bends[i + 1].redraw();\n\t\t\t\t \t\n\t\t\t\t \tif (this.manageLabelHandle)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.checkLabelHandle(this.bends[i + 1].bounds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (straight)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(this.bends[1].node, this.virtualBendOpacity);\n\t\t\t\tmxUtils.setOpacity(this.bends[3].node, this.virtualBendOpacity);\n\t\t\t}\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxKeyHandler\n *\n * Event handler that listens to keystroke events. This is not a singleton,\n * however, it is normally only required once if the target is the document\n * element (default).\n * \n * This handler installs a key event listener in the topmost DOM node and\n * processes all events that originate from descandants of <mxGraph.container>\n * or from the topmost DOM node. The latter means that all unhandled keystrokes\n * are handled by this object regardless of the focused state of the <graph>.\n * \n * Example:\n * \n * The following example creates a key handler that listens to the delete key\n * (46) and deletes the selection cells if the graph is enabled.\n * \n * (code)\n * var keyHandler = new mxKeyHandler(graph);\n * keyHandler.bindKey(46, function(evt)\n * {\n *   if (graph.isEnabled())\n *   {\n *     graph.removeCells();\n *   }\n * });\n * (end)\n * \n * Keycodes:\n * \n * See http://tinyurl.com/yp8jgl or http://tinyurl.com/229yqw for a list of\n * keycodes or install a key event listener into the document element and print\n * the key codes of the respective events to the console.\n * \n * To support the Command key and the Control key on the Mac, the following\n * code can be used.\n *\n * (code)\n * keyHandler.getFunction = function(evt)\n * {\n *   if (evt != null)\n *   {\n *     return (mxEvent.isControlDown(evt) || (mxClient.IS_MAC && evt.metaKey)) ? this.controlKeys[evt.keyCode] : this.normalKeys[evt.keyCode];\n *   }\n *   \n *   return null;\n * };\n * (end)\n * \n * Constructor: mxKeyHandler\n *\n * Constructs an event handler that executes functions bound to specific\n * keystrokes.\n * \n * Parameters:\n * \n * graph - Reference to the associated <mxGraph>.\n * target - Optional reference to the event target. If null, the document\n * element is used as the event target, that is, the object where the key\n * event listener is installed.\n */\nfunction mxKeyHandler(graph, target)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.target = target || document.documentElement;\n\t\t\n\t\t// Creates the arrays to map from keycodes to functions\n\t\tthis.normalKeys = [];\n\t\tthis.shiftKeys = [];\n\t\tthis.controlKeys = [];\n\t\tthis.controlShiftKeys = [];\n\t\t\n\t\tthis.keydownHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.keyDown(evt);\n\t\t});\n\n\t\t// Installs the keystroke listener in the target\n\t\tmxEvent.addListener(this.target, 'keydown', this.keydownHandler);\n\t\t\n\t\t// Automatically deallocates memory in IE\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload',\n\t\t\t\tmxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tthis.destroy();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the <mxGraph> associated with this handler.\n */\nmxKeyHandler.prototype.graph = null;\n\n/**\n * Variable: target\n * \n * Reference to the target DOM, that is, the DOM node where the key event\n * listeners are installed.\n */\nmxKeyHandler.prototype.target = null;\n\n/**\n * Variable: normalKeys\n * \n * Maps from keycodes to functions for non-pressed control keys.\n */\nmxKeyHandler.prototype.normalKeys = null;\n\n/**\n * Variable: shiftKeys\n * \n * Maps from keycodes to functions for pressed shift keys.\n */\nmxKeyHandler.prototype.shiftKeys = null;\n\n/**\n * Variable: controlKeys\n * \n * Maps from keycodes to functions for pressed control keys.\n */\nmxKeyHandler.prototype.controlKeys = null;\n\n/**\n * Variable: controlShiftKeys\n * \n * Maps from keycodes to functions for pressed control and shift keys.\n */\nmxKeyHandler.prototype.controlShiftKeys = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxKeyHandler.prototype.enabled = true;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation returns\n * <enabled>.\n */\nmxKeyHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling by updating <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxKeyHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: bindKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control key is not pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindKey = function(code, funct)\n{\n\tthis.normalKeys[code] = funct;\n};\n\n/**\n * Function: bindShiftKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the shift key is pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindShiftKey = function(code, funct)\n{\n\tthis.shiftKeys[code] = funct;\n};\n\n/**\n * Function: bindControlKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control key is pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindControlKey = function(code, funct)\n{\n\tthis.controlKeys[code] = funct;\n};\n\n/**\n * Function: bindControlShiftKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control and shift key are pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindControlShiftKey = function(code, funct)\n{\n\tthis.controlShiftKeys[code] = funct;\n};\n\n/**\n * Function: isControlDown\n * \n * Returns true if the control key is pressed. This uses <mxEvent.isControlDown>.\n * \n * Parameters:\n * \n * evt - Key event whose control key pressed state should be returned.\n */\nmxKeyHandler.prototype.isControlDown = function(evt)\n{\n\treturn mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: getFunction\n * \n * Returns the function associated with the given key event or null if no\n * function is associated with the given event.\n * \n * Parameters:\n * \n * evt - Key event whose associated function should be returned.\n */\nmxKeyHandler.prototype.getFunction = function(evt)\n{\n\tif (evt != null && !mxEvent.isAltDown(evt))\n\t{\n\t\tif (this.isControlDown(evt))\n\t\t{\n\t\t\tif (mxEvent.isShiftDown(evt))\n\t\t\t{\n\t\t\t\treturn this.controlShiftKeys[evt.keyCode];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.controlKeys[evt.keyCode];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxEvent.isShiftDown(evt))\n\t\t\t{\n\t\t\t\treturn this.shiftKeys[evt.keyCode];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.normalKeys[evt.keyCode];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\t\n/**\n * Function: isGraphEvent\n * \n * Returns true if the event should be processed by this handler, that is,\n * if the event source is either the target, one of its direct children, a\n * descendant of the <mxGraph.container>, or the <mxGraph.cellEditor> of the\n * <graph>.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isGraphEvent = function(evt)\n{\n\tvar source = mxEvent.getSource(evt);\n\t\n\t// Accepts events from the target object or\n\t// in-place editing inside graph\n\tif ((source == this.target || source.parentNode == this.target) ||\n\t\t(this.graph.cellEditor != null && this.graph.cellEditor.isEventSource(evt)))\n\t{\n\t\treturn true;\n\t}\n\t\n\t// Accepts events from inside the container\n\treturn mxUtils.isAncestorNode(this.graph.container, source);\n};\n\n/**\n * Function: keyDown\n * \n * Handles the event by invoking the function bound to the respective keystroke\n * if <isEnabledForEvent> returns true for the given event and if\n * <isEventIgnored> returns false, except for escape for which\n * <isEventIgnored> is not invoked.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.keyDown = function(evt)\n{\n\tif (this.isEnabledForEvent(evt))\n\t{\n\t\t// Cancels the editing if escape is pressed\n\t\tif (evt.keyCode == 27 /* Escape */)\n\t\t{\n\t\t\tthis.escape(evt);\n\t\t}\n\t\t\n\t\t// Invokes the function for the keystroke\n\t\telse if (!this.isEventIgnored(evt))\n\t\t{\n\t\t\tvar boundFunction = this.getFunction(evt);\n\t\t\t\n\t\t\tif (boundFunction != null)\n\t\t\t{\n\t\t\t\tboundFunction(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isEnabledForEvent\n * \n * Returns true if the given event should be handled. <isEventIgnored> is\n * called later if the event is not an escape key stroke, in which case\n * <escape> is called. This implementation returns true if <isEnabled>\n * returns true for both, this handler and <graph>, if the event is not\n * consumed and if <isGraphEvent> returns true.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isEnabledForEvent = function(evt)\n{\n\treturn (this.graph.isEnabled() && !mxEvent.isConsumed(evt) &&\n\t\tthis.isGraphEvent(evt) && this.isEnabled());\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the given keystroke should be ignored. This returns\n * graph.isEditing().\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isEventIgnored = function(evt)\n{\n\treturn this.graph.isEditing();\n};\n\n/**\n * Function: escape\n * \n * Hook to process ESCAPE keystrokes. This implementation invokes\n * <mxGraph.stopEditing> to cancel the current editing, connecting\n * and/or other ongoing modifications.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke. Possible keycode in this\n * case is 27 (ESCAPE).\n */\nmxKeyHandler.prototype.escape = function(evt)\n{\n\tif (this.graph.isEscapeEnabled())\n\t{\n\t\tthis.graph.escape(evt);\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its references into the DOM. This does\n * normally not need to be called, it is called automatically when the\n * window unloads (in IE).\n */\nmxKeyHandler.prototype.destroy = function()\n{\n\tif (this.target != null && this.keydownHandler != null)\n\t{\n\t\tmxEvent.removeListener(this.target, 'keydown', this.keydownHandler);\n\t\tthis.keydownHandler = null;\n\t}\n\t\n\tthis.target = null;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxTooltipHandler\n * \n * Graph event handler that displays tooltips. <mxGraph.getTooltip> is used to\n * get the tooltip for a cell or handle. This handler is built-into\n * <mxGraph.tooltipHandler> and enabled using <mxGraph.setTooltips>.\n *\n * Example:\n * \n * (code>\n * new mxTooltipHandler(graph);\n * (end)\n * \n * Constructor: mxTooltipHandler\n * \n * Constructs an event handler that displays tooltips with the specified\n * delay (in milliseconds). If no delay is specified then a default delay\n * of 500 ms (0.5 sec) is used.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * delay - Optional delay in milliseconds.\n */\nfunction mxTooltipHandler(graph, delay)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.delay = delay || 500;\n\t\tthis.graph.addMouseListener(this);\n\t}\n};\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the tooltip and its shadow. Default is 10005.\n */\nmxTooltipHandler.prototype.zIndex = 10005;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxTooltipHandler.prototype.graph = null;\n\n/**\n * Variable: delay\n * \n * Delay to show the tooltip in milliseconds. Default is 500.\n */\nmxTooltipHandler.prototype.delay = null;\n\n/**\n * Variable: ignoreTouchEvents\n * \n * Specifies if touch and pen events should be ignored. Default is true.\n */\nmxTooltipHandler.prototype.ignoreTouchEvents = true;\n\n/**\n * Variable: hideOnHover\n * \n * Specifies if the tooltip should be hidden if the mouse is moved over the\n * current cell. Default is false.\n */\nmxTooltipHandler.prototype.hideOnHover = false;\n\n/**\n * Variable: destroyed\n * \n * True if this handler was destroyed using <destroy>.\n */\nmxTooltipHandler.prototype.destroyed = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxTooltipHandler.prototype.enabled = true;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxTooltipHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n */\nmxTooltipHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isHideOnHover\n * \n * Returns <hideOnHover>.\n */\nmxTooltipHandler.prototype.isHideOnHover = function()\n{\n\treturn this.hideOnHover;\n};\n\n/**\n * Function: setHideOnHover\n * \n * Sets <hideOnHover>.\n */\nmxTooltipHandler.prototype.setHideOnHover = function(value)\n{\n\tthis.hideOnHover = value;\n};\n\n/**\n * Function: init\n * \n * Initializes the DOM nodes required for this tooltip handler.\n */\nmxTooltipHandler.prototype.init = function()\n{\n\tif (document.body != null)\n\t{\n\t\tthis.div = document.createElement('div');\n\t\tthis.div.className = 'mxTooltip';\n\t\tthis.div.style.visibility = 'hidden';\n\n\t\tdocument.body.appendChild(this.div);\n\n\t\tmxEvent.addGestureListeners(this.div, mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.hideTooltip();\n\t\t}));\n\t}\n};\n\n/**\n * Function: getStateForEvent\n * \n * Returns the <mxCellState> to be used for showing a tooltip for this event.\n */\nmxTooltipHandler.prototype.getStateForEvent = function(me)\n{\n\treturn me.getState();\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a rubberband selection. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxTooltipHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.reset(me, false);\n\tthis.hideTooltip();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the rubberband selection.\n */\nmxTooltipHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (me.getX() != this.lastX || me.getY() != this.lastY)\n\t{\n\t\tthis.reset(me, true);\n\t\tvar state = this.getStateForEvent(me);\n\t\t\n\t\tif (this.isHideOnHover() || state != this.state || (me.getSource() != this.node &&\n\t\t\t(!this.stateSource || (state != null && this.stateSource ==\n\t\t\t(me.isSource(state.shape) || !me.isSource(state.text))))))\n\t\t{\n\t\t\tthis.hideTooltip();\n\t\t}\n\t}\n\t\n\tthis.lastX = me.getX();\n\tthis.lastY = me.getY();\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by resetting the tooltip timer or hiding the existing\n * tooltip.\n */\nmxTooltipHandler.prototype.mouseUp = function(sender, me)\n{\n\tthis.reset(me, true);\n\tthis.hideTooltip();\n};\n\n\n/**\n * Function: resetTimer\n * \n * Resets the timer.\n */\nmxTooltipHandler.prototype.resetTimer = function()\n{\n\tif (this.thread != null)\n\t{\n\t\twindow.clearTimeout(this.thread);\n\t\tthis.thread = null;\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets and/or restarts the timer to trigger the display of the tooltip.\n */\nmxTooltipHandler.prototype.reset = function(me, restart, state)\n{\n\tif (!this.ignoreTouchEvents || mxEvent.isMouseEvent(me.getEvent()))\n\t{\n\t\tthis.resetTimer();\n\t\tstate = (state != null) ? state : this.getStateForEvent(me);\n\t\t\n\t\tif (restart && this.isEnabled() && state != null && (this.div == null ||\n\t\t\tthis.div.style.visibility == 'hidden'))\n\t\t{\n\t\t\tvar node = me.getSource();\n\t\t\tvar x = me.getX();\n\t\t\tvar y = me.getY();\n\t\t\tvar stateSource = me.isSource(state.shape) || me.isSource(state.text);\n\t\n\t\t\tthis.thread = window.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tif (!this.graph.isEditing() && !this.graph.popupMenuHandler.isMenuShowing() && !this.graph.isMouseDown)\n\t\t\t\t{\n\t\t\t\t\t// Uses information from inside event cause using the event at\n\t\t\t\t\t// this (delayed) point in time is not possible in IE as it no\n\t\t\t\t\t// longer contains the required information (member not found)\n\t\t\t\t\tvar tip = this.graph.getTooltip(state, node, x, y);\n\t\t\t\t\tthis.show(tip, x, y);\n\t\t\t\t\tthis.state = state;\n\t\t\t\t\tthis.node = node;\n\t\t\t\t\tthis.stateSource = stateSource;\n\t\t\t\t}\n\t\t\t}), this.delay);\n\t\t}\n\t}\n};\n\n/**\n * Function: hide\n * \n * Hides the tooltip and resets the timer.\n */\nmxTooltipHandler.prototype.hide = function()\n{\n\tthis.resetTimer();\n\tthis.hideTooltip();\n};\n\n/**\n * Function: hideTooltip\n * \n * Hides the tooltip.\n */\nmxTooltipHandler.prototype.hideTooltip = function()\n{\n\tif (this.div != null)\n\t{\n\t\tthis.div.style.visibility = 'hidden';\n\t\tthis.div.innerHTML = '';\n\t}\n};\n\n/**\n * Function: show\n * \n * Shows the tooltip for the specified cell and optional index at the\n * specified location (with a vertical offset of 10 pixels).\n */\nmxTooltipHandler.prototype.show = function(tip, x, y)\n{\n\tif (!this.destroyed && tip != null && tip.length > 0)\n\t{\n\t\t// Initializes the DOM nodes if required\n\t\tif (this.div == null)\n\t\t{\n\t\t\tthis.init();\n\t\t}\n\t\t\n\t\tvar origin = mxUtils.getScrollOrigin();\n\n\t\tthis.div.style.zIndex = this.zIndex;\n\t\tthis.div.style.left = (x + origin.x) + 'px';\n\t\tthis.div.style.top = (y + mxConstants.TOOLTIP_VERTICAL_OFFSET +\n\t\t\torigin.y) + 'px';\n\n\t\tif (!mxUtils.isNode(tip))\n\t\t{\t\n\t\t\tthis.div.innerHTML = tip.replace(/\\n/g, '<br>');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.div.innerHTML = '';\n\t\t\tthis.div.appendChild(tip);\n\t\t}\n\t\t\n\t\tthis.div.style.visibility = '';\n\t\tmxUtils.fit(this.div);\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxTooltipHandler.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.graph.removeMouseListener(this);\n\t\tmxEvent.release(this.div);\n\t\t\n\t\tif (this.div != null && this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.destroyed = true;\n\t\tthis.div = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellTracker\n * \n * Event handler that highlights cells. Inherits from <mxCellMarker>.\n * \n * Example:\n * \n * (code)\n * new mxCellTracker(graph, '#00FF00');\n * (end)\n * \n * For detecting dragEnter, dragOver and dragLeave on cells, the following\n * code can be used:\n * \n * (code)\n * graph.addMouseListener(\n * {\n *   cell: null,\n *   mouseDown: function(sender, me) { },\n *   mouseMove: function(sender, me)\n *   {\n *     var tmp = me.getCell();\n *     \n *     if (tmp != this.cell)\n *     {\n *       if (this.cell != null)\n *       {\n *         this.dragLeave(me.getEvent(), this.cell);\n *       }\n *       \n *       this.cell = tmp;\n *       \n *       if (this.cell != null)\n *       {\n *         this.dragEnter(me.getEvent(), this.cell);\n *       }\n *     }\n *     \n *     if (this.cell != null)\n *     {\n *       this.dragOver(me.getEvent(), this.cell);\n *     }\n *   },\n *   mouseUp: function(sender, me) { },\n *   dragEnter: function(evt, cell)\n *   {\n *     mxLog.debug('dragEnter', cell.value);\n *   },\n *   dragOver: function(evt, cell)\n *   {\n *     mxLog.debug('dragOver', cell.value);\n *   },\n *   dragLeave: function(evt, cell)\n *   {\n *     mxLog.debug('dragLeave', cell.value);\n *   }\n * });\n * (end)\n * \n * Constructor: mxCellTracker\n * \n * Constructs an event handler that highlights cells.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * color - Color of the highlight. Default is blue.\n * funct - Optional JavaScript function that is used to override\n * <mxCellMarker.getCell>.\n */\nfunction mxCellTracker(graph, color, funct)\n{\n\tmxCellMarker.call(this, graph, color);\n\n\tthis.graph.addMouseListener(this);\n\t\n\tif (funct != null)\n\t{\n\t\tthis.getCell = funct;\n\t}\n\t\n\t// Automatic deallocation of memory\n\tif (mxClient.IS_IE)\n\t{\n\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.destroy();\n\t\t}));\n\t}\n};\n\n/**\n * Extends mxCellMarker.\n */\nmxUtils.extend(mxCellTracker, mxCellMarker);\n\n/**\n * Function: mouseDown\n * \n * Ignores the event. The event is not consumed.\n */\nmxCellTracker.prototype.mouseDown = function(sender, me) { };\n\n/**\n * Function: mouseMove\n * \n * Handles the event by highlighting the cell under the mousepointer if it\n * is over the hotspot region of the cell.\n */\nmxCellTracker.prototype.mouseMove = function(sender, me)\n{\n\tif (this.isEnabled())\n\t{\n\t\tthis.process(me);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by reseting the highlight.\n */\nmxCellTracker.prototype.mouseUp = function(sender, me) { };\n\n/**\n * Function: destroy\n * \n * Destroys the object and all its resources and DOM nodes. This doesn't\n * normally need to be called. It is called automatically when the window\n * unloads.\n */\nmxCellTracker.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\n\t\tthis.graph.removeMouseListener(this);\n\t\tmxCellMarker.prototype.destroy.apply(this);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellHighlight\n * \n * A helper class to highlight cells. Here is an example for a given cell.\n * \n * (code)\n * var highlight = new mxCellHighlight(graph, '#ff0000', 2);\n * highlight.highlight(graph.view.getState(cell)));\n * (end)\n * \n * Constructor: mxCellHighlight\n * \n * Constructs a cell highlight.\n */\nfunction mxCellHighlight(graph, highlightColor, strokeWidth, dashed)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.highlightColor = (highlightColor != null) ? highlightColor : mxConstants.DEFAULT_VALID_COLOR;\n\t\tthis.strokeWidth = (strokeWidth != null) ? strokeWidth : mxConstants.HIGHLIGHT_STROKEWIDTH;\n\t\tthis.dashed = (dashed != null) ? dashed : false;\n\t\tthis.opacity = mxConstants.HIGHLIGHT_OPACITY;\n\n\t\t// Updates the marker if the graph changes\n\t\tthis.repaintHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Updates reference to state\n\t\t\tif (this.state != null)\n\t\t\t{\n\t\t\t\tvar tmp = this.graph.view.getState(this.state.cell);\n\t\t\t\t\n\t\t\t\tif (tmp == null)\n\t\t\t\t{\n\t\t\t\t\tthis.hide();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.state = tmp;\n\t\t\t\t\tthis.repaint();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.getView().addListener(mxEvent.SCALE, this.repaintHandler);\n\t\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.repaintHandler);\n\t\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.repaintHandler);\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.repaintHandler);\n\t\t\n\t\t// Hides the marker if the current root changes\n\t\tthis.resetHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.hide();\n\t\t});\n\n\t\tthis.graph.getView().addListener(mxEvent.DOWN, this.resetHandler);\n\t\tthis.graph.getView().addListener(mxEvent.UP, this.resetHandler);\n\t}\n};\n\n/**\n * Variable: keepOnTop\n * \n * Specifies if the highlights should appear on top of everything\n * else in the overlay pane. Default is false.\n */\nmxCellHighlight.prototype.keepOnTop = false;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellHighlight.prototype.graph = true;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState>.\n */\nmxCellHighlight.prototype.state = null;\n\n/**\n * Variable: spacing\n * \n * Specifies the spacing between the highlight for vertices and the vertex.\n * Default is 2.\n */\nmxCellHighlight.prototype.spacing = 2;\n\n/**\n * Variable: resetHandler\n * \n * Holds the handler that automatically invokes reset if the highlight\n * should be hidden.\n */\nmxCellHighlight.prototype.resetHandler = null;\n\n/**\n * Function: setHighlightColor\n * \n * Sets the color of the rectangle used to highlight drop targets.\n * \n * Parameters:\n * \n * color - String that represents the new highlight color.\n */\nmxCellHighlight.prototype.setHighlightColor = function(color)\n{\n\tthis.highlightColor = color;\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.stroke = color;\n\t}\n};\n\n/**\n * Function: drawHighlight\n * \n * Creates and returns the highlight shape for the given state.\n */\nmxCellHighlight.prototype.drawHighlight = function()\n{\n\tthis.shape = this.createShape();\n\tthis.repaint();\n\n\tif (!this.keepOnTop && this.shape.node.parentNode.firstChild != this.shape.node)\n\t{\n\t\tthis.shape.node.parentNode.insertBefore(this.shape.node, this.shape.node.parentNode.firstChild);\n\t}\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the highlight shape for the given state.\n */\nmxCellHighlight.prototype.createShape = function()\n{\n\tvar shape = this.graph.cellRenderer.createShape(this.state);\n\t\n\tshape.svgStrokeTolerance = this.graph.tolerance;\n\tshape.points = this.state.absolutePoints;\n\tshape.apply(this.state);\n\tshape.stroke = this.highlightColor;\n\tshape.opacity = this.opacity;\n\tshape.isDashed = this.dashed;\n\tshape.isShadow = false;\n\t\n\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tshape.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(shape.node, this.graph, this.state);\n\t\n\tif (this.graph.dialect != mxConstants.DIALECT_SVG)\n\t{\n\t\tshape.pointerEvents = false;\n\t}\n\telse\n\t{\n\t\tshape.svgPointerEvents = 'stroke';\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: repaint\n * \n * Updates the highlight after a change of the model or view.\n */\nmxCellHighlight.prototype.getStrokeWidth = function(state)\n{\n\treturn this.strokeWidth;\n};\n\n/**\n * Function: repaint\n * \n * Updates the highlight after a change of the model or view.\n */\nmxCellHighlight.prototype.repaint = function()\n{\n\tif (this.state != null && this.shape != null)\n\t{\n\t\tthis.shape.scale = this.state.view.scale;\n\t\t\n\t\tif (this.graph.model.isEdge(this.state.cell))\n\t\t{\n\t\t\tthis.shape.strokewidth = this.getStrokeWidth();\n\t\t\tthis.shape.points = this.state.absolutePoints;\n\t\t\tthis.shape.outline = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.shape.bounds = new mxRectangle(this.state.x - this.spacing, this.state.y - this.spacing,\n\t\t\t\t\tthis.state.width + 2 * this.spacing, this.state.height + 2 * this.spacing);\n\t\t\tthis.shape.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\tthis.shape.strokewidth = this.getStrokeWidth() / this.state.view.scale;\n\t\t\tthis.shape.outline = true;\n\t\t}\n\n\t\t// Uses cursor from shape in highlight\n\t\tif (this.state.shape != null)\n\t\t{\n\t\t\tthis.shape.setCursor(this.state.shape.getCursor());\n\t\t}\n\t\t\n\t\t// Workaround for event transparency in VML with transparent color\n\t\t// is to use a non-transparent color with near zero opacity\n\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t{\n\t\t\tif (this.shape.stroke == 'transparent')\n\t\t\t{\n\t\t\t\t// KNOWN: Quirks mode does not seem to catch events if\n\t\t\t\t// we do not force an update of the DOM via a change such\n\t\t\t\t// as mxLog.debug. Since IE6 is EOL we do not add a fix.\n\t\t\t\tthis.shape.stroke = 'white';\n\t\t\t\tthis.shape.opacity = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.shape.opacity = this.opacity;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.shape.redraw();\n\t}\n};\n\n/**\n * Function: hide\n * \n * Resets the state of the cell marker.\n */\nmxCellHighlight.prototype.hide = function()\n{\n\tthis.highlight(null);\n};\n\n/**\n * Function: mark\n * \n * Marks the <markedState> and fires a <mark> event.\n */\nmxCellHighlight.prototype.highlight = function(state)\n{\n\tif (this.state != state)\n\t{\n\t\tif (this.shape != null)\n\t\t{\n\t\t\tthis.shape.destroy();\n\t\t\tthis.shape = null;\n\t\t}\n\n\t\tthis.state = state;\n\t\t\n\t\tif (this.state != null)\n\t\t{\n\t\t\tthis.drawHighlight();\n\t\t}\n\t}\n};\n\n/**\n * Function: isHighlightAt\n * \n * Returns true if this highlight is at the given position.\n */\nmxCellHighlight.prototype.isHighlightAt = function(x, y)\n{\n\tvar hit = false;\n\t\n\t// Quirks mode is currently not supported as it used a different coordinate system\n\tif (this.shape != null && document.elementFromPoint != null && !mxClient.IS_QUIRKS)\n\t{\n\t\tvar elt = document.elementFromPoint(x, y);\n\n\t\twhile (elt != null)\n\t\t{\n\t\t\tif (elt == this.shape.node)\n\t\t\t{\n\t\t\t\thit = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\telt = elt.parentNode;\n\t\t}\n\t}\n\t\n\treturn hit;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxCellHighlight.prototype.destroy = function()\n{\n\tthis.graph.getView().removeListener(this.resetHandler);\n\tthis.graph.getView().removeListener(this.repaintHandler);\n\tthis.graph.getModel().removeListener(this.repaintHandler);\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultKeyHandler\n *\n * Binds keycodes to actionnames in an editor. This aggregates an internal\n * <handler> and extends the implementation of <mxKeyHandler.escape> to not\n * only cancel the editing, but also hide the properties dialog and fire an\n * <mxEditor.escape> event via <editor>. An instance of this class is created\n * by <mxEditor> and stored in <mxEditor.keyHandler>.\n * \n * Example:\n * \n * Bind the delete key to the delete action in an existing editor.\n * \n * (code)\n * var keyHandler = new mxDefaultKeyHandler(editor);\n * keyHandler.bindAction(46, 'delete');\n * (end)\n *\n * Codec:\n * \n * This class uses the <mxDefaultKeyHandlerCodec> to read configuration\n * data into an existing instance. See <mxDefaultKeyHandlerCodec> for a\n * description of the configuration format.\n * \n * Keycodes:\n * \n * See <mxKeyHandler>.\n * \n * An <mxEvent.ESCAPE> event is fired via the editor if the escape key is\n * pressed.\n * \n * Constructor: mxDefaultKeyHandler\n *\n * Constructs a new default key handler for the <mxEditor.graph> in the\n * given <mxEditor>. (The editor may be null if a prototypical instance for\n * a <mxDefaultKeyHandlerCodec> is created.)\n * \n * Parameters:\n * \n * editor - Reference to the enclosing <mxEditor>.\n */\nfunction mxDefaultKeyHandler(editor)\n{\n\tif (editor != null)\n\t{\n\t\tthis.editor = editor;\n\t\tthis.handler = new mxKeyHandler(editor.graph);\n\t\t\n\t\t// Extends the escape function of the internal key\n\t\t// handle to hide the properties dialog and fire\n\t\t// the escape event via the editor instance\n\t\tvar old = this.handler.escape;\n\t\t\n\t\tthis.handler.escape = function(evt)\n\t\t{\n\t\t\told.apply(this, arguments);\n\t\t\teditor.hideProperties();\n\t\t\teditor.fireEvent(new mxEventObject(mxEvent.ESCAPE, 'event', evt));\n\t\t};\n\t}\n};\n\t\n/**\n * Variable: editor\n *\n * Reference to the enclosing <mxEditor>.\n */\nmxDefaultKeyHandler.prototype.editor = null;\n\n/**\n * Variable: handler\n *\n * Holds the <mxKeyHandler> for key event handling.\n */\nmxDefaultKeyHandler.prototype.handler = null;\n\n/**\n * Function: bindAction\n *\n * Binds the specified keycode to the given action in <editor>. The\n * optional control flag specifies if the control key must be pressed\n * to trigger the action.\n *\n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * action - Name of the action to execute in <editor>.\n * control - Optional boolean that specifies if control must be pressed.\n * Default is false.\n */\nmxDefaultKeyHandler.prototype.bindAction = function (code, action, control)\n{\n\tvar keyHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.execute(action);\n\t});\n\n\t// Binds the function to control-down keycode\n\tif (control)\n\t{\n\t\tthis.handler.bindControlKey(code, keyHandler);\n\t}\n\n\t// Binds the function to the normal keycode\n\telse\n\t{\n\t\tthis.handler.bindKey(code, keyHandler);\t\t\t\t\n\t}\n};\n\n/**\n * Function: destroy\n *\n * Destroys the <handler> associated with this object. This does normally\n * not need to be called, the <handler> is destroyed automatically when the\n * window unloads (in IE) by <mxEditor>.\n */\nmxDefaultKeyHandler.prototype.destroy = function ()\n{\n\tthis.handler.destroy();\n\tthis.handler = null;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultPopupMenu\n *\n * Creates popupmenus for mouse events. This object holds an XML node\n * which is a description of the popup menu to be created. In\n * <createMenu>, the configuration is applied to the context and\n * the resulting menu items are added to the menu dynamically. See\n * <createMenu> for a description of the configuration format.\n * \n * This class does not create the DOM nodes required for the popup menu, it\n * only parses an XML description to invoke the respective methods on an\n * <mxPopupMenu> each time the menu is displayed.\n *\n * Codec:\n * \n * This class uses the <mxDefaultPopupMenuCodec> to read configuration\n * data into an existing instance, however, the actual parsing is done\n * by this class during program execution, so the format is described\n * below.\n * \n * Constructor: mxDefaultPopupMenu\n *\n * Constructs a new popupmenu-factory based on given configuration.\n *\n * Paramaters:\n *\n * config - XML node that contains the configuration data.\n */\nfunction mxDefaultPopupMenu(config)\n{\n\tthis.config = config;\n};\n\n/**\n * Variable: imageBasePath\n *\n * Base path for all icon attributes in the config. Default is null.\n */\nmxDefaultPopupMenu.prototype.imageBasePath = null;\n\n/**\n * Variable: config\n *\n * XML node used as the description of new menu items. This node is\n * used in <createMenu> to dynamically create the menu items if their\n * respective conditions evaluate to true for the given arguments.\n */\nmxDefaultPopupMenu.prototype.config = null;\n\n/**\n * Function: createMenu\n *\n * This function is called from <mxEditor> to add items to the\n * given menu based on <config>. The config is a sequence of\n * the following nodes and attributes.\n *\n * Child Nodes: \n *\n * add - Adds a new menu item. See below for attributes.\n * separator - Adds a separator. No attributes.\n * condition - Adds a custom condition. Name attribute.\n * \n * The add-node may have a child node that defines a function to be invoked\n * before the action is executed (or instead of an action to be executed).\n *\n * Attributes:\n *\n * as - Resource key for the label (needs entry in property file).\n * action - Name of the action to execute in enclosing editor.\n * icon - Optional icon (relative/absolute URL).\n * iconCls - Optional CSS class for the icon.\n * if - Optional name of condition that must be true (see below).\n * enabled-if - Optional name of condition that specifies if the menu item\n * should be enabled.\n * name - Name of custom condition. Only for condition nodes.\n *\n * Conditions:\n *\n * nocell - No cell under the mouse.\n * ncells - More than one cell selected.\n * notRoot - Drilling position is other than home.\n * cell - Cell under the mouse.\n * notEmpty - Exactly one cell with children under mouse.\n * expandable - Exactly one expandable cell under mouse.\n * collapsable - Exactly one collapsable cell under mouse.\n * validRoot - Exactly one cell which is a possible root under mouse.\n * swimlane - Exactly one cell which is a swimlane under mouse.\n *\n * Example:\n *\n * To add a new item for a given action to the popupmenu:\n * \n * (code)\n * <mxDefaultPopupMenu as=\"popupHandler\">\n *   <add as=\"delete\" action=\"delete\" icon=\"images/delete.gif\" if=\"cell\"/>\n * </mxDefaultPopupMenu>\n * (end)\n * \n * To add a new item for a custom function:\n * \n * (code)\n * <mxDefaultPopupMenu as=\"popupHandler\">\n *   <add as=\"action1\"><![CDATA[\n *\t\tfunction (editor, cell, evt)\n *\t\t{\n *\t\t\teditor.execute('action1', cell, 'myArg');\n *\t\t}\n *   ]]></add>\n * </mxDefaultPopupMenu>\n * (end)\n * \n * The above example invokes action1 with an additional third argument via\n * the editor instance. The third argument is passed to the function that\n * defines action1. If the add-node has no action-attribute, then only the\n * function defined in the text content is executed, otherwise first the\n * function and then the action defined in the action-attribute is\n * executed. The function in the text content has 3 arguments, namely the\n * <mxEditor> instance, the <mxCell> instance under the mouse, and the\n * native mouse event.\n *\n * Custom Conditions:\n *\n * To add a new condition for popupmenu items:\n *  \n * (code)\n * <condition name=\"condition1\"><![CDATA[\n *   function (editor, cell, evt)\n *   {\n *     return cell != null;\n *   }\n * ]]></condition>\n * (end)\n * \n * The new condition can then be used in any item as follows:\n * \n * (code)\n * <add as=\"action1\" action=\"action1\" icon=\"action1.gif\" if=\"condition1\"/>\n * (end)\n * \n * The order in which the items and conditions appear is not significant as\n * all connditions are evaluated before any items are created.\n * \n * Parameters:\n *\n * editor - Enclosing <mxEditor> instance.\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * cell - Optional <mxCell> which is under the mousepointer.\n * evt - Optional mouse event which triggered the menu. \n */\nmxDefaultPopupMenu.prototype.createMenu = function(editor, menu, cell, evt)\n{\n\tif (this.config != null)\n\t{\n\t\tvar conditions = this.createConditions(editor, cell, evt);\n\t\tvar item = this.config.firstChild;\n\n\t\tthis.addItems(editor, menu, cell, evt, conditions, item, null);\n\t}\n};\n\n/**\n * Function: addItems\n * \n * Recursively adds the given items and all of its children into the given menu.\n * \n * Parameters:\n *\n * editor - Enclosing <mxEditor> instance.\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * cell - Optional <mxCell> which is under the mousepointer.\n * evt - Optional mouse event which triggered the menu.\n * conditions - Array of names boolean conditions.\n * item - XML node that represents the current menu item.\n * parent - DOM node that represents the parent menu item.\n */\nmxDefaultPopupMenu.prototype.addItems = function(editor, menu, cell, evt, conditions, item, parent)\n{\n\tvar addSeparator = false;\n\t\n\twhile (item != null)\n\t{\n\t\tif (item.nodeName == 'add')\n\t\t{\n\t\t\tvar condition = item.getAttribute('if');\n\t\t\t\n\t\t\tif (condition == null || conditions[condition])\n\t\t\t{\n\t\t\t\tvar as = item.getAttribute('as');\n\t\t\t\tas = mxResources.get(as) || as;\n\t\t\t\tvar funct = mxUtils.eval(mxUtils.getTextContent(item));\n\t\t\t\tvar action = item.getAttribute('action');\n\t\t\t\tvar icon = item.getAttribute('icon');\n\t\t\t\tvar iconCls = item.getAttribute('iconCls');\n\t\t\t\tvar enabledCond = item.getAttribute('enabled-if');\n\t\t\t\tvar enabled = enabledCond == null || conditions[enabledCond];\n\t\t\t\t\n\t\t\t\tif (addSeparator)\n\t\t\t\t{\n\t\t\t\t\tmenu.addSeparator(parent);\n\t\t\t\t\taddSeparator = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (icon != null && this.imageBasePath)\n\t\t\t\t{\n\t\t\t\t\ticon = this.imageBasePath + icon;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar row = this.addAction(menu, editor, as, icon, funct, action, cell, parent, iconCls, enabled);\n\t\t\t\tthis.addItems(editor, menu, cell, evt, conditions, item.firstChild, row);\n\t\t\t}\n\t\t}\n\t\telse if (item.nodeName == 'separator')\n\t\t{\n\t\t\taddSeparator = true;\n\t\t}\n\t\t\n\t\titem = item.nextSibling;\n\t}\n};\n\n/**\n * Function: addAction\n *\n * Helper method to bind an action to a new menu item.\n * \n * Parameters:\n *\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * editor - Enclosing <mxEditor> instance.\n * lab - String that represents the label of the menu item.\n * icon - Optional URL that represents the icon of the menu item.\n * action - Optional name of the action to execute in the given editor.\n * funct - Optional function to execute before the optional action. The\n * function takes an <mxEditor>, the <mxCell> under the mouse and the\n * mouse event that triggered the call.\n * cell - Optional <mxCell> to use as an argument for the action.\n * parent - DOM node that represents the parent menu item.\n * iconCls - Optional CSS class for the menu icon.\n * enabled - Optional boolean that specifies if the menu item is enabled.\n * Default is true.\n */\nmxDefaultPopupMenu.prototype.addAction = function(menu, editor, lab, icon, funct, action, cell, parent, iconCls, enabled)\n{\n\tvar clickHandler = function(evt)\n\t{\n\t\tif (typeof(funct) == 'function')\n\t\t{\n\t\t\tfunct.call(editor, editor, cell, evt);\n\t\t}\n\t\t\n\t\tif (action != null)\n\t\t{\n\t\t\teditor.execute(action, cell, evt);\n\t\t}\n\t};\n\t\n\treturn menu.addItem(lab, icon, clickHandler, parent, iconCls, enabled);\n};\n\n/**\n * Function: createConditions\n * \n * Evaluates the default conditions for the given context.\n */\nmxDefaultPopupMenu.prototype.createConditions = function(editor, cell, evt)\n{\n\t// Creates array with conditions\n\tvar model = editor.graph.getModel();\n\tvar childCount = model.getChildCount(cell);\n\t\n\t// Adds some frequently used conditions\n\tvar conditions = [];\n\tconditions['nocell'] = cell == null;\n\tconditions['ncells'] = editor.graph.getSelectionCount() > 1;\n\tconditions['notRoot'] = model.getRoot() !=\n\t\tmodel.getParent(editor.graph.getDefaultParent());\n\tconditions['cell'] = cell != null;\n\t\n\tvar isCell = cell != null && editor.graph.getSelectionCount() == 1;\n\tconditions['nonEmpty'] = isCell && childCount > 0;\n\tconditions['expandable'] = isCell && editor.graph.isCellFoldable(cell, false);\n\tconditions['collapsable'] = isCell && editor.graph.isCellFoldable(cell, true);\n\tconditions['validRoot'] = isCell && editor.graph.isValidRoot(cell);\n\tconditions['emptyValidRoot'] = conditions['validRoot'] && childCount == 0;\n\tconditions['swimlane'] = isCell && editor.graph.isSwimlane(cell);\n\n\t// Evaluates dynamic conditions from config file\n\tvar condNodes = this.config.getElementsByTagName('condition');\n\t\n\tfor (var i=0; i<condNodes.length; i++)\n\t{\n\t\tvar funct = mxUtils.eval(mxUtils.getTextContent(condNodes[i]));\n\t\tvar name = condNodes[i].getAttribute('name');\n\t\t\n\t\tif (name != null && typeof(funct) == 'function')\n\t\t{\n\t\t\tconditions[name] = funct(editor, cell, evt);\n\t\t}\n\t}\n\t\n\treturn conditions;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultToolbar\n *\n * Toolbar for the editor. This modifies the state of the graph\n * or inserts new cells upon mouse clicks.\n * \n * Example:\n * \n * Create a toolbar with a button to copy the selection into the clipboard,\n * and a combo box with one action to paste the selection from the clipboard\n * into the graph.\n * \n * (code)\n * var toolbar = new mxDefaultToolbar(container, editor);\n * toolbar.addItem('Copy', null, 'copy');\n * \n * var combo = toolbar.addActionCombo('More actions...');\n * toolbar.addActionOption(combo, 'Paste', 'paste');\n * (end) \n *\n * Codec:\n * \n * This class uses the <mxDefaultToolbarCodec> to read configuration\n * data into an existing instance. See <mxDefaultToolbarCodec> for a\n * description of the configuration format.\n * \n * Constructor: mxDefaultToolbar\n *\n * Constructs a new toolbar for the given container and editor. The\n * container and editor may be null if a prototypical instance for a\n * <mxDefaultKeyHandlerCodec> is created.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n * editor - Reference to the enclosing <mxEditor>. \n */\nfunction mxDefaultToolbar(container, editor)\n{\n\tthis.editor = editor;\n\n\tif (container != null && editor != null)\n\t{\n\t\tthis.init(container);\n\t}\n};\n\t\n/**\n * Variable: editor\n *\n * Reference to the enclosing <mxEditor>.\n */\nmxDefaultToolbar.prototype.editor = null;\n\n/**\n * Variable: toolbar\n *\n * Holds the internal <mxToolbar>.\n */\nmxDefaultToolbar.prototype.toolbar = null;\n\n/**\n * Variable: resetHandler\n *\n * Reference to the function used to reset the <toolbar>.\n */\nmxDefaultToolbar.prototype.resetHandler = null;\n\n/**\n * Variable: spacing\n *\n * Defines the spacing between existing and new vertices in\n * gridSize units when a new vertex is dropped on an existing\n * cell. Default is 4 (40 pixels).\n */\nmxDefaultToolbar.prototype.spacing = 4;\n\n/**\n * Variable: connectOnDrop\n * \n * Specifies if elements should be connected if new cells are dropped onto\n * connectable elements. Default is false.\n */\nmxDefaultToolbar.prototype.connectOnDrop = false;\n\n/**\n * Function: init\n * \n * Constructs the <toolbar> for the given container and installs a listener\n * that updates the <mxEditor.insertFunction> on <editor> if an item is\n * selected in the toolbar. This assumes that <editor> is not null.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n */\nmxDefaultToolbar.prototype.init = function(container)\n{\n\tif (container != null)\n\t{\n\t\tthis.toolbar = new mxToolbar(container);\n\t\t\n\t\t// Installs the insert function in the editor if an item is\n\t\t// selected in the toolbar\n\t\tthis.toolbar.addListener(mxEvent.SELECT, mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar funct = evt.getProperty('function');\n\t\t\t\n\t\t\tif (funct != null)\n\t\t\t{\n\t\t\t\tthis.editor.insertFunction = mxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tfunct.apply(this, arguments);\n\t\t\t\t\tthis.toolbar.resetMode();\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.editor.insertFunction = null;\n\t\t\t}\n\t\t}));\n\t\t\n\t\t// Resets the selected tool after a doubleclick or escape keystroke\n\t\tthis.resetHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tif (this.toolbar != null)\n\t\t\t{\n\t\t\t\tthis.toolbar.resetMode(true);\n\t\t\t}\n\t\t});\n\n\t\tthis.editor.graph.addListener(mxEvent.DOUBLE_CLICK, this.resetHandler);\n\t\tthis.editor.addListener(mxEvent.ESCAPE, this.resetHandler);\n\t}\n};\n\n/**\n * Function: addItem\n *\n * Adds a new item that executes the given action in <editor>. The title,\n * icon and pressedIcon are used to display the toolbar item.\n * \n * Parameters:\n *\n * title - String that represents the title (tooltip) for the item.\n * icon - URL of the icon to be used for displaying the item.\n * action - Name of the action to execute when the item is clicked.\n * pressed - Optional URL of the icon for the pressed state.\n */\nmxDefaultToolbar.prototype.addItem = function(title, icon, action, pressed)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tif (action != null && action.length > 0)\n\t\t{\n\t\t\tthis.editor.execute(action);\n\t\t}\n\t});\n\t\n\treturn this.toolbar.addItem(title, icon, clickHandler, pressed);\n};\n\n/**\n * Function: addSeparator\n *\n * Adds a vertical separator using the optional icon.\n * \n * Parameters:\n * \n * icon - Optional URL of the icon that represents the vertical separator.\n * Default is <mxClient.imageBasePath> + '/separator.gif'.\n */\nmxDefaultToolbar.prototype.addSeparator = function(icon)\n{\n\ticon = icon || mxClient.imageBasePath + '/separator.gif';\n\tthis.toolbar.addSeparator(icon);\n};\n\t\n/**\n * Function: addCombo\n *\n * Helper method to invoke <mxToolbar.addCombo> on <toolbar> and return the\n * resulting DOM node.\n */\nmxDefaultToolbar.prototype.addCombo = function()\n{\n\treturn this.toolbar.addCombo();\n};\n\t\t\n/**\n * Function: addActionCombo\n *\n * Helper method to invoke <mxToolbar.addActionCombo> on <toolbar> using\n * the given title and return the resulting DOM node.\n * \n * Parameters:\n * \n * title - String that represents the title of the combo.\n */\nmxDefaultToolbar.prototype.addActionCombo = function(title)\n{\n\treturn this.toolbar.addActionCombo(title);\n};\n\n/**\n * Function: addActionOption\n *\n * Binds the given action to a option with the specified label in the\n * given combo. Combo is an object returned from an earlier call to\n * <addCombo> or <addActionCombo>.\n * \n * Parameters:\n * \n * combo - DOM node that represents the combo box.\n * title - String that represents the title of the combo.\n * action - Name of the action to execute in <editor>.\n */\nmxDefaultToolbar.prototype.addActionOption = function(combo, title, action)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.execute(action);\n\t});\n\t\n\tthis.addOption(combo, title, clickHandler);\n};\n\n/**\n * Function: addOption\n *\n * Helper method to invoke <mxToolbar.addOption> on <toolbar> and return\n * the resulting DOM node that represents the option.\n * \n * Parameters:\n * \n * combo - DOM node that represents the combo box.\n * title - String that represents the title of the combo.\n * value - Object that represents the value of the option.\n */\nmxDefaultToolbar.prototype.addOption = function(combo, title, value)\n{\n\treturn this.toolbar.addOption(combo, title, value);\n};\n\t\n/**\n * Function: addMode\n *\n * Creates an item for selecting the given mode in the <editor>'s graph.\n * Supported modenames are select, connect and pan.\n * \n * Parameters:\n * \n * title - String that represents the title of the item.\n * icon - URL of the icon that represents the item.\n * mode - String that represents the mode name to be used in\n * <mxEditor.setMode>.\n * pressed - Optional URL of the icon that represents the pressed state.\n * funct - Optional JavaScript function that takes the <mxEditor> as the\n * first and only argument that is executed after the mode has been\n * selected.\n */\nmxDefaultToolbar.prototype.addMode = function(title, icon, mode, pressed, funct)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.setMode(mode);\n\t\t\n\t\tif (funct != null)\n\t\t{\n\t\t\tfunct(this.editor);\n\t\t}\n\t});\n\t\n\treturn this.toolbar.addSwitchMode(title, icon, clickHandler, pressed);\n};\n\n/**\n * Function: addPrototype\n *\n * Creates an item for inserting a clone of the specified prototype cell into\n * the <editor>'s graph. The ptype may either be a cell or a function that\n * returns a cell.\n * \n * Parameters:\n * \n * title - String that represents the title of the item.\n * icon - URL of the icon that represents the item.\n * ptype - Function or object that represents the prototype cell. If ptype\n * is a function then it is invoked with no arguments to create new\n * instances.\n * pressed - Optional URL of the icon that represents the pressed state.\n * insert - Optional JavaScript function that handles an insert of the new\n * cell. This function takes the <mxEditor>, new cell to be inserted, mouse\n * event and optional <mxCell> under the mouse pointer as arguments.\n * toggle - Optional boolean that specifies if the item can be toggled.\n * Default is true.\n */\nmxDefaultToolbar.prototype.addPrototype = function(title, icon, ptype, pressed, insert, toggle)\n{\n\t// Creates a wrapper function that is in charge of constructing\n\t// the new cell instance to be inserted into the graph\n\tvar factory = mxUtils.bind(this, function()\n\t{\n\t\tif (typeof(ptype) == 'function')\n\t\t{\n\t\t\treturn ptype();\n\t\t}\n\t\telse if (ptype != null)\n\t\t{\n\t\t\treturn this.editor.graph.cloneCell(ptype);\n\t\t}\n\t\t\n\t\treturn null;\n\t});\n\t\n\t// Defines the function for a click event on the graph\n\t// after this item has been selected in the toolbar\n\tvar clickHandler = mxUtils.bind(this, function(evt, cell)\n\t{\n\t\tif (typeof(insert) == 'function')\n\t\t{\n\t\t\tinsert(this.editor, factory(), evt, cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.drop(factory(), evt, cell);\n\t\t}\n\t\t\n\t\tthis.toolbar.resetMode();\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tvar img = this.toolbar.addMode(title, icon, clickHandler, pressed, null, toggle);\n\t\t\t\t\n\t// Creates a wrapper function that calls the click handler without\n\t// the graph argument\n\tvar dropHandler = function(graph, evt, cell)\n\t{\n\t\tclickHandler(evt, cell);\n\t};\n\t\n\tthis.installDropHandler(img, dropHandler);\n\t\n\treturn img;\n};\n\n/**\n * Function: drop\n * \n * Handles a drop from a toolbar item to the graph. The given vertex\n * represents the new cell to be inserted. This invokes <insert> or\n * <connect> depending on the given target cell.\n * \n * Parameters:\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * target - Optional <mxCell> that represents the drop target.\n */\nmxDefaultToolbar.prototype.drop = function(vertex, evt, target)\n{\n\tvar graph = this.editor.graph;\n\tvar model = graph.getModel();\n\t\n\tif (target == null ||\n\t\tmodel.isEdge(target) ||\n\t\t!this.connectOnDrop ||\n\t\t!graph.isCellConnectable(target))\n\t{\n\t\twhile (target != null &&\n\t\t\t!graph.isValidDropTarget(target, [vertex], evt))\n\t\t{\n\t\t\ttarget = model.getParent(target);\n\t\t}\n\t\t\n\t\tthis.insert(vertex, evt, target);\n\t}\n\telse\n\t{\n\t\tthis.connect(vertex, evt, target);\n\t}\n};\n\n/**\n * Function: insert\n *\n * Handles a drop by inserting the given vertex into the given parent cell\n * or the default parent if no parent is specified.\n * \n * Parameters:\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * parent - Optional <mxCell> that represents the parent.\n */\nmxDefaultToolbar.prototype.insert = function(vertex, evt, target)\n{\n\tvar graph = this.editor.graph;\n\t\n\tif (graph.canImportCell(vertex))\n\t{\n\t\tvar x = mxEvent.getClientX(evt);\n\t\tvar y = mxEvent.getClientY(evt);\n\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\n\t\t// Splits the target edge or inserts into target group\n\t\tif (graph.isSplitEnabled() &&\n\t\t\tgraph.isSplitTarget(target, [vertex], evt))\n\t\t{\n\t\t\treturn graph.splitEdge(target, [vertex], null, pt.x, pt.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.editor.addVertex(target, vertex, pt.x, pt.y);\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: connect\n * \n * Handles a drop by connecting the given vertex to the given source cell.\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * source - Optional <mxCell> that represents the source terminal.\n */\nmxDefaultToolbar.prototype.connect = function(vertex, evt, source)\n{\n\tvar graph = this.editor.graph;\n\tvar model = graph.getModel();\n\t\n\tif (source != null &&\n\t\tgraph.isCellConnectable(vertex) &&\n\t\tgraph.isEdgeValid(null, source, vertex))\n\t{\n\t\tvar edge = null;\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar geo = model.getGeometry(source);\n\t\t\tvar g = model.getGeometry(vertex).clone();\n\t\t\t\n\t\t\t// Moves the vertex away from the drop target that will\n\t\t\t// be used as the source for the new connection\n\t\t\tg.x = geo.x + (geo.width - g.width) / 2;\n\t\t\tg.y = geo.y + (geo.height - g.height) / 2;\n\t\t\t\n\t\t\tvar step = this.spacing * graph.gridSize;\n\t\t\tvar dist = model.getDirectedEdgeCount(source, true) * 20;\n\t\t\t\n\t\t\tif (this.editor.horizontalFlow)\n\t\t\t{\n\t\t\t\tg.x += (g.width + geo.width) / 2 + step + dist;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tg.y += (g.height + geo.height) / 2 + step + dist;\n\t\t\t}\n\t\t\t\n\t\t\tvertex.setGeometry(g);\n\t\t\t\n\t\t\t// Fires two add-events with the code below - should be fixed\n\t\t\t// to only fire one add event for both inserts\n\t\t\tvar parent = model.getParent(source);\n\t\t\tgraph.addCell(vertex, parent);\n\t\t\tgraph.constrainChild(vertex);\n\n\t\t\t// Creates the edge using the editor instance and calls\n\t\t\t// the second function that fires an add event\n\t\t\tedge = this.editor.createEdge(source, vertex);\n\t\t\t\n\t\t\tif (model.getGeometry(edge) == null)\n\t\t\t{\n\t\t\t\tvar edgeGeometry = new mxGeometry();\n\t\t\t\tedgeGeometry.relative = true;\n\t\t\t\t\n\t\t\t\tmodel.setGeometry(edge, edgeGeometry);\n\t\t\t}\n\t\t\t\n\t\t\tgraph.addEdge(edge, parent, source, vertex);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t\t\n\t\tgraph.setSelectionCells([vertex, edge]);\n\t\tgraph.scrollCellToVisible(vertex);\n\t}\n};\n\n/**\n * Function: installDropHandler\n * \n * Makes the given img draggable using the given function for handling a\n * drop event.\n * \n * Parameters:\n * \n * img - DOM node that represents the image.\n * dropHandler - Function that handles a drop of the image.\n */\nmxDefaultToolbar.prototype.installDropHandler = function (img, dropHandler)\n{\n\tvar sprite = document.createElement('img');\n\tsprite.setAttribute('src', img.getAttribute('src'));\n\n\t// Handles delayed loading of the images\n\tvar loader = mxUtils.bind(this, function(evt)\n\t{\n\t\t// Preview uses the image node with double size. Later this can be\n\t\t// changed to use a separate preview and guides, but for this the\n\t\t// dropHandler must use the additional x- and y-arguments and the\n\t\t// dragsource which makeDraggable returns much be configured to\n\t\t// use guides via mxDragSource.isGuidesEnabled.\n\t\tsprite.style.width = (2 * img.offsetWidth) + 'px';\n\t\tsprite.style.height = (2 * img.offsetHeight) + 'px';\n\n\t\tmxUtils.makeDraggable(img, this.editor.graph, dropHandler,\n\t\t\tsprite);\n\t\tmxEvent.removeListener(sprite, 'load', loader);\n\t});\n\n\tif (mxClient.IS_IE)\n\t{\n\t\tloader();\n\t}\n\telse\n\t{\n\t\tmxEvent.addListener(sprite, 'load', loader);\n\t}\t\n};\n\n/**\n * Function: destroy\n * \n * Destroys the <toolbar> associated with this object and removes all\n * installed listeners. This does normally not need to be called, the\n * <toolbar> is destroyed automatically when the window unloads (in IE) by\n * <mxEditor>.\n */\nmxDefaultToolbar.prototype.destroy = function ()\n{\n\tif (this.resetHandler != null)\n\t{\n\t\tthis.editor.graph.removeListener('dblclick', this.resetHandler);\n\t\tthis.editor.removeListener('escape', this.resetHandler);\n\t\tthis.resetHandler = null;\n\t}\n\t\n\tif (this.toolbar != null)\n\t{\n\t\tthis.toolbar.destroy();\n\t\tthis.toolbar = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2019, JGraph Ltd\n * Copyright (c) 2006-2019, draw.io AG\n */\n/**\n * Class: mxEditor\n *\n * Extends <mxEventSource> to implement a application wrapper for a graph that\n * adds <actions>, I/O using <mxCodec>, auto-layout using <mxLayoutManager>,\n * command history using <undoManager>, and standard dialogs and widgets, eg.\n * properties, help, outline, toolbar, and popupmenu. It also adds <templates>\n * to be used as cells in toolbars, auto-validation using the <validation>\n * flag, attribute cycling using <cycleAttributeValues>, higher-level events\n * such as <root>, and backend integration using <urlPost> and <urlImage>. \n * \n * Actions:\n * \n * Actions are functions stored in the <actions> array under their names. The\n * functions take the <mxEditor> as the first, and an optional <mxCell> as the\n * second argument and are invoked using <execute>. Any additional arguments\n * passed to execute are passed on to the action as-is.\n * \n * A list of built-in actions is available in the <addActions> description.\n * \n * Read/write Diagrams:\n * \n * To read a diagram from an XML string, for example from a textfield within the \n * page, the following code is used:\n * \n * (code)\n * var doc = mxUtils.parseXML(xmlString);\n * var node = doc.documentElement;\n * editor.readGraphModel(node);\n * (end)\n * \n * For reading a diagram from a remote location, use the <open> method.\n * \n * To save diagrams in XML on a server, you can set the <urlPost> variable. \n * This variable will be used in <getUrlPost> to construct a URL for the post \n * request that is issued in the <save> method. The post request contains the \n * XML representation of the diagram as returned by <writeGraphModel> in the \n * xml parameter.\n * \n * On the server side, the post request is processed using standard\n * technologies such as Java Servlets, CGI, .NET or ASP.\n * \n * Here are some examples of processing a post request in various languages.\n * \n * - Java: URLDecoder.decode(request.getParameter(\"xml\"), \"UTF-8\").replace(\"\\n\", \"&#xa;\")\n * \n * Note that the linefeeds should only be replaced if the XML is\n * processed in Java, for example when creating an image, but not\n * if the XML is passed back to the client-side.\n * \n * - .NET: HttpUtility.UrlDecode(context.Request.Params[\"xml\"])\n * - PHP: urldecode($_POST[\"xml\"])\n * \n * Creating images:\n * \n * A backend (Java, PHP or C#) is required for creating images. The\n * distribution contains an example for each backend (ImageHandler.java,\n * ImageHandler.cs and graph.php). More information about using a backend\n * to create images can be found in the readme.html files. Note that the\n * preview is implemented using VML/SVG in the browser and does not require\n * a backend. The backend is only required to creates images (bitmaps).\n * \n * Special characters:\n * \n * Note There are five characters that should always appear in XML content as\n * escapes, so that they do not interact with the syntax of the markup. These\n * are part of the language for all documents based on XML and for HTML.\n * \n * - &lt; (<)\n * - &gt; (>)\n * - &amp; (&)\n * - &quot; (\")\n * - &apos; (')\n * \n * Although it is part of the XML language, &apos; is not defined in HTML.\n * For this reason the XHTML specification recommends instead the use of\n * &#39; if text may be passed to a HTML user agent.\n * \n * If you are having problems with special characters on the server-side then\n * you may want to try the <escapePostData> flag.\n * \n * For converting decimal escape sequences inside strings, a user has provided\n * us with the following function:\n * \n * (code)\n * function html2js(text)\n * {\n *   var entitySearch = /&#[0-9]+;/;\n *   var entity;\n *   \n *   while (entity = entitySearch.exec(text))\n *   {\n *     var charCode = entity[0].substring(2, entity[0].length -1);\n *     text = text.substring(0, entity.index)\n *            + String.fromCharCode(charCode)\n *            + text.substring(entity.index + entity[0].length);\n *   }\n *   \n *   return text;\n * }\n * (end)\n * \n * Otherwise try using hex escape sequences and the built-in unescape function\n * for converting such strings.\n * \n * Local Files:\n * \n * For saving and opening local files, no standardized method exists that\n * works across all browsers. The recommended way of dealing with local files\n * is to create a backend that streams the XML data back to the browser (echo)\n * as an attachment so that a Save-dialog is displayed on the client-side and\n * the file can be saved to the local disk.\n * \n * For example, in PHP the code that does this looks as follows.\n * \n * (code)\n * $xml = stripslashes($_POST[\"xml\"]);\n * header(\"Content-Disposition: attachment; filename=\\\"diagram.xml\\\"\");\n * echo($xml);\n * (end)\n * \n * To open a local file, the file should be uploaded via a form in the browser\n * and then opened from the server in the editor.\n * \n * Cell Properties:\n * \n * The properties displayed in the properties dialog are the attributes and \n * values of the cell's user object, which is an XML node. The XML node is \n * defined in the templates section of the config file.\n * \n * The templates are stored in <mxEditor.templates> and contain cells which\n * are cloned at insertion time to create new vertices by use of drag and\n * drop from the toolbar. Each entry in the toolbar for adding a new vertex\n * must refer to an existing template.\n * \n * In the following example, the task node is a business object and only the \n * mxCell node and its mxGeometry child contain graph information:\n * \n * (code)\n * <Task label=\"Task\" description=\"\">\n *   <mxCell vertex=\"true\">\n *     <mxGeometry as=\"geometry\" width=\"72\" height=\"32\"/>\n *   </mxCell>\n * </Task> \n * (end)\n * \n * The idea is that the XML representation is inverse from the in-memory \n * representation: The outer XML node is the user object and the inner node is \n * the cell. This means the user object of the cell is the Task node with no \n * children for the above example:\n * \n * (code)\n * <Task label=\"Task\" description=\"\"/>\n * (end)\n * \n * The Task node can have any tag name, attributes and child nodes. The \n * <mxCodec> will use the XML hierarchy as the user object, while removing the \n * \"known annotations\", such as the mxCell node. At save-time the cell data \n * will be \"merged\" back into the user object. The user object is only modified \n * via the properties dialog during the lifecycle of the cell.\n * \n * In the default implementation of <createProperties>, the user object's\n * attributes are put into a form for editing. Attributes are changed using\n * the <mxCellAttributeChange> action in the model. The dialog can be replaced \n * by overriding the <createProperties> hook or by replacing the showProperties\n * action in <actions>. Alternatively, the entry in the config file's popupmenu\n * section can be modified to invoke a different action.\n * \n * If you want to displey the properties dialog on a doubleclick, you can set\n * <mxEditor.dblClickAction> to showProperties as follows:\n * \n * (code)\n * editor.dblClickAction = 'showProperties';\n * (end)\n * \n * Popupmenu and Toolbar:\n * \n * The toolbar and popupmenu are typically configured using the respective\n * sections in the config file, that is, the popupmenu is defined as follows:\n * \n * (code)\n * <mxEditor>\n *   <mxDefaultPopupMenu as=\"popupHandler\">\n * \t\t<add as=\"cut\" action=\"cut\" icon=\"images/cut.gif\"/>\n *      ...\n * (end)\n * \n * New entries can be added to the toolbar by inserting an add-node into the\n * above configuration. Existing entries may be removed and changed by\n * modifying or removing the respective entries in the configuration.\n * The configuration is read by the <mxDefaultPopupMenuCodec>, the format of the\n * configuration is explained in <mxDefaultPopupMenu.decode>.\n * \n * The toolbar is defined in the mxDefaultToolbar section. Items can be added\n * and removed in this section.\n * \n * (code)\n * <mxEditor>\n *   <mxDefaultToolbar>\n *     <add as=\"save\" action=\"save\" icon=\"images/save.gif\"/>\n *     <add as=\"Swimlane\" template=\"swimlane\" icon=\"images/swimlane.gif\"/>\n *     ...\n * (end)\n * \n * The format of the configuration is described in\n * <mxDefaultToolbarCodec.decode>.\n * \n * Ids:\n * \n * For the IDs, there is an implicit behaviour in <mxCodec>: It moves the Id\n * from the cell to the user object at encoding time and vice versa at decoding\n * time. For example, if the Task node from above has an id attribute, then\n * the <mxCell.id> of the corresponding cell will have this value. If there\n * is no Id collision in the model, then the cell may be retrieved using this\n * Id with the <mxGraphModel.getCell> function. If there is a collision, a new\n * Id will be created for the cell using <mxGraphModel.createId>. At encoding\n * time, this new Id will replace the value previously stored under the id\n * attribute in the Task node.\n * \n * See <mxEditorCodec>, <mxDefaultToolbarCodec> and <mxDefaultPopupMenuCodec>\n * for information about configuring the editor and user interface.\n * \n * Programmatically inserting cells:\n * \n * For inserting a new cell, say, by clicking a button in the document,\n * the following code can be used. This requires an reference to the editor.\n * \n * (code)\n * var userObject = new Object();\n * var parent = editor.graph.getDefaultParent();\n * var model = editor.graph.model;\n * model.beginUpdate();\n * try\n * {\n *   editor.graph.insertVertex(parent, null, userObject, 20, 20, 80, 30);\n * }\n * finally\n * {\n *   model.endUpdate();\n * }\n * (end)\n * \n * If a template cell from the config file should be inserted, then a clone\n * of the template can be created as follows. The clone is then inserted using\n * the add function instead of addVertex.\n * \n * (code)\n * var template = editor.templates['task'];\n * var clone = editor.graph.model.cloneCell(template);\n * (end)\n * \n * Resources:\n *\n * resources/editor - Language resources for mxEditor\n *\n * Callback: onInit\n *\n * Called from within the constructor. In the callback,\n * \"this\" refers to the editor instance.\n *\n * Cookie: mxgraph=seen\n *\n * Set when the editor is started. Never expires. Use\n * <resetFirstTime> to reset this cookie. This cookie\n * only exists if <onInit> is implemented.\n *\n * Event: mxEvent.OPEN\n *\n * Fires after a file was opened in <open>. The <code>filename</code> property\n * contains the filename that was used. The same value is also available in\n * <filename>.\n *\n * Event: mxEvent.SAVE\n *\n * Fires after the current file was saved in <save>. The <code>url</code>\n * property contains the URL that was used for saving.\n *\n * Event: mxEvent.POST\n * \n * Fires if a successful response was received in <postDiagram>. The\n * <code>request</code> property contains the <mxXmlRequest>, the\n * <code>url</code> and <code>data</code> properties contain the URL and the\n * data that were used in the post request. \n *\n * Event: mxEvent.ROOT\n *\n * Fires when the current root has changed, or when the title of the current\n * root has changed. This event has no properties.\n *\n * Event: mxEvent.BEFORE_ADD_VERTEX\n * \n * Fires before a vertex is added in <addVertex>. The <code>vertex</code>\n * property contains the new vertex and the <code>parent</code> property\n * contains its parent.\n * \n * Event: mxEvent.ADD_VERTEX\n * \n * Fires between begin- and endUpdate in <addVertex>. The <code>vertex</code>\n * property contains the vertex that is being inserted.\n * \n * Event: mxEvent.AFTER_ADD_VERTEX\n * \n * Fires after a vertex was inserted and selected in <addVertex>. The\n * <code>vertex</code> property contains the new vertex.\n * \n * Example:\n * \n * For starting an in-place edit after a new vertex has been added to the\n * graph, the following code can be used.\n * \n * (code)\n * editor.addListener(mxEvent.AFTER_ADD_VERTEX, function(sender, evt)\n * {\n *   var vertex = evt.getProperty('vertex');\n * \n *   if (editor.graph.isCellEditable(vertex))\n *   {\n *   \teditor.graph.startEditingAtCell(vertex);\n *   }\n * });\n * (end)\n * \n * Event: mxEvent.ESCAPE\n * \n * Fires when the escape key is pressed. The <code>event</code> property\n * contains the key event.\n * \n * Constructor: mxEditor\n *\n * Constructs a new editor. This function invokes the <onInit> callback\n * upon completion.\n *\n * Example:\n *\n * (code)\n * var config = mxUtils.load('config/diagrameditor.xml').getDocumentElement();\n * var editor = new mxEditor(config);\n * (end)\n * \n * Parameters:\n * \n * config - Optional XML node that contains the configuration.\n */\nfunction mxEditor(config)\n{\n\tthis.actions = [];\n\tthis.addActions();\n\n\t// Executes the following only if a document has been instanciated.\n\t// That is, don't execute when the editorcodec is setup.\n\tif (document.body != null)\n\t{\n\t\t// Defines instance fields\n\t\tthis.cycleAttributeValues = [];\n\t\tthis.popupHandler = new mxDefaultPopupMenu();\n\t\tthis.undoManager = new mxUndoManager();\n\n\t\t// Creates the graph and toolbar without the containers\n\t\tthis.graph = this.createGraph();\n\t\tthis.toolbar = this.createToolbar();\n\n\t\t// Creates the global keyhandler (requires graph instance)\n\t\tthis.keyHandler = new mxDefaultKeyHandler(this);\n\n\t\t// Configures the editor using the URI\n\t\t// which was passed to the ctor\n\t\tthis.configure(config);\n\t\t\n\t\t// Assigns the swimlaneIndicatorColorAttribute on the graph\n\t\tthis.graph.swimlaneIndicatorColorAttribute = this.cycleAttributeName;\n\n\t\t// Checks if the <onInit> hook has been set\n\t\tif (this.onInit != null)\n\t\t{\n\t\t\t// Invokes the <onInit> hook\n\t\t\tthis.onInit();\n\t\t}\n\t\t\n\t\t// Automatic deallocation of memory\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.destroy();\n\t\t\t}));\n\t\t}\n\t}\n};\n\n/**\n * Installs the required language resources at class\n * loading time.\n */\nif (mxLoadResources)\n{\n\tmxResources.add(mxClient.basePath + '/resources/editor');\n}\nelse\n{\n\tmxClient.defaultBundles.push(mxClient.basePath + '/resources/editor');\n}\n\n/**\n * Extends mxEventSource.\n */\nmxEditor.prototype = new mxEventSource();\nmxEditor.prototype.constructor = mxEditor;\n\n/**\n * Group: Controls and Handlers\n */\n\t\n/**\n * Variable: askZoomResource\n * \n * Specifies the resource key for the zoom dialog. If the resource for this\n * key does not exist then the value is used as the error message. Default\n * is 'askZoom'.\n */\nmxEditor.prototype.askZoomResource = (mxClient.language != 'none') ? 'askZoom' : '';\n\t\n/**\n * Variable: lastSavedResource\n * \n * Specifies the resource key for the last saved info. If the resource for\n * this key does not exist then the value is used as the error message.\n * Default is 'lastSaved'.\n */\nmxEditor.prototype.lastSavedResource = (mxClient.language != 'none') ? 'lastSaved' : '';\n\t\n/**\n * Variable: currentFileResource\n * \n * Specifies the resource key for the current file info. If the resource for\n * this key does not exist then the value is used as the error message.\n * Default is 'currentFile'.\n */\nmxEditor.prototype.currentFileResource = (mxClient.language != 'none') ? 'currentFile' : '';\n\t\n/**\n * Variable: propertiesResource\n * \n * Specifies the resource key for the properties window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'properties'.\n */\nmxEditor.prototype.propertiesResource = (mxClient.language != 'none') ? 'properties' : '';\n\t\n/**\n * Variable: tasksResource\n * \n * Specifies the resource key for the tasks window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'tasks'.\n */\nmxEditor.prototype.tasksResource = (mxClient.language != 'none') ? 'tasks' : '';\n\t\n/**\n * Variable: helpResource\n * \n * Specifies the resource key for the help window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'help'.\n */\nmxEditor.prototype.helpResource = (mxClient.language != 'none') ? 'help' : '';\n\t\n/**\n * Variable: outlineResource\n * \n * Specifies the resource key for the outline window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'outline'.\n */\nmxEditor.prototype.outlineResource = (mxClient.language != 'none') ? 'outline' : '';\n\t\n/**\n * Variable: outline\n * \n * Reference to the <mxWindow> that contains the outline. The <mxOutline>\n * is stored in outline.outline.\n */\nmxEditor.prototype.outline = null;\n\n/**\n * Variable: graph\n *\n * Holds a <mxGraph> for displaying the diagram. The graph\n * is created in <setGraphContainer>.\n */\nmxEditor.prototype.graph = null;\n\n/**\n * Variable: graphRenderHint\n *\n * Holds the render hint used for creating the\n * graph in <setGraphContainer>. See <mxGraph>.\n * Default is null.\n */\nmxEditor.prototype.graphRenderHint = null;\n\n/**\n * Variable: toolbar\n *\n * Holds a <mxDefaultToolbar> for displaying the toolbar. The\n * toolbar is created in <setToolbarContainer>.\n */\nmxEditor.prototype.toolbar = null;\n\n/**\n * Variable: status\n *\n * DOM container that holds the statusbar. Default is null.\n * Use <setStatusContainer> to set this value.\n */\nmxEditor.prototype.status = null;\n\n/**\n * Variable: popupHandler\n *\n * Holds a <mxDefaultPopupMenu> for displaying\n * popupmenus.\n */\nmxEditor.prototype.popupHandler = null;\n\n/**\n * Variable: undoManager\n *\n * Holds an <mxUndoManager> for the command history.\n */\nmxEditor.prototype.undoManager = null;\n\n/**\n * Variable: keyHandler\n *\n * Holds a <mxDefaultKeyHandler> for handling keyboard events.\n * The handler is created in <setGraphContainer>.\n */\nmxEditor.prototype.keyHandler = null;\n\n/**\n * Group: Actions and Options\n */\n\n/**\n * Variable: actions\n *\n * Maps from actionnames to actions, which are functions taking\n * the editor and the cell as arguments. Use <addAction>\n * to add or replace an action and <execute> to execute an action\n * by name, passing the cell to be operated upon as the second\n * argument.\n */\nmxEditor.prototype.actions = null;\n\n/**\n * Variable: dblClickAction\n *\n * Specifies the name of the action to be executed\n * when a cell is double clicked. Default is 'edit'.\n * \n * To handle a singleclick, use the following code.\n * \n * (code)\n * editor.graph.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var e = evt.getProperty('event');\n *   var cell = evt.getProperty('cell');\n * \n *   if (cell != null && !e.isConsumed())\n *   {\n *     // Do something useful with cell...\n *     e.consume();\n *   }\n * });\n * (end)\n */\nmxEditor.prototype.dblClickAction = 'edit';\n\n/**\n * Variable: swimlaneRequired\n * \n * Specifies if new cells must be inserted\n * into an existing swimlane. Otherwise, cells\n * that are not swimlanes can be inserted as\n * top-level cells. Default is false.\n */\nmxEditor.prototype.swimlaneRequired = false;\n\n/**\n * Variable: disableContextMenu\n *\n * Specifies if the context menu should be disabled in the graph container.\n * Default is true.\n */\nmxEditor.prototype.disableContextMenu = true;\n\n/**\n * Group: Templates\n */\n\n/**\n * Variable: insertFunction\n *\n * Specifies the function to be used for inserting new\n * cells into the graph. This is assigned from the\n * <mxDefaultToolbar> if a vertex-tool is clicked.\n */\nmxEditor.prototype.insertFunction = null;\n\n/**\n * Variable: forcedInserting\n *\n * Specifies if a new cell should be inserted on a single\n * click even using <insertFunction> if there is a cell \n * under the mousepointer, otherwise the cell under the \n * mousepointer is selected. Default is false.\n */\nmxEditor.prototype.forcedInserting = false;\n\n/**\n * Variable: templates\n * \n * Maps from names to protoype cells to be used\n * in the toolbar for inserting new cells into\n * the diagram.\n */\nmxEditor.prototype.templates = null;\n\n/**\n * Variable: defaultEdge\n * \n * Prototype edge cell that is used for creating\n * new edges.\n */\nmxEditor.prototype.defaultEdge = null;\n\n/**\n * Variable: defaultEdgeStyle\n * \n * Specifies the edge style to be returned in <getEdgeStyle>.\n * Default is null.\n */\nmxEditor.prototype.defaultEdgeStyle = null;\n\n/**\n * Variable: defaultGroup\n * \n * Prototype group cell that is used for creating\n * new groups.\n */\nmxEditor.prototype.defaultGroup = null;\n\n/**\n * Variable: groupBorderSize\n *\n * Default size for the border of new groups. If null,\n * then then <mxGraph.gridSize> is used. Default is\n * null.\n */\nmxEditor.prototype.groupBorderSize = null;\n\n/**\n * Group: Backend Integration\n */\n\n/**\n * Variable: filename\n *\n * Contains the URL of the last opened file as a string.\n * Default is null.\n */\nmxEditor.prototype.filename = null;\n\n/**\n * Variable: lineFeed\n *\n * Character to be used for encoding linefeeds in <save>. Default is '&#xa;'.\n */\nmxEditor.prototype.linefeed = '&#xa;';\n\n/**\n * Variable: postParameterName\n *\n * Specifies if the name of the post parameter that contains the diagram\n * data in a post request to the server. Default is 'xml'.\n */\nmxEditor.prototype.postParameterName = 'xml';\n\n/**\n * Variable: escapePostData\n *\n * Specifies if the data in the post request for saving a diagram\n * should be converted using encodeURIComponent. Default is true.\n */\nmxEditor.prototype.escapePostData = true;\n\n/**\n * Variable: urlPost\n *\n * Specifies the URL to be used for posting the diagram\n * to a backend in <save>.\n */\nmxEditor.prototype.urlPost = null;\n\n/**\n * Variable: urlImage\n *\n * Specifies the URL to be used for creating a bitmap of\n * the graph in the image action.\n */\nmxEditor.prototype.urlImage = null;\n\n/**\n * Group: Autolayout\n */\n\n/**\n * Variable: horizontalFlow\n *\n * Specifies the direction of the flow\n * in the diagram. This is used in the\n * layout algorithms. Default is false,\n * ie. vertical flow.\n */\nmxEditor.prototype.horizontalFlow = false;\n\n/**\n * Variable: layoutDiagram\n *\n * Specifies if the top-level elements in the\n * diagram should be layed out using a vertical\n * or horizontal stack depending on the setting\n * of <horizontalFlow>. The spacing between the\n * swimlanes is specified by <swimlaneSpacing>.\n * Default is false.\n * \n * If the top-level elements are swimlanes, then\n * the intra-swimlane layout is activated by\n * the <layoutSwimlanes> switch.\n */\nmxEditor.prototype.layoutDiagram = false;\n\n/**\n * Variable: swimlaneSpacing\n *\n * Specifies the spacing between swimlanes if\n * automatic layout is turned on in\n * <layoutDiagram>. Default is 0.\n */\nmxEditor.prototype.swimlaneSpacing = 0;\n\n/**\n * Variable: maintainSwimlanes\n * \n * Specifies if the swimlanes should be kept at the same\n * width or height depending on the setting of\n * <horizontalFlow>.  Default is false.\n * \n * For horizontal flows, all swimlanes\n * have the same height and for vertical flows, all swimlanes\n * have the same width. Furthermore, the swimlanes are\n * automatically \"stacked\" if <layoutDiagram> is true.\n */\nmxEditor.prototype.maintainSwimlanes = false;\n\n/**\n * Variable: layoutSwimlanes\n *\n * Specifies if the children of swimlanes should\n * be layed out, either vertically or horizontally\n * depending on <horizontalFlow>.\n * Default is false.\n */\nmxEditor.prototype.layoutSwimlanes = false;\n\n/**\n * Group: Attribute Cycling\n */\n \n/**\n * Variable: cycleAttributeValues\n * \n * Specifies the attribute values to be cycled when\n * inserting new swimlanes. Default is an empty\n * array.\n */\nmxEditor.prototype.cycleAttributeValues = null;\n\n/**\n * Variable: cycleAttributeIndex\n * \n * Index of the last consumed attribute index. If a new\n * swimlane is inserted, then the <cycleAttributeValues>\n * at this index will be used as the value for\n * <cycleAttributeName>. Default is 0.\n */\nmxEditor.prototype.cycleAttributeIndex = 0;\n\n/**\n * Variable: cycleAttributeName\n * \n * Name of the attribute to be assigned a <cycleAttributeValues>\n * when inserting new swimlanes. Default is 'fillColor'.\n */\nmxEditor.prototype.cycleAttributeName = 'fillColor';\n\n/**\n * Group: Windows\n */\n\n/**\n * Variable: tasks\n * \n * Holds the <mxWindow> created in <showTasks>.\n */\nmxEditor.prototype.tasks = null;\n\n/**\n * Variable: tasksWindowImage\n *\n * Icon for the tasks window.\n */\nmxEditor.prototype.tasksWindowImage = null;\n\n/**\n * Variable: tasksTop\n * \n * Specifies the top coordinate of the tasks window in pixels.\n * Default is 20.\n */\nmxEditor.prototype.tasksTop = 20;\n\n/**\n * Variable: help\n * \n * Holds the <mxWindow> created in <showHelp>.\n */\nmxEditor.prototype.help = null;\n\n/**\n * Variable: helpWindowImage\n *\n * Icon for the help window.\n */\nmxEditor.prototype.helpWindowImage = null;\n\n/**\n * Variable: urlHelp\n *\n * Specifies the URL to be used for the contents of the\n * Online Help window. This is usually specified in the\n * resources file under urlHelp for language-specific\n * online help support.\n */\nmxEditor.prototype.urlHelp = null;\n\n/**\n * Variable: helpWidth\n * \n * Specifies the width of the help window in pixels.\n * Default is 300.\n */\nmxEditor.prototype.helpWidth = 300;\n\t\n/**\n * Variable: helpHeight\n * \n * Specifies the height of the help window in pixels.\n * Default is 260.\n */\nmxEditor.prototype.helpHeight = 260;\n\n/**\n * Variable: propertiesWidth\n * \n * Specifies the width of the properties window in pixels.\n * Default is 240.\n */\nmxEditor.prototype.propertiesWidth = 240;\n\t\t\n/**\n * Variable: propertiesHeight\n * \n * Specifies the height of the properties window in pixels.\n * If no height is specified then the window will be automatically\n * sized to fit its contents. Default is null.\n */\nmxEditor.prototype.propertiesHeight = null;\n\t\t\n/**\n * Variable: movePropertiesDialog\n *\n * Specifies if the properties dialog should be automatically\n * moved near the cell it is displayed for, otherwise the\n * dialog is not moved. This value is only taken into \n * account if the dialog is already visible. Default is false.\n */\nmxEditor.prototype.movePropertiesDialog = false;\n\n/**\n * Variable: validating\n *\n * Specifies if <mxGraph.validateGraph> should automatically be invoked after\n * each change. Default is false.\n */\nmxEditor.prototype.validating = false;\n\n/**\n * Variable: modified\n *\n * True if the graph has been modified since it was last saved.\n */\nmxEditor.prototype.modified = false;\n\n/**\n * Function: isModified\n * \n * Returns <modified>.\n */\nmxEditor.prototype.isModified = function ()\n{\n\treturn this.modified;\n};\n\n/**\n * Function: setModified\n * \n * Sets <modified> to the specified boolean value.\n */\nmxEditor.prototype.setModified = function (value)\n{\n\tthis.modified = value;\n};\n\n/**\n * Function: addActions\n *\n * Adds the built-in actions to the editor instance.\n *\n * save - Saves the graph using <urlPost>.\n * print - Shows the graph in a new print preview window.\n * show - Shows the graph in a new window.\n * exportImage - Shows the graph as a bitmap image using <getUrlImage>.\n * refresh - Refreshes the graph's display.\n * cut - Copies the current selection into the clipboard\n * and removes it from the graph.\n * copy - Copies the current selection into the clipboard.\n * paste - Pastes the clipboard into the graph.\n * delete - Removes the current selection from the graph.\n * group - Puts the current selection into a new group.\n * ungroup - Removes the selected groups and selects the children.\n * undo - Undoes the last change on the graph model.\n * redo - Redoes the last change on the graph model.\n * zoom - Sets the zoom via a dialog.\n * zoomIn - Zooms into the graph.\n * zoomOut - Zooms out of the graph\n * actualSize - Resets the scale and translation on the graph.\n * fit - Changes the scale so that the graph fits into the window.\n * showProperties - Shows the properties dialog.\n * selectAll - Selects all cells.\n * selectNone - Clears the selection.\n * selectVertices - Selects all vertices.\n * selectEdges = Selects all edges.\n * edit - Starts editing the current selection cell.\n * enterGroup - Drills down into the current selection cell.\n * exitGroup - Moves up in the drilling hierachy\n * home - Moves to the topmost parent in the drilling hierarchy\n * selectPrevious - Selects the previous cell.\n * selectNext - Selects the next cell.\n * selectParent - Selects the parent of the selection cell.\n * selectChild - Selects the first child of the selection cell.\n * collapse - Collapses the currently selected cells.\n * expand - Expands the currently selected cells.\n * bold - Toggle bold text style.\n * italic - Toggle italic text style.\n * underline - Toggle underline text style.\n * alignCellsLeft - Aligns the selection cells at the left.\n * alignCellsCenter - Aligns the selection cells in the center.\n * alignCellsRight - Aligns the selection cells at the right.\n * alignCellsTop - Aligns the selection cells at the top.\n * alignCellsMiddle - Aligns the selection cells in the middle.\n * alignCellsBottom - Aligns the selection cells at the bottom.\n * alignFontLeft - Sets the horizontal text alignment to left.\n * alignFontCenter - Sets the horizontal text alignment to center.\n * alignFontRight - Sets the horizontal text alignment to right.\n * alignFontTop - Sets the vertical text alignment to top.\n * alignFontMiddle - Sets the vertical text alignment to middle.\n * alignFontBottom - Sets the vertical text alignment to bottom.\n * toggleTasks - Shows or hides the tasks window.\n * toggleHelp - Shows or hides the help window.\n * toggleOutline - Shows or hides the outline window.\n * toggleConsole - Shows or hides the console window.\n */\nmxEditor.prototype.addActions = function ()\n{\n\tthis.addAction('save', function(editor)\n\t{\n\t\teditor.save();\n\t});\n\t\n\tthis.addAction('print', function(editor)\n\t{\n\t\tvar preview = new mxPrintPreview(editor.graph, 1);\n\t\tpreview.open();\n\t});\n\t\n\tthis.addAction('show', function(editor)\n\t{\n\t\tmxUtils.show(editor.graph, null, 10, 10);\n\t});\n\n\tthis.addAction('exportImage', function(editor)\n\t{\n\t\tvar url = editor.getUrlImage();\n\t\t\n\t\tif (url == null || mxClient.IS_LOCAL)\n\t\t{\n\t\t\teditor.execute('show');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar node = mxUtils.getViewXml(editor.graph, 1);\n\t\t\tvar xml = mxUtils.getXml(node, '\\n');\n\n\t\t\tmxUtils.submit(url, editor.postParameterName + '=' +\n\t\t\t\tencodeURIComponent(xml), document, '_blank');\n\t\t}\n\t});\n\t\n\tthis.addAction('refresh', function(editor)\n\t{\n\t\teditor.graph.refresh();\n\t});\n\t\n\tthis.addAction('cut', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.cut(editor.graph);\n\t\t}\n\t});\n\t\n\tthis.addAction('copy', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.copy(editor.graph);\n\t\t}\n\t});\n\t\n\tthis.addAction('paste', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.paste(editor.graph);\n\t\t}\n\t});\n\t\n\tthis.addAction('delete', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.removeCells();\n\t\t}\n\t});\n\t\n\tthis.addAction('group', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setSelectionCell(editor.groupCells());\n\t\t}\n\t});\n\t\n\tthis.addAction('ungroup', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setSelectionCells(editor.graph.ungroupCells());\n\t\t}\n\t});\n\t\n\tthis.addAction('removeFromParent', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.removeCellsFromParent();\n\t\t}\n\t});\n\t\n\tthis.addAction('undo', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.undo();\n\t\t}\n\t});\n\t\n\tthis.addAction('redo', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.redo();\n\t\t}\n\t});\n\t\n\tthis.addAction('zoomIn', function(editor)\n\t{\n\t\teditor.graph.zoomIn();\n\t});\n\t\n\tthis.addAction('zoomOut', function(editor)\n\t{\n\t\teditor.graph.zoomOut();\n\t});\n\t\n\tthis.addAction('actualSize', function(editor)\n\t{\n\t\teditor.graph.zoomActual();\n\t});\n\t\n\tthis.addAction('fit', function(editor)\n\t{\n\t\teditor.graph.fit();\n\t});\n\t\n\tthis.addAction('showProperties', function(editor, cell)\n\t{\n\t\teditor.showProperties(cell);\n\t});\n\t\n\tthis.addAction('selectAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectAll();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectNone', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.clearSelection();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectVertices', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectVertices();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectEdges', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectEdges();\n\t\t}\n\t});\n\t\n\tthis.addAction('edit', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled() &&\n\t\t\teditor.graph.isCellEditable(cell))\n\t\t{\n\t\t\teditor.graph.startEditingAtCell(cell);\n\t\t}\n\t});\n\t\n\tthis.addAction('toBack', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.orderCells(true);\n\t\t}\n\t});\n\t\n\tthis.addAction('toFront', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.orderCells(false);\n\t\t}\n\t});\n\t\n\tthis.addAction('enterGroup', function(editor, cell)\n\t{\n\t\teditor.graph.enterGroup(cell);\n\t});\n\t\n\tthis.addAction('exitGroup', function(editor)\n\t{\n\t\teditor.graph.exitGroup();\n\t});\n\t\n\tthis.addAction('home', function(editor)\n\t{\n\t\teditor.graph.home();\n\t});\n\t\n\tthis.addAction('selectPrevious', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectPreviousCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectNext', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectNextCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectParent', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectParentCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectChild', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectChildCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('collapse', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.foldCells(true);\n\t\t}\n\t});\n\t\n\tthis.addAction('collapseAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tvar cells = editor.graph.getChildVertices();\n\t\t\teditor.graph.foldCells(true, false, cells);\n\t\t}\n\t});\n\t\n\tthis.addAction('expand', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.foldCells(false);\n\t\t}\n\t});\n\t\n\tthis.addAction('expandAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tvar cells = editor.graph.getChildVertices();\n\t\t\teditor.graph.foldCells(false, false, cells);\n\t\t}\n\t});\n\t\n\tthis.addAction('bold', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_BOLD);\n\t\t}\n\t});\n\t\n\tthis.addAction('italic', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_ITALIC);\n\t\t}\n\t});\n\t\n\tthis.addAction('underline', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_UNDERLINE);\n\t\t}\n\t});\n\n\tthis.addAction('alignCellsLeft', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_LEFT);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsCenter', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_CENTER);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsRight', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_RIGHT);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsTop', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_TOP);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsMiddle', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_MIDDLE);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsBottom', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_BOTTOM);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontLeft', function(editor)\n\t{\n\t\t\n\t\teditor.graph.setCellStyles(\n\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\tmxConstants.ALIGN_LEFT);\n\t});\n\t\n\tthis.addAction('alignFontCenter', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\t\tmxConstants.ALIGN_CENTER);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontRight', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\t\tmxConstants.ALIGN_RIGHT);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontTop', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_TOP);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontMiddle', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_MIDDLE);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontBottom', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_BOTTOM);\n\t\t}\n\t});\n\t\n\tthis.addAction('zoom', function(editor)\n\t{\n\t\tvar current = editor.graph.getView().scale*100;\n\t\tvar scale = parseFloat(mxUtils.prompt(\n\t\t\tmxResources.get(editor.askZoomResource) ||\n\t\t\teditor.askZoomResource,\n\t\t\tcurrent))/100;\n\n\t\tif (!isNaN(scale))\n\t\t{\n\t\t\teditor.graph.getView().setScale(scale);\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleTasks', function(editor)\n\t{\n\t\tif (editor.tasks != null)\n\t\t{\n\t\t\teditor.tasks.setVisible(!editor.tasks.isVisible());\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.showTasks();\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleHelp', function(editor)\n\t{\n\t\tif (editor.help != null)\n\t\t{\n\t\t\teditor.help.setVisible(!editor.help.isVisible());\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.showHelp();\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleOutline', function(editor)\n\t{\n\t\tif (editor.outline == null)\n\t\t{\n\t\t\teditor.showOutline();\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.outline.setVisible(!editor.outline.isVisible());\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleConsole', function(editor)\n\t{\n\t\tmxLog.setVisible(!mxLog.isVisible());\n\t});\n};\n\n/**\n * Function: configure\n *\n * Configures the editor using the specified node. To load the\n * configuration from a given URL the following code can be used to obtain\n * the XML node.\n * \n * (code)\n * var node = mxUtils.load(url).getDocumentElement();\n * (end)\n * \n * Parameters:\n * \n * node - XML node that contains the configuration.\n */\nmxEditor.prototype.configure = function (node)\n{\n\tif (node != null)\n\t{\n\t\t// Creates a decoder for the XML data\n\t\t// and uses it to configure the editor\n\t\tvar dec = new mxCodec(node.ownerDocument);\n\t\tdec.decode(node, this);\n\t\t\n\t\t// Resets the counters, modified state and\n\t\t// command history\n\t\tthis.resetHistory();\n\t}\n};\n\n/**\n * Function: resetFirstTime\n * \n * Resets the cookie that is used to remember if the editor has already\n * been used.\n */\nmxEditor.prototype.resetFirstTime = function ()\n{\n\tdocument.cookie =\n\t\t'mxgraph=seen; expires=Fri, 27 Jul 2001 02:47:11 UTC; path=/';\n};\n\n/**\n * Function: resetHistory\n * \n * Resets the command history, modified state and counters.\n */\nmxEditor.prototype.resetHistory = function ()\n{\n\tthis.lastSnapshot = new Date().getTime();\n\tthis.undoManager.clear();\n\tthis.ignoredChanges = 0;\n\tthis.setModified(false);\n};\n\n/**\n * Function: addAction\n * \n * Binds the specified actionname to the specified function.\n * \n * Parameters:\n * \n * actionname - String that specifies the name of the action\n * to be added.\n * funct - Function that implements the new action. The first\n * argument of the function is the editor it is used\n * with, the second argument is the cell it operates\n * upon.\n * \n * Example:\n * (code)\n * editor.addAction('test', function(editor, cell)\n * {\n * \t\tmxUtils.alert(\"test \"+cell);\n * });\n * (end)\n */\nmxEditor.prototype.addAction = function (actionname, funct)\n{\n\tthis.actions[actionname] = funct;\n};\n\n/**\n * Function: execute\n * \n * Executes the function with the given name in <actions> passing the\n * editor instance and given cell as the first and second argument. All\n * additional arguments are passed to the action as well. This method\n * contains a try-catch block and displays an error message if an action\n * causes an exception. The exception is re-thrown after the error\n * message was displayed.\n * \n * Example:\n * \n * (code)\n * editor.execute(\"showProperties\", cell);\n * (end)\n */\nmxEditor.prototype.execute = function (actionname, cell, evt)\n{\n\tvar action = this.actions[actionname];\n\t\n\tif (action != null)\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Creates the array of arguments by replacing the actionname\n\t\t\t// with the editor instance in the args of this function\n\t\t\tvar args = arguments;\n\t\t\targs[0] = this;\n\t\t\t\n\t\t\t// Invokes the function on the editor using the args\n\t\t\taction.apply(this, args);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxUtils.error('Cannot execute ' + actionname +\n\t\t\t\t': ' + e.message, 280, true);\n\t\t\t\n\t\t\tthrow e;\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxUtils.error('Cannot find action '+actionname, 280, true);\n\t}\n};\n\n/**\n * Function: addTemplate\n * \n * Adds the specified template under the given name in <templates>.\n */\nmxEditor.prototype.addTemplate = function (name, template)\n{\n\tthis.templates[name] = template;\n};\n\n/**\n * Function: getTemplate\n * \n * Returns the template for the given name.\n */\nmxEditor.prototype.getTemplate = function (name)\n{\n\treturn this.templates[name];\n};\n\n/**\n * Function: createGraph\n * \n * Creates the <graph> for the editor. The graph is created with no\n * container and is initialized from <setGraphContainer>.\n */\nmxEditor.prototype.createGraph = function ()\n{\n\tvar graph = new mxGraph(null, null, this.graphRenderHint);\n\t\n\t// Enables rubberband, tooltips, panning\n\tgraph.setTooltips(true);\n\tgraph.setPanning(true);\n\n\t// Overrides the dblclick method on the graph to\n\t// invoke the dblClickAction for a cell and reset\n\t// the selection tool in the toolbar\n\tthis.installDblClickHandler(graph);\n\t\n\t// Installs the command history\n\tthis.installUndoHandler(graph);\n\n\t// Installs the handlers for the root event\n\tthis.installDrillHandler(graph);\n\t\n\t// Installs the handler for validation\n\tthis.installChangeHandler(graph);\n\n\t// Installs the handler for calling the\n\t// insert function and consume the\n\t// event if an insert function is defined\n\tthis.installInsertHandler(graph);\n\n\t// Redirects the function for creating the\n\t// popupmenu items\n\tgraph.popupMenuHandler.factoryMethod =\n\t\tmxUtils.bind(this, function(menu, cell, evt)\n\t\t{\n\t\t\treturn this.createPopupMenu(menu, cell, evt);\n\t\t});\n\n\t// Redirects the function for creating\n\t// new connections in the diagram\n\tgraph.connectionHandler.factoryMethod =\n\t\tmxUtils.bind(this, function(source, target)\n\t\t{\n\t\t\treturn this.createEdge(source, target);\n\t\t});\n\t\n\t// Maintains swimlanes and installs autolayout\n\tthis.createSwimlaneManager(graph);\n\tthis.createLayoutManager(graph);\n\t\n\treturn graph;\n};\n\n/**\n * Function: createSwimlaneManager\n * \n * Sets the graph's container using <mxGraph.init>.\n */\nmxEditor.prototype.createSwimlaneManager = function (graph)\n{\n\tvar swimlaneMgr = new mxSwimlaneManager(graph, false);\n\n\tswimlaneMgr.isHorizontal = mxUtils.bind(this, function()\n\t{\n\t\treturn this.horizontalFlow;\n\t});\n\t\n\tswimlaneMgr.isEnabled = mxUtils.bind(this, function()\n\t{\n\t\treturn this.maintainSwimlanes;\n\t});\n\t\n\treturn swimlaneMgr;\n};\n\n/**\n * Function: createLayoutManager\n * \n * Creates a layout manager for the swimlane and diagram layouts, that\n * is, the locally defined inter- and intraswimlane layouts.\n */\nmxEditor.prototype.createLayoutManager = function (graph)\n{\n\tvar layoutMgr = new mxLayoutManager(graph);\n\t\n\tvar self = this; // closure\n\tlayoutMgr.getLayout = function(cell)\n\t{\n\t\tvar layout = null;\n\t\tvar model = self.graph.getModel();\n\t\t\n\t\tif (model.getParent(cell) != null)\n\t\t{\n\t\t\t// Executes the swimlane layout if a child of\n\t\t\t// a swimlane has been changed. The layout is\n\t\t\t// lazy created in createSwimlaneLayout.\n\t\t\tif (self.layoutSwimlanes &&\n\t\t\t\tgraph.isSwimlane(cell))\n\t\t\t{\n\t\t\t\tif (self.swimlaneLayout == null)\n\t\t\t\t{\n\t\t\t\t\tself.swimlaneLayout = self.createSwimlaneLayout();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlayout = self.swimlaneLayout;\n\t\t\t}\n\t\t\t\n\t\t\t// Executes the diagram layout if the modified\n\t\t\t// cell is a top-level cell. The layout is\n\t\t\t// lazy created in createDiagramLayout.\n\t\t\telse if (self.layoutDiagram &&\n\t\t\t\t(graph.isValidRoot(cell) ||\n\t\t\t\tmodel.getParent(model.getParent(cell)) == null))\n\t\t\t{\n\t\t\t\tif (self.diagramLayout == null)\n\t\t\t\t{\n\t\t\t\t\tself.diagramLayout = self.createDiagramLayout();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlayout = self.diagramLayout;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn layout;\n\t};\n\t\n\treturn layoutMgr;\n};\n\n/**\n * Function: setGraphContainer\n * \n * Sets the graph's container using <mxGraph.init>.\n */\nmxEditor.prototype.setGraphContainer = function (container)\n{\n\tif (this.graph.container == null)\n\t{\n\t\t// Creates the graph instance inside the given container and render hint\n\t\t//this.graph = new mxGraph(container, null, this.graphRenderHint);\n\t\tthis.graph.init(container);\n\n\t\t// Install rubberband selection as the last\n\t\t// action handler in the chain\n\t\tthis.rubberband = new mxRubberband(this.graph);\n\n\t\t// Disables the context menu\n\t\tif (this.disableContextMenu)\n\t\t{\n\t\t\tmxEvent.disableContextMenu(container);\n\t\t}\n\n\t\t// Workaround for stylesheet directives in IE\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tnew mxDivResizer(container);\n\t\t}\n\t}\n};\n\n/**\n * Function: installDblClickHandler\n * \n * Overrides <mxGraph.dblClick> to invoke <dblClickAction>\n * on a cell and reset the selection tool in the toolbar.\n */\nmxEditor.prototype.installDblClickHandler = function (graph)\n{\n\t// Installs a listener for double click events\n\tgraph.addListener(mxEvent.DOUBLE_CLICK,\n\t\tmxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar cell = evt.getProperty('cell');\n\t\t\t\n\t\t\tif (cell != null &&\n\t\t\t\tgraph.isEnabled() &&\n\t\t\t\tthis.dblClickAction != null)\n\t\t\t{\n\t\t\t\tthis.execute(this.dblClickAction, cell);\n\t\t\t\tevt.consume();\n\t\t\t}\n\t\t})\n\t);\n};\n\t\t\n/**\n * Function: installUndoHandler\n * \n * Adds the <undoManager> to the graph model and the view.\n */\nmxEditor.prototype.installUndoHandler = function (graph)\n{\t\t\t\t\n\tvar listener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tvar edit = evt.getProperty('edit');\n\t\tthis.undoManager.undoableEditHappened(edit);\n\t});\n\t\n\tgraph.getModel().addListener(mxEvent.UNDO, listener);\n\tgraph.getView().addListener(mxEvent.UNDO, listener);\n\n\t// Keeps the selection state in sync\n\tvar undoHandler = function(sender, evt)\n\t{\n\t\tvar changes = evt.getProperty('edit').changes;\n\t\tgraph.setSelectionCells(graph.getSelectionCellsForChanges(changes));\n\t};\n\t\n\tthis.undoManager.addListener(mxEvent.UNDO, undoHandler);\n\tthis.undoManager.addListener(mxEvent.REDO, undoHandler);\n};\n\t\t\n/**\n * Function: installDrillHandler\n * \n * Installs listeners for dispatching the <root> event.\n */\nmxEditor.prototype.installDrillHandler = function (graph)\n{\t\t\t\t\n\tvar listener = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t});\n\t\n\tgraph.getView().addListener(mxEvent.DOWN, listener);\n\tgraph.getView().addListener(mxEvent.UP, listener);\n};\n\n/**\n * Function: installChangeHandler\n * \n * Installs the listeners required to automatically validate\n * the graph. On each change of the root, this implementation\n * fires a <root> event.\n */\nmxEditor.prototype.installChangeHandler = function (graph)\n{\n\tvar listener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\t// Updates the modified state\n\t\tthis.setModified(true);\n\n\t\t// Automatically validates the graph\n\t\t// after each change\n\t\tif (this.validating == true)\n\t\t{\n\t\t\tgraph.validateGraph();\n\t\t}\n\n\t\t// Checks if the root has been changed\n\t\tvar changes = evt.getProperty('edit').changes;\n\t\t\n\t\tfor (var i = 0; i < changes.length; i++)\n\t\t{\n\t\t\tvar change = changes[i];\n\t\t\t\n\t\t\tif (change instanceof mxRootChange ||\n\t\t\t\t(change instanceof mxValueChange &&\n\t\t\t\tchange.cell == this.graph.model.root) ||\n\t\t\t\t(change instanceof mxCellAttributeChange &&\n\t\t\t\tchange.cell == this.graph.model.root))\n\t\t\t{\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\t\n\tgraph.getModel().addListener(mxEvent.CHANGE, listener);\n};\n\n/**\n * Function: installInsertHandler\n * \n * Installs the handler for invoking <insertFunction> if\n * one is defined.\n */\nmxEditor.prototype.installInsertHandler = function (graph)\n{\n\tvar self = this; // closure\n\tvar insertHandler =\n\t{\n\t\tmouseDown: function(sender, me)\n\t\t{\n\t\t\tif (self.insertFunction != null &&\n\t\t\t\t!me.isPopupTrigger() &&\n\t\t\t\t(self.forcedInserting ||\n\t\t\t\tme.getState() == null))\n\t\t\t{\n\t\t\t\tself.graph.clearSelection();\n\t\t\t\tself.insertFunction(me.getEvent(), me.getCell());\n\n\t\t\t\t// Consumes the rest of the events\n\t\t\t\t// for this gesture (down, move, up)\n\t\t\t\tthis.isActive = true;\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t},\n\t\t\n\t\tmouseMove: function(sender, me)\n\t\t{\n\t\t\tif (this.isActive)\n\t\t\t{\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t},\n\t\t\n\t\tmouseUp: function(sender, me)\n\t\t{\n\t\t\tif (this.isActive)\n\t\t\t{\n\t\t\t\tthis.isActive = false;\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t}\n\t};\n\t\n\tgraph.addMouseListener(insertHandler);\n};\n\n/**\n * Function: createDiagramLayout\n * \n * Creates the layout instance used to layout the\n * swimlanes in the diagram.\n */\nmxEditor.prototype.createDiagramLayout = function ()\n{\n\tvar gs = this.graph.gridSize;\n\tvar layout = new mxStackLayout(this.graph, !this.horizontalFlow,\n\t\t this.swimlaneSpacing, 2*gs, 2*gs);\n\t\n\t// Overrides isIgnored to only take into account swimlanes\n\tlayout.isVertexIgnored = function(cell)\n\t{\n\t\treturn !layout.graph.isSwimlane(cell);\n\t};\n\t\n\treturn layout;\n};\n\n/**\n * Function: createSwimlaneLayout\n * \n * Creates the layout instance used to layout the\n * children of each swimlane.\n */\nmxEditor.prototype.createSwimlaneLayout = function ()\n{\n\treturn new mxCompactTreeLayout(this.graph, this.horizontalFlow);\n};\n\n/**\n * Function: createToolbar\n * \n * Creates the <toolbar> with no container.\n */\nmxEditor.prototype.createToolbar = function ()\n{\n\treturn new mxDefaultToolbar(null, this);\n};\n\n/**\n * Function: setToolbarContainer\n * \n * Initializes the toolbar for the given container.\n */\nmxEditor.prototype.setToolbarContainer = function (container)\n{\n\tthis.toolbar.init(container);\n\t\n\t// Workaround for stylesheet directives in IE\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tnew mxDivResizer(container);\n\t}\n};\n\n/**\n * Function: setStatusContainer\n * \n * Creates the <status> using the specified container.\n * \n * This implementation adds listeners in the editor to \n * display the last saved time and the current filename \n * in the status bar.\n * \n * Parameters:\n * \n * container - DOM node that will contain the statusbar.\n */\nmxEditor.prototype.setStatusContainer = function (container)\n{\n\tif (this.status == null)\n\t{\n\t\tthis.status = container;\n\t\t\n\t\t// Prints the last saved time in the status bar\n\t\t// when files are saved\n\t\tthis.addListener(mxEvent.SAVE, mxUtils.bind(this, function()\n\t\t{\n\t\t\tvar tstamp = new Date().toLocaleString();\n\t\t\tthis.setStatus((mxResources.get(this.lastSavedResource) ||\n\t\t\t\tthis.lastSavedResource)+': '+tstamp);\n\t\t}));\n\t\t\n\t\t// Updates the statusbar to display the filename\n\t\t// when new files are opened\n\t\tthis.addListener(mxEvent.OPEN, mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.setStatus((mxResources.get(this.currentFileResource) ||\n\t\t\t\tthis.currentFileResource)+': '+this.filename);\n\t\t}));\n\t\t\n\t\t// Workaround for stylesheet directives in IE\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tnew mxDivResizer(container);\n\t\t}\n\t}\n};\n\n/**\n * Function: setStatus\n * \n * Display the specified message in the status bar.\n * \n * Parameters:\n * \n * message - String the specified the message to\n * be displayed.\n */\nmxEditor.prototype.setStatus = function (message)\n{\n\tif (this.status != null && message != null)\n\t{\n\t\tthis.status.innerHTML = message;\n\t}\n};\n\n/**\n * Function: setTitleContainer\n * \n * Creates a listener to update the inner HTML of the\n * specified DOM node with the value of <getTitle>.\n * \n * Parameters:\n * \n * container - DOM node that will contain the title.\n */\nmxEditor.prototype.setTitleContainer = function (container)\n{\n\tthis.addListener(mxEvent.ROOT, mxUtils.bind(this, function(sender)\n\t{\n\t\tcontainer.innerHTML = this.getTitle();\n\t}));\n\n\t// Workaround for stylesheet directives in IE\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tnew mxDivResizer(container);\n\t}\n};\n\n/**\n * Function: treeLayout\n * \n * Executes a vertical or horizontal compact tree layout\n * using the specified cell as an argument. The cell may\n * either be a group or the root of a tree.\n * \n * Parameters:\n * \n * cell - <mxCell> to use in the compact tree layout.\n * horizontal - Optional boolean to specify the tree's\n * orientation. Default is true.\n */\nmxEditor.prototype.treeLayout = function (cell, horizontal)\n{\n\tif (cell != null)\n\t{\n\t\tvar layout = new mxCompactTreeLayout(this.graph, horizontal);\n\t\tlayout.execute(cell);\n\t}\n};\n\n/**\n * Function: getTitle\n * \n * Returns the string value for the current root of the\n * diagram.\n */\nmxEditor.prototype.getTitle = function ()\n{\n\tvar title = '';\n\tvar graph = this.graph;\n\tvar cell = graph.getCurrentRoot();\n\t\n\twhile (cell != null &&\n\t\t   graph.getModel().getParent(\n\t\t\t\tgraph.getModel().getParent(cell)) != null)\n\t{\n\t\t// Append each label of a valid root\n\t\tif (graph.isValidRoot(cell))\n\t\t{\n\t\t\ttitle = ' > ' +\n\t\t\tgraph.convertValueToString(cell) + title;\n\t\t}\n\t\t\n\t\tcell = graph.getModel().getParent(cell);\n\t}\n\t\n\tvar prefix = this.getRootTitle();\n\t\n\treturn prefix + title;\n};\n\n/**\n * Function: getRootTitle\n * \n * Returns the string value of the root cell in\n * <mxGraph.model>.\n */\nmxEditor.prototype.getRootTitle = function ()\n{\n\tvar root = this.graph.getModel().getRoot();\n\treturn this.graph.convertValueToString(root);\n};\n\n/**\n * Function: undo\n * \n * Undo the last change in <graph>.\n */\nmxEditor.prototype.undo = function ()\n{\n\tthis.undoManager.undo();\n};\n\n/**\n * Function: redo\n * \n * Redo the last change in <graph>.\n */\nmxEditor.prototype.redo = function ()\n{\n\tthis.undoManager.redo();\n};\n\n/**\n * Function: groupCells\n * \n * Invokes <createGroup> to create a new group cell and the invokes\n * <mxGraph.groupCells>, using the grid size of the graph as the spacing\n * in the group's content area.\n */\nmxEditor.prototype.groupCells = function ()\n{\n\tvar border = (this.groupBorderSize != null) ?\n\t\tthis.groupBorderSize :\n\t\tthis.graph.gridSize;\n\treturn this.graph.groupCells(this.createGroup(), border);\n};\n\n/**\n * Function: createGroup\n * \n * Creates and returns a clone of <defaultGroup> to be used\n * as a new group cell in <group>.\n */\nmxEditor.prototype.createGroup = function ()\n{\n\tvar model = this.graph.getModel();\n\t\n\treturn model.cloneCell(this.defaultGroup);\n};\n\n/**\n * Function: open\n * \n * Opens the specified file synchronously and parses it using\n * <readGraphModel>. It updates <filename> and fires an <open>-event after\n * the file has been opened. Exceptions should be handled as follows:\n * \n * (code)\n * try\n * {\n *   editor.open(filename);\n * }\n * catch (e)\n * {\n *   mxUtils.error('Cannot open ' + filename +\n *     ': ' + e.message, 280, true);\n * }\n * (end)\n *\n * Parameters:\n * \n * filename - URL of the file to be opened.\n */\nmxEditor.prototype.open = function (filename)\n{\n\tif (filename != null)\n\t{\n\t\tvar xml = mxUtils.load(filename).getXml();\n\t\tthis.readGraphModel(xml.documentElement);\n\t\tthis.filename = filename;\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.OPEN, 'filename', filename));\n\t}\n};\n\n/**\n * Function: readGraphModel\n * \n * Reads the specified XML node into the existing graph model and resets\n * the command history and modified state.\n */\nmxEditor.prototype.readGraphModel = function (node)\n{\n\tvar dec = new mxCodec(node.ownerDocument);\n\tdec.decode(node, this.graph.getModel());\n\tthis.resetHistory();\n};\n\n/**\n * Function: save\n * \n * Posts the string returned by <writeGraphModel> to the given URL or the\n * URL returned by <getUrlPost>. The actual posting is carried out by\n * <postDiagram>. If the URL is null then the resulting XML will be\n * displayed using <mxUtils.popup>. Exceptions should be handled as\n * follows:\n * \n * (code)\n * try\n * {\n *   editor.save();\n * }\n * catch (e)\n * {\n *   mxUtils.error('Cannot save : ' + e.message, 280, true);\n * }\n * (end)\n */\nmxEditor.prototype.save = function (url, linefeed)\n{\n\t// Gets the URL to post the data to\n\turl = url || this.getUrlPost();\n\n\t// Posts the data if the URL is not empty\n\tif (url != null && url.length > 0)\n\t{\n\t\tvar data = this.writeGraphModel(linefeed);\n\t\tthis.postDiagram(url, data);\n\t\t\n\t\t// Resets the modified flag\n\t\tthis.setModified(false);\n\t}\n\t\n\t// Dispatches a save event\n\tthis.fireEvent(new mxEventObject(mxEvent.SAVE, 'url', url));\n};\n\n/**\n * Function: postDiagram\n * \n * Hook for subclassers to override the posting of a diagram\n * represented by the given node to the given URL. This fires\n * an asynchronous <post> event if the diagram has been posted.\n * \n * Example:\n * \n * To replace the diagram with the diagram in the response, use the\n * following code.\n * \n * (code)\n * editor.addListener(mxEvent.POST, function(sender, evt)\n * {\n *   // Process response (replace diagram)\n *   var req = evt.getProperty('request');\n *   var root = req.getDocumentElement();\n *   editor.graph.readGraphModel(root)\n * });\n * (end)\n */\nmxEditor.prototype.postDiagram = function (url, data)\n{\n\tif (this.escapePostData)\n\t{\n\t\tdata = encodeURIComponent(data);\n\t}\n\n\tmxUtils.post(url, this.postParameterName+'='+data,\n\t\tmxUtils.bind(this, function(req)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.POST,\n\t\t\t\t'request', req, 'url', url, 'data', data));\n\t\t})\n\t);\n};\n\n/**\n * Function: writeGraphModel\n * \n * Hook to create the string representation of the diagram. The default\n * implementation uses an <mxCodec> to encode the graph model as\n * follows:\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(this.graph.getModel());\n * return mxUtils.getXml(node, this.linefeed);\n * (end)\n * \n * Parameters:\n * \n * linefeed - Optional character to be used as the linefeed. Default is\n * <linefeed>.\n */\nmxEditor.prototype.writeGraphModel = function (linefeed)\n{\n\tlinefeed = (linefeed != null) ? linefeed : this.linefeed;\n\tvar enc = new mxCodec();\n\tvar node = enc.encode(this.graph.getModel());\n\n\treturn mxUtils.getXml(node, linefeed);\n};\n\n/**\n * Function: getUrlPost\n * \n * Returns the URL to post the diagram to. This is used\n * in <save>. The default implementation returns <urlPost>,\n * adding <code>?draft=true</code>.\n */\nmxEditor.prototype.getUrlPost = function ()\n{\n\treturn this.urlPost;\n};\n\n/**\n * Function: getUrlImage\n * \n * Returns the URL to create the image with. This is typically\n * the URL of a backend which accepts an XML representation\n * of a graph view to create an image. The function is used\n * in the image action to create an image. This implementation\n * returns <urlImage>.\n */\nmxEditor.prototype.getUrlImage = function ()\n{\n\treturn this.urlImage;\n};\n\n/**\n * Function: swapStyles\n * \n * Swaps the styles for the given names in the graph's\n * stylesheet and refreshes the graph.\n */\nmxEditor.prototype.swapStyles = function (first, second)\n{\n\tvar style = this.graph.getStylesheet().styles[second];\n\tthis.graph.getView().getStylesheet().putCellStyle(\n\t\tsecond, this.graph.getStylesheet().styles[first]);\n\tthis.graph.getStylesheet().putCellStyle(first, style);\n\tthis.graph.refresh();\n};\n\n/**\n * Function: showProperties\n * \n * Creates and shows the properties dialog for the given\n * cell. The content area of the dialog is created using\n * <createProperties>.\n */\nmxEditor.prototype.showProperties = function (cell)\n{\n\tcell = cell || this.graph.getSelectionCell();\n\t\n\t// Uses the root node for the properties dialog\n\t// if not cell was passed in and no cell is\n\t// selected\n\tif (cell == null)\n\t{\n\t\tcell = this.graph.getCurrentRoot();\n\t\t\n\t\tif (cell == null)\n\t\t{\n\t\t\tcell = this.graph.getModel().getRoot();\n\t\t}\n\t}\n\t\n\tif (cell != null)\n\t{\n\t\t// Makes sure there is no in-place editor in the\n\t\t// graph and computes the location of the dialog\n\t\tthis.graph.stopEditing(true);\n\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\tvar x = offset.x+10;\n\t\tvar y = offset.y;\n\t\t\n\t\t// Avoids moving the dialog if it is alredy open\n\t\tif (this.properties != null && !this.movePropertiesDialog)\n\t\t{\n\t\t\tx = this.properties.getX();\n\t\t\ty = this.properties.getY();\n\t\t}\n\t\t\n\t\t// Places the dialog near the cell for which it\n\t\t// displays the properties\n\t\telse\n\t\t{\n\t\t\tvar bounds = this.graph.getCellBounds(cell);\n\t\t\t\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tx += bounds.x+Math.min(200, bounds.width);\n\t\t\t\ty += bounds.y;\t\t\t\t\n\t\t\t}\t\t\t\n\t\t}\n\t\t\n\t\t// Hides the existing properties dialog and creates a new one with the\n\t\t// contents created in the hook method\n\t\tthis.hideProperties();\n\t\tvar node = this.createProperties(cell);\n\t\t\n\t\tif (node != null)\n\t\t{\n\t\t\t// Displays the contents in a window and stores a reference to the\n\t\t\t// window for later hiding of the window\n\t\t\tthis.properties = new mxWindow(mxResources.get(this.propertiesResource) ||\n\t\t\t\tthis.propertiesResource, node, x, y, this.propertiesWidth, this.propertiesHeight, false);\n\t\t\tthis.properties.setVisible(true);\n\t\t}\n\t}\n};\n\n/**\n * Function: isPropertiesVisible\n * \n * Returns true if the properties dialog is currently visible.\n */\nmxEditor.prototype.isPropertiesVisible = function ()\n{\n\treturn this.properties != null;\n};\n\n/**\n * Function: createProperties\n * \n * Creates and returns the DOM node that represents the contents\n * of the properties dialog for the given cell. This implementation\n * works for user objects that are XML nodes and display all the\n * node attributes in a form.\n */\nmxEditor.prototype.createProperties = function (cell)\n{\n\tvar model = this.graph.getModel();\n\tvar value = model.getValue(cell);\n\t\n\tif (mxUtils.isNode(value))\n\t{\n\t\t// Creates a form for the user object inside\n\t\t// the cell\n\t\tvar form = new mxForm('properties');\n\t\t\n\t\t// Adds a readonly field for the cell id\n\t\tvar id = form.addText('ID', cell.getId());\n\t\tid.setAttribute('readonly', 'true');\n\n\t\tvar geo = null;\n\t\tvar yField = null;\n\t\tvar xField = null;\n\t\tvar widthField = null;\n\t\tvar heightField = null;\n\n\t\t// Adds fields for the location and size\n\t\tif (model.isVertex(cell))\n\t\t{\n\t\t\tgeo = model.getGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tyField = form.addText('top', geo.y);\n\t\t\t\txField = form.addText('left', geo.x);\n\t\t\t\twidthField = form.addText('width', geo.width);\n\t\t\t\theightField = form.addText('height', geo.height);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Adds a field for the cell style\t\t\t\n\t\tvar tmp = model.getStyle(cell);\n\t\tvar style = form.addText('Style', tmp || '');\n\t\t\n\t\t// Creates textareas for each attribute of the\n\t\t// user object within the cell\n\t\tvar attrs = value.attributes;\n\t\tvar texts = [];\n\t\t\n\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t{\n\t\t\t// Creates a textarea with more lines for\n\t\t\t// the cell label\n\t\t\tvar val = attrs[i].value;\n\t\t\ttexts[i] = form.addTextarea(attrs[i].nodeName, val,\n\t\t\t\t(attrs[i].nodeName == 'label') ? 4 : 2);\n\t\t}\n\t\t\n\t\t// Adds an OK and Cancel button to the dialog\n\t\t// contents and implements the respective\n\t\t// actions below\n\t\t\n\t\t// Defines the function to be executed when the\n\t\t// OK button is pressed in the dialog\n\t\tvar okFunction = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Hides the dialog\n\t\t\tthis.hideProperties();\n\t\t\t\n\t\t\t// Supports undo for the changes on the underlying\n\t\t\t// XML structure / XML node attribute changes.\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\tgeo.x = parseFloat(xField.value);\n\t\t\t\t\tgeo.y = parseFloat(yField.value);\n\t\t\t\t\tgeo.width = parseFloat(widthField.value);\n\t\t\t\t\tgeo.height = parseFloat(heightField.value);\n\t\t\t\t\t\n\t\t\t\t\tmodel.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Applies the style\n\t\t\t\tif (style.value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tmodel.setStyle(cell, style.value);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmodel.setStyle(cell, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Creates an undoable change for each\n\t\t\t\t// attribute and executes it using the\n\t\t\t\t// model, which will also make the change\n\t\t\t\t// part of the current transaction\n\t\t\t\tfor (var i=0; i<attrs.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar edit = new mxCellAttributeChange(\n\t\t\t\t\t\tcell, attrs[i].nodeName,\n\t\t\t\t\t\ttexts[i].value);\n\t\t\t\t\tmodel.execute(edit);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Checks if the graph wants cells to \n\t\t\t\t// be automatically sized and updates\n\t\t\t\t// the size as an undoable step if\n\t\t\t\t// the feature is enabled\n\t\t\t\tif (this.graph.isAutoSizeCell(cell))\n\t\t\t\t{\n\t\t\t\t\tthis.graph.updateCellSize(cell);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Defines the function to be executed when the\n\t\t// Cancel button is pressed in the dialog\n\t\tvar cancelFunction = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Hides the dialog\n\t\t\tthis.hideProperties();\n\t\t});\n\t\t\n\t\tform.addButtons(okFunction, cancelFunction);\n\t\t\n\t\treturn form.table;\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: hideProperties\n * \n * Hides the properties dialog.\n */\nmxEditor.prototype.hideProperties = function ()\n{\n\tif (this.properties != null)\n\t{\n\t\tthis.properties.destroy();\n\t\tthis.properties = null;\n\t}\n};\n\n/**\n * Function: showTasks\n * \n * Shows the tasks window. The tasks window is created using <createTasks>. The\n * default width of the window is 200 pixels, the y-coordinate of the location\n * can be specifies in <tasksTop> and the x-coordinate is right aligned with a\n * 20 pixel offset from the right border. To change the location of the tasks\n * window, the following code can be used:\n * \n * (code)\n * var oldShowTasks = mxEditor.prototype.showTasks;\n * mxEditor.prototype.showTasks = function()\n * {\n *   oldShowTasks.apply(this, arguments); // \"supercall\"\n *   \n *   if (this.tasks != null)\n *   {\n *     this.tasks.setLocation(10, 10);\n *   }\n * };\n * (end)\n */\nmxEditor.prototype.showTasks = function ()\n{\n\tif (this.tasks == null)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.style.padding = '4px';\n\t\tdiv.style.paddingLeft = '20px';\n\t\tvar w = document.body.clientWidth;\n\t\tvar wnd = new mxWindow(\n\t\t\tmxResources.get(this.tasksResource) ||\n\t\t\tthis.tasksResource,\n\t\t\tdiv, w - 220, this.tasksTop, 200);\n\t\twnd.setClosable(true);\n\t\twnd.destroyOnClose = false;\n\t\t\n\t\t// Installs a function to update the contents\n\t\t// of the tasks window on every change of the\n\t\t// model, selection or root.\n\t\tvar funct = mxUtils.bind(this, function(sender)\n\t\t{\n\t\t\tmxEvent.release(div);\n\t\t\tdiv.innerHTML = '';\n\t\t\tthis.createTasks(div);\n\t\t});\n\t\t\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, funct);\n\t\tthis.graph.getSelectionModel().addListener(mxEvent.CHANGE, funct);\n\t\tthis.graph.addListener(mxEvent.ROOT, funct);\n\t\t\n\t\t// Assigns the icon to the tasks window\n\t\tif (this.tasksWindowImage != null)\n\t\t{\n\t\t\twnd.setImage(this.tasksWindowImage);\n\t\t}\n\t\t\n\t\tthis.tasks = wnd;\n\t\tthis.createTasks(div);\n\t}\n\t\n\tthis.tasks.setVisible(true);\n};\n\t\t\n/**\n * Function: refreshTasks\n * \n * Updates the contents of the tasks window using <createTasks>.\n */\nmxEditor.prototype.refreshTasks = function (div)\n{\n\tif (this.tasks != null)\n\t{\n\t\tvar div = this.tasks.content;\n\t\tmxEvent.release(div);\n\t\tdiv.innerHTML = '';\n\t\tthis.createTasks(div);\n\t}\n};\n\t\t\n/**\n * Function: createTasks\n * \n * Updates the contents of the given DOM node to\n * display the tasks associated with the current\n * editor state. This is invoked whenever there\n * is a possible change of state in the editor.\n * Default implementation is empty.\n */\nmxEditor.prototype.createTasks = function (div)\n{\n\t// override\n};\n\t\n/**\n * Function: showHelp\n * \n * Shows the help window. If the help window does not exist\n * then it is created using an iframe pointing to the resource\n * for the <code>urlHelp</code> key or <urlHelp> if the resource\n * is undefined.\n */\nmxEditor.prototype.showHelp = function (tasks)\n{\n\tif (this.help == null)\n\t{\n\t\tvar frame = document.createElement('iframe');\n\t\tframe.setAttribute('src', mxResources.get('urlHelp') || this.urlHelp);\n\t\tframe.setAttribute('height', '100%');\n\t\tframe.setAttribute('width', '100%');\n\t\tframe.setAttribute('frameBorder', '0');\n\t\tframe.style.backgroundColor = 'white';\n\t\n\t\tvar w = document.body.clientWidth;\n\t\tvar h = (document.body.clientHeight || document.documentElement.clientHeight);\n\t\t\n\t\tvar wnd = new mxWindow(mxResources.get(this.helpResource) || this.helpResource,\n\t\t\tframe, (w-this.helpWidth)/2, (h-this.helpHeight)/3, this.helpWidth, this.helpHeight);\n\t\twnd.setMaximizable(true);\n\t\twnd.setClosable(true);\n\t\twnd.destroyOnClose = false;\n\t\twnd.setResizable(true);\n\n\t\t// Assigns the icon to the help window\n\t\tif (this.helpWindowImage != null)\n\t\t{\n\t\t\twnd.setImage(this.helpWindowImage);\n\t\t}\n\t\t\n\t\t// Workaround for ignored iframe height 100% in FF\n\t\tif (mxClient.IS_NS)\n\t\t{\n\t\t\tvar handler = function(sender)\n\t\t\t{\n\t\t\t\tvar h = wnd.div.offsetHeight;\n\t\t\t\tframe.setAttribute('height', (h-26)+'px');\n\t\t\t};\n\t\t\t\n\t\t\twnd.addListener(mxEvent.RESIZE_END, handler);\n\t\t\twnd.addListener(mxEvent.MAXIMIZE, handler);\n\t\t\twnd.addListener(mxEvent.NORMALIZE, handler);\n\t\t\twnd.addListener(mxEvent.SHOW, handler);\n\t\t}\n\t\t\n\t\tthis.help = wnd;\n\t}\n\t\n\tthis.help.setVisible(true);\n};\n\n/**\n * Function: showOutline\n * \n * Shows the outline window. If the window does not exist, then it is\n * created using an <mxOutline>.\n */\nmxEditor.prototype.showOutline = function ()\n{\n\tvar create = this.outline == null;\n\t\n\tif (create)\n\t{\n\t\tvar div = document.createElement('div');\n\t\t\n\t\tdiv.style.overflow = 'hidden';\n\t\tdiv.style.position = 'relative';\n\t\tdiv.style.width = '100%';\n\t\tdiv.style.height = '100%';\n\t\tdiv.style.background = 'white';\n\t\tdiv.style.cursor = 'move';\n\t\t\n\t\tif (document.documentMode == 8)\n\t\t{\n\t\t\tdiv.style.filter = 'progid:DXImageTransform.Microsoft.alpha(opacity=100)';\n\t\t}\n\t\t\n\t\tvar wnd = new mxWindow(\n\t\t\tmxResources.get(this.outlineResource) ||\n\t\t\tthis.outlineResource,\n\t\t\tdiv, 600, 480, 200, 200, false);\n\t\t\t\t\n\t\t// Creates the outline in the specified div\n\t\t// and links it to the existing graph\n\t\tvar outline = new mxOutline(this.graph, div);\t\t\t\n\t\twnd.setClosable(true);\n\t\twnd.setResizable(true);\n\t\twnd.destroyOnClose = false;\n\t\t\n\t\twnd.addListener(mxEvent.RESIZE_END, function()\n\t\t{\n\t\t\toutline.update();\n\t\t});\n\t\t\n\t\tthis.outline = wnd;\n\t\tthis.outline.outline = outline;\n\t}\n\t\n\t// Finally shows the outline\n\tthis.outline.setVisible(true);\n\tthis.outline.outline.update(true);\n};\n\t\t\n/**\n * Function: setMode\n *\n * Puts the graph into the specified mode. The following modenames are\n * supported:\n * \n * select - Selects using the left mouse button, new connections\n * are disabled.\n * connect - Selects using the left mouse button or creates new\n * connections if mouse over cell hotspot. See <mxConnectionHandler>.\n * pan - Pans using the left mouse button, new connections are disabled.\n */\nmxEditor.prototype.setMode = function(modename)\n{\n\tif (modename == 'select')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = false;\n\t\tthis.graph.setConnectable(false);\n\t}\n\telse if (modename == 'connect')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = false;\n\t\tthis.graph.setConnectable(true);\n\t}\n\telse if (modename == 'pan')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = true;\n\t\tthis.graph.setConnectable(false);\n\t}\n};\n\n/**\n * Function: createPopupMenu\n * \n * Uses <popupHandler> to create the menu in the graph's\n * panning handler. The redirection is setup in\n * <setToolbarContainer>.\n */\nmxEditor.prototype.createPopupMenu = function (menu, cell, evt)\n{\n\tthis.popupHandler.createMenu(this, menu, cell, evt);\n};\n\n/**\n * Function: createEdge\n * \n * Uses <defaultEdge> as the prototype for creating new edges\n * in the connection handler of the graph. The style of the\n * edge will be overridden with the value returned by\n * <getEdgeStyle>.\n */\nmxEditor.prototype.createEdge = function (source, target)\n{\n\t// Clones the defaultedge prototype\n\tvar e = null;\n\t\n\tif (this.defaultEdge != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\te = model.cloneCell(this.defaultEdge);\n\t}\n\telse\n\t{\n\t\te = new mxCell('');\n\t\te.setEdge(true);\n\t\t\n\t\tvar geo = new mxGeometry();\n\t\tgeo.relative = true;\n\t\te.setGeometry(geo);\n\t}\n\t\n\t// Overrides the edge style\n\tvar style = this.getEdgeStyle();\n\t\n\tif (style != null)\n\t{\n\t\te.setStyle(style);\n\t}\n\t\n\treturn e;\n};\n\n/**\n * Function: getEdgeStyle\n * \n * Returns a string identifying the style of new edges.\n * The function is used in <createEdge> when new edges\n * are created in the graph.\n */\nmxEditor.prototype.getEdgeStyle = function ()\n{\n\treturn this.defaultEdgeStyle;\n};\n\n/**\n * Function: consumeCycleAttribute\n * \n * Returns the next attribute in <cycleAttributeValues>\n * or null, if not attribute should be used in the\n * specified cell.\n */\nmxEditor.prototype.consumeCycleAttribute = function (cell)\n{\n\treturn (this.cycleAttributeValues != null &&\n\t\tthis.cycleAttributeValues.length > 0 &&\n\t\tthis.graph.isSwimlane(cell)) ?\n\t\tthis.cycleAttributeValues[this.cycleAttributeIndex++ %\n\t\t\tthis.cycleAttributeValues.length] : null;\n};\n\n/**\n * Function: cycleAttribute\n * \n * Uses the returned value from <consumeCycleAttribute>\n * as the value for the <cycleAttributeName> key in\n * the given cell's style.\n */\nmxEditor.prototype.cycleAttribute = function (cell)\n{\n\tif (this.cycleAttributeName != null)\n\t{\n\t\tvar value = this.consumeCycleAttribute(cell);\n\t\t\n\t\tif (value != null)\n\t\t{\n\t\t\tcell.setStyle(cell.getStyle()+';'+\n\t\t\t\tthis.cycleAttributeName+'='+value);\n\t\t}\n\t}\n};\n\n/**\n * Function: addVertex\n * \n * Adds the given vertex as a child of parent at the specified\n * x and y coordinate and fires an <addVertex> event.\n */\nmxEditor.prototype.addVertex = function (parent, vertex, x, y)\n{\n\tvar model = this.graph.getModel();\n\t\n\twhile (parent != null && !this.graph.isValidDropTarget(parent))\n\t{\n\t\tparent = model.getParent(parent);\n\t}\n\t\n\tparent = (parent != null) ? parent : this.graph.getSwimlaneAt(x, y);\n\tvar scale = this.graph.getView().scale;\n\t\n\tvar geo = model.getGeometry(vertex);\n\tvar pgeo = model.getGeometry(parent);\n\t\n\tif (this.graph.isSwimlane(vertex) &&\n\t\t!this.graph.swimlaneNesting)\n\t{\n\t\tparent = null;\n\t}\n\telse if (parent == null && this.swimlaneRequired)\n\t{\n\t\treturn null;\n\t}\n\telse if (parent != null && pgeo != null)\n\t{\n\t\t// Keeps vertex inside parent\n\t\tvar state = this.graph.getView().getState(parent);\n\t\t\n\t\tif (state != null)\n\t\t{\t\t\t\n\t\t\tx -= state.origin.x * scale;\n\t\t\ty -= state.origin.y * scale;\n\t\t\t\n\t\t\tif (this.graph.isConstrainedMoving)\n\t\t\t{\n\t\t\t\tvar width = geo.width;\n\t\t\t\tvar height = geo.height;\t\t\t\t\n\t\t\t\tvar tmp = state.x+state.width;\n\t\t\t\t\n\t\t\t\tif (x+width > tmp)\n\t\t\t\t{\n\t\t\t\t\tx -= x+width - tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp = state.y+state.height;\n\t\t\t\t\n\t\t\t\tif (y+height > tmp)\n\t\t\t\t{\n\t\t\t\t\ty -= y+height - tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (pgeo != null)\n\t\t{\n\t\t\tx -= pgeo.x*scale;\n\t\t\ty -= pgeo.y*scale;\n\t\t}\n\t}\n\t\n\tgeo = geo.clone();\n\tgeo.x = this.graph.snap(x / scale -\n\t\tthis.graph.getView().translate.x -\n\t\tthis.graph.gridSize/2);\n\tgeo.y = this.graph.snap(y / scale -\n\t\tthis.graph.getView().translate.y -\n\t\tthis.graph.gridSize/2);\n\tvertex.setGeometry(geo);\n\t\n\tif (parent == null)\n\t{\n\t\tparent = this.graph.getDefaultParent();\n\t}\n\n\tthis.cycleAttribute(vertex);\n\tthis.fireEvent(new mxEventObject(mxEvent.BEFORE_ADD_VERTEX,\n\t\t\t'vertex', vertex, 'parent', parent));\n\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvertex = this.graph.addCell(vertex, parent);\n\t\t\n\t\tif (vertex != null)\n\t\t{\n\t\t\tthis.graph.constrainChild(vertex);\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD_VERTEX, 'vertex', vertex));\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\tif (vertex != null)\n\t{\n\t\tthis.graph.setSelectionCell(vertex);\n\t\tthis.graph.scrollCellToVisible(vertex);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.AFTER_ADD_VERTEX, 'vertex', vertex));\n\t}\n\t\n\treturn vertex;\n};\n\n/**\n * Function: destroy\n * \n * Removes the editor and all its associated resources. This does not\n * normally need to be called, it is called automatically when the window\n * unloads.\n */\nmxEditor.prototype.destroy = function ()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\n\t\tif (this.tasks != null)\n\t\t{\n\t\t\tthis.tasks.destroy();\n\t\t}\n\t\t\n\t\tif (this.outline != null)\n\t\t{\n\t\t\tthis.outline.destroy();\n\t\t}\n\t\t\n\t\tif (this.properties != null)\n\t\t{\n\t\t\tthis.properties.destroy();\n\t\t}\n\t\t\n\t\tif (this.keyHandler != null)\n\t\t{\n\t\t\tthis.keyHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.rubberband != null)\n\t\t{\n\t\t\tthis.rubberband.destroy();\n\t\t}\n\t\t\n\t\tif (this.toolbar != null)\n\t\t{\n\t\t\tthis.toolbar.destroy();\n\t\t}\n\t\t\n\t\tif (this.graph != null)\n\t\t{\n\t\t\tthis.graph.destroy();\n\t\t}\n\t\n\t\tthis.status = null;\n\t\tthis.templates = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxCodecRegistry =\n{\n\t/**\n\t * Class: mxCodecRegistry\n\t *\n\t * Singleton class that acts as a global registry for codecs.\n\t *\n\t * Adding an <mxCodec>:\n\t *\n\t * 1. Define a default codec with a new instance of the \n\t * object to be handled.\n\t *\n\t * (code)\n\t * var codec = new mxObjectCodec(new mxGraphModel());\n\t * (end)\n\t *\n\t * 2. Define the functions required for encoding and decoding\n\t * objects.\n\t *\n\t * (code)\n\t * codec.encode = function(enc, obj) { ... }\n\t * codec.decode = function(dec, node, into) { ... }\n\t * (end)\n\t *\n\t * 3. Register the codec in the <mxCodecRegistry>.\n\t *\n\t * (code)\n\t * mxCodecRegistry.register(codec);\n\t * (end)\n\t *\n\t * <mxObjectCodec.decode> may be used to either create a new \n\t * instance of an object or to configure an existing instance, \n\t * in which case the into argument points to the existing\n\t * object. In this case, we say the codec \"configures\" the\n\t * object.\n\t * \n\t * Variable: codecs\n\t *\n\t * Maps from constructor names to codecs.\n\t */\n\tcodecs: [],\n\t\n\t/**\n\t * Variable: aliases\n\t *\n\t * Maps from classnames to codecnames.\n\t */\n\taliases: [],\n\n\t/**\n\t * Function: register\n\t *\n\t * Registers a new codec and associates the name of the template\n\t * constructor in the codec with the codec object.\n\t *\n\t * Parameters:\n\t *\n\t * codec - <mxObjectCodec> to be registered.\n\t */\n\tregister: function(codec)\n\t{\n\t\tif (codec != null)\n\t\t{\n\t\t\tvar name = codec.getName();\n\t\t\tmxCodecRegistry.codecs[name] = codec;\n\t\t\t\n\t\t\tvar classname = mxUtils.getFunctionName(codec.template.constructor);\n\n\t\t\tif (classname != name)\n\t\t\t{\n\t\t\t\tmxCodecRegistry.addAlias(classname, name);\n\t\t\t}\n\t\t}\n\n\t\treturn codec;\n\t},\n\n\t/**\n\t * Function: addAlias\n\t *\n\t * Adds an alias for mapping a classname to a codecname.\n\t */\n\taddAlias: function(classname, codecname)\n\t{\n\t\tmxCodecRegistry.aliases[classname] = codecname;\n\t},\n\n\t/**\n\t * Function: getCodec\n\t *\n\t * Returns a codec that handles objects that are constructed\n\t * using the given constructor.\n\t *\n\t * Parameters:\n\t *\n\t * ctor - JavaScript constructor function. \n\t */\n\tgetCodec: function(ctor)\n\t{\n\t\tvar codec = null;\n\t\t\n\t\tif (ctor != null)\n\t\t{\n\t\t\tvar name = mxUtils.getFunctionName(ctor);\n\t\t\tvar tmp = mxCodecRegistry.aliases[name];\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tname = tmp;\n\t\t\t}\n\t\t\t\n\t\t\tcodec = mxCodecRegistry.codecs[name];\n\t\t\t\n\t\t\t// Registers a new default codec for the given constructor\n\t\t\t// if no codec has been previously defined.\n\t\t\tif (codec == null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tcodec = new mxObjectCodec(new ctor());\n\t\t\t\t\tmxCodecRegistry.register(codec);\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn codec;\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCodec\n *\n * XML codec for JavaScript object graphs. See <mxObjectCodec> for a\n * description of the general encoding/decoding scheme. This class uses the\n * codecs registered in <mxCodecRegistry> for encoding/decoding each object.\n * \n * References:\n * \n * In order to resolve references, especially forward references, the mxCodec\n * constructor must be given the document that contains the referenced\n * elements.\n *\n * Examples:\n *\n * The following code is used to encode a graph model.\n *\n * (code)\n * var encoder = new mxCodec();\n * var result = encoder.encode(graph.getModel());\n * var xml = mxUtils.getXml(result);\n * (end)\n * \n * Example:\n * \n * Using the code below, an XML document is decoded into an existing model. The\n * document may be obtained using one of the functions in mxUtils for loading\n * an XML file, eg. <mxUtils.get>, or using <mxUtils.parseXml> for parsing an\n * XML string.\n * \n * (code)\n * var doc = mxUtils.parseXml(xmlString);\n * var codec = new mxCodec(doc);\n * codec.decode(doc.documentElement, graph.getModel());\n * (end)\n * \n * Example:\n * \n * This example demonstrates parsing a list of isolated cells into an existing\n * graph model. Note that the cells do not have a parent reference so they can\n * be added anywhere in the cell hierarchy after parsing.\n * \n * (code)\n * var xml = '<root><mxCell id=\"2\" value=\"Hello,\" vertex=\"1\"><mxGeometry x=\"20\" y=\"20\" width=\"80\" height=\"30\" as=\"geometry\"/></mxCell><mxCell id=\"3\" value=\"World!\" vertex=\"1\"><mxGeometry x=\"200\" y=\"150\" width=\"80\" height=\"30\" as=\"geometry\"/></mxCell><mxCell id=\"4\" value=\"\" edge=\"1\" source=\"2\" target=\"3\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root>';\n * var doc = mxUtils.parseXml(xml);\n * var codec = new mxCodec(doc);\n * var elt = doc.documentElement.firstChild;\n * var cells = [];\n * \n * while (elt != null)\n * {\n *   cells.push(codec.decode(elt));\n *   elt = elt.nextSibling;\n * }\n * \n * graph.addCells(cells);\n * (end)\n * \n * Example:\n * \n * Using the following code, the selection cells of a graph are encoded and the\n * output is displayed in a dialog box.\n * \n * (code)\n * var enc = new mxCodec();\n * var cells = graph.getSelectionCells();\n * mxUtils.alert(mxUtils.getPrettyXml(enc.encode(cells)));\n * (end)\n * \n * Newlines in the XML can be converted to <br>, in which case a '<br>' argument\n * must be passed to <mxUtils.getXml> as the second argument.\n * \n * Debugging:\n * \n * For debugging I/O you can use the following code to get the sequence of\n * encoded objects:\n * \n * (code)\n * var oldEncode = mxCodec.prototype.encode;\n * mxCodec.prototype.encode = function(obj)\n * {\n *   mxLog.show();\n *   mxLog.debug('mxCodec.encode: obj='+mxUtils.getFunctionName(obj.constructor));\n *   \n *   return oldEncode.apply(this, arguments);\n * };\n * (end)\n * \n * Note that the I/O system adds object codecs for new object automatically. For\n * decoding those objects, the constructor should be written as follows:\n * \n * (code)\n * var MyObj = function(name)\n * {\n *   // ...\n * };\n * (end)\n * \n * Constructor: mxCodec\n *\n * Constructs an XML encoder/decoder for the specified\n * owner document.\n *\n * Parameters:\n *\n * document - Optional XML document that contains the data.\n * If no document is specified then a new document is created\n * using <mxUtils.createXmlDocument>.\n */\nfunction mxCodec(document)\n{\n\tthis.document = document || mxUtils.createXmlDocument();\n\tthis.objects = [];\n};\n\n/**\n * Variable: document\n *\n * The owner document of the codec.\n */\nmxCodec.prototype.document = null;\n\n/**\n * Variable: objects\n *\n * Maps from IDs to objects.\n */\nmxCodec.prototype.objects = null;\n\n/**\n * Variable: elements\n * \n * Lookup table for resolving IDs to elements.\n */\nmxCodec.prototype.elements = null;\n\n/**\n * Variable: encodeDefaults\n *\n * Specifies if default values should be encoded. Default is false.\n */\nmxCodec.prototype.encodeDefaults = false;\n\n\n/**\n * Function: putObject\n * \n * Assoiates the given object with the given ID and returns the given object.\n * \n * Parameters\n * \n * id - ID for the object to be associated with.\n * obj - Object to be associated with the ID.\n */\nmxCodec.prototype.putObject = function(id, obj)\n{\n\tthis.objects[id] = obj;\n\t\n\treturn obj;\n};\n\n/**\n * Function: getObject\n *\n * Returns the decoded object for the element with the specified ID in\n * <document>. If the object is not known then <lookup> is used to find an\n * object. If no object is found, then the element with the respective ID\n * from the document is parsed using <decode>.\n */\nmxCodec.prototype.getObject = function(id)\n{\n\tvar obj = null;\n\n\tif (id != null)\n\t{\n\t\tobj = this.objects[id];\n\t\t\n\t\tif (obj == null)\n\t\t{\n\t\t\tobj = this.lookup(id);\n\t\t\t\n\t\t\tif (obj == null)\n\t\t\t{\n\t\t\t\tvar node = this.getElementById(id);\n\t\t\t\t\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tobj = this.decode(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn obj;\n};\n\n/**\n * Function: lookup\n *\n * Hook for subclassers to implement a custom lookup mechanism for cell IDs.\n * This implementation always returns null.\n *\n * Example:\n *\n * (code)\n * var codec = new mxCodec();\n * codec.lookup = function(id)\n * {\n *   return model.getCell(id);\n * };\n * (end)\n *\n * Parameters:\n *\n * id - ID of the object to be returned.\n */\nmxCodec.prototype.lookup = function(id)\n{\n\treturn null;\n};\n\n/**\n * Function: getElementById\n *\n * Returns the element with the given ID from <document>.\n *\n * Parameters:\n *\n * id - String that contains the ID.\n */\nmxCodec.prototype.getElementById = function(id)\n{\n\tthis.updateElements();\n\t\n\treturn this.elements[id];\n};\n\n/**\n * Function: updateElements\n *\n * Returns the element with the given ID from <document>.\n *\n * Parameters:\n *\n * id - String that contains the ID.\n */\nmxCodec.prototype.updateElements = function()\n{\n\tif (this.elements == null)\n\t{\n\t\tthis.elements = new Object();\n\t\t\n\t\tif (this.document.documentElement != null)\n\t\t{\n\t\t\tthis.addElement(this.document.documentElement);\n\t\t}\n\t}\n};\n\n/**\n * Function: addElement\n *\n * Adds the given element to <elements> if it has an ID.\n */\nmxCodec.prototype.addElement = function(node)\n{\n\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tvar id = node.getAttribute('id');\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tif (this.elements[id] == null)\n\t\t\t{\n\t\t\t\tthis.elements[id] = node;\n\t\t\t}\n\t\t\telse if (this.elements[id] != node)\n\t\t\t{\n\t\t\t\tthrow new Error(id + ': Duplicate ID');\n\t\t\t}\n\t\t}\n\t}\n\t\n\tnode = node.firstChild;\n\t\n\twhile (node != null)\n\t{\n\t\tthis.addElement(node);\n\t\tnode = node.nextSibling;\n\t}\n};\n\n/**\n * Function: getId\n *\n * Returns the ID of the specified object. This implementation\n * calls <reference> first and if that returns null handles\n * the object as an <mxCell> by returning their IDs using\n * <mxCell.getId>. If no ID exists for the given cell, then\n * an on-the-fly ID is generated using <mxCellPath.create>.\n *\n * Parameters:\n *\n * obj - Object to return the ID for.\n */\nmxCodec.prototype.getId = function(obj)\n{\n\tvar id = null;\n\t\n\tif (obj != null)\n\t{\n\t\tid = this.reference(obj);\n\t\t\n\t\tif (id == null && obj instanceof mxCell)\n\t\t{\n\t\t\tid = obj.getId();\n\t\t\t\n\t\t\tif (id == null)\n\t\t\t{\n\t\t\t\t// Uses an on-the-fly Id\n\t\t\t\tid = mxCellPath.create(obj);\n\t\t\t\t\n\t\t\t\tif (id.length == 0)\n\t\t\t\t{\n\t\t\t\t\tid = 'root';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn id;\n};\n\n/**\n * Function: reference\n *\n * Hook for subclassers to implement a custom method\n * for retrieving IDs from objects. This implementation\n * always returns null.\n *\n * Example:\n *\n * (code)\n * var codec = new mxCodec();\n * codec.reference = function(obj)\n * {\n *   return obj.getCustomId();\n * };\n * (end)\n *\n * Parameters:\n *\n * obj - Object whose ID should be returned.\n */\nmxCodec.prototype.reference = function(obj)\n{\n\treturn null;\n};\n\n/**\n * Function: encode\n *\n * Encodes the specified object and returns the resulting\n * XML node.\n *\n * Parameters:\n *\n * obj - Object to be encoded. \n */\nmxCodec.prototype.encode = function(obj)\n{\n\tvar node = null;\n\t\n\tif (obj != null && obj.constructor != null)\n\t{\n\t\tvar enc = mxCodecRegistry.getCodec(obj.constructor);\n\t\t\n\t\tif (enc != null)\n\t\t{\n\t\t\tnode = enc.encode(this, obj);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxUtils.isNode(obj))\n\t\t\t{\n\t\t\t\tnode = mxUtils.importNode(this.document, obj, true);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t    \t\tmxLog.warn('mxCodec.encode: No codec for ' + mxUtils.getFunctionName(obj.constructor));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: decode\n *\n * Decodes the given XML node. The optional \"into\"\n * argument specifies an existing object to be\n * used. If no object is given, then a new instance\n * is created using the constructor from the codec.\n *\n * The function returns the passed in object or\n * the new instance if no object was given.\n *\n * Parameters:\n *\n * node - XML node to be decoded.\n * into - Optional object to be decodec into.\n */\nmxCodec.prototype.decode = function(node, into)\n{\n\tthis.updateElements();\n\tvar obj = null;\n\t\n\tif (node != null && node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tvar ctor = null;\n\t\t\n\t\ttry\n\t\t{\n\t\t\tctor = window[node.nodeName];\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\t// ignore\n\t\t}\n\t\t\n\t\tvar dec = mxCodecRegistry.getCodec(ctor);\n\t\t\n\t\tif (dec != null)\n\t\t{\n\t\t\tobj = dec.decode(this, node, into);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobj = node.cloneNode(true);\n\t\t\tobj.removeAttribute('as');\n\t\t}\n\t}\n\t\n\treturn obj;\n};\n\n/**\n * Function: encodeCell\n *\n * Encoding of cell hierarchies is built-into the core, but\n * is a higher-level function that needs to be explicitely\n * used by the respective object encoders (eg. <mxModelCodec>,\n * <mxChildChangeCodec> and <mxRootChangeCodec>). This\n * implementation writes the given cell and its children as a\n * (flat) sequence into the given node. The children are not\n * encoded if the optional includeChildren is false. The\n * function is in charge of adding the result into the\n * given node and has no return value.\n *\n * Parameters:\n *\n * cell - <mxCell> to be encoded.\n * node - Parent XML node to add the encoded cell into.\n * includeChildren - Optional boolean indicating if the\n * function should include all descendents. Default is true. \n */\nmxCodec.prototype.encodeCell = function(cell, node, includeChildren)\n{\n\tnode.appendChild(this.encode(cell));\n\t\n\tif (includeChildren == null || includeChildren)\n\t{\n\t\tvar childCount = cell.getChildCount();\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.encodeCell(cell.getChildAt(i), node);\n\t\t}\n\t}\n};\n\n/**\n * Function: isCellCodec\n * \n * Returns true if the given codec is a cell codec. This uses\n * <mxCellCodec.isCellCodec> to check if the codec is of the\n * given type.\n */\nmxCodec.prototype.isCellCodec = function(codec)\n{\n\tif (codec != null && typeof(codec.isCellCodec) == 'function')\n\t{\n\t\treturn codec.isCellCodec();\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: decodeCell\n *\n * Decodes cells that have been encoded using inversion, ie.\n * where the user object is the enclosing node in the XML,\n * and restores the group and graph structure in the cells.\n * Returns a new <mxCell> instance that represents the\n * given node.\n *\n * Parameters:\n *\n * node - XML node that contains the cell data.\n * restoreStructures - Optional boolean indicating whether\n * the graph structure should be restored by calling insert\n * and insertEdge on the parent and terminals, respectively.\n * Default is true.\n */\nmxCodec.prototype.decodeCell = function(node, restoreStructures)\n{\n\trestoreStructures = (restoreStructures != null) ? restoreStructures : true;\n\tvar cell = null;\n\t\n\tif (node != null && node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\t// Tries to find a codec for the given node name. If that does\n\t\t// not return a codec then the node is the user object (an XML node\n\t\t// that contains the mxCell, aka inversion).\n\t\tvar decoder = mxCodecRegistry.getCodec(node.nodeName);\n\t\t\n\t\t// Tries to find the codec for the cell inside the user object.\n\t\t// This assumes all node names inside the user object are either\n\t\t// not registered or they correspond to a class for cells.\n\t\tif (!this.isCellCodec(decoder))\n\t\t{\n\t\t\tvar child = node.firstChild;\n\t\t\t\n\t\t\twhile (child != null && !this.isCellCodec(decoder))\n\t\t\t{\n\t\t\t\tdecoder = mxCodecRegistry.getCodec(child.nodeName);\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!this.isCellCodec(decoder))\n\t\t{\n\t\t\tdecoder = mxCodecRegistry.getCodec(mxCell);\n\t\t}\n\n\t\tcell = decoder.decode(this, node);\n\t\t\n\t\tif (restoreStructures)\n\t\t{\n\t\t\tthis.insertIntoGraph(cell);\n\t\t}\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: insertIntoGraph\n *\n * Inserts the given cell into its parent and terminal cells.\n */\nmxCodec.prototype.insertIntoGraph = function(cell)\n{\n\tvar parent = cell.parent;\n\tvar source = cell.getTerminal(true);\n\tvar target = cell.getTerminal(false);\n\n\t// Fixes possible inconsistencies during insert into graph\n\tcell.setTerminal(null, false);\n\tcell.setTerminal(null, true);\n\tcell.parent = null;\n\t\n\tif (parent != null)\n\t{\n\t\tif (parent == cell)\n\t\t{\n\t\t\tthrow new Error(parent.id + ': Self Reference');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tparent.insert(cell);\n\t\t}\n\t}\n\n\tif (source != null)\n\t{\n\t\tsource.insertEdge(cell, true);\n\t}\n\n\tif (target != null)\n\t{\n\t\ttarget.insertEdge(cell, false);\n\t}\n};\n\n/**\n * Function: setAttribute\n *\n * Sets the attribute on the specified node to value. This is a\n * helper method that makes sure the attribute and value arguments\n * are not null.\n *\n * Parameters:\n *\n * node - XML node to set the attribute for.\n * attributes - Attributename to be set.\n * value - New value of the attribute.\n */\nmxCodec.prototype.setAttribute = function(node, attribute, value)\n{\n\tif (attribute != null && value != null)\n\t{\n\t\tnode.setAttribute(attribute, value);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxObjectCodec\n *\n * Generic codec for JavaScript objects that implements a mapping between\n * JavaScript objects and XML nodes that maps each field or element to an\n * attribute or child node, and vice versa.\n * \n * Atomic Values:\n * \n * Consider the following example.\n * \n * (code)\n * var obj = new Object();\n * obj.foo = \"Foo\";\n * obj.bar = \"Bar\";\n * (end)\n * \n * This object is encoded into an XML node using the following.\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(obj);\n * (end)\n * \n * The output of the encoding may be viewed using <mxLog> as follows.\n * \n * (code)\n * mxLog.show();\n * mxLog.debug(mxUtils.getPrettyXml(node));\n * (end)\n * \n * Finally, the result of the encoding looks as follows.\n * \n * (code)\n * <Object foo=\"Foo\" bar=\"Bar\"/>\n * (end)\n * \n * In the above output, the foo and bar fields have been mapped to attributes\n * with the same names, and the name of the constructor was used for the\n * nodename.\n * \n * Booleans:\n *\n * Since booleans are numbers in JavaScript, all boolean values are encoded\n * into 1 for true and 0 for false. The decoder also accepts the string true\n * and false for boolean values.\n * \n * Objects:\n * \n * The above scheme is applied to all atomic fields, that is, to all non-object\n * fields of an object. For object fields, a child node is created with a\n * special attribute that contains the fieldname. This special attribute is\n * called \"as\" and hence, as is a reserved word that should not be used for a\n * fieldname.\n * \n * Consider the following example where foo is an object and bar is an atomic\n * property of foo.\n * \n * (code)\n * var obj = {foo: {bar: \"Bar\"}};\n * (end)\n * \n * This will be mapped to the following XML structure by mxObjectCodec.\n * \n * (code)\n * <Object>\n *   <Object bar=\"Bar\" as=\"foo\"/>\n * </Object>\n * (end)\n * \n * In the above output, the inner Object node contains the as-attribute that\n * specifies the fieldname in the enclosing object. That is, the field foo was\n * mapped to a child node with an as-attribute that has the value foo.\n * \n * Arrays:\n * \n * Arrays are special objects that are either associative, in which case each\n * key, value pair is treated like a field where the key is the fieldname, or\n * they are a sequence of atomic values and objects, which is mapped to a\n * sequence of child nodes. For object elements, the above scheme is applied\n * without the use of the special as-attribute for creating each child. For\n * atomic elements, a special add-node is created with the value stored in the\n * value-attribute.\n * \n * For example, the following array contains one atomic value and one object\n * with a field called bar. Furthermore it contains two associative entries\n * called bar with an atomic value, and foo with an object value.\n * \n * (code)\n * var obj = [\"Bar\", {bar: \"Bar\"}];\n * obj[\"bar\"] = \"Bar\";\n * obj[\"foo\"] = {bar: \"Bar\"};\n * (end)\n * \n * This array is represented by the following XML nodes.\n * \n * (code)\n * <Array bar=\"Bar\">\n *   <add value=\"Bar\"/>\n *   <Object bar=\"Bar\"/>\n *   <Object bar=\"Bar\" as=\"foo\"/>\n * </Array>\n * (end)\n * \n * The Array node name is the name of the constructor. The additional\n * as-attribute in the last child contains the key of the associative entry,\n * whereas the second last child is part of the array sequence and does not\n * have an as-attribute.\n * \n * References:\n * \n * Objects may be represented as child nodes or attributes with ID values,\n * which are used to lookup the object in a table within <mxCodec>. The\n * <isReference> function is in charge of deciding if a specific field should\n * be encoded as a reference or not. Its default implementation returns true if\n * the fieldname is in <idrefs>, an array of strings that is used to configure\n * the <mxObjectCodec>.\n * \n * Using this approach, the mapping does not guarantee that the referenced\n * object itself exists in the document. The fields that are encoded as\n * references must be carefully chosen to make sure all referenced objects\n * exist in the document, or may be resolved by some other means if necessary.\n * \n * For example, in the case of the graph model all cells are stored in a tree\n * whose root is referenced by the model's root field. A tree is a structure\n * that is well suited for an XML representation, however, the additional edges\n * in the graph model have a reference to a source and target cell, which are\n * also contained in the tree. To handle this case, the source and target cell\n * of an edge are treated as references, whereas the children are treated as\n * objects. Since all cells are contained in the tree and no edge references a\n * source or target outside the tree, this setup makes sure all referenced\n * objects are contained in the document.\n * \n * In the case of a tree structure we must further avoid infinite recursion by\n * ignoring the parent reference of each child. This is done by returning true\n * in <isExcluded>, whose default implementation uses the array of excluded\n * fieldnames passed to the mxObjectCodec constructor.\n * \n * References are only used for cells in mxGraph. For defining other\n * referencable object types, the codec must be able to work out the ID of an\n * object. This is done by implementing <mxCodec.reference>. For decoding a\n * reference, the XML node with the respective id-attribute is fetched from the\n * document, decoded, and stored in a lookup table for later reference. For\n * looking up external objects, <mxCodec.lookup> may be implemented.\n * \n * Expressions:\n * \n * For decoding JavaScript expressions, the add-node may be used with a text\n * content that contains the JavaScript expression. For example, the following\n * creates a field called foo in the enclosing object and assigns it the value\n * of <mxConstants.ALIGN_LEFT>.\n * \n * (code)\n * <Object>\n *   <add as=\"foo\">mxConstants.ALIGN_LEFT</add>\n * </Object>\n * (end)\n * \n * The resulting object has a field called foo with the value \"left\". Its XML\n * representation looks as follows.\n * \n * (code)\n * <Object foo=\"left\"/>\n * (end)\n * \n * This means the expression is evaluated at decoding time and the result of\n * the evaluation is stored in the respective field. Valid expressions are all\n * JavaScript expressions, including function definitions, which are mapped to\n * functions on the resulting object.\n * \n * Expressions are only evaluated if <allowEval> is true.\n * \n * Constructor: mxObjectCodec\n *\n * Constructs a new codec for the specified template object.\n * The variables in the optional exclude array are ignored by\n * the codec. Variables in the optional idrefs array are\n * turned into references in the XML. The optional mapping\n * may be used to map from variable names to XML attributes.\n * The argument is created as follows:\n *\n * (code)\n * var mapping = new Object();\n * mapping['variableName'] = 'attribute-name';\n * (end)\n *\n * Parameters:\n *\n * template - Prototypical instance of the object to be\n * encoded/decoded.\n * exclude - Optional array of fieldnames to be ignored.\n * idrefs - Optional array of fieldnames to be converted to/from\n * references.\n * mapping - Optional mapping from field- to attributenames.\n */\nfunction mxObjectCodec(template, exclude, idrefs, mapping)\n{\n\tthis.template = template;\n\t\n\tthis.exclude = (exclude != null) ? exclude : [];\n\tthis.idrefs = (idrefs != null) ? idrefs : [];\n\tthis.mapping = (mapping != null) ? mapping : [];\n\t\n\tthis.reverse = new Object();\n\t\n\tfor (var i in this.mapping)\n\t{\n\t\tthis.reverse[this.mapping[i]] = i;\n\t}\n};\n\n/**\n * Variable: allowEval\n *\n * Static global switch that specifies if expressions in arrays are allowed.\n * Default is false. NOTE: Enabling this carries a possible security risk.\n */\nmxObjectCodec.allowEval = false;\n\n/**\n * Variable: template\n *\n * Holds the template object associated with this codec.\n */\nmxObjectCodec.prototype.template = null;\n\n/**\n * Variable: exclude\n *\n * Array containing the variable names that should be\n * ignored by the codec.\n */\nmxObjectCodec.prototype.exclude = null;\n\n/**\n * Variable: idrefs\n *\n * Array containing the variable names that should be\n * turned into or converted from references. See\n * <mxCodec.getId> and <mxCodec.getObject>.\n */\nmxObjectCodec.prototype.idrefs = null;\n\n/**\n * Variable: mapping\n *\n * Maps from from fieldnames to XML attribute names.\n */\nmxObjectCodec.prototype.mapping = null;\n\n/**\n * Variable: reverse\n *\n * Maps from from XML attribute names to fieldnames.\n */\nmxObjectCodec.prototype.reverse = null;\n\n/**\n * Function: getName\n * \n * Returns the name used for the nodenames and lookup of the codec when\n * classes are encoded and nodes are decoded. For classes to work with\n * this the codec registry automatically adds an alias for the classname\n * if that is different than what this returns. The default implementation\n * returns the classname of the template class.\n */\nmxObjectCodec.prototype.getName = function()\n{\n\treturn mxUtils.getFunctionName(this.template.constructor);\n};\n\n/**\n * Function: cloneTemplate\n * \n * Returns a new instance of the template for this codec.\n */\nmxObjectCodec.prototype.cloneTemplate = function()\n{\n\treturn new this.template.constructor();\n};\n\n/**\n * Function: getFieldName\n * \n * Returns the fieldname for the given attributename.\n * Looks up the value in the <reverse> mapping or returns\n * the input if there is no reverse mapping for the\n * given name.\n */\nmxObjectCodec.prototype.getFieldName = function(attributename)\n{\n\tif (attributename != null)\n\t{\n\t\tvar mapped = this.reverse[attributename];\n\t\t\n\t\tif (mapped != null)\n\t\t{\n\t\t\tattributename = mapped;\n\t\t}\n\t}\n\t\n\treturn attributename;\n};\n\n/**\n * Function: getAttributeName\n * \n * Returns the attributename for the given fieldname.\n * Looks up the value in the <mapping> or returns\n * the input if there is no mapping for the\n * given name.\n */\nmxObjectCodec.prototype.getAttributeName = function(fieldname)\n{\n\tif (fieldname != null)\n\t{\n\t\tvar mapped = this.mapping[fieldname];\n\t\t\n\t\tif (mapped != null)\n\t\t{\n\t\t\tfieldname = mapped;\n\t\t}\n\t}\n\t\n\treturn fieldname;\n};\n\n/**\n * Function: isExcluded\n *\n * Returns true if the given attribute is to be ignored by the codec. This\n * implementation returns true if the given fieldname is in <exclude> or\n * if the fieldname equals <mxObjectIdentity.FIELD_NAME>.\n *\n * Parameters:\n *\n * obj - Object instance that contains the field.\n * attr - Fieldname of the field.\n * value - Value of the field.\n * write - Boolean indicating if the field is being encoded or decoded.\n * Write is true if the field is being encoded, else it is being decoded.\n */\nmxObjectCodec.prototype.isExcluded = function(obj, attr, value, write)\n{\n\treturn attr == mxObjectIdentity.FIELD_NAME ||\n\t\tmxUtils.indexOf(this.exclude, attr) >= 0;\n};\n\n/**\n * Function: isReference\n *\n * Returns true if the given fieldname is to be treated\n * as a textual reference (ID). This implementation returns\n * true if the given fieldname is in <idrefs>.\n *\n * Parameters:\n *\n * obj - Object instance that contains the field.\n * attr - Fieldname of the field.\n * value - Value of the field. \n * write - Boolean indicating if the field is being encoded or decoded.\n * Write is true if the field is being encoded, else it is being decoded.\n */\nmxObjectCodec.prototype.isReference = function(obj, attr, value, write)\n{\n\treturn mxUtils.indexOf(this.idrefs, attr) >= 0;\n};\n\n/**\n * Function: encode\n *\n * Encodes the specified object and returns a node\n * representing then given object. Calls <beforeEncode>\n * after creating the node and <afterEncode> with the \n * resulting node after processing.\n *\n * Enc is a reference to the calling encoder. It is used\n * to encode complex objects and create references.\n *\n * This implementation encodes all variables of an\n * object according to the following rules:\n *\n * - If the variable name is in <exclude> then it is ignored.\n * - If the variable name is in <idrefs> then <mxCodec.getId>\n * is used to replace the object with its ID.\n * - The variable name is mapped using <mapping>.\n * - If obj is an array and the variable name is numeric\n * (ie. an index) then it is not encoded.\n * - If the value is an object, then the codec is used to\n * create a child node with the variable name encoded into\n * the \"as\" attribute.\n * - Else, if <encodeDefaults> is true or the value differs\n * from the template value, then ...\n * - ... if obj is not an array, then the value is mapped to\n * an attribute.\n * - ... else if obj is an array, the value is mapped to an\n * add child with a value attribute or a text child node,\n * if the value is a function.\n *\n * If no ID exists for a variable in <idrefs> or if an object\n * cannot be encoded, a warning is issued using <mxLog.warn>.\n *\n * Returns the resulting XML node that represents the given\n * object.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n */\nmxObjectCodec.prototype.encode = function(enc, obj)\n{\n\tvar node = enc.document.createElement(this.getName());\n\t\n\tobj = this.beforeEncode(enc, obj, node);\n\tthis.encodeObject(enc, obj, node);\n\t\n\treturn this.afterEncode(enc, obj, node);\n};\n\t\n/**\n * Function: encodeObject\n *\n * Encodes the value of each member in then given obj into the given node using\n * <encodeValue>.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node that contains the encoded object.\n */\nmxObjectCodec.prototype.encodeObject = function(enc, obj, node)\n{\n\tenc.setAttribute(node, 'id', enc.getId(obj));\n\t\n    for (var i in obj)\n    {\n\t\tvar name = i;\n\t\tvar value = obj[name];\n\t\t\n    \tif (value != null && !this.isExcluded(obj, name, value, true))\n    \t{\n    \t\tif (mxUtils.isInteger(name))\n    \t\t{\n    \t\t\tname = null;\n    \t\t}\n    \t\t\n    \t\tthis.encodeValue(enc, obj, name, value, node);\n    \t}\n    }\n};\n\n/**\n * Function: encodeValue\n * \n * Converts the given value according to the mappings\n * and id-refs in this codec and uses <writeAttribute>\n * to write the attribute into the given node.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object whose property is going to be encoded.\n * name - XML node that contains the encoded object.\n * value - Value of the property to be encoded.\n * node - XML node that contains the encoded object.\n */\nmxObjectCodec.prototype.encodeValue = function(enc, obj, name, value, node)\n{\n\tif (value != null)\n\t{\n\t\tif (this.isReference(obj, name, value, true))\n\t\t{\n\t\t\tvar tmp = enc.getId(value);\n\t\t\t\n\t\t\tif (tmp == null)\n\t\t\t{\n\t\t    \tmxLog.warn('mxObjectCodec.encode: No ID for ' +\n\t\t    \t\tthis.getName() + '.' + name + '=' + value);\n\t\t    \treturn; // exit\n\t\t    }\n\t\t    \n\t\t    value = tmp;\n\t\t}\n\n\t\tvar defaultValue = this.template[name];\n\t\t\n\t\t// Checks if the value is a default value and\n\t\t// the name is correct\n\t\tif (name == null || enc.encodeDefaults || defaultValue != value)\n\t\t{\n\t\t\tname = this.getAttributeName(name);\n\t\t\tthis.writeAttribute(enc, obj, name, value, node);\t\n\t\t}\n\t}\n};\n\n/**\n * Function: writeAttribute\n * \n * Writes the given value into node using <writePrimitiveAttribute>\n * or <writeComplexAttribute> depending on the type of the value.\n */\nmxObjectCodec.prototype.writeAttribute = function(enc, obj, name, value, node)\n{\n\tif (typeof(value) != 'object' /* primitive type */)\n\t{\n\t\tthis.writePrimitiveAttribute(enc, obj, name, value, node);\n\t}\n\telse /* complex type */\n\t{\n\t\tthis.writeComplexAttribute(enc, obj, name, value, node);\n\t}\n};\n\n/**\n * Function: writePrimitiveAttribute\n * \n * Writes the given value as an attribute of the given node.\n */\nmxObjectCodec.prototype.writePrimitiveAttribute = function(enc, obj, name, value, node)\n{\n\tvalue = this.convertAttributeToXml(enc, obj, name, value, node);\n\t\n\tif (name == null)\n\t{\n\t\tvar child = enc.document.createElement('add');\n\t\t\n\t\tif (typeof(value) == 'function')\n\t\t{\n    \t\tchild.appendChild(enc.document.createTextNode(value));\n    \t}\n    \telse\n    \t{\n    \t\tenc.setAttribute(child, 'value', value);\n    \t}\n    \t\n\t\tnode.appendChild(child);\n\t}\n\telse if (typeof(value) != 'function')\n\t{\n    \tenc.setAttribute(node, name, value);\n\t}\t\t\n};\n\t\n/**\n * Function: writeComplexAttribute\n * \n * Writes the given value as a child node of the given node.\n */\nmxObjectCodec.prototype.writeComplexAttribute = function(enc, obj, name, value, node)\n{\n\tvar child = enc.encode(value);\n\t\n\tif (child != null)\n\t{\n\t\tif (name != null)\n\t\t{\n    \t\tchild.setAttribute('as', name);\n    \t}\n    \t\n    \tnode.appendChild(child);\n\t}\n\telse\n\t{\n\t\tmxLog.warn('mxObjectCodec.encode: No node for ' + this.getName() + '.' + name + ': ' + value);\n\t}\n};\n\n/**\n * Function: convertAttributeToXml\n * \n * Converts true to \"1\" and false to \"0\" is <isBooleanAttribute> returns true.\n * All other values are not converted.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Objec to convert the attribute for.\n * name - Name of the attribute to be converted.\n * value - Value to be converted.\n */\nmxObjectCodec.prototype.convertAttributeToXml = function(enc, obj, name, value)\n{\n\t// Makes sure to encode boolean values as numeric values\n\tif (this.isBooleanAttribute(enc, obj, name, value))\n\t{\t\n\t\t// Checks if the value is true (do not use the value as is, because\n\t\t// this would check if the value is not null, so 0 would be true)\n\t\tvalue = (value == true) ? '1' : '0';\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: isBooleanAttribute\n * \n * Returns true if the given object attribute is a boolean value.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Objec to convert the attribute for.\n * name - Name of the attribute to be converted.\n * value - Value of the attribute to be converted.\n */\nmxObjectCodec.prototype.isBooleanAttribute = function(enc, obj, name, value)\n{\n\treturn (typeof(value.length) == 'undefined' && (value == true || value == false));\n};\n\n/**\n * Function: convertAttributeFromXml\n * \n * Converts booleans and numeric values to the respective types. Values are\n * numeric if <isNumericAttribute> returns true.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be converted.\n * obj - Objec to convert the attribute for.\n */\nmxObjectCodec.prototype.convertAttributeFromXml = function(dec, attr, obj)\n{\n\tvar value = attr.value;\n\t\n\tif (this.isNumericAttribute(dec, attr, obj))\n\t{\n\t\tvalue = parseFloat(value);\n\t\t\n\t\tif (isNaN(value) || !isFinite(value))\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: isNumericAttribute\n * \n * Returns true if the given XML attribute is or should be a numeric value.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be converted.\n * obj - Objec to convert the attribute for.\n */\nmxObjectCodec.prototype.isNumericAttribute = function(dec, attr, obj)\n{\n\t// Handles known numeric attributes for generic objects\n\tvar result = (obj.constructor == mxGeometry &&\n\t\t(attr.name == 'x' || attr.name == 'y' ||\n\t\tattr.name == 'width' || attr.name == 'height')) ||\n\t\t(obj.constructor == mxPoint &&\n\t\t(attr.name == 'x' || attr.name == 'y')) ||\n\t\tmxUtils.isNumeric(attr.value);\n\t\n\treturn result;\n};\n\n/**\n * Function: beforeEncode\n *\n * Hook for subclassers to pre-process the object before\n * encoding. This returns the input object. The return\n * value of this function is used in <encode> to perform\n * the default encoding into the given node.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node to encode the object into.\n */\nmxObjectCodec.prototype.beforeEncode = function(enc, obj, node)\n{\n\treturn obj;\n};\n\n/**\n * Function: afterEncode\n *\n * Hook for subclassers to post-process the node\n * for the given object after encoding and return the\n * post-processed node. This implementation returns \n * the input node. The return value of this method\n * is returned to the encoder from <encode>.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node that represents the default encoding.\n */\nmxObjectCodec.prototype.afterEncode = function(enc, obj, node)\n{\n\treturn node;\n};\n\n/**\n * Function: decode\n *\n * Parses the given node into the object or returns a new object\n * representing the given node.\n *\n * Dec is a reference to the calling decoder. It is used to decode\n * complex objects and resolve references.\n *\n * If a node has an id attribute then the object cache is checked for the\n * object. If the object is not yet in the cache then it is constructed\n * using the constructor of <template> and cached in <mxCodec.objects>.\n *\n * This implementation decodes all attributes and childs of a node\n * according to the following rules:\n *\n * - If the variable name is in <exclude> or if the attribute name is \"id\"\n * or \"as\" then it is ignored.\n * - If the variable name is in <idrefs> then <mxCodec.getObject> is used\n * to replace the reference with an object.\n * - The variable name is mapped using a reverse <mapping>.\n * - If the value has a child node, then the codec is used to create a\n * child object with the variable name taken from the \"as\" attribute.\n * - If the object is an array and the variable name is empty then the\n * value or child object is appended to the array.\n * - If an add child has no value or the object is not an array then\n * the child text content is evaluated using <mxUtils.eval>.\n *\n * For add nodes where the object is not an array and the variable name\n * is defined, the default mechanism is used, allowing to override/add\n * methods as follows:\n *\n * (code)\n * <Object>\n *   <add as=\"hello\"><![CDATA[\n *     function(arg1) {\n *       mxUtils.alert('Hello '+arg1);\n *     }\n *   ]]></add>\n * </Object>\n * (end) \n *\n * If no object exists for an ID in <idrefs> a warning is issued\n * using <mxLog.warn>.\n *\n * Returns the resulting object that represents the given XML node\n * or the object given to the method as the into parameter.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * into - Optional objec to encode the node into.\n */\nmxObjectCodec.prototype.decode = function(dec, node, into)\n{\n\tvar id = node.getAttribute('id');\n\tvar obj = dec.objects[id];\n\t\n\tif (obj == null)\n\t{\n\t\tobj = into || this.cloneTemplate();\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tdec.putObject(id, obj);\n\t\t}\n\t}\n\t\n\tnode = this.beforeDecode(dec, node, obj);\n\tthis.decodeNode(dec, node, obj);\n\t\n    return this.afterDecode(dec, node, obj);\n};\t\n\n/**\n * Function: decodeNode\n * \n * Calls <decodeAttributes> and <decodeChildren> for the given node.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeNode = function(dec, node, obj)\n{\n\tif (node != null)\n\t{\n\t\tthis.decodeAttributes(dec, node, obj);\n\t\tthis.decodeChildren(dec, node, obj);\n\t}\n};\n\n/**\n * Function: decodeAttributes\n * \n * Decodes all attributes of the given node using <decodeAttribute>.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeAttributes = function(dec, node, obj)\n{\n\tvar attrs = node.attributes;\n\t\n\tif (attrs != null)\n\t{\n\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t{\n\t\t\tthis.decodeAttribute(dec, attrs[i], obj);\n\t\t}\n\t}\n};\n\n/**\n * Function: isIgnoredAttribute\n * \n * Returns true if the given attribute should be ignored. This implementation\n * returns true if the attribute name is \"as\" or \"id\".\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be decoded.\n * obj - Objec to encode the attribute into.\n */\t\nmxObjectCodec.prototype.isIgnoredAttribute = function(dec, attr, obj)\n{\n\treturn attr.nodeName == 'as' || attr.nodeName == 'id';\n};\n\n/**\n * Function: decodeAttribute\n * \n * Reads the given attribute into the specified object.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be decoded.\n * obj - Objec to encode the attribute into.\n */\t\nmxObjectCodec.prototype.decodeAttribute = function(dec, attr, obj)\n{\n\tif (!this.isIgnoredAttribute(dec, attr, obj))\n\t{\n\t\tvar name = attr.nodeName;\n\t\t\n\t\t// Converts the string true and false to their boolean values.\n\t\t// This may require an additional check on the obj to see if\n\t\t// the existing field is a boolean value or uninitialized, in\n\t\t// which case we may want to convert true and false to a string.\n\t\tvar value = this.convertAttributeFromXml(dec, attr, obj);\n\t\tvar fieldname = this.getFieldName(name);\n\t\t\n\t\tif (this.isReference(obj, fieldname, value, false))\n\t\t{\n\t\t\tvar tmp = dec.getObject(value);\n\t\t\t\n\t\t\tif (tmp == null)\n\t\t\t{\n\t\t    \tmxLog.warn('mxObjectCodec.decode: No object for ' +\n\t\t    \t\tthis.getName() + '.' + name + '=' + value);\n\t\t    \treturn; // exit\n\t\t    }\n\t\t    \n\t\t    value = tmp;\n\t\t}\n\n\t\tif (!this.isExcluded(obj, name, value, false))\n\t\t{\n\t\t\t//mxLog.debug(mxUtils.getFunctionName(obj.constructor)+'.'+name+'='+value);\n\t\t\tobj[name] = value;\n\t\t}\n\t}\n};\n\n/**\n * Function: decodeChildren\n * \n * Decodes all children of the given node using <decodeChild>.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeChildren = function(dec, node, obj)\n{\n\tvar child = node.firstChild;\n\t\n\twhile (child != null)\n\t{\n\t\tvar tmp = child.nextSibling;\n\t\t\n\t\tif (child.nodeType == mxConstants.NODETYPE_ELEMENT &&\n\t\t\t!this.processInclude(dec, child, obj))\n\t\t{\n\t\t\tthis.decodeChild(dec, child, obj);\n\t\t}\n\t\t\n\t\tchild = tmp;\n\t}\n};\n\n/**\n * Function: decodeChild\n * \n * Reads the specified child into the given object.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * child - XML child element to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeChild = function(dec, child, obj)\n{\n\tvar fieldname = this.getFieldName(child.getAttribute('as'));\n\t\n\tif (fieldname == null || !this.isExcluded(obj, fieldname, child, false))\n\t{\n\t\tvar template = this.getFieldTemplate(obj, fieldname, child);\n\t\tvar value = null;\n\t\t\n\t\tif (child.nodeName == 'add')\n\t\t{\n\t\t\tvalue = child.getAttribute('value');\n\t\t\t\n\t\t\tif (value == null && mxObjectCodec.allowEval)\n\t\t\t{\n\t\t\t\tvalue = mxUtils.eval(mxUtils.getTextContent(child));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvalue = dec.decode(child, template);\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tthis.addObjectValue(obj, fieldname, value, template);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tthrow new Error(e.message + ' for ' + child.nodeName);\n\t\t}\n\t}\n};\n\n/**\n * Function: getFieldTemplate\n * \n * Returns the template instance for the given field. This returns the\n * value of the field, null if the value is an array or an empty collection\n * if the value is a collection. The value is then used to populate the\n * field for a new instance. For strongly typed languages it may be\n * required to override this to return the correct collection instance\n * based on the encoded child.\n */\t\nmxObjectCodec.prototype.getFieldTemplate = function(obj, fieldname, child)\n{\n\tvar template = obj[fieldname];\n\t\n\t// Non-empty arrays are replaced completely\n    if (template instanceof Array && template.length > 0)\n    {\n        template = null;\n    }\n    \n    return template;\n};\n\n/**\n * Function: addObjectValue\n * \n * Sets the decoded child node as a value of the given object. If the\n * object is a map, then the value is added with the given fieldname as a\n * key. If the fieldname is not empty, then setFieldValue is called or\n * else, if the object is a collection, the value is added to the\n * collection. For strongly typed languages it may be required to\n * override this with the correct code to add an entry to an object.\n */\t\nmxObjectCodec.prototype.addObjectValue = function(obj, fieldname, value, template)\n{\n\tif (value != null && value != template)\n\t{\n\t\tif (fieldname != null && fieldname.length > 0)\n\t\t{\n\t\t\tobj[fieldname] = value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobj.push(value);\n\t\t}\n\t\t//mxLog.debug('Decoded '+mxUtils.getFunctionName(obj.constructor)+'.'+fieldname+': '+value);\n\t}\n};\n\n/**\n * Function: processInclude\n *\n * Returns true if the given node is an include directive and\n * executes the include by decoding the XML document. Returns\n * false if the given node is not an include directive.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the encoding/decoding process.\n * node - XML node to be checked.\n * into - Optional object to pass-thru to the codec.\n */\nmxObjectCodec.prototype.processInclude = function(dec, node, into)\n{\n\tif (node.nodeName == 'include')\n\t{\n\t\tvar name = node.getAttribute('name');\n\t\t\n\t\tif (name != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar xml = mxUtils.load(name).getDocumentElement();\n\t\t\t\t\n\t\t\t\tif (xml != null)\n\t\t\t\t{\n\t\t\t\t\tdec.decode(xml, into);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: beforeDecode\n *\n * Hook for subclassers to pre-process the node for\n * the specified object and return the node to be\n * used for further processing by <decode>.\n * The object is created based on the template in the \n * calling method and is never null. This implementation\n * returns the input node. The return value of this\n * function is used in <decode> to perform\n * the default decoding into the given object.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Object to encode the node into.\n */\nmxObjectCodec.prototype.beforeDecode = function(dec, node, obj)\n{\n\treturn node;\n};\n\n/**\n * Function: afterDecode\n *\n * Hook for subclassers to post-process the object after\n * decoding. This implementation returns the given object\n * without any changes. The return value of this method\n * is returned to the decoder from <decode>.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * node - XML node to be decoded.\n * obj - Object that represents the default decoding.\n */\nmxObjectCodec.prototype.afterDecode = function(dec, node, obj)\n{\n\treturn obj;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxCellCodec\n\t *\n\t * Codec for <mxCell>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - children\n\t * - edges\n\t * - overlays\n\t * - mxTransient\n\t *\n\t * Reference Fields:\n\t *\n\t * - parent\n\t * - source\n\t * - target\n\t * \n\t * Transient fields can be added using the following code:\n\t * \n\t * mxCodecRegistry.getCodec(mxCell).exclude.push('name_of_field');\n\t * \n\t * To subclass <mxCell>, replace the template and add an alias as\n\t * follows.\n\t * \n\t * (code)\n\t * function CustomCell(value, geometry, style)\n\t * {\n\t *   mxCell.apply(this, arguments);\n\t * }\n\t * \n\t * mxUtils.extend(CustomCell, mxCell);\n\t * \n\t * mxCodecRegistry.getCodec(mxCell).template = new CustomCell();\n\t * mxCodecRegistry.addAlias('CustomCell', 'mxCell');\n\t * (end)\n\t */\n\tvar codec = new mxObjectCodec(new mxCell(),\n\t\t['children', 'edges', 'overlays', 'mxTransient'],\n\t\t['parent', 'source', 'target']);\n\n\t/**\n\t * Function: isCellCodec\n\t *\n\t * Returns true since this is a cell codec.\n\t */\n\tcodec.isCellCodec = function()\n\t{\n\t\treturn true;\n\t};\n\n\t/**\n\t * Overidden to disable conversion of value to number.\n\t */\n\tcodec.isNumericAttribute = function(dec, attr, obj)\n\t{\n\t\treturn attr.nodeName !== 'value' && mxObjectCodec.prototype.isNumericAttribute.apply(this, arguments);\n\t};\n\t\n\t/**\n\t * Function: isExcluded\n\t *\n\t * Excludes user objects that are XML nodes.\n\t */ \n\tcodec.isExcluded = function(obj, attr, value, isWrite)\n\t{\n\t\treturn mxObjectCodec.prototype.isExcluded.apply(this, arguments) ||\n\t\t\t(isWrite && attr == 'value' &&\n\t\t\tvalue.nodeType == mxConstants.NODETYPE_ELEMENT);\n\t};\n\t\n\t/**\n\t * Function: afterEncode\n\t *\n\t * Encodes an <mxCell> and wraps the XML up inside the\n\t * XML of the user object (inversion).\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tif (obj.value != null && obj.value.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Wraps the graphical annotation up in the user object (inversion)\n\t\t\t// by putting the result of the default encoding into a clone of the\n\t\t\t// user object (node type 1) and returning this cloned user object.\n\t\t\tvar tmp = node;\n\t\t\tnode = mxUtils.importNode(enc.document, obj.value, true);\n\t\t\tnode.appendChild(tmp);\n\t\t\t\n\t\t\t// Moves the id attribute to the outermost XML node, namely the\n\t\t\t// node which denotes the object boundaries in the file.\n\t\t\tvar id = tmp.getAttribute('id');\n\t\t\tnode.setAttribute('id', id);\n\t\t\ttmp.removeAttribute('id');\n\t\t}\n\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes an <mxCell> and uses the enclosing XML node as\n\t * the user object for the cell (inversion).\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tvar inner = node.cloneNode(true);\n\t\tvar classname = this.getName();\n\t\t\n\t\tif (node.nodeName != classname)\n\t\t{\n\t\t\t// Passes the inner graphical annotation node to the\n\t\t\t// object codec for further processing of the cell.\n\t\t\tvar tmp = node.getElementsByTagName(classname)[0];\n\t\t\t\n\t\t\tif (tmp != null && tmp.parentNode == node)\n\t\t\t{\n\t\t\t\tmxUtils.removeWhitespace(tmp, true);\n\t\t\t\tmxUtils.removeWhitespace(tmp, false);\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\tinner = tmp;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinner = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Creates the user object out of the XML node\n\t\t\tobj.value = node.cloneNode(true);\n\t\t\tvar id = obj.value.getAttribute('id');\n\t\t\t\n\t\t\tif (id != null)\n\t\t\t{\n\t\t\t\tobj.setId(id);\n\t\t\t\tobj.value.removeAttribute('id');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Uses ID from XML file as ID for cell in model\n\t\t\tobj.setId(node.getAttribute('id'));\n\t\t}\n\t\t\t\n\t\t// Preprocesses and removes all Id-references in order to use the\n\t\t// correct encoder (this) for the known references to cells (all).\n\t\tif (inner != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.idrefs.length; i++)\n\t\t\t{\n\t\t\t\tvar attr = this.idrefs[i];\n\t\t\t\tvar ref = inner.getAttribute(attr);\n\t\t\t\t\n\t\t\t\tif (ref != null)\n\t\t\t\t{\n\t\t\t\t\tinner.removeAttribute(attr);\n\t\t\t\t\tvar object = dec.objects[ref] || dec.lookup(ref);\n\t\t\t\t\t\n\t\t\t\t\tif (object == null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Needs to decode forward reference\n\t\t\t\t\t\tvar element = dec.getElementById(ref);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (element != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar decoder = mxCodecRegistry.codecs[element.nodeName] || this;\n\t\t\t\t\t\t\tobject = decoder.decode(dec, element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj[attr] = object;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn inner;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxModelCodec\n\t *\n\t * Codec for <mxGraphModel>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t */\n\tvar codec = new mxObjectCodec(new mxGraphModel());\n\n\t/**\n\t * Function: encodeObject\n\t *\n\t * Encodes the given <mxGraphModel> by writing a (flat) XML sequence of\n\t * cell nodes as produced by the <mxCellCodec>. The sequence is\n\t * wrapped-up in a node with the name root.\n\t */\n\tcodec.encodeObject = function(enc, obj, node)\n\t{\n\t\tvar rootNode = enc.document.createElement('root');\n\t\tenc.encodeCell(obj.getRoot(), rootNode);\n\t\tnode.appendChild(rootNode);\n\t};\n\n\t/**\n\t * Function: decodeChild\n\t * \n\t * Overrides decode child to handle special child nodes.\n\t */\t\n\tcodec.decodeChild = function(dec, child, obj)\n\t{\n\t\tif (child.nodeName == 'root')\n\t\t{\n\t\t\tthis.decodeRoot(dec, child, obj);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxObjectCodec.prototype.decodeChild.apply(this, arguments);\n\t\t}\n\t};\n\n\t/**\n\t * Function: decodeRoot\n\t *\n\t * Reads the cells into the graph model. All cells\n\t * are children of the root element in the node.\n\t */\n\tcodec.decodeRoot = function(dec, root, model)\n\t{\n\t\tvar rootCell = null;\n\t\tvar tmp = root.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tvar cell = dec.decodeCell(tmp);\n\t\t\t\n\t\t\tif (cell != null && cell.getParent() == null)\n\t\t\t{\n\t\t\t\trootCell = cell;\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\n\t\t// Sets the root on the model if one has been decoded\n\t\tif (rootCell != null)\n\t\t{\n\t\t\tmodel.setRoot(rootCell);\n\t\t}\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxRootChangeCodec\n\t *\n\t * Codec for <mxRootChange>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t * - root\n\t */\n\tvar codec = new mxObjectCodec(new mxRootChange(),\n\t\t['model', 'previous', 'root']);\n\n\t/**\n\t * Function: onEncode\n\t *\n\t * Encodes the child recursively.\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tenc.encodeCell(obj.root, node);\n\t\t\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the optional children as cells\n\t * using the respective decoder.\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tif (node.firstChild != null &&\n\t\t\tnode.firstChild.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Makes sure the original node isn't modified\n\t\t\tnode = node.cloneNode(true);\n\t\t\t\n\t\t\tvar tmp = node.firstChild;\n\t\t\tobj.root = dec.decodeCell(tmp, false);\n\n\t\t\tvar tmp2 = tmp.nextSibling;\n\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\ttmp = tmp2;\n\t\t\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\ttmp2 = tmp.nextSibling;\n\t\t\t\tdec.decodeCell(tmp);\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\ttmp = tmp2;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\t\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\tobj.previous = obj.root;\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxChildChangeCodec\n\t *\n\t * Codec for <mxChildChange>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t * - previousIndex\n\t * - child\n\t *\n\t * Reference Fields:\n\t *\n\t * - parent\n\t */\n\tvar codec = new mxObjectCodec(new mxChildChange(),\n\t\t['model', 'child', 'previousIndex'],\n\t\t['parent', 'previous']);\n\n\t/**\n\t * Function: isReference\n\t *\n\t * Returns true for the child attribute if the child\n\t * cell had a previous parent or if we're reading the\n\t * child as an attribute rather than a child node, in\n\t * which case it's always a reference.\n\t */\n\tcodec.isReference = function(obj, attr, value, isWrite)\n\t{\n\t\tif (attr == 'child' && (!isWrite || obj.model.contains(obj.previous)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn mxUtils.indexOf(this.idrefs, attr) >= 0;\n\t};\n\n\t/**\n\t * Function: isExcluded\n\t *\n\t * Excludes references to parent or previous if not in the model.\n\t */\n  \tcodec.isExcluded = function(obj, attr, value, write)\n  \t{\n  \t\treturn mxObjectCodec.prototype.isExcluded.apply(this, arguments) ||\n  \t\t\t(write && value != null && (attr == 'previous' ||\n  \t\t\tattr == 'parent') && !obj.model.contains(value));\n  \t};\n  \t\n\t/**\n\t * Function: afterEncode\n\t *\n\t * Encodes the child recusively and adds the result\n\t * to the given node.\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tif (this.isReference(obj, 'child', obj.child, true))\n\t\t{\n\t\t\t// Encodes as reference (id)\n\t\t\tnode.setAttribute('child', enc.getId(obj.child));\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// At this point, the encoder is no longer able to know which cells\n\t\t\t// are new, so we have to encode the complete cell hierarchy and\n\t\t\t// ignore the ones that are already there at decoding time. Note:\n\t\t\t// This can only be resolved by moving the notify event into the\n\t\t\t// execute of the edit.\n\t\t\tenc.encodeCell(obj.child, node);\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the any child nodes as using the respective\n\t * codec from the registry.\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tif (node.firstChild != null &&\n\t\t\tnode.firstChild.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Makes sure the original node isn't modified\n\t\t\tnode = node.cloneNode(true);\n\t\t\t\n\t\t\tvar tmp = node.firstChild;\n\t\t\tobj.child = dec.decodeCell(tmp, false);\n\n\t\t\tvar tmp2 = tmp.nextSibling;\n\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\ttmp = tmp2;\n\t\t\t\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\ttmp2 = tmp.nextSibling;\n\t\t\t\t\n\t\t\t\tif (tmp.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t{\n\t\t\t\t\t// Ignores all existing cells because those do not need to\n\t\t\t\t\t// be re-inserted into the model. Since the encoded version\n\t\t\t\t\t// of these cells contains the new parent, this would leave\n\t\t\t\t\t// to an inconsistent state on the model (ie. a parent\n\t\t\t\t\t// change without a call to parentForCellChanged).\n\t\t\t\t\tvar id = tmp.getAttribute('id');\n\t\t\t\t\t\n\t\t\t\t\tif (dec.lookup(id) == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tdec.decodeCell(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\ttmp = tmp2;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar childRef = node.getAttribute('child');\n\t\t\tobj.child = dec.getObject(childRef);\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\t\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores object state in the child change.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Cells are decoded here after a complete transaction so the previous\n\t\t// parent must be restored on the cell for the case where the cell was\n\t\t// added. This is needed for the local model to identify the cell as a\n\t\t// new cell and register the ID.\n        if (obj.child != null)\n        {\n            if (obj.child.parent != null && obj.previous != null &&\n                obj.child.parent != obj.previous)\n            {\n                obj.previous = obj.child.parent;\n            }\n\n            obj.child.parent = obj.previous;\n            obj.previous = obj.parent;\n            obj.previousIndex = obj.index;\n        }\n\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxTerminalChangeCodec\n\t *\n\t * Codec for <mxTerminalChange>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t *\n\t * Reference Fields:\n\t *\n\t * - cell\n\t * - terminal\n\t */\n\tvar codec = new mxObjectCodec(new mxTerminalChange(),\n\t\t['model', 'previous'], ['cell', 'terminal']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\tobj.previous = obj.terminal;\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGenericChangeCodec\n *\n * Codec for <mxValueChange>s, <mxStyleChange>s, <mxGeometryChange>s,\n * <mxCollapseChange>s and <mxVisibleChange>s. This class is created\n * and registered dynamically at load time and used implicitely\n * via <mxCodec> and the <mxCodecRegistry>.\n *\n * Transient Fields:\n *\n * - model\n * - previous\n *\n * Reference Fields:\n *\n * - cell\n * \n * Constructor: mxGenericChangeCodec\n *\n * Factory function that creates a <mxObjectCodec> for\n * the specified change and fieldname.\n *\n * Parameters:\n *\n * obj - An instance of the change object.\n * variable - The fieldname for the change data.\n */\nvar mxGenericChangeCodec = function(obj, variable)\n{\n\tvar codec = new mxObjectCodec(obj,  ['model', 'previous'], ['cell']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t};\n\t\n\treturn codec;\n};\n\n// Registers the codecs\nmxCodecRegistry.register(mxGenericChangeCodec(new mxValueChange(), 'value'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxStyleChange(), 'style'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxGeometryChange(), 'geometry'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxCollapseChange(), 'collapsed'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxVisibleChange(), 'visible'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxCellAttributeChange(), 'value'));\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxGraphCodec\n\t *\n\t * Codec for <mxGraph>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - graphListeners\n\t * - eventListeners\n\t * - view\n\t * - container\n\t * - cellRenderer\n\t * - editor\n\t * - selection\n\t */\n\treturn new mxObjectCodec(new mxGraph(),\n\t\t['graphListeners', 'eventListeners', 'view', 'container',\n\t\t'cellRenderer', 'editor', 'selection']);\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxGraphViewCodec\n\t *\n\t * Custom encoder for <mxGraphView>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only writes views\n\t * into a XML format that can be used to create an image for\n\t * the graph, that is, it contains absolute coordinates with\n\t * computed perimeters, edge styles and cell styles.\n\t */\n\tvar codec = new mxObjectCodec(new mxGraphView());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Encodes the given <mxGraphView> using <encodeCell>\n\t * starting at the model's root. This returns the\n\t * top-level graph node of the recursive encoding.\n\t */\n\tcodec.encode = function(enc, view)\n\t{\n\t\treturn this.encodeCell(enc, view,\n\t\t\tview.graph.getModel().getRoot());\n\t};\n\n\t/**\n\t * Function: encodeCell\n\t *\n\t * Recursively encodes the specifed cell. Uses layer\n\t * as the default nodename. If the cell's parent is\n\t * null, then graph is used for the nodename. If\n\t * <mxGraphModel.isEdge> returns true for the cell,\n\t * then edge is used for the nodename, else if\n\t * <mxGraphModel.isVertex> returns true for the cell,\n\t * then vertex is used for the nodename.\n\t *\n\t * <mxGraph.getLabel> is used to create the label\n\t * attribute for the cell. For graph nodes and vertices\n\t * the bounds are encoded into x, y, width and height.\n\t * For edges the points are encoded into a points\n\t * attribute as a space-separated list of comma-separated\n\t * coordinate pairs (eg. x0,y0 x1,y1 ... xn,yn). All\n\t * values from the cell style are added as attribute\n\t * values to the node. \n\t */\n\tcodec.encodeCell = function(enc, view, cell)\n\t{\n\t\tvar model = view.graph.getModel();\n\t\tvar state = view.getState(cell);\n\t\tvar parent = model.getParent(cell);\n\t\t\n\t\tif (parent == null || state != null)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\tvar geo = view.graph.getCellGeometry(cell);\n\t\t\tvar name = null;\n\t\t\t\n\t\t\tif (parent == model.getRoot())\n\t\t\t{\n\t\t\t\tname = 'layer';\n\t\t\t}\n\t\t\telse if (parent == null)\n\t\t\t{\n\t\t\t\tname = 'graph';\n\t\t\t}\n\t\t\telse if (model.isEdge(cell))\n\t\t\t{\n\t\t\t\tname = 'edge';\n\t\t\t}\n\t\t\telse if (childCount > 0 && geo != null)\n\t\t\t{\n\t\t\t\tname = 'group';\n\t\t\t}\n\t\t\telse if (model.isVertex(cell))\n\t\t\t{\n\t\t\t\tname = 'vertex';\n\t\t\t}\n\t\t\t\n\t\t\tif (name != null)\n\t\t\t{\n\t\t\t\tvar node = enc.document.createElement(name);\n\t\t\t\tvar lab = view.graph.getLabel(cell);\n\t\t\t\t\n\t\t\t\tif (lab != null)\n\t\t\t\t{\n\t\t\t\t\tnode.setAttribute('label', view.graph.getLabel(cell));\n\t\t\t\t\t\n\t\t\t\t\tif (view.graph.isHtmlLabel(cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('html', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tif (parent == null)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = view.getGraphBounds();\n\t\t\t\t\t\n\t\t\t\t\tif (bounds != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('x', Math.round(bounds.x));\n\t\t\t\t\t\tnode.setAttribute('y', Math.round(bounds.y));\n\t\t\t\t\t\tnode.setAttribute('width', Math.round(bounds.width));\n\t\t\t\t\t\tnode.setAttribute('height', Math.round(bounds.height));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnode.setAttribute('scale', view.scale);\n\t\t\t\t}\n\t\t\t\telse if (state != null && geo != null)\n\t\t\t\t{\n\t\t\t\t\t// Writes each key, value in the style pair to an attribute\n\t\t\t\t    for (var i in state.style)\n\t\t\t\t    {\n\t\t\t\t    \tvar value = state.style[i];\n\t\t\n\t\t\t\t    \t// Tries to turn objects and functions into strings\n\t\t\t\t\t    if (typeof(value) == 'function' &&\n\t\t\t\t\t\t\ttypeof(value) == 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t    \tvalue = mxStyleRegistry.getName(value);\n\t\t\t\t        }\n\t\t\t\t    \t\n\t\t\t\t    \tif (value != null &&\n\t\t\t\t    \t\ttypeof(value) != 'function' &&\n\t\t\t\t\t\t\ttypeof(value) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute(i, value);\n\t\t\t\t        }\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t\tvar abs = state.absolutePoints;\n\t\t\t\t\t\n\t\t\t\t\t// Writes the list of points into one attribute\n\t\t\t\t\tif (abs != null && abs.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pts = Math.round(abs[0].x) + ',' + Math.round(abs[0].y);\n\t\t\n\t\t\t\t\t\tfor (var i=1; i<abs.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpts += ' ' + Math.round(abs[i].x) + ',' +\n\t\t\t\t\t\t\t\tMath.round(abs[i].y);\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\tnode.setAttribute('points', pts);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Writes the bounds into 4 attributes\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('x', Math.round(state.x));\n\t\t\t\t\t\tnode.setAttribute('y', Math.round(state.y));\n\t\t\t\t\t\tnode.setAttribute('width', Math.round(state.width));\n\t\t\t\t\t\tnode.setAttribute('height', Math.round(state.height));\t\t\t\t\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tvar offset = state.absoluteOffset;\n\t\t\t\t\t\n\t\t\t\t\t// Writes the offset into 2 attributes\n\t\t\t\t\tif (offset != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (offset.x != 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute('dx', Math.round(offset.x));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (offset.y != 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute('dy', Math.round(offset.y));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tfor (var i=0; i<childCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar childNode = this.encodeCell(enc,\n\t\t\t\t\t\t\tview, model.getChildAt(cell, i));\n\t\t\t\t\t\n\t\t\t\t\tif (childNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStylesheetCodec\n *\n * Codec for <mxStylesheet>s. This class is created and registered\n * dynamically at load time and used implicitely via <mxCodec>\n * and the <mxCodecRegistry>.\n */\nvar mxStylesheetCodec = mxCodecRegistry.register(function()\n{\n\tvar codec = new mxObjectCodec(new mxStylesheet());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Encodes a stylesheet. See <decode> for a description of the\n\t * format.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\tvar node = enc.document.createElement(this.getName());\n\t\t\n\t\tfor (var i in obj.styles)\n\t\t{\n\t\t\tvar style = obj.styles[i];\n\t\t\tvar styleNode = enc.document.createElement('add');\n\t\t\t\n\t\t\tif (i != null)\n\t\t\t{\n\t\t\t\tstyleNode.setAttribute('as', i);\n\t\t\t\t\n\t\t\t\tfor (var j in style)\n\t\t\t\t{\n\t\t\t\t\tvar value = this.getStringValue(j, style[j]);\n\t\t\t\t\t\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar entry = enc.document.createElement('add');\n\t\t\t\t\t\tentry.setAttribute('value', value);\n\t\t\t\t\t\tentry.setAttribute('as', j);\n\t\t\t\t\t\tstyleNode.appendChild(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (styleNode.childNodes.length > 0)\n\t\t\t\t{\n\t\t\t\t\tnode.appendChild(styleNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t    return node;\n\t};\n\n\t/**\n\t * Function: getStringValue\n\t *\n\t * Returns the string for encoding the given value.\n\t */\n\tcodec.getStringValue = function(key, value)\n\t{\n\t\tvar type = typeof(value);\n\t\t\n\t\tif (type == 'function')\n\t\t{\n\t\t\tvalue = mxStyleRegistry.getName(value);\n\t\t}\n\t\telse if (type == 'object')\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\treturn value;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Adds a new style.\n\t *\n\t * Attributes:\n\t *\n\t * as - Name of the style.\n\t * extend - Name of the style to inherit from.\n\t *\n\t * Each node contains another sequence of add and remove nodes with the following\n\t * attributes:\n\t *\n\t * as - Name of the style (see <mxConstants>).\n\t * value - Value for the style.\n\t *\n\t * Instead of the value-attribute, one can put Javascript expressions into\n\t * the node as follows if <mxStylesheetCodec.allowEval> is true:\n\t * <add as=\"perimeter\">mxPerimeter.RectanglePerimeter</add>\n\t *\n\t * A remove node will remove the entry with the name given in the as-attribute\n\t * from the style.\n\t * \n\t * Example:\n\t *\n\t * (code)\n\t * <mxStylesheet as=\"stylesheet\">\n\t *   <add as=\"text\">\n\t *     <add as=\"fontSize\" value=\"12\"/>\n\t *   </add>\n\t *   <add as=\"defaultVertex\" extend=\"text\">\n\t *     <add as=\"shape\" value=\"rectangle\"/>\n\t *   </add>\n\t * </mxStylesheet>\n\t * (end)\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tvar obj = into || new this.template.constructor();\n\t\tvar id = node.getAttribute('id');\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tdec.objects[id] = obj;\n\t\t}\n\t\t\n\t\tnode = node.firstChild;\n\t\t\n\t\twhile (node != null)\n\t\t{\n\t\t\tif (!this.processInclude(dec, node, obj) && node.nodeName == 'add')\n\t\t\t{\n\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\n\t\t\t\tif (as != null)\n\t\t\t\t{\n\t\t\t\t\tvar extend = node.getAttribute('extend');\n\t\t\t\t\tvar style = (extend != null) ? mxUtils.clone(obj.styles[extend]) : null;\n\t\t\t\t\t\n\t\t\t\t\tif (style == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (extend != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxLog.warn('mxStylesheetCodec.decode: stylesheet ' +\n\t\t\t\t\t\t\t\textend + ' not found to extend');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tstyle = new Object();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar entry = node.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (entry != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (entry.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t \tvar key = entry.getAttribute('as');\n\t\t\t\t\t\t \t\n\t\t\t\t\t\t \tif (entry.nodeName == 'add')\n\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \tvar text = mxUtils.getTextContent(entry);\n\t\t\t\t\t\t\t \tvar value = null;\n\t\t\t\t\t\t\t \t\n\t\t\t\t\t\t\t \tif (text != null && text.length > 0 && mxStylesheetCodec.allowEval)\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tvalue = mxUtils.eval(text);\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t\t \telse\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tvalue = entry.getAttribute('value');\n\t\t\t\t\t\t\t \t\t\n\t\t\t\t\t\t\t \t\tif (mxUtils.isNumeric(value))\n\t\t\t\t\t\t\t \t\t{\n\t\t\t\t\t\t\t\t\t\tvalue = parseFloat(value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t \t}\n\n\t\t\t\t\t\t\t \tif (value != null)\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tstyle[key] = value;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \telse if (entry.nodeName == 'remove')\n\t\t\t\t\t\t \t{\n\t\t\t\t\t\t \t\tdelete style[key];\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tentry = entry.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj.putCellStyle(as, style);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n/**\n * Variable: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content. Default is true. Set this to false if stylesheets\n * may contain user input.\n */\nmxStylesheetCodec.allowEval = true;\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxDefaultKeyHandlerCodec\n\t *\n\t * Custom codec for configuring <mxDefaultKeyHandler>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n\t * data for existing key handlers, it does not encode or create key handlers.\n\t */\n\tvar codec = new mxObjectCodec(new mxDefaultKeyHandler());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Binds a keystroke to an actionname.\n\t *\n\t * Attributes:\n\t *\n\t * as - Keycode.\n\t * action - Actionname to execute in editor.\n\t * control - Optional boolean indicating if\n\t * \t\tthe control key must be pressed.\n\t *\n\t * Example:\n\t *\n\t * (code)\n\t * <mxDefaultKeyHandler as=\"keyHandler\">\n\t *   <add as=\"88\" control=\"true\" action=\"cut\"/>\n\t *   <add as=\"67\" control=\"true\" action=\"copy\"/>\n\t *   <add as=\"86\" control=\"true\" action=\"paste\"/>\n\t * </mxDefaultKeyHandler>\n\t * (end)\n\t *\n\t * The keycodes are for the x, c and v keys.\n\t *\n\t * See also: <mxDefaultKeyHandler.bindAction>,\n\t * http://www.js-examples.com/page/tutorials__key_codes.html\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tif (into != null)\n\t\t{\n\t\t\tvar editor = into.editor;\n\t\t\tnode = node.firstChild;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tif (!this.processInclude(dec, node, into) &&\n\t\t\t\t\tnode.nodeName == 'add')\n\t\t\t\t{\n\t\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\tvar action = node.getAttribute('action');\n\t\t\t\t\tvar control = node.getAttribute('control');\n\t\t\t\t\t\n\t\t\t\t\tinto.bindAction(as, action, control);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultToolbarCodec\n *\n * Custom codec for configuring <mxDefaultToolbar>s. This class is created\n * and registered dynamically at load time and used implicitely via\n * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n * data for existing toolbars handlers, it does not encode or create toolbars.\n */\nvar mxDefaultToolbarCodec = mxCodecRegistry.register(function()\n{\n\tvar codec = new mxObjectCodec(new mxDefaultToolbar());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Adds a new item to the toolbar. See below for attributes.\n\t * separator - Adds a vertical separator. No attributes.\n\t * hr - Adds a horizontal separator. No attributes.\n\t * br - Adds a linefeed. No attributes. \n\t *\n\t * Attributes:\n\t *\n\t * as - Resource key for the label.\n\t * action - Name of the action to execute in enclosing editor.\n\t * mode - Modename (see below).\n\t * template - Template name for cell insertion.\n\t * style - Optional style to override the template style.\n\t * icon - Icon (relative/absolute URL).\n\t * pressedIcon - Optional icon for pressed state (relative/absolute URL).\n\t * id - Optional ID to be used for the created DOM element.\n\t * toggle - Optional 0 or 1 to disable toggling of the element. Default is\n\t * 1 (true).\n\t *\n\t * The action, mode and template attributes are mutually exclusive. The\n\t * style can only be used with the template attribute. The add node may\n\t * contain another sequence of add nodes with as and action attributes\n\t * to create a combo box in the toolbar. If the icon is specified then\n\t * a list of the child node is expected to have its template attribute\n\t * set and the action is ignored instead.\n\t * \n\t * Nodes with a specified template may define a function to be used for\n\t * inserting the cloned template into the graph. Here is an example of such\n\t * a node:\n\t * \n\t * (code)\n\t * <add as=\"Swimlane\" template=\"swimlane\" icon=\"images/swimlane.gif\"><![CDATA[\n\t *   function (editor, cell, evt, targetCell)\n\t *   {\n\t *     var pt = mxUtils.convertPoint(\n\t *       editor.graph.container, mxEvent.getClientX(evt),\n\t *         mxEvent.getClientY(evt));\n\t *     return editor.addVertex(targetCell, cell, pt.x, pt.y);\n\t *   }\n\t * ]]></add>\n\t * (end)\n\t * \n\t * In the above function, editor is the enclosing <mxEditor> instance, cell\n\t * is the clone of the template, evt is the mouse event that represents the\n\t * drop and targetCell is the cell under the mousepointer where the drop\n\t * occurred. The targetCell is retrieved using <mxGraph.getCellAt>.\n\t *\n\t * Futhermore, nodes with the mode attribute may define a function to\n\t * be executed upon selection of the respective toolbar icon. In the\n\t * example below, the default edge style is set when this specific\n\t * connect-mode is activated:\n\t *\n\t * (code)\n\t * <add as=\"connect\" mode=\"connect\"><![CDATA[\n\t *   function (editor)\n\t *   {\n\t *     if (editor.defaultEdge != null)\n\t *     {\n\t *       editor.defaultEdge.style = 'straightEdge';\n\t *     }\n\t *   }\n\t * ]]></add>\n\t * (end)\n\t * \n\t * Both functions require <mxDefaultToolbarCodec.allowEval> to be set to true.\n\t *\n\t * Modes:\n\t *\n\t * select - Left mouse button used for rubberband- & cell-selection.\n\t * connect - Allows connecting vertices by inserting new edges.\n\t * pan - Disables selection and switches to panning on the left button.\n\t *\n\t * Example:\n\t *\n\t * To add items to the toolbar:\n\t * \n\t * (code)\n\t * <mxDefaultToolbar as=\"toolbar\">\n\t *   <add as=\"save\" action=\"save\" icon=\"images/save.gif\"/>\n\t *   <br/><hr/>\n\t *   <add as=\"select\" mode=\"select\" icon=\"images/select.gif\"/>\n\t *   <add as=\"connect\" mode=\"connect\" icon=\"images/connect.gif\"/>\n\t * </mxDefaultToolbar>\n\t * (end)\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tif (into != null)\n\t\t{\n\t\t\tvar editor = into.editor;\n\t\t\tnode = node.firstChild;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t{\n\t\t\t\t\tif (!this.processInclude(dec, node, into))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (node.nodeName == 'separator')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.addSeparator();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'br')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.toolbar.addBreak();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'hr')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.toolbar.addLine();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'add')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\t\t\tas = mxResources.get(as) || as;\n\t\t\t\t\t\t\tvar icon = node.getAttribute('icon');\n\t\t\t\t\t\t\tvar pressedIcon = node.getAttribute('pressedIcon');\n\t\t\t\t\t\t\tvar action = node.getAttribute('action');\n\t\t\t\t\t\t\tvar mode = node.getAttribute('mode');\n\t\t\t\t\t\t\tvar template = node.getAttribute('template');\n\t\t\t\t\t\t\tvar toggle = node.getAttribute('toggle') != '0';\n\t\t\t\t\t\t\tvar text = mxUtils.getTextContent(node);\n\t\t\t\t\t\t\tvar elt = null;\n\n\t\t\t\t\t\t\tif (action != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telt = into.addItem(as, icon, action, pressedIcon);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (mode != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar funct = (mxDefaultToolbarCodec.allowEval) ? mxUtils.eval(text) : null;\n\t\t\t\t\t\t\t\telt = into.addMode(as, icon, mode, pressedIcon, funct);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (template != null || (text != null && text.length > 0))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar cell = editor.templates[template];\n\t\t\t\t\t\t\t\tvar style = node.getAttribute('style');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (cell != null && style != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcell = editor.graph.cloneCell(cell);\n\t\t\t\t\t\t\t\t\tcell.setStyle(style);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar insertFunction = null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (text != null && text.length > 0 && mxDefaultToolbarCodec.allowEval)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tinsertFunction = mxUtils.eval(text);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\telt = into.addPrototype(as, icon, cell, pressedIcon, insertFunction, toggle);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar children = mxUtils.getChildNodes(node);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (children.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (icon == null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvar combo = into.addActionCombo(as);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tfor (var i=0; i<children.length; i++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (child.nodeName == 'separator')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addOption(combo, '---');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if (child.nodeName == 'add')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar lab = child.getAttribute('as');\n\t\t\t\t\t\t\t\t\t\t\t\tvar act = child.getAttribute('action');\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addActionOption(combo, lab, act);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvar select = null;\n\t\t\t\t\t\t\t\t\t\tvar create = function()\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar template = editor.templates[select.value];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (template != null)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar clone = template.clone();\n\t\t\t\t\t\t\t\t\t\t\t\tvar style = select.options[select.selectedIndex].cellStyle;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif (style != null)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tclone.setStyle(style);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\treturn clone;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tmxLog.warn('Template '+template+' not found');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tvar img = into.addPrototype(as, icon, create, null, null, toggle);\n\t\t\t\t\t\t\t\t\t\tselect = into.addCombo();\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// Selects the toolbar icon if a selection change\n\t\t\t\t\t\t\t\t\t\t// is made in the corresponding combobox.\n\t\t\t\t\t\t\t\t\t\tmxEvent.addListener(select, 'change', function()\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tinto.toolbar.selectMode(img, function(evt)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar pt = mxUtils.convertPoint(editor.graph.container,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\treturn editor.addVertex(null, funct(), pt.x, pt.y);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tinto.toolbar.noReset = false;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// Adds the entries to the combobox\n\t\t\t\t\t\t\t\t\t\tfor (var i=0; i<children.length; i++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (child.nodeName == 'separator')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addOption(select, '---');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if (child.nodeName == 'add')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar lab = child.getAttribute('as');\n\t\t\t\t\t\t\t\t\t\t\t\tvar tmp = child.getAttribute('template');\n\t\t\t\t\t\t\t\t\t\t\t\tvar option = into.addOption(select, lab, tmp || template);\n\t\t\t\t\t\t\t\t\t\t\t\toption.cellStyle = child.getAttribute('style');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Assigns an ID to the created element to access it later.\n\t\t\t\t\t\t\tif (elt != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar id = node.getAttribute('id');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (id != null && id.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\telt.setAttribute('id', id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n/**\n * Variable: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content. Default is true. Set this to false if stylesheets\n * may contain user input\n */\nmxDefaultToolbarCodec.allowEval = true;\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxDefaultPopupMenuCodec\n\t *\n\t * Custom codec for configuring <mxDefaultPopupMenu>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n\t * data for existing popup menus, it does not encode or create menus. Note\n\t * that this codec only passes the configuration node to the popup menu,\n\t * which uses the config to dynamically create menus. See\n\t * <mxDefaultPopupMenu.createMenu>.\n\t */\n\tvar codec = new mxObjectCodec(new mxDefaultPopupMenu());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Uses the given node as the config for <mxDefaultPopupMenu>.\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tvar inc = node.getElementsByTagName('include')[0];\n\t\t\n\t\tif (inc != null)\n\t\t{\n\t\t\tthis.processInclude(dec, inc, into);\n\t\t}\n\t\telse if (into != null)\n\t\t{\n\t\t\tinto.config = node;\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxEditorCodec\n\t *\n\t * Codec for <mxEditor>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - modified\n\t * - lastSnapshot\n\t * - ignoredChanges\n\t * - undoManager\n\t * - graphContainer\n\t * - toolbarContainer\n\t */\n\tvar codec = new mxObjectCodec(new mxEditor(),\n\t\t['modified', 'lastSnapshot', 'ignoredChanges',\n\t\t'undoManager', 'graphContainer', 'toolbarContainer']);\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the ui-part of the configuration node by reading\n\t * a sequence of the following child nodes and attributes\n\t * and passes the control to the default decoding mechanism:\n\t *\n\t * Child Nodes:\n\t *\n\t * stylesheet - Adds a CSS stylesheet to the document.\n\t * resource - Adds the basename of a resource bundle.\n\t * add - Creates or configures a known UI element.\n\t *\n\t * These elements may appear in any order given that the\n\t * graph UI element is added before the toolbar element\n\t * (see Known Keys).\n\t *\n\t * Attributes:\n\t *\n\t * as - Key for the UI element (see below).\n\t * element - ID for the element in the document.\n\t * style - CSS style to be used for the element or window.\n\t * x - X coordinate for the new window.\n\t * y - Y coordinate for the new window.\n\t * width - Width for the new window.\n\t * height - Optional height for the new window.\n\t * name - Name of the stylesheet (absolute/relative URL).\n\t * basename - Basename of the resource bundle (see <mxResources>).\n\t *\n\t * The x, y, width and height attributes are used to create a new\n\t * <mxWindow> if the element attribute is not specified in an add\n\t * node. The name and basename are only used in the stylesheet and\n\t * resource nodes, respectively.\n\t *\n\t * Known Keys:\n\t *\n\t * graph - Main graph element (see <mxEditor.setGraphContainer>).\n\t * title - Title element (see <mxEditor.setTitleContainer>).\n\t * toolbar - Toolbar element (see <mxEditor.setToolbarContainer>).\n\t * status - Status bar element (see <mxEditor.setStatusContainer>).\n\t *\n\t * Example:\n\t *\n\t * (code)\n\t * <ui>\n\t *   <stylesheet name=\"css/process.css\"/>\n\t *   <resource basename=\"resources/app\"/>\n\t *   <add as=\"graph\" element=\"graph\"\n\t *     style=\"left:70px;right:20px;top:20px;bottom:40px\"/>\n\t *   <add as=\"status\" element=\"status\"/>\n\t *   <add as=\"toolbar\" x=\"10\" y=\"20\" width=\"54\"/>\n\t * </ui>\n\t * (end)\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Assigns the specified templates for edges\n\t\tvar defaultEdge = node.getAttribute('defaultEdge');\n\t\t\n\t\tif (defaultEdge != null)\n\t\t{\n\t\t\tnode.removeAttribute('defaultEdge');\n\t\t\tobj.defaultEdge = obj.templates[defaultEdge];\n\t\t}\n\n\t\t// Assigns the specified templates for groups\n\t\tvar defaultGroup = node.getAttribute('defaultGroup');\n\t\t\n\t\tif (defaultGroup != null)\n\t\t{\n\t\t\tnode.removeAttribute('defaultGroup');\n\t\t\tobj.defaultGroup = obj.templates[defaultGroup];\n\t\t}\n\n\t\treturn obj;\n\t};\n\t\n\t/**\n\t * Function: decodeChild\n\t * \n\t * Overrides decode child to handle special child nodes.\n\t */\t\n\tcodec.decodeChild = function(dec, child, obj)\n\t{\n\t\tif (child.nodeName == 'Array')\n\t\t{\n\t\t\tvar role = child.getAttribute('as');\n\t\t\t\n\t\t\tif (role == 'templates')\n\t\t\t{\n\t\t\t\tthis.decodeTemplates(dec, child, obj);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (child.nodeName == 'ui')\n\t\t{\n\t\t\tthis.decodeUi(dec, child, obj);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxObjectCodec.prototype.decodeChild.apply(this, arguments);\n\t};\n\t\t\n\t/**\n\t * Function: decodeTemplates\n\t *\n\t * Decodes the cells from the given node as templates.\n\t */\n\tcodec.decodeUi = function(dec, node, editor)\n\t{\n\t\tvar tmp = node.firstChild;\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeName == 'add')\n\t\t\t{\n\t\t\t\tvar as = tmp.getAttribute('as');\n\t\t\t\tvar elt = tmp.getAttribute('element');\n\t\t\t\tvar style = tmp.getAttribute('style');\n\t\t\t\tvar element = null;\n\n\t\t\t\tif (elt != null)\n\t\t\t\t{\n\t\t\t\t\telement = document.getElementById(elt);\n\t\t\t\t\t\n\t\t\t\t\tif (element != null && style != null)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.style.cssText += ';' + style;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar x = parseInt(tmp.getAttribute('x'));\n\t\t\t\t\tvar y = parseInt(tmp.getAttribute('y'));\n\t\t\t\t\tvar width = tmp.getAttribute('width');\n\t\t\t\t\tvar height = tmp.getAttribute('height');\n\n\t\t\t\t\t// Creates a new window around the element\n\t\t\t\t\telement = document.createElement('div');\n\t\t\t\t\telement.style.cssText = style;\n\t\t\t\t\t\n\t\t\t\t\tvar wnd = new mxWindow(mxResources.get(as) || as,\n\t\t\t\t\t\telement, x, y, width, height, false, true);\n\t\t\t\t\twnd.setVisible(true);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// TODO: Make more generic\n\t\t\t\tif (as == 'graph')\n\t\t\t\t{\n\t\t\t\t\teditor.setGraphContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'toolbar')\n\t\t\t\t{\n\t\t\t\t\teditor.setToolbarContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'title')\n\t\t\t\t{\n\t\t\t\t\teditor.setTitleContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'status')\n\t\t\t\t{\n\t\t\t\t\teditor.setStatusContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'map')\n\t\t\t\t{\n\t\t\t\t\teditor.setMapContainer(element);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmp.nodeName == 'resource')\n\t\t\t{\n\t\t\t\tmxResources.add(tmp.getAttribute('basename'));\n\t\t\t}\n\t\t\telse if (tmp.nodeName == 'stylesheet')\n\t\t\t{\n\t\t\t\tmxClient.link('stylesheet', tmp.getAttribute('name'));\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\t\n\t};\n\t\n\t/**\n\t * Function: decodeTemplates\n\t *\n\t * Decodes the cells from the given node as templates.\n\t */\n\tcodec.decodeTemplates = function(dec, node, editor)\n\t{\n\t\tif (editor.templates == null)\n\t\t{\n\t\t\teditor.templates = [];\n\t\t}\n\t\t\n\t\tvar children = mxUtils.getChildNodes(node);\n\t\tfor (var j=0; j<children.length; j++)\n\t\t{\n\t\t\tvar name = children[j].getAttribute('as');\n\t\t\tvar child = children[j].firstChild;\n\t\t\t\n\t\t\twhile (child != null && child.nodeType != 1)\n\t\t\t{\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\t\n\t\t\tif (child != null)\n\t\t\t{\n\t\t\t\t// LATER: Only single cells means you need\n\t\t\t\t// to group multiple cells within another\n\t\t\t\t// cell. This should be changed to support\n\t\t\t\t// arrays of cells, or the wrapper must\n\t\t\t\t// be automatically handled in this class.\n\t\t\t\teditor.templates[name] = dec.decodeCell(child);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n\n/*** EXPORTS FROM exports-loader ***/\nexports[\"mxClient\"] = (mxClient);\nexports[\"mxToolbar\"] = (mxToolbar);\nexports[\"mxConnectionHandler\"] = (mxConnectionHandler);\nexports[\"mxEllipse\"] = (mxEllipse);\nexports[\"mxConnectionConstraint\"] = (mxConnectionConstraint);\nexports[\"mxWindow\"] = (mxWindow);\nexports[\"mxObjectCodec\"] = (mxObjectCodec);\nexports[\"mxGraphModel\"] = (mxGraphModel);\nexports[\"mxActor\"] = (mxActor);\nexports[\"mxPopupMenu\"] = (mxPopupMenu);\nexports[\"mxShape\"] = (mxShape);\nexports[\"mxEventObject\"] = (mxEventObject);\nexports[\"mxGraph\"] = (mxGraph);\nexports[\"mxPopupMenuHandler\"] = (mxPopupMenuHandler);\nexports[\"mxPrintPreview\"] = (mxPrintPreview);\nexports[\"mxEventSource\"] = (mxEventSource);\nexports[\"mxRectangle\"] = (mxRectangle);\nexports[\"mxVertexHandler\"] = (mxVertexHandler);\nexports[\"mxMouseEvent\"] = (mxMouseEvent);\nexports[\"mxGraphView\"] = (mxGraphView);\nexports[\"mxCodecRegistry\"] = (mxCodecRegistry);\nexports[\"mxImage\"] = (mxImage);\nexports[\"mxGeometry\"] = (mxGeometry);\nexports[\"mxRubberband\"] = (mxRubberband);\nexports[\"mxConstraintHandler\"] = (mxConstraintHandler);\nexports[\"mxKeyHandler\"] = (mxKeyHandler);\nexports[\"mxDragSource\"] = (mxDragSource);\nexports[\"mxEvent\"] = (mxEvent);\nexports[\"mxUtils\"] = (mxUtils);\nexports[\"mxCodec\"] = (mxCodec);\nexports[\"mxCell\"] = (mxCell);\nexports[\"mxConstants\"] = (mxConstants);\nexports[\"mxPoint\"] = (mxPoint);\nexports[\"mxGraphHandler\"] = (mxGraphHandler);\nexports[\"mxCylinder\"] = (mxCylinder);\nexports[\"mxCellRenderer\"] = (mxCellRenderer);\nexports[\"mxUndoManager\"] = (mxUndoManager);","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","require('../../modules/es6.array.is-array');\nmodule.exports = require('../../modules/_core').Array.isArray;\n","exports.f = {}.propertyIsEnumerable;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var core = module.exports = { version: '2.6.10' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('map') }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","require('../../modules/es6.object.get-own-property-names');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","module.exports = {};\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","module.exports = require(\"core-js/library/fn/parse-int\");","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = true;\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n"],"sourceRoot":""}